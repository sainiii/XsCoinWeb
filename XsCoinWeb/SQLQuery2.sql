USE [xscoin]
GO
/****** Object:  User [bytex]    Script Date: 10/28/2020 2:04:44 PM ******/
CREATE USER [bytex] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [xscoindb]    Script Date: 10/28/2020 2:04:44 PM ******/
CREATE USER [xscoindb] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [xscoinio]    Script Date: 10/28/2020 2:04:44 PM ******/
CREATE USER [xscoinio] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
ALTER ROLE [db_owner] ADD MEMBER [bytex]
GO
ALTER ROLE [db_owner] ADD MEMBER [xscoindb]
GO
ALTER ROLE [db_owner] ADD MEMBER [xscoinio]
GO
/****** Object:  UserDefinedTableType [dbo].[CartProductType]    Script Date: 10/28/2020 2:04:44 PM ******/
CREATE TYPE [dbo].[CartProductType] AS TABLE(
	[PId] [varchar](50) NULL,
	[Price] [float] NULL,
	[PQty] [int] NULL,
	[Total] [float] NULL,
	[Redeempoint] [float] NULL
)
GO
/****** Object:  UserDefinedFunction [dbo].[AcountCheck]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
CREATE FUNCTION  [dbo].[AcountCheck] (@Amount bigint)   
returns float    
as begin   
declare    @appmstregno varchar(20)  
 Declare @L bigint , @R bigint, @W bigint   
    
 if @Amount=25  
 begin  
 set @W=     25  
 end   
 else  
 begin  
 set @R=    @Amount % 50     
 if @R=0  
 begin  
 set @W=@Amount  
 end  
 else   
 begin  
 set @W=0  
 end  
  
 end  
  
  return     @W  
end  
GO
/****** Object:  UserDefinedFunction [dbo].[CheckBlanceTop]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select dbo.CheckBlanceTop(20,200)            
            
                   
CREATE function  [dbo].[CheckBlanceTop](@appmstid int, @Amount float) returns float                              
as                               
begin                              
 declare @bid int,@Limitamount float     , @GetAmount float   , @amt float ,@DiffAmout float  ,@NewAmount float                             
                            
  set @Limitamount=(Select Isnull(Sum(JAmount),0)*3  from appmst where appmstid=@appmstid )                  
                
  set @GetAmount =(select isnull(Sum(BankTranAmount),0) from VPTran where appmstid=@appmstid and BankTranRemarks in ('ROI', 'Payout', 'Direct Income' ) and  OutAmount=0 )                
 set @DiffAmout=@Limitamount-@GetAmount        
  if @DiffAmout>0        
   begin        
   IF @DiffAmout>=@Amount    
   BEGIN    
   SET @amt=@Amount    
   END    
   ELSE    
   BEGIN    
   SET @amt=@DiffAmout    
   END    
   end        
  else        
   begin        
    set @amt=0        
   end        
 return @amt                    
                          
end 
GO
/****** Object:  UserDefinedFunction [dbo].[CheckOTPemail]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
  
 --select dbo.CheckOTPTop('GBT741640','8CB817', 'Active' )  
CREATE function  [dbo].[CheckOTPemail](@regno varchar(100), @OTP varchar(100), @type varchar(100)) returns varchar(500)                                  
as                                   
begin  
declare  @Messages varchar(500)  
 if(exists( select * from opt where optcode=@OTP and email=@regno and type=@type and expireon>GETDATE()))  
 begin  
 set @Messages='1'  
 end  
 else  
 begin  
 set @Messages='otp expire'  
 end  
           
 return @Messages                        
                              
end     
GO
/****** Object:  UserDefinedFunction [dbo].[CheckOTPTop]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

 --select dbo.CheckOTPTop('GBT741640','8CB817', 'Active' )
CREATE function  [dbo].[CheckOTPTop](@regno varchar(100), @OTP varchar(100), @type varchar(100)) returns varchar(500)                                
as                                 
begin
declare  @Messages varchar(500)
 if(exists( select * from opt where optcode=@OTP and AppMstRegNo=@regno and type=@type and expireon>GETDATE()))
 begin
 set @Messages='1'
 end
 else
 begin
 set @Messages='otp expire'
 end
         
 return @Messages                      
                            
end   
 
GO
/****** Object:  UserDefinedFunction [dbo].[DirectSponsarcount]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
CREATE FUNCTION  [dbo].[DirectSponsarcount] (@appmstID bigint, @Amount bigint)   
returns float    
as begin   
  
declare    @appmstregno varchar(20)  
 Declare @L bigint , @R bigint, @W bigint   
 set @appmstregno=(select appmstregno  from appmst where appmstid=@appmstid)  
       
set @W=0  
set  @L  = (select count(Appmstid) from sharemst  where appmstid in (select appmstid from appmst where sponsorid= @appmstregno and appmstpaid=1 and appmstleftright=0) and Amount>=@Amount)  
  
set @R=  (select count(Appmstid) from sharemst  where appmstid in (select appmstid from appmst where sponsorid= @appmstregno and appmstpaid=1 and appmstleftright=1) and Amount>=@Amount)  
  
  if @L>0 and @R>0  
  begin  
  set @W=1  
  end  
  
  return     @W  
end  
  
GO
/****** Object:  UserDefinedFunction [dbo].[DirectSponsarDcount]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE FUNCTION  [dbo].[DirectSponsarDcount] (@appmstID bigint, @Amount bigint) 
returns float  
as begin 

declare    @appmstregno varchar(20)
 Declare @L bigint , @R bigint, @W bigint 
 set @appmstregno=(select appmstregno  from appmst where appmstid=@appmstid)
				 
set @W=0


set  @L  =  (select count(Appmstid) from sharemst where appmstid in( Select appmstid from appmst where SponsorID=@appmstregno and Appmstpaid=1  and AppMstLeftRight=0) and ROICount>0)


set @R= (select count(Appmstid) from sharemst where appmstid in( Select appmstid from appmst where SponsorID=@appmstregno and Appmstpaid=1  and AppMstLeftRight=1 ) and ROICount>0)




  
  if @L>0 and @R>0
  begin
  set @W=1
  end

  return     @W
end
GO
/****** Object:  UserDefinedFunction [dbo].[DirectSponsarPair]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE FUNCTION  [dbo].[DirectSponsarPair] (@appmstID bigint,@roidate date) 
returns float  
as begin 
declare    @appmstregno varchar(20)
 Declare @L bigint , @R bigint, @W bigint 
		set @appmstregno=(select appmstregno  from appmst(nolock) where appmstid=@appmstid)
		--/*
		 Select @L=ISNULL(SUM(case a.Appmstleftright when 0 then a.JoinFor else 0 end),0)
	   ,@R=ISNULL(SUM(case a.Appmstleftright when 1 then a.JoinFor else 0 end),0) 
	   from appmst a(nolock) WHERE a.sponsorid=@appmstregno and a.appmstpaid=1 --and at.parentid=@appmstid 
				--and a.appPaiddatetime>='2019-01-19' 
				and a.appPaiddatetime>='2019-02-16' --only new top up , changed on 03-march-2019 
				and cast(a.appPaiddatetime as date)<=@roidate
				--*/
				/*
	   Select @L=ISNULL(SUM(case at.Appmstleftright when 0 then a.JoinFor else 0 end),0)
	   ,@R=ISNULL(SUM(case at.Appmstleftright when 1 then a.JoinFor else 0 end),0) 
	   from apptran(nolock) at 
				inner join appmst a(nolock) on at.appmstid=a.appmstid and a.sponsorid=@appmstregno and a.appmstpaid=1 and at.parentid=@appmstid 
				--and a.appPaiddatetime>='2019-01-19' 
				and a.appPaiddatetime>='2019-02-16' --only new top up , changed on 03-march-2019 
	  */
	  
	  -- where   appmstid in (select appmstid from appmst(nolock)   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=0 and parentid=@appmstid)
		--		set @R=  (Select count(1)  from apptran(nolock)  where   appmstid in (select appmstid from appmst(nolock)   
			--	where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=1 and parentid=@appmstid)

	 
 
	
	

				if @L>@R
				begin
				set @W=@R
				end
				else
				begin
				set @W=@L
				end

  return     @W
end
GO
/****** Object:  UserDefinedFunction [dbo].[DirectSponsarPair_test]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION  [dbo].[DirectSponsarPair_test] (@appmstID bigint) 
returns float  
as begin 
declare    @appmstregno varchar(20)
 Declare @L bigint , @R bigint, @W bigint 
		set @appmstregno=(select appmstregno  from appmst(nolock) where appmstid=@appmstid)
	   Select @L=ISNULL(SUM(case at.Appmstleftright when 0 then 1 else 0 end),0)
	   ,@R=ISNULL(SUM(case at.Appmstleftright when 1 then 1 else 0 end),0) 
	   from apptran(nolock) at 
				inner join appmst a(nolock) on at.appmstid=a.appmstid and a.sponsorid=@appmstregno and a.appmstpaid=1 and at.parentid=@appmstid 
				and a.appPaiddatetime>='2019-01-19' and a.appPaiddatetime<='2019-02-01'
	  -- where   appmstid in (select appmstid from appmst(nolock)   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=0 and parentid=@appmstid)
		--		set @R=  (Select count(1)  from apptran(nolock)  where   appmstid in (select appmstid from appmst(nolock)   
			--	where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=1 and parentid=@appmstid)

	 
 
	
	

				if @L>@R
				begin
				set @W=@R
				end
				else
				begin
				set @W=@L
				end

  return     @W
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAppmstRegNo]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION  [dbo].[GetAppmstRegNo] (@appmstID bigint) 
returns varchar(1000)   
as begin 

declare  @FName varchar(1000) 
 set  @FName=  (select AppmstRegNo from appmst   where  appmstID=  @appmstID  )
  return     @FName
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetAppMstRegNoNew]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION  [dbo].[GetAppMstRegNoNew] (@appmstID bigint)   
returns varchar(1000)     
as begin   
  
declare  @FName varchar(1000)   
 set  @FName=  (select AppMstRegNo from appmst   where  appmstID=  @appmstID  )  
  return     @FName  
end  
GO
/****** Object:  UserDefinedFunction [dbo].[GetAppMstSponsorTotal]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE function   [dbo].[GetAppMstSponsorTotal](@AppMstRegNo varchar(50)) returns float          
as           
begin          
 declare @bid bigint       
        
 set @bid= (select isnull(AppMstSponsorTotal, 0)  from AppMst WITH (NOLOCK)   where AppMstRegNo =@AppMstRegNo )            
          
 return @bid          
end




 
GO
/****** Object:  UserDefinedFunction [dbo].[getbalance]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function  [dbo].[getbalance](@appmstid int) returns float            
as             
begin            
 declare @bid int,@amt float            
 set @amt=0            
 select @bid=isnull(max(banktranid),0) from VPTRan where appmstid=@appmstid            
 select @amt=banktranbalance from VPTRan where appmstid=@appmstid and banktranid=@bid            
 return @amt            
end  
  
  
  
  
  
GO
/****** Object:  UserDefinedFunction [dbo].[getBalanceFranchise]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function  [dbo].[getBalanceFranchise](@fid int) returns float          
as           
begin          
 declare @bid int,@amt float          
 set @amt=0          
 select @bid=isnull(max(banktranid),0) from FranchiseTran(NOLOCK) where Appmstid=@fid          
 select @amt=banktranbalance from FranchiseTran(NOLOCK) where Appmstid=@fid and banktranid=@bid          
 return @amt          
end
GO
/****** Object:  UserDefinedFunction [dbo].[getKPbalance]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function  [dbo].[getKPbalance](@appmstid int) returns float            
as             
begin            
 declare @bid int,@amt float            
 set @amt=0            
 select @bid=isnull(max(banktranid),0) from KPTRan where appmstid=@appmstid            
 select @amt=banktranbalance from KPTRan where appmstid=@appmstid and banktranid=@bid            
 return @amt            
end  
  
  
  
  
  
GO
/****** Object:  UserDefinedFunction [dbo].[getLoadbalance]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE function  [dbo].[getLoadbalance](@appmstid int) returns float              

as               

begin              

 declare @bid int,@amt float              

 set @amt=0              

 select @bid=isnull(max(banktranid),0) from Loadtran where  appmstid=@appmstid              

 select @amt=banktranbalance from Loadtran where appmstid=@appmstid and banktranid=@bid              

 return @amt              

end


GO
/****** Object:  UserDefinedFunction [dbo].[GetPaidSponsar]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
create FUNCTION  [dbo].[GetPaidSponsar](@appmmstid bigint)  
returns bigint    
as  
begin  
  
  declare    @count bigint, @regno varchar(100)  
  select @regno=AppMstRegNo from AppMst where AppMstID=@appmmstid  
  set @count =Isnull((SELECT count(AppMst.Appmstid)    FROM  dbo.AppMst  where SponsorID=@regno),0)  
  return @count  
  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Getpanno]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
						 create FUNCTION  [dbo].[Getpanno] (@appmstID bigint) 
returns varchar(1000)   
as begin 

declare  @FName varchar(1000) 
 set  @FName=  (select panno from appmst   where  appmstID=  @appmstID  )
  return     @FName
end
GO
/****** Object:  UserDefinedFunction [dbo].[GetProfileImages]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
     
CREATE FUNCTION  [dbo].[GetProfileImages] (@userid varchar(50))     
returns varchar(1000)       
as begin     
    
declare  @FName varchar(1000)     
    
Declare @CT  int    
    
 set  @CT=  (select    Count(imagename)  from ProfileImageMst WITH (NOLOCK)  where appmstregno=@userid  )    
     
 if @CT =0    
 BEGIN    
  set @FName=  'http://xscoin.io/ProfileImages/UserProfile.png'    
 END     
      
 else    
 begin    
  set @FName='http://xscoin.io/ProfileImages/'+(select  imagename  from ProfileImageMst WITH (NOLOCK)  where appmstregno=@userid)    
 end    
     
    
     
  return     @FName    
end    
GO
/****** Object:  UserDefinedFunction [dbo].[GetProfilePic]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--   RewardsAcc  select dbo.GetProfilePic('global')
CREATE FUNCTION  [dbo].[GetProfilePic] (@appmstID varchar(10))   
returns varchar(1000)     
as begin   
  
declare  @FName varchar(1000)   
 set  @FName=  isnull((select ImageName from ProfileImageMst   where  AppMstregno=  @appmstID  )  ,'')

 if @FName <>''
 begin
  set @FName= '/ProfileImages/'+@FName
 end
 else
 begin
 set @FName= '/Member/images/profile.jpg'
 end
  return     @FName  
end  

 
GO
/****** Object:  UserDefinedFunction [dbo].[getRPbalance]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
   
CREATE function   [dbo].[getRPbalance](@appmstid int) returns float            
as             
begin            
 declare @bid int,@amt float            
 set @amt=0            
 select @bid=isnull(max(banktranid),0) from RPTran with (NOLOCK)  where appmstid=@appmstid            
 select @amt=Isnull(banktranbalance,0) from RPTran with (NOLOCK)  where appmstid=@appmstid and banktranid=@bid            
 return @amt            
end  
  
  
GO
/****** Object:  UserDefinedFunction [dbo].[GetServerDate]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --select dbo.GetServerDate()  
CREATE FUNCTION  [dbo].[GetServerDate] ()   
returns datetime   
as begin   
  
declare  @FName datetime  
 set  @FName=  (select Dateadd(Hour, 1,  Dateadd(MINUTE, 0,getutcdate())))  
  return     @FName  
end  
  
GO
/****** Object:  UserDefinedFunction [dbo].[GetsponsarId]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION  [dbo].[GetsponsarId] (@appmstID bigint)   
returns varchar(1000)     
as begin   
  
declare  @AppMstMobile varchar(1000)   
 set  @AppMstMobile=  isNull((select AppMstRegNo from appmst  WITH (NOLOCK)  where  appmstregno=    (select Sponsorid from appmst where appmstid=@appmstID  )),'')  
  return     @AppMstMobile  
end  
GO
/****** Object:  UserDefinedFunction [dbo].[GetsponsarName]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE FUNCTION  [dbo].[GetsponsarName] (@appmstID bigint)   
returns varchar(1000)     
as begin   
  
declare  @AppMstMobile varchar(1000)   
 set  @AppMstMobile=  isNull((select AppMstFName from appmst  WITH (NOLOCK) where  appmstregno=    (select Sponsorid from appmst where appmstid=@appmstID  )),'')  
  return     @AppMstMobile  
end  
GO
/****** Object:  UserDefinedFunction [dbo].[Getsponsarregno]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
 
create FUNCTION  [dbo].[Getsponsarregno] (@appmstID bigint) 
returns varchar(1000)   
as begin 

declare  @AppMstMobile varchar(1000) 
 set  @AppMstMobile=  isNull((select Sponsorid from appmst where appmstid=@appmstID  ),'')
  return     @AppMstMobile
end

 

GO
/****** Object:  UserDefinedFunction [dbo].[GetUserMobileNo]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE FUNCTION  [dbo].[GetUserMobileNo] (@appmstID bigint)   
returns varchar(1000)     
as begin   
  
declare  @AppMstMobile varchar(1000)   
 set  @AppMstMobile=  (select AppMstMobile from appmst  WITH (NOLOCK) where  appmstID=  @appmstID  )  
  return     @AppMstMobile  
end  
GO
/****** Object:  UserDefinedFunction [dbo].[GetUserName]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION  [dbo].[GetUserName] (@appmstID bigint) 
returns varchar(1000)   
as begin 

declare  @FName varchar(1000) 
 set  @FName=  (select AppMstFName from appmst   where  appmstID=  @appmstID  )
  return     @FName
end
GO
/****** Object:  UserDefinedFunction [dbo].[getVPbalance]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
 
CREATE function   [dbo].[getVPbalance](@appmstid int) returns float          
as           
begin          
 declare @bid int,@amt float          
 set @amt=0          
 select @bid=isnull(max(banktranid),0) from VPTran where appmstid=@appmstid          
 select @amt=Isnull(banktranbalance,0) from VPTran where appmstid=@appmstid and banktranid=@bid          
 return @amt          
end



GO
/****** Object:  UserDefinedFunction [dbo].[getwithdrawPanno]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE function  [dbo].[getwithdrawPanno](@panno varchar(20)) returns float          
as           
begin          
 declare @bid int,@amt float          
 set @amt=0          
set @amt =Isnull((select sum(Dispatch) from WithdrawMst where pan=@panno)  ,0)
 return @amt          
end





GO
/****** Object:  UserDefinedFunction [dbo].[JoinForAmount]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
create function  [dbo].[JoinForAmount](@appmstid int) returns float            
as             
begin            
 declare @bid int,@amt float            
 set @amt=0            
           
 select @amt=sum(amount) from Sharemst where appmstid=@appmstid           
 return @amt            
end  
  
  
  
  
  
GO
/****** Object:  UserDefinedFunction [dbo].[MyDirectSponsarPair]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION  [dbo].[MyDirectSponsarPair] (@appmstregno varchar(20)) 
returns INT  
as 
begin 
--DECLARE @appmstregno varchar(20)
 Declare @L bigint , @R bigint, @W bigint 
--set @appmstregno=(select appmstregno  from appmst(nolock) where appmstid=@appmstid)

 Select @L=ISNULL(SUM(case a.Appmstleftright when 0 then a.JoinFor else 0 end),0)
	   ,@R=ISNULL(SUM(case a.Appmstleftright when 1 then a.JoinFor else 0 end),0) 
	   from appmst a(nolock) WHERE a.sponsorid=@appmstregno and a.appmstpaid=1 --and at.parentid=@appmstid 
		and a.appPaiddatetime>='2019-02-16' 
		--and a.appPaiddatetime<=@reDate 

if @L>@R
begin
	set @W=@R
end
else
begin
	set @W=@L
end

  return @W
end
GO
/****** Object:  UserDefinedFunction [dbo].[NameNum]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION  [dbo].[NameNum] (@n decimal(15,0)) returns varchar(400)   
as begin  
if @n = 0            
 return 'zero'            
 declare @s varchar(15)            
 set @s = right(replicate('0',15)+cast(@n as varchar(15)),15)            
 declare @w varchar(400)            
 set @w = ''            
 if left(@s,3) > 0            
     set @w = @w + (select wrd from thousand where num=left(@s,3)) + ' Arab '            
 if left(right(@s,9),2) > 0            
  set @w = @w + (select wrd from thousand where num=left(right(@s,9),2)) + ' Crore '            
 if left(right(@s,7),2) > 0            
  set @w = @w + (select wrd from thousand where num=left(right(@s,7),2))  + ' Lakh '            
 if left(right(@s,5),2) > 0            
  set @w = @w + (select wrd from thousand where num=left(right(@s,5),2)) + ' Thousand '            
 if right(@s,3) > 0            
  set @w = @w + (select wrd from thousand where num=right(@s,3))            
  return rtrim(@w)  
end





GO
/****** Object:  UserDefinedFunction [dbo].[Split]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[Split](@String varchar(8000), @Delimiter char(1))               
returns @temptable TABLE (items varchar(8000))               
as               
begin               
    declare @idx int               
    declare @slice varchar(8000)               
              
    select @idx = 1               
        if len(@String)<1 or @String is null  return               
              
    while @idx!= 0               
    begin               
        set @idx = charindex(@Delimiter,@String)               
        if @idx!=0               
            set @slice = left(@String,@idx - 1)               
        else               
            set @slice = @String               
                  
        if(len(@slice)>0)          
            insert into @temptable(Items) values(@slice)               
          
        set @String = right(@String,len(@String) - @idx)               
        if len(@String) = 0 break               
    end 
return 
end







GO
/****** Object:  UserDefinedFunction [dbo].[TO_DATE_DD_MMM_YYYY]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create FUNCTION [dbo].[TO_DATE_DD_MMM_YYYY](@Date DATETIME)
RETURNS VARCHAR(11)
BEGIN
	RETURN REPLACE(CONVERT(VARCHAR, @Date, 113), ' ','-');
END

GO
/****** Object:  UserDefinedFunction [dbo].[ValidateURL]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION  [dbo].[ValidateURL](@URL VARCHAR(300))  
RETURNS BIT  
AS  
BEGIN  
 DECLARE @Object INT  
 DECLARE @Return TINYINT  
 DECLARE @Valid BIT SET @Valid = 0 --default to false  
   
 --create the XMLHTTP object  
 EXEC @Return = sp_oacreate 'MSXML2.ServerXMLHTTP.3.0', @Object OUTPUT  
 IF @Return = 0  
 BEGIN  
  DECLARE @Method VARCHAR(350)  
  
  --define setTimeouts method  
  --Resolve, Connect, Send, Receive  
  SET @Method = 'setTimeouts(45000, 45000, 45000, 45000)'  
  
  --set the timeouts  
  EXEC @Return = sp_oamethod @Object, @Method  
  
  IF @Return = 0  
  BEGIN  
   --define open method  
   SET @Method = 'open("GET", "' + @URL + '", false)'  
   
   --Open the connection  
   EXEC @Return = sp_oamethod @Object, @Method  
  END  
   
  IF @Return = 0  
  BEGIN  
   --SEND the request  
   EXEC @Return = sp_oamethod @Object, 'send()'  
  END  
   
  IF @Return = 0  
  BEGIN  
   DECLARE @Output INT  
   EXEC @Return = sp_oamethod @Object, 'status', @Output OUTPUT  
   
   IF @Output = 200  
   BEGIN  
    SET @Valid = 1  
   END  
  END  
 END  
   
 --destroy the object  
 EXEC sp_oadestroy @Object  
  
 RETURN (@Valid)  
END





GO
/****** Object:  Table [dbo].[AdminControl]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdminControl](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[UserName] [varchar](50) NULL,
	[Password] [varchar](50) NULL,
	[LogInDateTime] [varchar](50) NULL,
	[admintype] [varchar](50) NULL,
	[Date] [datetime] NULL,
	[IPAddress] [varchar](50) NULL,
	[LogOutTime] [datetime] NULL,
 CONSTRAINT [PK_AdminControl] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AdminViewMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdminViewMst](
	[AdminViewId] [int] IDENTITY(1,1) NOT NULL,
	[UserIdGtEt] [int] NULL,
	[UserIdLtEt] [int] NULL,
	[UserIdBeforDate] [datetime] NULL,
	[UserIdAfterDate] [datetime] NULL,
	[DownOfuserIDs] [varchar](5000) NULL,
	[doe] [datetime] NULL,
	[AdminId] [int] NOT NULL,
	[FranchiseID] [int] NULL,
	[DownLineFID] [int] NULL,
	[BeforeRegno] [varchar](50) NULL,
	[AfterRegno] [varchar](50) NULL,
 CONSTRAINT [PK__AdminVie__CA5AEEBB763775D2] PRIMARY KEY CLUSTERED 
(
	[AdminViewId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AppMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AppMst](
	[AppMstID] [int] NOT NULL,
	[AppMstRegNo] [varchar](50) NOT NULL,
	[AppMstPassword] [nvarchar](50) NULL,
	[AppMstTitle] [nvarchar](50) NULL,
	[Gtitle] [varchar](50) NULL,
	[AppMstFName] [nvarchar](100) NULL,
	[AppMstLName] [nvarchar](100) NULL,
	[AppMstState] [nvarchar](100) NOT NULL,
	[AppMstCity] [nvarchar](50) NULL,
	[AppMstAddress1] [nvarchar](500) NULL,
	[AppMstPinCode] [nvarchar](50) NULL,
	[AppMstMobile] [varchar](50) NULL,
	[AppMstPrimaryPhone] [nvarchar](50) NULL,
	[AppMstLogin] [nvarchar](50) NULL,
	[AppMstLeftRight] [int] NULL,
	[ParentID] [varchar](50) NULL,
	[SponsorID] [varchar](50) NOT NULL,
	[AppMstSponsorTotal] [int] NULL,
	[AppMstDOJ] [smalldatetime] NULL,
	[Appmstpaid] [int] NULL,
	[AppMstLeftTotal] [float] NULL,
	[AppMstRightTotal] [float] NULL,
	[TotalNewLeft] [float] NULL,
	[TotalNewRight] [float] NULL,
	[cpl] [float] NULL,
	[cpr] [float] NULL,
	[cbfl] [float] NULL,
	[cbfr] [float] NULL,
	[pairRank] [int] NULL,
	[npairrank] [int] NULL,
	[OldPairRank] [int] NULL,
	[oldprank] [int] NULL,
	[CarryLeft] [float] NULL,
	[CarryRight] [float] NULL,
	[bincome] [float] NULL,
	[BFL] [float] NULL,
	[BFR] [float] NULL,
	[CurrrentBalanceLeft] [float] NULL,
	[CurrentBalanceRight] [float] NULL,
	[BankName] [varchar](50) NULL,
	[Branch] [varchar](50) NULL,
	[AcountNo] [varchar](100) NULL,
	[panno] [varchar](50) NULL,
	[MICR] [varchar](50) NULL,
	[IFC] [varchar](50) NULL,
	[distt] [varchar](50) NULL,
	[email] [varchar](100) NULL,
	[userdob] [smalldatetime] NULL,
	[nom_name] [varchar](50) NULL,
	[nom_rela] [varchar](50) NULL,
	[JoinFor] [float] NULL,
	[JAmount] [float] NULL,
	[appmstactivate] [varchar](25) NULL,
	[productType] [int] NULL,
	[appPaiddatetime] [datetime] NULL,
	[beneficiaryname] [varchar](50) NULL,
	[bstatus] [varchar](50) NULL,
	[ReceiptNo] [varchar](50) NULL,
	[Type] [varchar](100) NULL,
	[tdsdeduction] [bit] NULL,
	[ePassword] [varchar](50) NULL,
	[IPAddress] [varchar](50) NULL,
	[newsponsortotal] [int] NULL,
	[GName] [varchar](50) NULL,
	[isEdited] [bit] NULL,
	[TempLeftTotal] [float] NULL,
	[TempRightTotal] [float] NULL,
	[FastT1] [int] NULL,
	[FastT2] [int] NULL,
	[FastT3] [int] NULL,
	[FastTrackDate] [datetime] NULL,
	[ROIDate] [datetime] NULL,
	[LastIP] [varchar](25) NULL,
	[LastLogin] [datetime] NULL,
	[VPBal] [float] NULL,
	[FastT4] [int] NULL,
	[FastT5] [int] NULL,
	[vCode] [varchar](50) NULL,
	[RetailerTypeid] [int] NULL,
	[Revoucher] [float] NULL,
	[StarId] [int] NULL,
	[DSponsarTotal] [float] NOT NULL,
	[DSponsarNew] [bigint] NOT NULL,
 CONSTRAINT [PK_AppMst] PRIMARY KEY CLUSTERED 
(
	[AppMstID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AppTran]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AppTran](
	[Srno] [int] IDENTITY(1,1) NOT NULL,
	[ParentId] [int] NOT NULL,
	[AppMstId] [int] NOT NULL,
	[AppMstLeftRight] [int] NOT NULL,
	[AppMstDOE] [smalldatetime] NOT NULL,
	[Appmstlevel] [int] NULL,
	[Joinfor] [int] NULL,
 CONSTRAINT [PK_AppTran] PRIMARY KEY CLUSTERED 
(
	[Srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[apptransponsor]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[apptransponsor](
	[Srno] [int] IDENTITY(1,1) NOT NULL,
	[SponsorId] [int] NULL,
	[parentid] [int] NULL,
	[AppmstId] [int] NULL,
	[LeftRight] [int] NULL,
	[SponsorLevel] [int] NULL,
	[JoinFor] [int] NULL,
	[AppmstPaid] [int] NULL,
	[DOE] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[Srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[BankMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BankMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[BankName] [varchar](100) NULL,
	[Branch] [varchar](100) NULL,
	[acno] [varchar](50) NULL,
	[AcType] [varchar](50) NULL,
	[HolderName] [varchar](100) NULL,
	[IFS] [varchar](50) NULL,
	[MICR] [varchar](50) NULL,
	[doe] [datetime] NULL,
	[appmstid] [int] NULL,
 CONSTRAINT [PK_BankMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[BankMst_Bak]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BankMst_Bak](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[BankName] [varchar](100) NULL,
	[Branch] [varchar](100) NULL,
	[acno] [varchar](50) NULL,
	[AcType] [varchar](50) NULL,
	[HolderName] [varchar](100) NULL,
	[IFS] [varchar](50) NULL,
	[MICR] [varchar](50) NULL,
	[doe] [datetime] NULL,
	[appmstid] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[blockedID]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[blockedID](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[appmstid] [int] NULL,
	[comment] [varchar](max) NULL,
	[blockDate] [datetime] NULL,
 CONSTRAINT [PK_blockedID] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[blog]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[blog](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[appmstregno] [varchar](50) NULL,
	[Commentby] [varchar](50) NULL,
	[Comments] [varchar](max) NULL,
	[status] [bit] NULL,
	[doe] [datetime] NULL,
 CONSTRAINT [PK_blog] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[BrandMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BrandMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[brand] [varchar](50) NOT NULL,
	[DOE] [datetime] NULL,
	[Status] [char](1) NULL,
	[UserID] [varchar](50) NULL,
 CONSTRAINT [PK_BrandMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[BTCAddressAmt]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BTCAddressAmt](
	[Srno] [bigint] IDENTITY(1,1) NOT NULL,
	[AType] [varchar](10) NULL,
	[Address] [varchar](100) NULL,
 CONSTRAINT [PK_BTCAddressAmt] PRIMARY KEY CLUSTERED 
(
	[Srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[BTCRequestMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BTCRequestMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[PAppMstRegno] [varchar](50) NULL,
	[JAppMstRegno] [varchar](50) NULL,
	[PAmount] [float] NULL,
	[RDate] [datetime] NULL,
	[CAmt] [varchar](100) NULL,
	[FileName] [varchar](100) NULL,
	[Type] [varchar](100) NULL,
	[AddressBTC] [varchar](100) NULL,
	[Status] [char](1) NULL,
	[ApproveDate] [datetime] NULL,
	[Remarks] [varchar](200) NULL,
	[RequestTyp] [char](2) NULL,
 CONSTRAINT [PK_BTCRequestMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CartMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CartMst](
	[CartId] [int] IDENTITY(1,1) NOT NULL,
	[CustomerId] [varchar](50) NULL,
	[customername] [varchar](50) NULL,
	[Address] [varchar](1000) NULL,
	[City] [varchar](100) NULL,
	[State] [varchar](100) NULL,
	[PinCode] [varchar](10) NULL,
	[MobileNo] [varchar](50) NULL,
	[EMailId] [varchar](50) NULL,
	[DOE] [datetime] NULL,
	[Price] [float] NULL,
	[NetPrice] [float] NULL,
	[Quantity] [int] NULL,
	[Redeempoint] [varchar](50) NULL,
	[Discount] [float] NULL,
	[DiscountType] [int] NULL,
	[NetAmt] [float] NULL,
	[OrderStatus] [int] NULL,
 CONSTRAINT [PK_CartMst] PRIMARY KEY CLUSTERED 
(
	[CartId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CartProductMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CartProductMst](
	[CartProductId] [int] IDENTITY(1,1) NOT NULL,
	[Quantity] [float] NULL,
	[Price] [float] NULL,
	[TotalPrice] [float] NULL,
	[doe] [datetime] NULL,
	[CartId] [int] NULL,
	[isDeleted] [int] NULL,
	[PID] [varchar](50) NULL,
	[Redeempoint] [varchar](50) NULL,
 CONSTRAINT [PK_CartProductMst] PRIMARY KEY CLUSTERED 
(
	[CartProductId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CategoryMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CategoryMst](
	[CatId] [int] IDENTITY(100,1) NOT NULL,
	[CatName] [varchar](50) NULL,
	[Description] [varchar](100) NULL,
	[DOE] [datetime] NULL,
	[Status] [int] NULL,
	[ImgUrl] [varchar](200) NULL,
	[ProType] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CauseId]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CauseId](
	[Sno] [int] IDENTITY(1,1) NOT NULL,
	[userid] [int] NULL,
	[causeid] [int] NULL,
	[PaymentCause] [char](10) NULL,
	[Amount] [float] NULL,
	[effectdate] [datetime] NULL,
	[JoinFor] [int] NULL,
	[iselegible] [int] NULL,
	[pairrank] [int] NULL,
	[EndAmount] [float] NULL,
	[Ckstatus] [int] NULL,
	[StarId] [int] NOT NULL,
 CONSTRAINT [PK_CauseId] PRIMARY KEY CLUSTERED 
(
	[Sno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[cmddesk]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[cmddesk](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[quote] [varchar](8000) NULL,
	[doe] [datetime] NULL,
 CONSTRAINT [PK_cmddesk] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CoinpaymentsMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CoinpaymentsMst](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[UserID] [varchar](50) NULL,
	[RequestAmount] [numeric](18, 0) NULL,
	[Currency] [varchar](50) NULL,
	[amount] [numeric](18, 9) NULL,
	[address] [varchar](500) NULL,
	[txn_id] [varchar](50) NULL,
	[confirms_needed] [varchar](5) NULL,
	[timeout] [bigint] NULL,
	[status_url] [varchar](200) NULL,
	[qrcode_url] [varchar](200) NULL,
	[status_text] [varchar](200) NULL,
	[amountf] [numeric](18, 9) NULL,
	[status] [bigint] NULL,
	[time_created] [datetime] NULL,
	[CreatedOn] [datetime] NULL,
	[Investment] [varchar](50) NULL,
 CONSTRAINT [PK_CoinpaymentsMst] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ColorMst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ColorMst](
	[ProductId] [int] NULL,
	[Color1] [varchar](20) NULL,
	[Color2] [varchar](20) NULL,
	[Color3] [varchar](20) NULL,
	[Color4] [varchar](20) NULL,
	[Color5] [varchar](20) NULL,
	[Color6] [varchar](20) NULL,
	[Color7] [varchar](20) NULL,
	[Color8] [varchar](20) NULL,
	[Color9] [varchar](20) NULL,
	[Color10] [varchar](20) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[companymst]    Script Date: 10/28/2020 2:04:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[companymst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[CompanyBank] [varchar](100) NOT NULL,
	[CompanyAccNo] [varchar](100) NOT NULL,
	[Active] [int] NULL,
	[AccountName] [varchar](100) NULL,
	[branch] [varchar](100) NULL,
	[ifs] [varchar](100) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ControlMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ControlMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[username] [varchar](50) NOT NULL,
	[password] [nvarchar](50) NULL,
	[ePassword] [varchar](50) NULL,
	[name] [varchar](50) NULL,
	[admintype] [varchar](25) NULL,
	[Lock] [varchar](10) NULL,
	[mobileno] [varchar](50) NULL,
	[List] [varchar](10) NULL,
	[Profile] [varchar](10) NULL,
	[ViewProfile] [varchar](10) NULL,
	[Search] [varchar](10) NULL,
	[wli] [varchar](10) NULL,
	[calROI] [varchar](10) NULL,
	[Details] [varchar](10) NULL,
	[TurnOver] [varchar](10) NULL,
	[Date] [varchar](10) NULL,
	[PList] [varchar](10) NULL,
	[payoutroi] [varchar](10) NULL,
	[dateroi] [varchar](10) NULL,
	[listroi] [varchar](10) NULL,
	[Status] [varchar](10) NULL,
	[AllotPin] [varchar](10) NULL,
	[AllotedPinList] [varchar](10) NULL,
	[SearchaUpdatePin] [varchar](10) NULL,
	[investmentreport] [varchar](10) NULL,
	[viewpassbook] [varchar](10) NULL,
	[viewmodifyamt] [varchar](10) NULL,
	[viewmodifyrno] [varchar](10) NULL,
	[viewmodifydate] [varchar](10) NULL,
	[viewmodifyptype] [varchar](10) NULL,
	[AllPayoutStatements] [varchar](10) NULL,
	[allpayoutstatementsroi] [varchar](10) NULL,
	[SponsorList] [varchar](10) NULL,
	[SponsorDateWise] [varchar](10) NULL,
	[UplineList] [varchar](10) NULL,
	[Downline] [varchar](10) NULL,
	[ChequePrint] [varchar](10) NULL,
	[ChequePrintROI] [varchar](10) NULL,
	[BulkSMS] [varchar](10) NULL,
	[PostQuery] [varchar](10) NULL,
	[QueryList] [varchar](10) NULL,
	[RepliedQueryList] [varchar](10) NULL,
	[AddNews] [varchar](10) NULL,
	[NewsModify] [varchar](10) NULL,
	[Genealogy] [varchar](10) NULL,
	[ChangePassword] [varchar](10) NULL,
	[DownTOver] [varchar](10) NULL,
	[viewinvestment] [varchar](10) NULL,
	[addquote] [varchar](10) NULL,
	[modifyquote] [varchar](10) NULL,
	[addpopup] [varchar](10) NULL,
	[modifypopup] [varchar](10) NULL,
	[ApproveBlog] [varchar](50) NULL,
	[viewrejecttopup] [varchar](10) NULL,
	[viewApprovedtopup] [varchar](10) NULL,
	[viewwaittopup] [varchar](10) NULL,
	[resetUserTopUp] [varchar](10) NULL,
	[SWA] [varchar](10) NULL,
	[ADDBANK] [varchar](10) NULL,
	[REWARDACHIEVERS] [varchar](10) NULL,
	[CREDITUSER] [varchar](10) NULL,
	[DEBITUSER] [varchar](10) NULL,
	[NFM] [varchar](10) NULL,
	[FRANCHISETREE] [varchar](10) NULL,
	[WR] [varchar](10) NULL,
	[UBB] [varchar](10) NULL,
	[VIModifications] [varchar](10) NULL,
	[VDTL] [varchar](10) NULL,
	[VTRM] [varchar](10) NULL,
	[VTRS] [varchar](10) NULL,
	[GeneratePin] [varchar](10) NULL,
	[FundTransfer] [varchar](10) NULL,
	[FL] [varchar](10) NULL,
	[NotAllotedPinList] [varchar](10) NULL,
	[Detailsroi] [varchar](10) NULL,
	[Reward] [varchar](10) NULL,
	[payoutroitb] [varchar](10) NULL,
	[dateroitb] [varchar](10) NULL,
	[listroitb] [varchar](10) NULL,
	[allpayoutstatementsroitb] [varchar](10) NULL,
	[ChequePrintROITB] [varchar](10) NULL,
	[FWPR] [varchar](10) NULL,
	[FWFPR] [varchar](10) NULL,
	[BDWithdralRpt] [varchar](10) NULL,
	[BDTransferRpt] [varchar](10) NULL,
	[regno] [varchar](50) NULL,
 CONSTRAINT [PK_ControlMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CPTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CPTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[Appmstid] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[PaidAppmstID] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[payoutno] [int] NULL,
	[PayId] [int] NULL,
	[TranBY] [varchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[datamst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[datamst](
	[AppMstID] [int] NOT NULL,
	[AppMstRegNo] [varchar](50) NOT NULL,
	[AppMstPassword] [nvarchar](50) NULL,
	[AppMstTitle] [nvarchar](50) NULL,
	[Gtitle] [varchar](50) NULL,
	[AppMstFName] [nvarchar](100) NULL,
	[AppMstLName] [nvarchar](100) NULL,
	[AppMstState] [nvarchar](100) NOT NULL,
	[AppMstCity] [nvarchar](50) NULL,
	[AppMstAddress1] [nvarchar](500) NULL,
	[AppMstPinCode] [nvarchar](50) NULL,
	[AppMstMobile] [varchar](50) NULL,
	[AppMstPrimaryPhone] [nvarchar](50) NULL,
	[AppMstLogin] [nvarchar](50) NULL,
	[AppMstLeftRight] [int] NULL,
	[ParentID] [varchar](50) NULL,
	[SponsorID] [varchar](50) NOT NULL,
	[AppMstSponsorTotal] [int] NULL,
	[AppMstDOJ] [smalldatetime] NULL,
	[Appmstpaid] [int] NULL,
	[AppMstLeftTotal] [float] NULL,
	[AppMstRightTotal] [float] NULL,
	[TotalNewLeft] [float] NULL,
	[TotalNewRight] [float] NULL,
	[cpl] [float] NULL,
	[cpr] [float] NULL,
	[cbfl] [float] NULL,
	[cbfr] [float] NULL,
	[pairRank] [int] NULL,
	[npairrank] [int] NULL,
	[OldPairRank] [int] NULL,
	[oldprank] [int] NULL,
	[CarryLeft] [float] NULL,
	[CarryRight] [float] NULL,
	[bincome] [float] NULL,
	[BFL] [float] NULL,
	[BFR] [float] NULL,
	[CurrrentBalanceLeft] [float] NULL,
	[CurrentBalanceRight] [float] NULL,
	[BankName] [varchar](50) NULL,
	[Branch] [varchar](50) NULL,
	[AcountNo] [varchar](100) NULL,
	[panno] [varchar](50) NULL,
	[MICR] [varchar](50) NULL,
	[IFC] [varchar](50) NULL,
	[distt] [varchar](50) NULL,
	[email] [varchar](100) NULL,
	[userdob] [smalldatetime] NULL,
	[nom_name] [varchar](50) NULL,
	[nom_rela] [varchar](50) NULL,
	[JoinFor] [float] NULL,
	[JAmount] [float] NULL,
	[appmstactivate] [varchar](25) NULL,
	[productType] [int] NULL,
	[appPaiddatetime] [datetime] NULL,
	[beneficiaryname] [varchar](50) NULL,
	[bstatus] [varchar](50) NULL,
	[ReceiptNo] [varchar](50) NULL,
	[Type] [varchar](100) NULL,
	[tdsdeduction] [bit] NULL,
	[ePassword] [varchar](50) NULL,
	[IPAddress] [varchar](50) NULL,
	[newsponsortotal] [int] NULL,
	[GName] [varchar](50) NULL,
	[isEdited] [bit] NULL,
	[TempLeftTotal] [float] NULL,
	[TempRightTotal] [float] NULL,
	[FastT1] [int] NULL,
	[FastT2] [int] NULL,
	[FastT3] [int] NULL,
	[FastTrackDate] [datetime] NULL,
	[ROIDate] [datetime] NULL,
	[LastIP] [varchar](25) NULL,
	[LastLogin] [datetime] NULL,
	[VPBal] [float] NULL,
	[FastT4] [int] NULL,
	[FastT5] [int] NULL,
	[vCode] [varchar](50) NULL,
	[RetailerTypeid] [int] NULL,
	[Revoucher] [float] NULL,
	[StarId] [int] NULL,
	[DSponsarTotal] [float] NOT NULL,
	[DSponsarNew] [bigint] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[deactiveMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[deactiveMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Regno] [varchar](50) NULL,
	[status] [int] NULL,
	[doe] [datetime] NULL,
	[Isfranchise] [int] NULL,
PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DeletedData]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DeletedData](
	[Srno] [int] IDENTITY(1,1) NOT NULL,
	[Userid] [nvarchar](50) NULL,
	[Joinfor] [int] NULL,
	[sponsorid] [nvarchar](50) NULL,
	[DOE] [datetime] NULL,
 CONSTRAINT [PK_DeletedData] PRIMARY KEY CLUSTERED 
(
	[Srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DiamondIncome]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DiamondIncome](
	[DiamondIncomeId] [int] IDENTITY(1,1) NOT NULL,
	[DiamondID] [varchar](50) NULL,
	[Amt] [numeric](18, 2) NULL,
	[DiamondLevel] [int] NULL,
	[DOE] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[DiamondIncomeId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DiamondMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DiamondMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Appmstid] [bigint] NULL,
	[AppMstRegNo] [varchar](50) NULL,
	[SponsarD] [bigint] NULL,
	[parentid] [bigint] NULL,
	[DiamondID] [varchar](50) NULL,
	[rank] [char](1) NULL,
	[DOE] [datetime] NULL,
	[GetLevel] [int] NULL,
	[Jf] [float] NULL,
 CONSTRAINT [PK_DiamondMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[FinalReward]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FinalReward](
	[AppMstRegNo] [varchar](50) NOT NULL,
	[totalpair] [int] NULL,
	[AwardName] [varchar](50) NULL,
	[Qualify] [int] NULL,
	[Dispatch] [int] NULL,
	[status] [int] NULL,
	[AwardAchivedDate] [datetime] NULL,
 CONSTRAINT [PK_FinalReward] PRIMARY KEY CLUSTERED 
(
	[AppMstRegNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[FranchiseMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FranchiseMst](
	[FranchiseId] [bigint] IDENTITY(1,1) NOT NULL,
	[UserId] [varchar](15) NULL,
	[Name] [varchar](100) NULL,
	[Pwd] [varchar](100) NULL,
	[Email] [varchar](100) NULL,
	[PinCode] [varchar](6) NULL,
	[Addr] [varchar](100) NULL,
	[Active] [bit] NULL,
	[DOE] [datetime] NULL,
	[ModifyDate] [datetime] NULL,
	[IsSuperFranchise] [bit] NULL,
 CONSTRAINT [PK_FranchiseMst] PRIMARY KEY CLUSTERED 
(
	[FranchiseId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[FranchiseProductTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FranchiseProductTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[FranchiseId] [int] NOT NULL,
	[ProductId] [int] NULL,
	[BankTranMode] [smallint] NOT NULL,
	[PaidAppmstID] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[Reason] [varchar](max) NULL,
	[TranBY] [varchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[FranchiseTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FranchiseTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[Appmstid] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[PaidAppmstID] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[payoutno] [int] NULL,
	[PayId] [int] NULL,
	[TranBY] [varchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Generatecode]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Generatecode](
	[Code] [varchar](50) NULL,
	[AppMstRegNo] [varchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GiftCardAmountAmst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GiftCardAmountAmst](
	[GiftCardID] [bigint] NULL,
	[Amount] [bigint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GiftCardMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GiftCardMst](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[ProductName] [varchar](50) NULL,
	[Curency] [varchar](50) NULL,
	[Country] [varchar](50) NULL,
	[SendType] [char](1) NULL,
	[Description] [nvarchar](max) NULL,
	[Termscondition] [nvarchar](max) NULL,
	[Photo] [varchar](100) NULL,
	[LastDate] [datetime] NULL,
	[IsActive] [char](1) NULL,
 CONSTRAINT [PK_GiftCardMst] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GiftOrderMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GiftOrderMst](
	[orderID] [bigint] IDENTITY(1,1) NOT NULL,
	[GiftCardId] [bigint] NULL,
	[UserID] [bigint] NULL,
	[SendGiftCard] [varchar](100) NULL,
	[RequestAmount] [numeric](18, 2) NULL,
	[Amount] [numeric](18, 2) NULL,
	[OrderDate] [datetime] NULL,
	[ConfirmDate] [datetime] NULL,
	[BanktranID] [bigint] NULL,
	[Status] [char](1) NULL,
	[GiftCode] [varchar](200) NULL,
	[ExpiryDate] [datetime] NULL,
 CONSTRAINT [PK_GiftOrderMst] PRIMARY KEY CLUSTERED 
(
	[orderID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HistoryBankMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HistoryBankMst](
	[BankName] [varchar](100) NULL,
	[Branch] [varchar](100) NULL,
	[acno] [varchar](50) NULL,
	[AcType] [varchar](50) NULL,
	[HolderName] [varchar](100) NULL,
	[IFS] [varchar](50) NULL,
	[Panno] [varchar](50) NULL,
	[byupdate] [varchar](50) NULL,
	[doe] [datetime] NULL,
	[appmstid] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[imagesmst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[imagesmst](
	[UserId] [nvarchar](50) NOT NULL,
	[Image] [nvarchar](50) NULL,
 CONSTRAINT [PK_imagesmst] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[InvoiceMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[InvoiceMst](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[appmstid] [bigint] NULL,
	[Description] [varchar](50) NULL,
	[HSNCode] [varchar](50) NULL,
	[cost] [float] NULL,
	[CGST] [numeric](18, 2) NULL,
	[SGST] [numeric](18, 2) NULL,
	[IGST] [numeric](18, 2) NULL,
	[IDate] [datetime] NULL,
	[QT] [int] NULL,
 CONSTRAINT [PK_InvoiceMst] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[IPTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[IPTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[AppMstId] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[paidAppMstId] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NOT NULL,
	[OutAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[BankTranStatus] [smallint] NOT NULL,
	[Payoutno] [int] NULL,
	[trancharge] [float] NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[TranBY] [varchar](50) NULL,
 CONSTRAINT [PK_BankTran] PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[KPTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[KPTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[AppMstId] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[paidAppMstId] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NOT NULL,
	[OutAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[BankTranStatus] [smallint] NOT NULL,
	[Payoutno] [int] NULL,
	[trancharge] [float] NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[TranBY] [varchar](50) NULL,
 CONSTRAINT [PK_KPTran] PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LoadTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LoadTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[AppMstId] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[paidAppMstId] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NOT NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[trancharge] [float] NULL,
	[ReqId] [int] NULL,
	[reason] [varchar](200) NULL,
	[isRetailer] [int] NULL,
	[TranNo] [float] NOT NULL,
	[HBookRef] [varchar](50) NULL,
	[ComBal] [float] NULL,
PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[manualTopUP]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[manualTopUP](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[regno] [varchar](50) NULL,
	[fname] [varchar](100) NULL,
	[amount] [float] NULL,
	[mode] [varchar](50) NULL,
	[DDno] [varchar](50) NULL,
	[topupdate] [datetime] NULL,
	[receiptno] [varchar](50) NULL,
 CONSTRAINT [PK_manualTopUP] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MaturityMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MaturityMst](
	[MaturityId] [int] IDENTITY(1,1) NOT NULL,
	[SharemstID] [int] NOT NULL,
	[appmstid] [int] NOT NULL,
	[Amount] [float] NULL,
	[Doe] [datetime] NULL,
	[Comment] [varchar](800) NULL,
	[DispatchDate] [datetime] NULL,
	[isGiven] [int] NULL,
	[MaturityDate] [datetime] NULL,
	[tranBy] [varchar](50) NULL,
	[TranId] [int] NULL,
PRIMARY KEY CLUSTERED 
(
	[MaturityId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MessageMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MessageMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Mbody] [varchar](max) NULL,
	[AppmstID] [varchar](100) NULL,
	[Subject] [varchar](50) NULL,
	[Status] [int] NULL,
	[MDate] [datetime] NULL,
 CONSTRAINT [PK_MessageMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MessagesMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MessagesMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[MName] [varchar](100) NULL,
	[AppmstID] [varchar](100) NULL,
	[Subject] [varchar](50) NULL,
	[Status] [varchar](50) NULL,
	[MDate] [varchar](100) NULL,
	[MTime] [varchar](50) NULL,
 CONSTRAINT [PK_MessagesMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ModifyInvestment]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ModifyInvestment](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[AppmstregNo] [varchar](50) NULL,
	[Amount] [float] NULL,
	[Amount1] [float] NULL,
	[DOJ] [datetime] NULL,
	[DOJ1] [datetime] NULL,
	[Plantype] [int] NULL,
	[Plantype1] [int] NULL,
	[Multiplier] [int] NULL,
	[rno] [varchar](50) NULL,
	[rno1] [varchar](50) NULL,
	[admin] [varchar](50) NULL,
	[date] [datetime] NULL,
	[ModificationCode] [int] NULL,
 CONSTRAINT [PK_ModifyInvestment] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[modifyprofile]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[modifyprofile](
	[sno] [int] IDENTITY(1,1) NOT NULL,
	[modifiedby] [varchar](50) NOT NULL,
	[appmstregno] [varchar](50) NOT NULL,
	[title1] [nvarchar](50) NULL,
	[title2] [nvarchar](50) NULL,
	[fname1] [nvarchar](50) NULL,
	[fname2] [nvarchar](50) NULL,
	[GTitle1] [varchar](50) NULL,
	[GTitle2] [varchar](50) NULL,
	[GName1] [varchar](100) NULL,
	[GName2] [varchar](100) NULL,
	[panno1] [varchar](50) NULL,
	[panno2] [varchar](50) NULL,
	[AcountNo1] [varchar](50) NULL,
	[AccountNo2] [varchar](50) NULL,
	[bankname1] [varchar](50) NULL,
	[Bankname2] [varchar](50) NULL,
	[Branch1] [varchar](50) NULL,
	[Branch2] [varchar](50) NULL,
	[ifs1] [varchar](50) NULL,
	[ifs2] [varchar](50) NULL,
	[micr1] [varchar](50) NULL,
	[micr2] [varchar](50) NULL,
	[Address1] [varchar](500) NULL,
	[Address2] [varchar](500) NULL,
	[City1] [nvarchar](50) NULL,
	[City2] [nvarchar](50) NULL,
	[State1] [nvarchar](100) NULL,
	[State2] [nvarchar](100) NULL,
	[distt1] [varchar](50) NULL,
	[distt2] [varchar](50) NULL,
	[PinCode1] [nvarchar](50) NULL,
	[PinCode2] [nvarchar](50) NULL,
	[PrimaryPhone1] [nvarchar](50) NULL,
	[PrimaryPhone2] [nvarchar](50) NULL,
	[Mobile1] [varchar](50) NULL,
	[Mobile2] [varchar](50) NULL,
	[nomname1] [varchar](50) NULL,
	[nomname2] [varchar](50) NULL,
	[nomrela1] [varchar](50) NULL,
	[nomrela2] [varchar](50) NULL,
	[userdob1] [datetime] NULL,
	[userdob2] [datetime] NULL,
	[password1] [nvarchar](50) NULL,
	[password2] [nvarchar](50) NULL,
	[activate1] [int] NULL,
	[activate2] [int] NULL,
	[epassword1] [varchar](50) NULL,
	[epassword2] [varchar](50) NULL,
	[reasontomodify] [varchar](200) NULL,
	[type1] [varchar](100) NULL,
	[type2] [varchar](100) NULL,
	[email1] [varchar](50) NULL,
	[email2] [varchar](50) NULL,
	[doe] [datetime] NULL,
 CONSTRAINT [PK_modifyprofile] PRIMARY KEY CLUSTERED 
(
	[sno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[NewsMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[NewsMst](
	[NewsMstId] [int] IDENTITY(1,1) NOT NULL,
	[NewsMstinset] [datetime] NULL,
	[NewsMstValidUpTo] [datetime] NULL,
	[NewsMstTitle] [varchar](50) NULL,
	[NewsMstDiscription] [varchar](8000) NULL,
	[CurrentRecord] [int] NULL,
	[newstype] [varchar](50) NULL,
	[photo] [varchar](100) NULL,
 CONSTRAINT [PK_NewsMst] PRIMARY KEY CLUSTERED 
(
	[NewsMstId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[newvptran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[newvptran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[AppmstId] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[PaidAppmstID] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NOT NULL,
	[OutAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[payoutno] [int] NULL,
	[DispDate] [datetime] NULL,
	[IsActive] [int] NULL,
	[UpDateTime] [int] NULL,
	[DimoundID] [varchar](50) NULL,
	[doe] [datetime] NULL,
	[TranBY] [varchar](50) NULL,
	[trancharge] [varchar](50) NULL,
	[investment] [bigint] NULL,
	[dollar] [float] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[nextid]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[nextid](
	[appmstid] [int] NULL,
	[appmstregno] [numeric](18, 0) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[OPT]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OPT](
	[OPTCode] [varchar](6) NULL,
	[AppMstRegNo] [varchar](50) NULL,
	[Type] [varchar](50) NULL,
	[email] [varchar](100) NULL,
	[createdon] [datetime] NULL,
	[expireon] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[OrderDetail]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OrderDetail](
	[Srno] [int] IDENTITY(1000,1) NOT NULL,
	[TId] [int] NULL,
	[Regno] [varchar](50) NULL,
	[Name] [varchar](50) NULL,
	[Amount] [float] NULL,
	[Status] [tinyint] NULL,
	[TableType] [varchar](10) NULL,
	[DOE] [datetime] NULL,
 CONSTRAINT [PK__OrderDet__C3A7DF84173D8B55] PRIMARY KEY CLUSTERED 
(
	[Srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[OrderMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OrderMst](
	[OrderId] [int] IDENTITY(1,1) NOT NULL,
	[CartId] [int] NULL,
	[CustomerId] [varchar](50) NULL,
	[DOE] [datetime] NULL,
	[courier] [varchar](50) NULL,
	[coTracking] [varchar](50) NULL,
	[Remarks] [varchar](max) NULL,
	[DispatchDOE] [datetime] NULL,
	[isDeleted] [int] NULL,
 CONSTRAINT [PK_OrderMst] PRIMARY KEY CLUSTERED 
(
	[OrderId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PackSizeMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PackSizeMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[PackSize] [varchar](50) NOT NULL,
	[DOE] [datetime] NULL,
	[Status] [int] NULL,
 CONSTRAINT [PK_PackSizeMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PagePermissions]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PagePermissions](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[userid] [varchar](50) NULL,
	[pagename] [varchar](200) NULL,
	[permission] [int] NULL,
 CONSTRAINT [PK_PagePermissions] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PaymentMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PaymentMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Plan1] [float] NULL,
	[plan2] [float] NULL,
	[plan3] [float] NULL,
	[Tax] [float] NULL,
	[OC] [float] NULL,
	[JoiningAmount] [float] NULL,
	[startdate] [datetime] NULL,
	[companyname] [varchar](50) NULL,
	[address] [varchar](500) NULL,
	[website] [varchar](50) NULL,
	[phone] [varchar](50) NULL,
	[BinaryCeiling] [int] NULL,
	[senderid] [varchar](20) NULL,
	[profileid] [varchar](20) NULL,
	[pwd] [varchar](20) NULL,
	[WithdrawalDate] [datetime] NULL,
	[smsURL] [varchar](200) NULL,
	[logoURL] [varchar](50) NULL,
	[CompanyHead] [varchar](50) NULL,
	[gmailAccount] [varchar](50) NULL,
	[gmailPassword] [varchar](50) NULL,
	[SMSCredit] [int] NULL,
	[BulkProfileId] [varchar](20) NULL,
	[BulkSenderId] [varchar](20) NULL,
	[BulkPwd] [varchar](20) NULL,
	[AdminBankId] [int] NULL,
	[ROI1] [int] NULL,
	[ROI2] [int] NULL,
	[ROI3] [int] NULL,
	[ROIDate] [datetime] NULL,
	[CRate] [float] NULL,
 CONSTRAINT [PK_PaymentMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PaymentTranB]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PaymentTranB](
	[PaymentTranBId] [int] NOT NULL,
	[AppFromPayment] [datetime] NULL,
	[AppToPayment] [datetime] NULL,
	[AppCurrent] [smallint] NULL,
	[PayoutNo] [int] NULL,
	[BinaryBalance] [float] NULL,
	[ProfitPercentage] [float] NULL,
	[OrbitRateDes] [float] NULL,
 CONSTRAINT [PK_paymenttranb] PRIMARY KEY CLUSTERED 
(
	[PaymentTranBId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PaymentTranDraft]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PaymentTranDraft](
	[payoutno] [int] NULL,
	[PaymentTranDraftId] [int] IDENTITY(1,1) NOT NULL,
	[PaymentFromDate] [datetime] NULL,
	[PaymentToDate] [datetime] NULL,
	[appmstid] [int] NULL,
	[AppMstRegno] [nvarchar](50) NULL,
	[OrbitNo] [int] NULL,
	[CycleNo] [int] NULL,
	[TPL] [int] NULL,
	[TPR] [int] NULL,
	[NPL] [int] NULL,
	[NPR] [int] NULL,
	[BFL] [int] NULL,
	[TP] [int] NULL,
	[BFR] [int] NULL,
	[CPL] [int] NULL,
	[CPR] [int] NULL,
	[CFL] [int] NULL,
	[CFR] [int] NULL,
	[binaryAmt] [decimal](20, 2) NULL,
	[directAmt] [decimal](20, 2) NULL,
	[JumboClub1Amt] [decimal](20, 2) NULL,
	[JumboClub2Amt] [decimal](20, 2) NULL,
	[JumboClub3Amt] [decimal](20, 2) NULL,
	[JumboClub4Amt] [decimal](20, 2) NULL,
	[JumboClub5Amt] [decimal](20, 2) NULL,
	[RoyaltyAmt] [decimal](20, 2) NULL,
	[PVBVAmt] [decimal](20, 2) NULL,
	[TotalEarning] [decimal](20, 2) NULL,
	[Tds] [decimal](20, 2) NULL,
	[HandlingCharges] [decimal](20, 2) NULL,
	[DispachedAmt] [decimal](20, 2) NULL,
	[CutAmount] [decimal](20, 2) NULL,
	[AddAmount] [decimal](20, 2) NULL,
	[Remarks] [varchar](250) NULL,
	[PaymentTranDraftNo] [varchar](250) NULL,
	[othercharges] [decimal](18, 2) NULL,
	[Paid_Status] [nvarchar](20) NULL,
	[paymentdisplay] [int] NULL,
	[chequedate] [datetime] NULL,
	[chequeamount] [float] NULL,
	[sentSMS] [bit] NULL,
	[maturityDate] [datetime] NULL,
	[tranBy] [varchar](50) NULL,
	[TranId] [int] NULL,
	[franchiseid] [int] NULL,
	[JumboClub6Amt] [numeric](18, 2) NULL,
	[JumboClub7Amt] [numeric](18, 2) NULL,
 CONSTRAINT [PK_paymenttrandraft] PRIMARY KEY CLUSTERED 
(
	[PaymentTranDraftId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PayoutDate]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PayoutDate](
	[PayFromDate] [smalldatetime] NULL,
	[PayToDate] [smalldatetime] NULL,
	[payoutno] [int] NOT NULL,
	[currentdate] [datetime] NULL,
 CONSTRAINT [PK_payoutdate] PRIMARY KEY CLUSTERED 
(
	[payoutno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PINMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PINMst](
	[pinsrno] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[PinNo] [varchar](50) NULL,
	[PinPassword] [varchar](50) NULL,
	[isActivate] [int] NULL,
	[paidAppMstId] [int] NULL,
	[RegNo] [int] NULL,
	[ActiveDate] [datetime] NULL,
	[JoinFor] [int] NULL,
	[pintype] [int] NULL,
	[amount] [float] NULL,
	[allotmentdate] [datetime] NULL,
	[allotedto] [int] NULL,
	[plantype] [int] NULL,
	[mode] [varchar](50) NULL,
	[TransferId] [varchar](50) NULL,
	[chequeno] [varchar](50) NULL,
	[bank] [varchar](50) NULL,
	[branch] [varchar](50) NULL,
	[depositedamount] [float] NULL,
	[remark] [varchar](100) NULL,
	[ReceiptNo] [varchar](50) NULL,
	[tranid] [int] NULL,
	[transactionNo] [int] NULL,
	[pincount] [int] NULL,
	[productid] [int] NULL,
	[Alloted] [int] NULL,
	[paidstatus] [int] NULL,
 CONSTRAINT [PK_PINMst] PRIMARY KEY CLUSTERED 
(
	[pinsrno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PinRequestMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PinRequestMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[AppMstRegno] [varchar](50) NULL,
	[ProductId] [int] NULL,
	[PAmount] [float] NULL,
	[NOofpin] [int] NULL,
	[RDate] [datetime] NULL,
	[CBankName] [varchar](100) NULL,
	[CAccountNo] [varchar](30) NULL,
	[UBankName] [varchar](100) NULL,
	[UAccountNo] [varchar](30) NULL,
	[ChequeNo] [varchar](50) NULL,
	[Remarks] [varchar](200) NULL,
	[status] [int] NULL,
	[aprovedate] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PinTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PinTran](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Appmstid] [varchar](50) NULL,
	[paidAppmstid] [varchar](50) NULL,
	[PinSrNo] [int] NULL,
	[dot] [datetime] NULL,
 CONSTRAINT [PK_PinTran] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PlanTypeMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PlanTypeMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[PlanTypeId] [int] NOT NULL,
	[Pname] [varchar](200) NULL,
	[Detail] [varchar](max) NULL,
	[doe] [datetime] NULL,
	[Active] [int] NULL,
	[ProductType] [int] NULL,
	[Amount] [float] NULL,
	[JoinFor] [float] NULL,
	[Points] [float] NULL,
	[ROI] [float] NULL,
	[capping] [float] NULL,
	[DirIncome] [float] NULL,
 CONSTRAINT [PK__PlanType__D8D81464372D6AC3] PRIMARY KEY CLUSTERED 
(
	[PlanTypeId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PMoney]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PMoney](
	[PID] [int] IDENTITY(101,1) NOT NULL,
	[RegNo] [varchar](50) NULL,
	[PaidRegNo] [varchar](50) NULL,
	[PACCOUNT] [varchar](50) NULL,
	[PNAME] [varchar](50) NULL,
	[PAMOUNT] [float] NULL,
	[PUNITS] [varchar](50) NULL,
	[SMEMO] [varchar](200) NULL,
	[Status] [int] NULL,
	[Remarks] [varchar](50) NULL,
	[sponsorid] [varchar](50) NULL,
	[Place] [int] NULL,
	[Name] [varchar](50) NULL,
	[email] [varchar](50) NULL,
	[country] [varchar](50) NULL,
	[product] [int] NULL,
	[sPass] [varchar](50) NULL,
	[UserId] [varchar](50) NULL,
	[Amount] [float] NULL,
	[pass] [varchar](50) NULL,
	[tPass] [varchar](50) NULL,
	[JoinType] [varchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ProductMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ProductMst](
	[SrNo] [int] IDENTITY(1,1) NOT NULL,
	[ProductName] [varchar](100) NULL,
	[Amount] [float] NULL,
	[joinfor] [float] NULL,
	[RewardPoint] [float] NULL,
	[doe] [datetime] NULL,
	[isDeleted] [int] NULL,
	[Tax] [float] NULL,
	[ProductAmt] [float] NULL,
	[TaxAmt] [float] NULL,
	[Photo] [varchar](max) NULL,
	[Description] [varchar](max) NULL,
 CONSTRAINT [PK_ProductMst] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ProfileImageMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ProfileImageMst](
	[srno] [int] NULL,
	[ImageName] [varchar](50) NULL,
	[AppMstregno] [varchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PromtionMaster]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PromtionMaster](
	[pageID] [bigint] IDENTITY(1,1) NOT NULL,
	[pageName] [varchar](100) NULL,
	[PageLink] [varchar](max) NULL,
	[IsActive] [char](1) NULL,
	[LastDate] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[querymaster]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[querymaster](
	[srno] [int] IDENTITY(1001,1) NOT NULL,
	[Name] [varchar](50) NULL,
	[RegNo] [varchar](50) NULL,
	[mobileno] [varchar](25) NULL,
	[query] [text] NULL,
	[querydate] [smalldatetime] NULL,
	[status] [bit] NULL,
	[reply] [text] NULL,
	[replydate] [smalldatetime] NULL,
	[Administrator] [varchar](50) NULL,
 CONSTRAINT [PK_querymaster] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RDate]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RDate](
	[sno] [int] IDENTITY(1,1) NOT NULL,
	[FromDate] [smalldatetime] NULL,
	[ToDate] [smalldatetime] NULL,
	[DOE] [datetime] NULL,
 CONSTRAINT [PK_RDate] PRIMARY KEY CLUSTERED 
(
	[sno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RechargeMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RechargeMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Appmstregno] [varchar](50) NULL,
	[Mobile] [varchar](50) NULL,
	[Amount] [float] NULL,
	[status] [varchar](max) NULL,
	[DOE] [datetime] NULL,
	[Circle] [varchar](50) NULL,
	[Operator] [varchar](50) NULL,
	[BankTranId] [int] NULL,
	[ReType] [varchar](50) NULL,
	[LoadType] [varchar](50) NULL,
	[TranNo] [float] NOT NULL,
	[ResponseCode] [varchar](50) NULL,
	[TranStatus] [int] NOT NULL,
	[StoreID] [varchar](20) NULL,
	[Response] [varchar](max) NULL,
	[StdCode] [varchar](10) NULL,
	[AcountNo] [varchar](10) NULL,
	[IsRetailer] [int] NULL,
	[accountNo] [varchar](50) NULL,
	[dstatus] [int] NULL,
	[acomment] [varchar](50) NULL,
	[ardate] [datetime] NULL,
	[dcomment] [varchar](50) NULL,
	[disputedate] [datetime] NULL,
 CONSTRAINT [PK__RechargeMst__17E28260] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ReCommissionMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ReCommissionMst](
	[ReCommissionId] [int] IDENTITY(1,1) NOT NULL,
	[Commission] [float] NULL,
	[CommissionMode] [varchar](50) NULL,
	[ReType] [varchar](50) NULL,
	[doe] [datetime] NULL,
	[OperatorId] [int] NULL,
	[OperatorName] [varchar](100) NULL,
	[Surcharge] [float] NULL,
	[ShortCode] [varchar](50) NULL,
	[Service] [varchar](50) NULL,
 CONSTRAINT [PK__ReCommis__7D8F9291683E5C36] PRIMARY KEY CLUSTERED 
(
	[ReCommissionId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RefundMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RefundMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[appmstid] [int] NULL,
	[Amount] [float] NULL,
	[doe] [datetime] NULL,
	[status] [int] NULL,
	[Remark] [varchar](200) NULL,
	[reqBy] [varchar](50) NULL,
	[reqById] [varchar](50) NULL,
	[statusDate] [datetime] NULL,
	[AdminId] [varchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RegisterMobileNo]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RegisterMobileNo](
	[SrNo] [int] IDENTITY(1,1) NOT NULL,
	[ApplicantName] [varchar](50) NULL,
	[EMailId] [varchar](50) NULL,
	[MobileNo] [varchar](50) NULL,
	[IPAddrss] [varchar](50) NULL,
	[doe] [datetime] NULL,
 CONSTRAINT [PK_RegisterMobileNo] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RequestMstModifications]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RequestMstModifications](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[requestNo] [int] NULL,
	[AppmstRegno] [varchar](50) NULL,
	[Amount] [float] NULL,
	[Amount1] [float] NULL,
	[Status] [int] NULL,
	[Status1] [int] NULL,
	[comment] [varchar](200) NULL,
	[comment1] [varchar](200) NULL,
	[ReceiptNo] [varchar](50) NULL,
	[ReceiptNo1] [varchar](50) NULL,
	[date] [datetime] NULL,
	[admin] [varchar](100) NULL,
 CONSTRAINT [PK_RequestMstModifications] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ResetDates]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ResetDates](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[resetdate] [datetime] NULL,
	[noOfEntry] [int] NULL,
	[doe] [datetime] NULL,
 CONSTRAINT [PK_ResetDates] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ReVoucherMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ReVoucherMst](
	[SrNo] [int] IDENTITY(1,1) NOT NULL,
	[AppMstRegNo] [varchar](50) NULL,
	[AppMstId] [int] NULL,
	[RAmount] [float] NULL,
	[UseRAmount] [float] NULL,
	[REVoucher] [float] NULL,
	[CatId] [int] NULL,
	[Dot] [datetime] NULL,
	[Remarks] [varchar](100) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[rewardMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[rewardMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[rewardRank] [int] NULL,
	[name] [varchar](100) NULL,
	[minPoint] [float] NULL,
	[maxPoint] [float] NULL,
	[imgUrl] [varchar](100) NULL,
	[RewardID] [int] NULL,
	[mindate] [datetime] NULL,
	[maxdate] [datetime] NULL,
	[doe] [datetime] NULL,
	[DaysLimit] [int] NULL,
	[pairPoint] [int] NULL,
 CONSTRAINT [PK_rewardMst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RewardPostedMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RewardPostedMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[RewardID] [int] NULL,
	[minDate] [datetime] NULL,
	[maxDate] [datetime] NULL,
	[doe] [datetime] NULL,
	[rewardRank] [int] NULL,
	[name] [varchar](100) NULL,
	[minPoint] [float] NULL,
	[maxPoint] [float] NULL,
	[imgUrl] [varchar](100) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RoiMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RoiMst](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[totalElegibleId] [bigint] NULL,
	[DistributableAmt] [numeric](18, 2) NULL,
	[PerRpv] [numeric](18, 2) NULL,
	[ROIDATe] [date] NULL,
	[DOE] [datetime] NULL,
	[OriginalAmtValue] [numeric](18, 2) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RPTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RPTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[AppmstId] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[PaidAppmstID] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NOT NULL,
	[OutAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[payoutno] [int] NULL,
	[DispDate] [datetime] NULL,
	[IsActive] [int] NULL,
	[UpDateTime] [int] NULL,
	[doe] [datetime] NULL,
 CONSTRAINT [PK_RPTran] PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[scanDocs]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[scanDocs](
	[SrNo] [int] NOT NULL,
	[UserId] [varchar](50) NULL,
	[ImageName] [varchar](max) NULL,
	[docType] [int] NULL,
	[status] [bigint] NOT NULL,
 CONSTRAINT [PK_scanDocs] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SettingMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SettingMst](
	[SrNo] [int] IDENTITY(1,1) NOT NULL,
	[Tax] [int] NULL,
	[OC] [int] NULL,
	[CompanyName] [varchar](50) NULL,
	[CompanyAddress] [varchar](max) NULL,
	[Website] [varchar](50) NULL,
	[MobileNo] [varchar](150) NULL,
	[PhoneNo] [varchar](150) NULL,
	[EMailId] [varchar](50) NULL,
	[SenderId] [varchar](20) NULL,
	[ProfileId] [varchar](20) NULL,
	[SmsPassword] [varchar](20) NULL,
	[SmsUrl] [varchar](200) NULL,
	[LogoURL] [varchar](50) NULL,
	[DealTitle] [varchar](50) NULL,
	[DealImageURL] [varchar](50) NULL,
	[ProductName] [int] NULL,
	[Title] [int] NULL,
	[PackSize] [int] NULL,
	[Availability] [int] NULL,
	[Price] [int] NULL,
	[MRP] [int] NULL,
	[BuyNow] [int] NULL,
	[showMobileNo] [int] NULL,
	[showPhoneNo] [int] NULL,
	[PoweredBy] [varchar](max) NULL,
	[TermAndCondition] [varchar](max) NULL,
	[gmailPassword] [varchar](50) NULL,
	[HeaderTitle] [varchar](50) NULL,
 CONSTRAINT [PK_SettingMst] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Sharemst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Sharemst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Appmstid] [int] NULL,
	[Amount] [numeric](18, 0) NULL,
	[iselegible] [int] NULL,
	[DOE] [datetime] NULL,
	[pintype] [int] NULL,
	[netamt] [float] NULL,
	[appmstregno] [varchar](50) NULL,
	[receiptno] [varchar](50) NULL,
	[EndAmount] [numeric](18, 0) NOT NULL,
	[selection] [int] NULL,
	[PlanType] [int] NULL,
	[pinsrno] [int] NULL,
	[ReqId] [varchar](100) NULL,
	[RestDays] [int] NULL,
	[ReceiveStatus] [int] NULL,
	[RewardPoint] [float] NULL,
	[ROICount] [int] NULL,
	[TopupTime] [int] NULL,
	[joinfor] [int] NULL,
	[investment] [bigint] NULL,
 CONSTRAINT [PK_Sharemst] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SizeMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SizeMst](
	[ProductId] [int] NULL,
	[Size1] [varchar](20) NULL,
	[Size2] [varchar](20) NULL,
	[Size3] [varchar](20) NULL,
	[Size4] [varchar](20) NULL,
	[Size5] [varchar](20) NULL,
	[Size6] [varchar](20) NULL,
	[Size7] [varchar](20) NULL,
	[Size8] [varchar](20) NULL,
	[Size9] [varchar](20) NULL,
	[Size10] [varchar](20) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SmsMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SmsMst](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[Mobile] [varchar](20) NULL,
	[TextMsg] [varchar](600) NULL,
	[Response] [varchar](8000) NULL,
	[Doe] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Sub2CategoryMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Sub2CategoryMst](
	[Sub2CatId] [int] IDENTITY(1,1) NOT NULL,
	[SubCatId] [int] NOT NULL,
	[SubCatName] [varchar](50) NOT NULL,
	[DOE] [datetime] NULL,
	[Description] [varchar](100) NULL,
	[Status] [int] NULL,
 CONSTRAINT [PK_Sub2CategoryMst] PRIMARY KEY CLUSTERED 
(
	[Sub2CatId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SubcatCoupon]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SubcatCoupon](
	[SubCatId] [int] IDENTITY(1000,1) NOT NULL,
	[CatId] [int] NULL,
	[SubCatName] [varchar](50) NULL,
	[ImageName] [varchar](100) NULL,
	[Description] [varchar](100) NULL,
	[DOE] [datetime] NULL,
	[Status] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SubCategoryMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SubCategoryMst](
	[SubCatId] [int] IDENTITY(1000,1) NOT NULL,
	[CatId] [int] NULL,
	[SubCatName] [varchar](50) NULL,
	[ImageName] [varchar](100) NULL,
	[Description] [varchar](100) NULL,
	[DOE] [datetime] NULL,
	[Status] [int] NULL,
 CONSTRAINT [PK__SubCateg__3963795546335CF5] PRIMARY KEY CLUSTERED 
(
	[SubCatId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbl_AccessToken]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbl_AccessToken](
	[Id] [uniqueidentifier] NOT NULL,
	[AuthToken] [nvarchar](50) NULL,
	[userid] [bigint] NULL,
	[IsActive] [bit] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedOn] [datetime] NULL,
	[CreatedBy] [uniqueidentifier] NULL,
	[UpdatedBy] [uniqueidentifier] NULL,
	[IssuedOn] [datetime] NULL,
	[ExpiresOn] [datetime] NULL,
 CONSTRAINT [PK__tbl_Acce__3214EC07811B8329] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 80, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbl_CoinpaymentRequest]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbl_CoinpaymentRequest](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MemberID] [nvarchar](100) NULL,
	[PaymenytBy] [nvarchar](10) NULL,
	[txn_id] [nvarchar](1000) NULL,
	[RequestAmount] [numeric](18, 2) NULL,
	[timeout] [int] NULL,
	[amount] [nvarchar](100) NULL,
	[Toaddress] [nvarchar](500) NULL,
	[confirms_needed] [int] NULL,
	[status_url] [nvarchar](max) NULL,
	[qrcode_url] [nvarchar](max) NULL,
	[currency1] [nvarchar](100) NULL,
	[currency2] [nvarchar](100) NULL,
	[AddDate] [datetime] NULL,
	[status] [nvarchar](150) NULL,
	[status_text] [nvarchar](1000) NULL,
	[Add_Date] [datetime] NULL,
	[UpdateDate] [datetime] NULL,
	[FullRequest] [nvarchar](max) NULL,
	[AmountFor] [nvarchar](500) NULL,
	[ISActive] [bit] NULL,
	[IsDelete] [bit] NULL,
 CONSTRAINT [PK__tbl_Coin__3214EC27153CF323] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbl_CoinpaymentResponce]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbl_CoinpaymentResponce](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[txn_id] [nvarchar](1000) NULL,
	[ipn_id] [nvarchar](1000) NULL,
	[amount1] [decimal](12, 8) NULL,
	[amount2] [decimal](12, 8) NULL,
	[received_amount] [nvarchar](100) NULL,
	[status] [nvarchar](150) NULL,
	[status_text] [nvarchar](1000) NULL,
	[Add_Date] [datetime] NULL,
	[FullResponce] [nvarchar](max) NULL,
	[ISActive] [bit] NULL,
	[IsDelete] [bit] NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblreward]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblreward](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[AppMstRegNo] [varchar](50) NULL,
	[PairRank] [int] NULL,
	[AwardName] [varchar](50) NULL,
	[AwardRank] [int] NULL,
	[minDate] [datetime] NULL,
	[maxDate] [datetime] NULL,
	[AwardAchivedDate] [datetime] NULL,
	[isGiven] [bit] NULL,
	[Comment] [varchar](max) NULL,
	[rewardid] [int] NULL,
	[leftPoint] [float] NULL,
	[RightPoint] [float] NULL,
	[doe] [datetime] NULL,
	[totalpair] [int] NULL,
	[status] [int] NULL,
 CONSTRAINT [PK__tblreward__0BC6C43E] PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[THOUSAND]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[THOUSAND](
	[num] [int] NULL,
	[wrd] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[userModifyProfile]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[userModifyProfile](
	[sno] [int] IDENTITY(1,1) NOT NULL,
	[modifiedby] [varchar](50) NOT NULL,
	[appmstregno] [varchar](50) NOT NULL,
	[title1] [nvarchar](50) NULL,
	[title2] [nvarchar](50) NULL,
	[fname1] [nvarchar](50) NULL,
	[fname2] [nvarchar](50) NULL,
	[GTitle1] [varchar](50) NULL,
	[GTitle2] [varchar](50) NULL,
	[GName1] [varchar](100) NULL,
	[GName2] [varchar](100) NULL,
	[panno1] [varchar](50) NULL,
	[panno2] [varchar](50) NULL,
	[AcountNo1] [varchar](50) NULL,
	[AccountNo2] [varchar](50) NULL,
	[bankname1] [varchar](50) NULL,
	[Bankname2] [varchar](50) NULL,
	[Branch1] [varchar](50) NULL,
	[Branch2] [varchar](50) NULL,
	[ifs1] [varchar](50) NULL,
	[ifs2] [varchar](50) NULL,
	[micr1] [varchar](50) NULL,
	[micr2] [varchar](50) NULL,
	[Address1] [varchar](500) NULL,
	[Address2] [varchar](500) NULL,
	[City1] [nvarchar](50) NULL,
	[City2] [nvarchar](50) NULL,
	[State1] [nvarchar](100) NULL,
	[State2] [nvarchar](100) NULL,
	[distt1] [varchar](50) NULL,
	[distt2] [varchar](50) NULL,
	[PinCode1] [nvarchar](50) NULL,
	[PinCode2] [nvarchar](50) NULL,
	[PrimaryPhone1] [nvarchar](50) NULL,
	[PrimaryPhone2] [nvarchar](50) NULL,
	[Mobile1] [varchar](50) NULL,
	[Mobile2] [varchar](50) NULL,
	[nomname1] [varchar](50) NULL,
	[nomname2] [varchar](50) NULL,
	[nomrela1] [varchar](50) NULL,
	[nomrela2] [varchar](50) NULL,
	[userdob1] [datetime] NULL,
	[userdob2] [datetime] NULL,
	[password1] [nvarchar](50) NULL,
	[password2] [nvarchar](50) NULL,
	[activate1] [int] NULL,
	[activate2] [int] NULL,
	[epassword1] [varchar](50) NULL,
	[epassword2] [varchar](50) NULL,
	[reasontomodify] [varchar](200) NULL,
	[type1] [varchar](100) NULL,
	[type2] [varchar](100) NULL,
	[email1] [varchar](50) NULL,
	[email2] [varchar](50) NULL,
	[date] [datetime] NULL,
	[tdsdeduction1] [int] NULL,
	[tdsdeduction2] [int] NULL,
 CONSTRAINT [PK_userModifyProfile] PRIMARY KEY CLUSTERED 
(
	[sno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UserProductMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserProductMst](
	[srno] [varchar](50) NULL,
	[userid] [varchar](50) NULL,
	[amount] [varchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[VPTran]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VPTran](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[AppmstId] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[PaidAppmstID] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NOT NULL,
	[OutAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[payoutno] [int] NULL,
	[DispDate] [datetime] NULL,
	[IsActive] [int] NULL,
	[UpDateTime] [int] NULL,
	[DimoundID] [varchar](50) NULL,
	[doe] [datetime] NULL,
	[TranBY] [varchar](50) NULL,
	[trancharge] [varchar](50) NULL,
	[investment] [bigint] NULL,
	[dollar] [float] NULL,
 CONSTRAINT [PK_BankTranAdmin] PRIMARY KEY CLUSTERED 
(
	[BankTranId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[vptranbackup]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[vptranbackup](
	[BankTranId] [int] IDENTITY(1,1) NOT NULL,
	[AppmstId] [int] NOT NULL,
	[BankTranMode] [smallint] NOT NULL,
	[PaidAppmstID] [int] NOT NULL,
	[BankTranDate] [datetime] NOT NULL,
	[BankTranAmount] [float] NOT NULL,
	[OutAmount] [float] NULL,
	[BankTranBalance] [float] NOT NULL,
	[BankTranRemarks] [varchar](100) NULL,
	[Reason] [varchar](max) NULL,
	[TranId] [int] NULL,
	[payoutno] [int] NULL,
	[DispDate] [datetime] NULL,
	[IsActive] [int] NULL,
	[UpDateTime] [int] NULL,
	[DimoundID] [varchar](50) NULL,
	[doe] [datetime] NULL,
	[TranBY] [varchar](50) NULL,
	[trancharge] [varchar](50) NULL,
	[investment] [bigint] NULL,
	[dollar] [float] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[WalletRequestMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[WalletRequestMst](
	[WalletRequestId] [int] IDENTITY(1,1) NOT NULL,
	[AppMstREgNo] [varchar](50) NOT NULL,
	[DOE] [datetime] NULL,
	[Amount] [float] NULL,
	[TDS] [float] NULL,
	[Handling] [float] NULL,
	[Dispatch] [float] NULL,
	[Remarks] [varchar](100) NULL,
	[Status] [varchar](50) NULL,
	[WAmount] [float] NULL,
	[DOT] [datetime] NULL,
	[CompanyAccNo] [varchar](100) NULL,
	[CompanyBank] [varchar](100) NULL,
	[UserAccNo] [varchar](100) NULL,
	[UserBank] [varchar](100) NULL,
	[TransactionNo] [varchar](100) NULL,
	[PaymentType] [varchar](100) NULL,
	[imagesName] [varchar](50) NULL,
 CONSTRAINT [PK__WalletRe__638808DCB913E3D9] PRIMARY KEY CLUSTERED 
(
	[WalletRequestId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[WithdrawAmt]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[WithdrawAmt](
	[srno] [int] IDENTITY(1,1) NOT NULL,
	[TotalWithdraw] [float] NULL,
	[OnceWithdraw] [float] NULL,
	[doe] [datetime] NULL,
	[TotalRecharge] [float] NULL,
	[ReStartOn] [datetime] NULL,
	[ReEndOn] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[WithdrawMst]    Script Date: 10/28/2020 2:04:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[WithdrawMst](
	[WithdrawId] [bigint] IDENTITY(1,1) NOT NULL,
	[AppmstId] [bigint] NOT NULL,
	[DOE] [datetime] NULL,
	[Amount] [float] NULL,
	[BTCAmount] [numeric](18, 9) NULL,
	[TDS] [float] NULL,
	[Handling] [float] NULL,
	[Dispatch] [float] NULL,
	[Remarks] [varchar](100) NULL,
	[Status] [bigint] NULL,
	[ChequeNo] [varchar](50) NULL,
	[WAmount] [float] NULL,
	[BankName] [varchar](100) NULL,
	[DOT] [datetime] NULL,
	[PaymentMode] [varchar](50) NULL,
	[ispaid] [bigint] NULL,
	[PAN] [varchar](50) NULL,
	[PayTranId] [bigint] NULL,
	[withdrawFrom] [varchar](50) NULL,
	[TranId] [bigint] NULL,
	[WithBy] [varchar](50) NULL,
	[WithFor] [varchar](50) NULL,
	[FranchiseId] [bigint] NOT NULL,
	[paymentCause] [varchar](50) NULL,
	[AcNo] [varchar](100) NULL,
	[Branch] [varchar](100) NULL,
	[MICR] [varchar](30) NULL,
	[IFSC] [varchar](30) NULL,
	[email] [varchar](100) NULL,
	[BHolderName] [varchar](100) NULL,
	[MobileNo] [varchar](50) NULL,
	[WType] [varchar](50) NULL,
 CONSTRAINT [PK_WithdrawMst] PRIMARY KEY CLUSTERED 
(
	[WithdrawId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[AdminControl] ON 
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (1, N'admin', N'111111', N'8/2/2020', N'sa', CAST(N'2020-08-02T22:05:22.133' AS DateTime), N'212.114.52.193', NULL)
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (2, N'admin', N'111111', N'8/4/2020', N'sa', CAST(N'2020-08-05T11:43:39.793' AS DateTime), N'212.114.52.193', NULL)
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (3, N'admin', N'111111', N'8/8/2020', N'sa', CAST(N'2020-08-08T15:43:11.470' AS DateTime), N'212.114.52.193', NULL)
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (4, N'admin', N'111111', N'8/11/2020', N'sa', CAST(N'2020-08-11T16:43:38.687' AS DateTime), N'212.114.52.193', NULL)
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (5, N'admin', N'111111', N'8/12/2020', N'sa', CAST(N'2020-08-12T22:35:15.547' AS DateTime), N'212.114.52.193', CAST(N'2020-08-12T22:36:09.420' AS DateTime))
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (6, N'admin', N'111111', N'8/18/2020', N'sa', CAST(N'2020-08-19T01:37:23.360' AS DateTime), N'212.114.52.193', NULL)
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (7, N'admin', N'111111', N'8/19/2020', N'sa', CAST(N'2020-08-20T00:24:45.697' AS DateTime), N'212.114.52.193', NULL)
GO
INSERT [dbo].[AdminControl] ([srno], [UserName], [Password], [LogInDateTime], [admintype], [Date], [IPAddress], [LogOutTime]) VALUES (8, N'admin', N'111111', N'8/20/2020', N'sa', CAST(N'2020-08-20T21:29:39.847' AS DateTime), N'212.114.52.193', NULL)
GO
SET IDENTITY_INSERT [dbo].[AdminControl] OFF
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (1, N'XSC00001', N'111111', N'Mr.', N'', N'MIKE CONTO', N'', N'', N'', N'', N'110085', N'02666889996', N'', N'XSC00001', 0, N'0', N'0', 11, CAST(N'2020-05-03T10:07:00' AS SmallDateTime), 1, 31600, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31600, 0, 0, 0, 0, 0, 0, N'hhhhhhhhhhhhh', N'NA', N'FFFF', N'CFVPK3541P', N'NA', N'NA', N'INDIA', N'INFO@BYTECAPITALS.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-05-03T10:07:00.000' AS DateTime), N'0', N'1', N'0', N'', 0, N'2222', N'106.223.212.73', 0, N'0', 1, 93, 0, 0, 0, 0, NULL, CAST(N'2020-05-03T10:07:00.000' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (2, N'XSC342673', N'123456', N'', N'', N'XSC001', N'', N'', N'', N'', N'', N'NA', N'', N'XSC342673', 0, N'xsc00001', N'XSC00001', 0, CAST(N'2020-07-11T17:53:00' AS SmallDateTime), 1, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 100, 100, N'1', 1, CAST(N'2020-07-12T17:52:14.527' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 92, 0, 0, 0, 0, NULL, CAST(N'2020-07-12T09:52:14.530' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 100, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (3, N'XSC103416', N'123456', N'', N'', N'XSC01', N'', N'', N'', N'', N'', N'NA', N'', N'XSC103416', 0, N'XSC342673', N'XSC00001', 0, CAST(N'2020-07-11T17:55:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:24:41.820' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 91, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (4, N'XSC250930', N'123456', N'', N'', N'XSC01', N'', N'', N'', N'', N'', N'NA', N'', N'XSC250930', 0, N'XSC103416', N'XSC00001', 0, CAST(N'2020-07-11T17:57:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:26:33.580' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 90, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (5, N'XSC128732', N'123456', N'', N'', N'XSC001', N'', N'', N'', N'', N'', N'NA', N'', N'XSC128732', 0, N'XSC250930', N'XSC00001', 0, CAST(N'2020-07-11T18:00:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:30:17.407' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 89, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (6, N'XSC524351', N'123456', N'', N'', N'XSC01', N'', N'', N'', N'', N'', N'NA', N'', N'XSC524351', 0, N'XSC128732', N'XSC00001', 0, CAST(N'2020-07-11T18:01:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:31:23.560' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 88, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (7, N'XSC808799', N'123456', N'', N'', N'XSCOIN01', N'', N'', N'', N'', N'', N'NA', N'', N'XSC808799', 0, N'XSC524351', N'XSC00001', 0, CAST(N'2020-07-11T18:03:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:33:18.767' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 87, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (8, N'XSC714650', N'123456', N'', N'', N'XSCOIN001', N'', N'', N'', N'', N'', N'NA', N'', N'XSC714650', 0, N'XSC808799', N'XSC00001', 0, CAST(N'2020-07-11T18:04:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:34:13.973' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 86, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (9, N'XSC237098', N'123456', N'', N'', N'XSC0001', N'', N'', N'', N'', N'', N'NA', N'', N'XSC237098', 0, N'XSC714650', N'XSC00001', 0, CAST(N'2020-07-11T18:07:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:36:43.773' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 85, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (10, N'XSC455325', N'123456', N'', N'', N'XSCOIN00001', N'', N'', N'', N'', N'', N'NA', N'', N'XSC455325', 0, N'XSC237098', N'XSC00001', 0, CAST(N'2020-07-11T18:08:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:38:08.390' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 84, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (11, N'XSC868885', N'123456', N'', N'', N'SARAVANAN PANDIAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC868885', 0, N'XSC455325', N'XSC00001', 0, CAST(N'2020-07-11T18:10:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:39:54.660' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 83, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (12, N'XSC298794', N'123123', N'', N'', N'SARAVANAN P', N'', N'', N'', N'', N'', N'NA', N'', N'XSC298794', 0, N'XSC868885', N'XSC00001', 1, CAST(N'2020-07-11T18:12:00' AS SmallDateTime), 0, 31500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SARANYARCHE@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T22:42:27.590' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123123', N'192.168.3.3', 0, N'0', 0, 82, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (13, N'XSC674648', N'ramramram', N'', N'', N'SPRJPR', N'', N'', N'', N'', N'', N'NA', N'', N'XSC674648', 0, N'XSC298794', N'XSC298794', 8, CAST(N'2020-07-11T18:21:00' AS SmallDateTime), 1, 28500, 1500, 0, 0, 1500, 1500, 0, 0, 1500, 1500, 0, 0, 27000, 0, 120, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRJPR@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-05T09:00:49.637' AS DateTime), N'0', N'0', N'0', N'0', 0, N'ramramram', N'192.168.3.3', 0, N'0', 1, 70, 11, 0, 0, 0, NULL, CAST(N'2020-08-05T01:00:49.640' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (14, N'XSC740234', N'ramram', N'', N'', N'SPRJPR1', N'', N'', N'', N'', N'', N'NA', N'', N'XSC740234', 0, N'XSC674648', N'XSC674648', 6, CAST(N'2020-07-11T18:51:00' AS SmallDateTime), 1, 25500, 1500, 0, 0, 1500, 1500, 0, 0, 1500, 1500, 0, 0, 24000, 0, 120, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRJPR@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-09T08:33:38.670' AS DateTime), N'0', N'0', N'0', N'0', 0, N'ramram', N'192.168.3.3', 0, N'0', 0, 58, 11, 0, 0, 0, NULL, CAST(N'2020-08-09T00:33:38.673' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (15, N'XSC282635', N'ramram', N'', N'', N'SPRJPR2', N'', N'', N'', N'', N'', N'NA', N'', N'XSC282635', 1, N'Xsc674648', N'XSC674648', 4, CAST(N'2020-07-11T18:58:00' AS SmallDateTime), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRJPR@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-05T09:35:39.760' AS DateTime), N'0', N'0', N'0', N'0', 0, N'ramram', N'192.168.3.3', 0, N'0', 0, 1, 9, 0, 0, 0, NULL, CAST(N'2020-08-05T01:35:39.763' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (16, N'XSC924394', N'ramram', N'', N'', N'SPRJPR3', N'', N'', N'', N'', N'', N'NA', N'', N'XSC924394', 0, N'XSC740234', N'XSC740234', 3, CAST(N'2020-07-11T19:03:00' AS SmallDateTime), 1, 24000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRJPR@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-09T08:37:54.930' AS DateTime), N'0', N'0', N'0', N'0', 0, N'ramram', N'192.168.3.3', 0, N'0', 0, 57, 0, 0, 0, 0, NULL, CAST(N'2020-08-09T00:37:54.930' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (17, N'XSC141986', N'ramram', N'', N'', N'SPRJPR4', N'', N'', N'', N'', N'', N'NA', N'', N'XSC141986', 1, N'XSC740234', N'XSC740234', 5, CAST(N'2020-07-11T19:05:00' AS SmallDateTime), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRJPR@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-09T08:41:55.327' AS DateTime), N'0', N'0', N'0', N'0', 0, N'ramram', N'192.168.3.3', 0, N'0', 0, 3, 7, 0, 0, 0, NULL, CAST(N'2020-08-09T00:41:55.327' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (18, N'XSC144139', N'ramram', N'', N'', N'SPRJPR5', N'', N'', N'', N'', N'', N'NA', N'', N'XSC144139', 0, N'XSC282635', N'XSC282635', 0, CAST(N'2020-07-11T19:08:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRJPR@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T23:38:10.203' AS DateTime), N'0', N'0', N'0', N'0', 0, N'ramram', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (19, N'XSC625379', N'ramram', N'', N'', N'SPRJPR6', N'', N'', N'', N'', N'', N'NA', N'', N'XSC625379', 1, N'XSC282635', N'XSC282635', 3, CAST(N'2020-07-11T19:15:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRJPR@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-11T23:45:26.273' AS DateTime), N'0', N'0', N'0', N'0', 0, N'ramram', N'192.168.3.3', 0, N'0', 0, 0, 8, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (20, N'XSC415448', N'123456', N'', N'', N'SELVAM', N'', N'', N'', N'', N'', N'NA', N'', N'XSC415448', 0, N'Xsc924394', N'XSC924394', 0, CAST(N'2020-07-12T04:49:00' AS SmallDateTime), 0, 24000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRRAMESH1971@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T09:19:29.883' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 56, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (21, N'XSC719290', N'123456', N'', N'', N'RAJI', N'', N'', N'', N'', N'', N'NA', N'', N'XSC719290', 0, N'XSC415448', N'XSC924394', 1, CAST(N'2020-07-12T06:13:00' AS SmallDateTime), 0, 24000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'RAJIG1957@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T10:42:39.160' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 55, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (22, N'XSC289844', N'123456', N'', N'', N'ALRR', N'', N'', N'', N'', N'', N'NA', N'', N'XSC289844', 0, N'XSC719290', N'XSC924394', 0, CAST(N'2020-07-12T06:15:00' AS SmallDateTime), 0, 24000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRRAMESH1971@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T10:45:09.630' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 54, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (23, N'XSC961601', N'123456', N'', N'', N'NAVEEN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC961601', 0, N'XSC289844', N'XSC740234', 4, CAST(N'2020-07-12T06:28:00' AS SmallDateTime), 1, 19500, 3000, 0, 0, 3000, 3000, 0, 0, 3000, 3000, 0, 0, 16500, 0, 240, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-05T10:40:39.607' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 49, 4, 0, 0, 0, NULL, CAST(N'2020-08-05T02:40:39.607' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (24, N'XSC833745', N'123456', N'', N'', N'NAVEEN1', N'', N'', N'', N'', N'', N'NA', N'', N'XSC833745', 0, N'Xsc961601', N'XSC961601', 3, CAST(N'2020-07-12T06:56:00' AS SmallDateTime), 1, 18000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T04:27:29.493' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 48, 0, 0, 0, 0, NULL, CAST(N'2020-08-19T20:27:29.497' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (25, N'XSC652087', N'123456', N'', N'', N'NAVEEN2', N'', N'', N'', N'', N'', N'NA', N'', N'XSC652087', 1, N'Xsc961601', N'XSC961601', 1, CAST(N'2020-07-12T06:58:00' AS SmallDateTime), 1, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T04:29:00.537' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 3, 0, 0, 0, NULL, CAST(N'2020-08-19T20:29:00.540' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (26, N'XSC676373', N'123456', N'', N'', N'MARAPPAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC676373', 0, N'XSC833745', N'XSC740234', 0, CAST(N'2020-07-12T07:01:00' AS SmallDateTime), 0, 18000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRRAMESH1971@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T11:31:09.993' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 47, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (27, N'XSC757437', N'123456', N'', N'', N'HARINI', N'', N'', N'', N'', N'', N'NA', N'', N'XSC757437', 0, N'XSC676373', N'XSC740234', 1, CAST(N'2020-07-12T07:13:00' AS SmallDateTime), 0, 18000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'KARTHIMONSANTO@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T11:43:12.300' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 46, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (28, N'XSC671767', N'123456', N'', N'', N'PUGAZH', N'', N'', N'', N'', N'', N'NA', N'', N'XSC671767', 0, N'XSC757437', N'XSC740234', 1, CAST(N'2020-07-12T09:06:00' AS SmallDateTime), 0, 18000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'PMLCHIDAMBARAM017@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T13:35:34.647' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 45, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (29, N'XSC168228', N'123456', N'', N'', N'KAVIKARTHIICK', N'', N'', N'', N'', N'', N'NA', N'', N'XSC168228', 0, N'XSC671767', N'XSC674648', 1, CAST(N'2020-07-12T11:56:00' AS SmallDateTime), 0, 18000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRRAMESH1971@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T16:26:27.243' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 44, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (30, N'XSC807414', N'123456', N'', N'', N'SKTHIRU', N'', N'', N'', N'', N'', N'NA', N'', N'XSC807414', 0, N'XSC168228', N'XSC674648', 5, CAST(N'2020-07-12T12:23:00' AS SmallDateTime), 1, 13500, 3000, 0, 0, 3000, 3000, 0, 0, 3000, 3000, 0, 0, 10500, 0, 240, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-05T12:34:21.660' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 40, 3, 0, 0, 0, NULL, CAST(N'2020-08-05T04:34:21.660' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (31, N'XSC185623', N'123456', N'', N'', N'GANESH', N'', N'', N'', N'', N'', N'NA', N'', N'XSC185623', 0, N'Xsc807414', N'XSC807414', 3, CAST(N'2020-07-12T12:30:00' AS SmallDateTime), 1, 9000, 3000, 0, 0, 3000, 3000, 0, 0, 3000, 3000, 0, 0, 6000, 0, 240, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-05T15:02:52.633' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 37, 2, 0, 0, 0, NULL, CAST(N'2020-08-05T07:02:52.637' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (32, N'XSC705108', N'123456', N'', N'', N'SKTHIRU1', N'', N'', N'', N'', N'', N'NA', N'', N'XSC705108', 1, N'Xsc807414', N'XSC807414', 0, CAST(N'2020-07-12T12:35:00' AS SmallDateTime), 0, 0, 3000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3000, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'TIRUFISH@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T17:04:58.380' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 2, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (33, N'XSC855626', N'123456', N'', N'', N'SKTHIRU2', N'', N'', N'', N'', N'', N'NA', N'', N'XSC855626', 0, N'Xsc185623', N'XSC185623', 0, CAST(N'2020-07-12T12:41:00' AS SmallDateTime), 1, 7500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7500, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'TIRUFISH@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T03:33:48.980' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 36, 0, 0, 0, 0, NULL, CAST(N'2020-08-19T19:33:48.980' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (34, N'XSC829875', N'123456', N'', N'', N'GANESH1', N'', N'', N'', N'', N'', N'NA', N'', N'XSC829875', 1, N'Xsc185623', N'XSC185623', 0, CAST(N'2020-07-12T12:43:00' AS SmallDateTime), 1, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-19T04:56:41.810' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 1, 0, 0, 0, NULL, CAST(N'2020-08-18T20:56:41.817' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (35, N'XSC855936', N'123456', N'', N'', N'GANESH2', N'', N'', N'', N'', N'', N'NA', N'', N'XSC855936', 0, N'XSC855626', N'XSC807414', 0, CAST(N'2020-07-12T12:45:00' AS SmallDateTime), 1, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-19T04:58:19.723' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 35, 0, 0, 0, 0, NULL, CAST(N'2020-08-18T20:58:19.723' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (36, N'XSC201881', N'123456', N'', N'', N'TULASIRAM', N'', N'', N'', N'', N'', N'NA', N'', N'XSC201881', 0, N'XSC855936', N'XSC674648', 2, CAST(N'2020-07-12T12:53:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T17:22:56.977' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 33, 1, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (37, N'XSC884237', N'123456', N'', N'', N'TULASIRAM1', N'', N'', N'', N'', N'', N'NA', N'', N'XSC884237', 0, N'Xsc201881', N'XSC201881', 0, CAST(N'2020-07-12T12:56:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T17:26:21.853' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 32, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (38, N'XSC755862', N'123456', N'', N'', N'TULASIRAM2', N'', N'', N'', N'', N'', N'NA', N'', N'XSC755862', 1, N'Xsc201881', N'XSC201881', 0, CAST(N'2020-07-12T12:59:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T17:28:32.880' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (39, N'XSC776128', N'123456', N'', N'', N'KBKANNAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC776128', 0, N'XSC884237', N'XSC674648', 2, CAST(N'2020-07-12T13:01:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T17:30:53.743' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 30, 1, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (40, N'XSC359954', N'123456', N'', N'', N'KBK', N'', N'', N'', N'', N'', N'NA', N'', N'XSC359954', 0, N'Xsc776128', N'XSC776128', 0, CAST(N'2020-07-12T13:03:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T17:33:10.707' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 29, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (41, N'XSC976492', N'123456', N'', N'', N'KBKN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC976492', 1, N'Xsc776128', N'XSC776128', 0, CAST(N'2020-07-12T13:05:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T17:35:05.390' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (42, N'XSC270254', N'123456', N'', N'', N'RAJIG', N'', N'', N'', N'', N'', N'NA', N'', N'XSC270254', 0, N'XSC359954', N'XSC719290', 0, CAST(N'2020-07-12T14:36:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'RAJIG1957@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:06:17.680' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 28, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (43, N'XSC206217', N'123456', N'', N'', N'ARUMUGAM', N'', N'', N'', N'', N'', N'NA', N'', N'XSC206217', 0, N'XSC270254', N'XSC674648', 0, CAST(N'2020-07-12T14:39:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:08:55.360' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 27, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (44, N'XSC960690', N'123456', N'', N'', N'CMKHARINI', N'', N'', N'', N'', N'', N'NA', N'', N'XSC960690', 0, N'XSC206217', N'XSC757437', 0, CAST(N'2020-07-12T14:50:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'KARTHIMONSANTO@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:19:53.873' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 26, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (45, N'XSC717828', N'123456', N'', N'', N'CPUGAZH', N'', N'', N'', N'', N'', N'NA', N'', N'XSC717828', 0, N'XSC960690', N'XSC671767', 0, CAST(N'2020-07-12T14:52:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'PMLCHIDAMBARAM017@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:22:26.703' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 25, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (46, N'XSC965322', N'123456', N'', N'', N'KARTHICK1', N'', N'', N'', N'', N'', N'NA', N'', N'XSC965322', 0, N'XSC717828', N'XSC168228', 0, CAST(N'2020-07-12T14:57:00' AS SmallDateTime), 0, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'KARTHIKTPT1611@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:26:41.080' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 24, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (47, N'XSC456568', N'123456', N'', N'', N'MDJ', N'', N'', N'', N'', N'', N'NA', N'', N'XSC456568', 0, N'XSC965322', N'XSC833745', 5, CAST(N'2020-07-12T15:14:00' AS SmallDateTime), 1, 1500, 3000, 0, 0, 1500, 1500, 0, 0, 1500, 1500, 0, 0, 0, 1500, 120, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRAKASH1971@YAHOO.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T12:09:36.840' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 1, 16, 7, 0, 0, 0, NULL, CAST(N'2020-08-20T04:09:36.840' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (48, N'XSC768052', N'123456', N'', N'', N'BALA', N'', N'', N'', N'', N'', N'NA', N'', N'XSC768052', 0, N'Xsc456568', N'XSC456568', 0, CAST(N'2020-07-12T15:19:00' AS SmallDateTime), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'MDJAYAVEL@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T12:11:32.000' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 15, 0, 0, 0, 0, NULL, CAST(N'2020-08-20T04:11:32.000' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (49, N'XSC444784', N'123456', N'', N'', N'BALA', N'', N'', N'', N'', N'', N'NA', N'', N'XSC444784', 0, N'XSC768052', N'XSC456568', 2, CAST(N'2020-07-12T15:19:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'MDJAYAVEL@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:49:12.170' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 14, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (50, N'XSC107124', N'123456', N'', N'', N'MANITV', N'', N'', N'', N'', N'', N'NA', N'', N'XSC107124', 0, N'XSC444784', N'XSC833745', 0, CAST(N'2020-07-12T15:23:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'VARADHANMANI01@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:53:24.173' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 13, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (51, N'XSC589790', N'123456', N'', N'', N'MANITV', N'', N'', N'', N'', N'', N'NA', N'', N'XSC589790', 0, N'XSC107124', N'XSC833745', 0, CAST(N'2020-07-12T15:23:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'VARADHANMANI01@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:53:29.303' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 12, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (52, N'XSC372418', N'123456', N'', N'', N'PTVARAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC372418', 0, N'XSC589790', N'XSC444784', 1, CAST(N'2020-07-12T15:28:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'VENKATESWARANPT1973@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:57:47.210' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 10, 1, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (53, N'XSC818700', N'123456', N'', N'', N'PTVARAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC818700', 0, N'XSC372418', N'XSC444784', 1, CAST(N'2020-07-12T15:28:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'VENKATESWARANPT1973@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T19:57:50.723' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 9, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (54, N'XSC903982', N'123456', N'', N'', N'SSHUF', N'', N'', N'', N'', N'', N'NA', N'', N'XSC903982', 0, N'Xsc818700', N'XSC818700', 3, CAST(N'2020-07-12T15:32:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SSIVASANKARAN100@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:01:58.217' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 6, 2, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (55, N'XSC743006', N'123456', N'', N'', N'JAI55', N'', N'', N'', N'', N'', N'NA', N'', N'XSC743006', 1, N'Xsc456568', N'XSC456568', 0, CAST(N'2020-07-12T15:45:00' AS SmallDateTime), 1, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'MDJAYAVEL@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T12:13:27.930' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 6, 0, 0, 0, NULL, CAST(N'2020-08-20T04:13:27.933' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (56, N'XSC789723', N'123456', N'', N'', N'KRC', N'', N'', N'', N'', N'', N'NA', N'', N'XSC789723', 1, N'XSC743006', N'XSC456568', 1, CAST(N'2020-07-12T15:49:00' AS SmallDateTime), 0, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'RAMACHANDIRANXSC@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:18:52.250' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 5, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (57, N'XSC188293', N'123456', N'', N'', N'DEVA', N'', N'', N'', N'', N'', N'NA', N'', N'XSC188293', 1, N'Xsc789723', N'XSC789723', 2, CAST(N'2020-07-12T15:52:00' AS SmallDateTime), 0, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'TAX4DEVA@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:21:59.713' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 2, 2, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (58, N'XSC476181', N'123456', N'', N'', N'TRN786', N'', N'', N'', N'', N'', N'NA', N'', N'XSC476181', 0, N'Xsc903982', N'XSC903982', 3, CAST(N'2020-07-12T16:04:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'NARASIMMAANATHAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:33:49.493' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 4, 1, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (59, N'XSC235504', N'123456', N'', N'', N'TRN3777', N'', N'', N'', N'', N'', N'NA', N'', N'XSC235504', 0, N'Xsc476181', N'XSC476181', 0, CAST(N'2020-07-12T16:12:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'NARASIMMAANATHAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:41:43.577' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 3, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (60, N'XSC861410', N'123456', N'', N'', N'CSM', N'', N'', N'', N'', N'', N'NA', N'', N'XSC861410', 0, N'XSC235504', N'XSC476181', 0, CAST(N'2020-07-12T16:16:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'CHINNUSUBRAMANIAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:46:05.227' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 2, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (61, N'XSC235906', N'123456', N'', N'', N'TRN9777', N'', N'', N'', N'', N'', N'NA', N'', N'XSC235906', 1, N'Xsc476181', N'XSC476181', 0, CAST(N'2020-07-12T16:19:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'NARASIMMAANATHAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:48:56.590' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (62, N'XSC112297', N'123456', N'', N'', N'SP65', N'', N'', N'', N'', N'', N'NA', N'', N'XSC112297', 0, N'XSC861410', N'XSC674648', 1, CAST(N'2020-07-12T16:23:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'NARASIMMAANATHAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:52:38.623' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 1, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (63, N'XSC516610', N'123456', N'', N'', N'TRS786', N'', N'', N'', N'', N'', N'NA', N'', N'XSC516610', 0, N'Xsc112297', N'XSC112297', 0, CAST(N'2020-07-12T16:25:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'NARASIMMAANATHAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-12T20:54:47.683' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (64, N'XSC114255', N'123456', N'', N'', N'GANESHMDJ', N'', N'', N'', N'', N'', N'NA', N'', N'XSC114255', 1, N'XSC188293', N'XSC456568', 1, CAST(N'2020-07-13T13:39:00' AS SmallDateTime), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'JAIGANESH.MICRO@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T12:15:52.343' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 1, 0, 0, 0, NULL, CAST(N'2020-08-20T04:15:52.347' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (65, N'XSC606123', N'123456', N'', N'', N'YOK', N'', N'', N'', N'', N'', N'NA', N'', N'XSC606123', 1, N'Xsc114255', N'XSC114255', 0, CAST(N'2020-07-13T13:43:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'YOK.GOD@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:12:57.357' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (66, N'XSC347156', N'123456', N'', N'', N'PTN49', N'', N'', N'', N'', N'', N'NA', N'', N'XSC347156', 1, N'Xsc372418', N'XSC372418', 0, CAST(N'2020-07-13T13:52:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'VENKATESWARANPT1973@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:22:14.790' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (67, N'XSC859220', N'123456', N'', N'', N'SSHUF222', N'', N'', N'', N'', N'', N'NA', N'', N'XSC859220', 1, N'Xsc903982', N'XSC903982', 0, CAST(N'2020-07-13T13:58:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SSIVASANKARAN100@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:27:33.797' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 1, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (68, N'XSC240240', N'123456', N'', N'', N'SSHUF222', N'', N'', N'', N'', N'', N'NA', N'', N'XSC240240', 1, N'XSC859220', N'XSC903982', 0, CAST(N'2020-07-13T13:58:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SSIVASANKARAN100@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:27:39.590' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (69, N'XSC823264', N'123456', N'', N'', N'KRISHNAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC823264', 1, N'Xsc141986', N'XSC141986', 0, CAST(N'2020-07-13T14:05:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'KRISH44465@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:35:05.830' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 6, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (70, N'XSC265535', N'123456', N'', N'', N'KRISHNAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC265535', 1, N'XSC823264', N'XSC141986', 2, CAST(N'2020-07-13T14:05:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'KRISH44465@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:35:09.843' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 1, 4, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (71, N'XSC247129', N'123456', N'', N'', N'KRISH222', N'', N'', N'', N'', N'', N'NA', N'', N'XSC247129', 0, N'Xsc265535', N'XSC265535', 0, CAST(N'2020-07-13T14:08:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'KRISH44465@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:37:45.190' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (72, N'XSC286409', N'123456', N'', N'', N'DHANA', N'', N'', N'', N'', N'', N'NA', N'', N'XSC286409', 1, N'Xsc265535', N'XSC265535', 3, CAST(N'2020-07-13T14:15:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'CDHANASEKARANTATA@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:44:50.333' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 3, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (73, N'XSC483495', N'123456', N'', N'', N'DHANA2', N'', N'', N'', N'', N'', N'NA', N'', N'XSC483495', 0, N'Xsc286409', N'XSC286409', 0, CAST(N'2020-07-13T14:21:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'CDHANASEKARANTATA@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:50:52.550' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 2, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (74, N'XSC395103', N'123456', N'', N'', N'DHANA3', N'', N'', N'', N'', N'', N'NA', N'', N'XSC395103', 0, N'XSC483495', N'XSC286409', 0, CAST(N'2020-07-13T14:23:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'CDHANASEKARANTATA@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:53:01.270' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 1, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (75, N'XSC540235', N'123456', N'', N'', N'LGK', N'', N'', N'', N'', N'', N'NA', N'', N'XSC540235', 0, N'XSC395103', N'XSC286409', 0, CAST(N'2020-07-13T14:27:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'KESAVANLG@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T18:57:08.473' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (76, N'XSC668064', N'123456', N'', N'', N'SATHYA', N'', N'', N'', N'', N'', N'NA', N'', N'XSC668064', 0, N'Xsc141986', N'XSC141986', 0, CAST(N'2020-07-13T14:32:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'GOUTHAMVIGNESH1@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-13T19:02:21.643' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 2, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (77, N'XSC863453', N'123456', N'', N'', N'SBUNIRMAL', N'', N'', N'', N'', N'', N'NA', N'', N'XSC863453', 0, N'XSC668064', N'XSC141986', 0, CAST(N'2020-07-14T11:57:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SBUNIRMALA123@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-14T16:27:22.443' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 1, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (78, N'XSC704599', N'123456', N'', N'', N'BABU', N'', N'', N'', N'', N'', N'NA', N'', N'XSC704599', 0, N'XSC863453', N'XSC141986', 0, CAST(N'2020-07-14T17:54:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPRRAMESH1971@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-14T22:24:22.333' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (79, N'XSC565630', N'123456', N'', N'', N'SUGU', N'', N'', N'', N'', N'', N'NA', N'', N'XSC565630', 0, N'Xsc188293', N'XSC188293', 0, CAST(N'2020-07-18T10:53:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-18T15:23:01.777' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 1, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (80, N'XSC716399', N'123456', N'', N'', N'SUGU', N'', N'', N'', N'', N'', N'NA', N'', N'XSC716399', 0, N'XSC565630', N'XSC188293', 0, CAST(N'2020-07-18T10:53:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-07-18T15:23:04.800' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (81, N'XSC241477', N'123456', N'', N'', N'V V VENKATESAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC241477', 1, N'XSC652087', N'XSC652087', 0, CAST(N'2020-08-05T11:09:00' AS SmallDateTime), 0, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'CVVENKATESHBALAJI@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-08-05T15:39:08.197' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 2, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (82, N'XSC276257', N'123456', N'', N'', N'E SANKARAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC276257', 1, N'XSC241477', N'XSC961601', 0, CAST(N'2020-08-05T11:39:00' AS SmallDateTime), 0, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'INTSANKARAN1@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-08-05T16:09:10.933' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 1, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (83, N'XSC476389', N'123456', N'', N'', N'E SANKARAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC476389', 1, N'XSC276257', N'XSC961601', 0, CAST(N'2020-08-05T11:46:00' AS SmallDateTime), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'INTSANKARAN1@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T04:34:32.223' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 1, 0, 0, 0, 0, 0, NULL, CAST(N'2020-08-19T20:34:32.227' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (84, N'XSC219974', N'448860', N'', N'', N'THIRUCHANDIRAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC219974', 1, N'XSC705108', N'XSC807414', 0, CAST(N'2020-08-18T13:38:00' AS SmallDateTime), 1, 0, 1500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'TIRUFISH@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T03:48:39.397' AS DateTime), N'0', N'0', N'0', N'0', 0, N'448860', N'192.168.3.3', 0, N'0', 0, 0, 1, 0, 0, 0, NULL, CAST(N'2020-08-19T19:48:39.400' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (85, N'XSC614939', N'448860', N'', N'', N'SKTDHARANEESH', N'', N'', N'', N'', N'', N'NA', N'', N'XSC614939', 1, N'XSC219974', N'XSC807414', 0, CAST(N'2020-08-18T13:48:00' AS SmallDateTime), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'TIRUFISH@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T03:51:56.957' AS DateTime), N'0', N'0', N'0', N'0', 0, N'448860', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, CAST(N'2020-08-19T19:51:56.957' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (86, N'XSC939645', N'123456', N'', N'', N'YESWANTH', N'', N'', N'', N'', N'', N'NA', N'', N'XSC939645', 1, N'XSC829875', N'XSC185623', 0, CAST(N'2020-08-20T09:48:00' AS SmallDateTime), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 1500, 1500, N'1', 1, CAST(N'2020-08-20T17:41:57.680' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, CAST(N'2020-08-20T09:41:57.680' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 1500, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (87, N'XSC976624', N'123456', N'', N'', N'ARUMUGASAMY', N'', N'', N'', N'', N'', N'NA', N'', N'XSC976624', 1, N'XSC625379', N'XSC282635', 0, CAST(N'2020-08-31T08:45:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'ARUMUGAWS@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-08-31T13:15:23.903' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 7, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (88, N'XSC252130', N'123456', N'', N'', N'SPMANIKANDAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC252130', 1, N'XSC976624', N'XSC282635', 0, CAST(N'2020-08-31T08:57:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SPMSPM1968@MAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-08-31T13:26:36.130' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 6, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (89, N'XSC147222', N'123456', N'', N'', N'SURESHBABU', N'', N'', N'', N'', N'', N'NA', N'', N'XSC147222', 1, N'XSC252130', N'XSC625379', 3, CAST(N'2020-09-01T18:38:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SBUNIRMALA123@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-09-01T23:07:53.330' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 5, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (90, N'XSC688696', N'123456', N'', N'', N'HEMAVATHY', N'', N'', N'', N'', N'', N'NA', N'', N'XSC688696', 1, N'XSC147222', N'XSC625379', 0, CAST(N'2020-09-01T18:43:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'SBUNIRMALA123@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-09-01T23:12:46.217' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 4, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (91, N'XSC956267', N'123456', N'', N'', N'JAYANTHI', N'', N'', N'', N'', N'', N'NA', N'', N'XSC956267', 1, N'XSC688696', N'XSC625379', 0, CAST(N'2020-09-01T18:46:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'JAYAJAYAPAVI@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-09-01T23:16:02.483' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 3, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (92, N'XSC746088', N'123456', N'', N'', N'ARUMUGASAMY', N'', N'', N'', N'', N'', N'NA', N'', N'XSC746088', 1, N'XSC956267', N'XSC147222', 0, CAST(N'2020-09-09T12:29:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'ARUMUGAWS@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-09-09T16:59:21.117' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 2, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (93, N'XSC803302', N'123456', N'', N'', N'SATHYAM', N'', N'', N'', N'', N'', N'NA', N'', N'XSC803302', 1, N'XSC746088', N'XSC147222', 0, CAST(N'2020-09-09T12:49:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'GOUTHAMVIGNESH1@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-09-09T17:18:42.823' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 1, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
INSERT [dbo].[AppMst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (94, N'XSC657283', N'123456', N'', N'', N'KRISHNAN', N'', N'', N'', N'', N'', N'NA', N'', N'XSC657283', 1, N'XSC803302', N'XSC147222', 0, CAST(N'2020-09-09T12:53:00' AS SmallDateTime), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'NA', N'NA', N'NA', N'NA', N'NA', N'NA', N'India', N'JAYAJAYAPAVI@GMAIL.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-09-09T17:22:54.797' AS DateTime), N'0', N'0', N'0', N'0', 0, N'123456', N'192.168.3.3', 0, N'0', 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
SET IDENTITY_INSERT [dbo].[AppTran] ON 
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1, 1, 2, 0, CAST(N'2020-07-11T22:23:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2, 2, 3, 0, CAST(N'2020-07-11T22:25:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (3, 1, 3, 0, CAST(N'2020-07-11T22:25:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (4, 3, 4, 0, CAST(N'2020-07-11T22:27:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (5, 2, 4, 0, CAST(N'2020-07-11T22:27:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (6, 1, 4, 0, CAST(N'2020-07-11T22:27:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (7, 4, 5, 0, CAST(N'2020-07-11T22:30:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (8, 3, 5, 0, CAST(N'2020-07-11T22:30:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (9, 2, 5, 0, CAST(N'2020-07-11T22:30:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (10, 1, 5, 0, CAST(N'2020-07-11T22:30:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (11, 5, 6, 0, CAST(N'2020-07-11T22:31:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (12, 4, 6, 0, CAST(N'2020-07-11T22:31:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (13, 3, 6, 0, CAST(N'2020-07-11T22:31:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (14, 2, 6, 0, CAST(N'2020-07-11T22:31:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (15, 1, 6, 0, CAST(N'2020-07-11T22:31:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (16, 6, 7, 0, CAST(N'2020-07-11T22:33:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (17, 5, 7, 0, CAST(N'2020-07-11T22:33:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (18, 4, 7, 0, CAST(N'2020-07-11T22:33:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (19, 3, 7, 0, CAST(N'2020-07-11T22:33:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (20, 2, 7, 0, CAST(N'2020-07-11T22:33:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (21, 1, 7, 0, CAST(N'2020-07-11T22:33:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (22, 7, 8, 0, CAST(N'2020-07-11T22:34:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (23, 6, 8, 0, CAST(N'2020-07-11T22:34:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (24, 5, 8, 0, CAST(N'2020-07-11T22:34:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (25, 4, 8, 0, CAST(N'2020-07-11T22:34:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (26, 3, 8, 0, CAST(N'2020-07-11T22:34:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (27, 2, 8, 0, CAST(N'2020-07-11T22:34:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (28, 1, 8, 0, CAST(N'2020-07-11T22:34:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (29, 8, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (30, 7, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (31, 6, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (32, 5, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (33, 4, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (34, 3, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (35, 2, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (36, 1, 9, 0, CAST(N'2020-07-11T22:37:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (37, 9, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (38, 8, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (39, 7, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (40, 6, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (41, 5, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (42, 4, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (43, 3, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (44, 2, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (45, 1, 10, 0, CAST(N'2020-07-11T22:38:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (46, 10, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (47, 9, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (48, 8, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (49, 7, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (50, 6, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (51, 5, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (52, 4, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (53, 3, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (54, 2, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (55, 1, 11, 0, CAST(N'2020-07-11T22:40:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (56, 11, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (57, 10, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (58, 9, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (59, 8, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (60, 7, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (61, 6, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (62, 5, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (63, 4, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (64, 3, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (65, 2, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (66, 1, 12, 0, CAST(N'2020-07-11T22:42:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (67, 12, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (68, 11, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (69, 10, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (70, 9, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (71, 8, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (72, 7, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (73, 6, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (74, 5, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (75, 4, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (76, 3, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (77, 2, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (78, 1, 13, 0, CAST(N'2020-07-11T22:51:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (79, 13, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (80, 12, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (81, 11, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (82, 10, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (83, 9, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (84, 8, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (85, 7, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (86, 6, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (87, 5, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (88, 4, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (89, 3, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (90, 2, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (91, 1, 14, 0, CAST(N'2020-07-11T23:21:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (92, 13, 15, 1, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (93, 12, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (94, 11, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (95, 10, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (96, 9, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (97, 8, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (98, 7, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (99, 6, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (100, 5, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (101, 4, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (102, 3, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (103, 2, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (104, 1, 15, 0, CAST(N'2020-07-11T23:28:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (105, 14, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (106, 13, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (107, 12, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (108, 11, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (109, 10, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (110, 9, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (111, 8, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (112, 7, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (113, 6, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (114, 5, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (115, 4, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (116, 3, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (117, 2, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (118, 1, 16, 0, CAST(N'2020-07-11T23:33:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (119, 14, 17, 1, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (120, 13, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (121, 12, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (122, 11, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (123, 10, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (124, 9, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (125, 8, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (126, 7, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (127, 6, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (128, 5, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (129, 4, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (130, 3, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (131, 2, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (132, 1, 17, 0, CAST(N'2020-07-11T23:35:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (133, 15, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (134, 13, 18, 1, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (135, 12, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (136, 11, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (137, 10, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (138, 9, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (139, 8, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (140, 7, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (141, 6, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (142, 5, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (143, 4, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (144, 3, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (145, 2, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (146, 1, 18, 0, CAST(N'2020-07-11T23:38:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (147, 15, 19, 1, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (148, 13, 19, 1, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (149, 12, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (150, 11, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (151, 10, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (152, 9, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (153, 8, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (154, 7, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (155, 6, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (156, 5, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (157, 4, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (158, 3, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (159, 2, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (160, 1, 19, 0, CAST(N'2020-07-11T23:45:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (161, 16, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (162, 14, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (163, 13, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (164, 12, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (165, 11, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (166, 10, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (167, 9, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (168, 8, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (169, 7, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (170, 6, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (171, 5, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (172, 4, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (173, 3, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (174, 2, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (175, 1, 20, 0, CAST(N'2020-07-12T09:19:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (176, 20, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (177, 16, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (178, 14, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (179, 13, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (180, 12, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (181, 11, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (182, 10, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (183, 9, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (184, 8, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (185, 7, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (186, 6, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (187, 5, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (188, 4, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (189, 3, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (190, 2, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (191, 1, 21, 0, CAST(N'2020-07-12T10:43:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (192, 21, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (193, 20, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (194, 16, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (195, 14, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (196, 13, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (197, 12, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (198, 11, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (199, 10, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (200, 9, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (201, 8, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (202, 7, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (203, 6, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (204, 5, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (205, 4, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (206, 3, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (207, 2, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (208, 1, 22, 0, CAST(N'2020-07-12T10:45:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (209, 22, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (210, 21, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (211, 20, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (212, 16, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (213, 14, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (214, 13, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (215, 12, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (216, 11, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (217, 10, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (218, 9, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (219, 8, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (220, 7, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (221, 6, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (222, 5, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (223, 4, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (224, 3, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (225, 2, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (226, 1, 23, 0, CAST(N'2020-07-12T10:58:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (227, 23, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (228, 22, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (229, 21, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (230, 20, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (231, 16, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (232, 14, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (233, 13, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (234, 12, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (235, 11, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (236, 10, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (237, 9, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (238, 8, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (239, 7, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (240, 6, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (241, 5, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (242, 4, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (243, 3, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (244, 2, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (245, 1, 24, 0, CAST(N'2020-07-12T11:26:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (246, 23, 25, 1, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (247, 22, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (248, 21, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (249, 20, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (250, 16, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (251, 14, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (252, 13, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (253, 12, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (254, 11, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (255, 10, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (256, 9, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (257, 8, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (258, 7, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (259, 6, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (260, 5, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (261, 4, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (262, 3, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (263, 2, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (264, 1, 25, 0, CAST(N'2020-07-12T11:28:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (265, 24, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (266, 23, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (267, 22, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (268, 21, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (269, 20, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (270, 16, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (271, 14, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (272, 13, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (273, 12, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (274, 11, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (275, 10, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (276, 9, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (277, 8, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (278, 7, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (279, 6, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (280, 5, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (281, 4, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (282, 3, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (283, 2, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (284, 1, 26, 0, CAST(N'2020-07-12T11:31:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (285, 26, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (286, 24, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (287, 23, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (288, 22, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (289, 21, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (290, 20, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (291, 16, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (292, 14, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (293, 13, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (294, 12, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (295, 11, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (296, 10, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (297, 9, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (298, 8, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (299, 7, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (300, 6, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (301, 5, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (302, 4, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (303, 3, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (304, 2, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (305, 1, 27, 0, CAST(N'2020-07-12T11:43:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (306, 27, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (307, 26, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (308, 24, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (309, 23, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (310, 22, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (311, 21, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (312, 20, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (313, 16, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (314, 14, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (315, 13, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (316, 12, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (317, 11, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (318, 10, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (319, 9, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (320, 8, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (321, 7, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (322, 6, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (323, 5, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (324, 4, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (325, 3, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (326, 2, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (327, 1, 28, 0, CAST(N'2020-07-12T13:36:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (328, 28, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (329, 27, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (330, 26, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (331, 24, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (332, 23, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (333, 22, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (334, 21, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (335, 20, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (336, 16, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (337, 14, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (338, 13, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (339, 12, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (340, 11, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (341, 10, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (342, 9, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (343, 8, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (344, 7, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (345, 6, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (346, 5, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (347, 4, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (348, 3, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (349, 2, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (350, 1, 29, 0, CAST(N'2020-07-12T16:26:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (351, 29, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (352, 28, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (353, 27, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (354, 26, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (355, 24, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (356, 23, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (357, 22, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (358, 21, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (359, 20, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (360, 16, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (361, 14, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (362, 13, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (363, 12, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (364, 11, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (365, 10, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (366, 9, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (367, 8, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (368, 7, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (369, 6, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (370, 5, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (371, 4, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (372, 3, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (373, 2, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (374, 1, 30, 0, CAST(N'2020-07-12T16:53:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (375, 30, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (376, 29, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (377, 28, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (378, 27, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (379, 26, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (380, 24, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (381, 23, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (382, 22, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (383, 21, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (384, 20, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (385, 16, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (386, 14, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (387, 13, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (388, 12, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (389, 11, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (390, 10, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (391, 9, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (392, 8, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (393, 7, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (394, 6, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (395, 5, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (396, 4, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (397, 3, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (398, 2, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (399, 1, 31, 0, CAST(N'2020-07-12T17:00:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (400, 30, 32, 1, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (401, 29, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (402, 28, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (403, 27, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (404, 26, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (405, 24, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (406, 23, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (407, 22, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (408, 21, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (409, 20, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (410, 16, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (411, 14, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (412, 13, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (413, 12, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (414, 11, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (415, 10, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (416, 9, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (417, 8, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (418, 7, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (419, 6, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (420, 5, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (421, 4, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (422, 3, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (423, 2, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (424, 1, 32, 0, CAST(N'2020-07-12T17:05:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (425, 31, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (426, 30, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (427, 29, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (428, 28, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (429, 27, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (430, 26, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (431, 24, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (432, 23, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (433, 22, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (434, 21, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (435, 20, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (436, 16, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (437, 14, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (438, 13, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (439, 12, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (440, 11, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (441, 10, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (442, 9, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (443, 8, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (444, 7, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (445, 6, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (446, 5, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (447, 4, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (448, 3, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (449, 2, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (450, 1, 33, 0, CAST(N'2020-07-12T17:11:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (451, 31, 34, 1, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (452, 30, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (453, 29, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (454, 28, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (455, 27, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (456, 26, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (457, 24, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (458, 23, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (459, 22, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (460, 21, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (461, 20, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (462, 16, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (463, 14, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (464, 13, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (465, 12, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (466, 11, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (467, 10, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (468, 9, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (469, 8, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (470, 7, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (471, 6, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (472, 5, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (473, 4, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (474, 3, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (475, 2, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (476, 1, 34, 0, CAST(N'2020-07-12T17:13:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (477, 33, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (478, 31, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (479, 30, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (480, 29, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (481, 28, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (482, 27, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (483, 26, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (484, 24, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (485, 23, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (486, 22, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (487, 21, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (488, 20, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (489, 16, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (490, 14, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (491, 13, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (492, 12, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (493, 11, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (494, 10, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (495, 9, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (496, 8, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (497, 7, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (498, 6, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (499, 5, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (500, 4, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (501, 3, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (502, 2, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (503, 1, 35, 0, CAST(N'2020-07-12T17:15:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (504, 35, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (505, 33, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (506, 31, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (507, 30, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (508, 29, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (509, 28, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (510, 27, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (511, 26, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (512, 24, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (513, 23, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (514, 22, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (515, 21, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (516, 20, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (517, 16, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (518, 14, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (519, 13, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (520, 12, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (521, 11, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (522, 10, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (523, 9, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (524, 8, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (525, 7, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (526, 6, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (527, 5, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (528, 4, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (529, 3, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (530, 2, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (531, 1, 36, 0, CAST(N'2020-07-12T17:23:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (532, 36, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (533, 35, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (534, 33, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (535, 31, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (536, 30, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (537, 29, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (538, 28, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (539, 27, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (540, 26, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (541, 24, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (542, 23, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (543, 22, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (544, 21, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (545, 20, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (546, 16, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (547, 14, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (548, 13, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (549, 12, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (550, 11, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (551, 10, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (552, 9, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (553, 8, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (554, 7, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (555, 6, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (556, 5, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (557, 4, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (558, 3, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (559, 2, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (560, 1, 37, 0, CAST(N'2020-07-12T17:26:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (561, 36, 38, 1, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (562, 35, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (563, 33, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (564, 31, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (565, 30, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (566, 29, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (567, 28, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (568, 27, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (569, 26, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (570, 24, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (571, 23, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (572, 22, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (573, 21, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (574, 20, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (575, 16, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (576, 14, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (577, 13, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (578, 12, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (579, 11, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (580, 10, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (581, 9, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (582, 8, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (583, 7, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (584, 6, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (585, 5, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (586, 4, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (587, 3, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (588, 2, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (589, 1, 38, 0, CAST(N'2020-07-12T17:29:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (590, 37, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (591, 36, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (592, 35, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (593, 33, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (594, 31, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (595, 30, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (596, 29, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (597, 28, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (598, 27, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (599, 26, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (600, 24, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (601, 23, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (602, 22, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (603, 21, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (604, 20, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (605, 16, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (606, 14, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (607, 13, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (608, 12, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (609, 11, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (610, 10, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (611, 9, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (612, 8, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (613, 7, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (614, 6, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (615, 5, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (616, 4, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (617, 3, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (618, 2, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (619, 1, 39, 0, CAST(N'2020-07-12T17:31:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (620, 39, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (621, 37, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (622, 36, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (623, 35, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (624, 33, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (625, 31, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (626, 30, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (627, 29, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (628, 28, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (629, 27, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (630, 26, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (631, 24, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (632, 23, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (633, 22, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (634, 21, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (635, 20, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (636, 16, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (637, 14, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (638, 13, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (639, 12, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (640, 11, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (641, 10, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (642, 9, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (643, 8, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (644, 7, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (645, 6, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (646, 5, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (647, 4, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (648, 3, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (649, 2, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (650, 1, 40, 0, CAST(N'2020-07-12T17:33:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (651, 39, 41, 1, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (652, 37, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (653, 36, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (654, 35, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (655, 33, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (656, 31, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (657, 30, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (658, 29, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (659, 28, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (660, 27, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (661, 26, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (662, 24, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (663, 23, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (664, 22, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (665, 21, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (666, 20, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (667, 16, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (668, 14, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (669, 13, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (670, 12, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (671, 11, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (672, 10, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (673, 9, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (674, 8, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (675, 7, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (676, 6, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (677, 5, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (678, 4, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (679, 3, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (680, 2, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (681, 1, 41, 0, CAST(N'2020-07-12T17:35:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (682, 40, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (683, 39, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (684, 37, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (685, 36, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (686, 35, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (687, 33, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (688, 31, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (689, 30, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (690, 29, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (691, 28, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (692, 27, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (693, 26, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (694, 24, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (695, 23, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (696, 22, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (697, 21, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (698, 20, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (699, 16, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (700, 14, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (701, 13, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (702, 12, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (703, 11, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (704, 10, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (705, 9, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (706, 8, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (707, 7, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (708, 6, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (709, 5, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (710, 4, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (711, 3, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (712, 2, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (713, 1, 42, 0, CAST(N'2020-07-12T19:06:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (714, 42, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (715, 40, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (716, 39, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (717, 37, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (718, 36, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (719, 35, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (720, 33, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (721, 31, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (722, 30, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (723, 29, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (724, 28, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (725, 27, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (726, 26, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (727, 24, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (728, 23, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (729, 22, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (730, 21, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (731, 20, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (732, 16, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (733, 14, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (734, 13, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (735, 12, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (736, 11, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (737, 10, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (738, 9, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (739, 8, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (740, 7, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (741, 6, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (742, 5, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (743, 4, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (744, 3, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (745, 2, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (746, 1, 43, 0, CAST(N'2020-07-12T19:09:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (747, 43, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (748, 42, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (749, 40, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (750, 39, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (751, 37, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (752, 36, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (753, 35, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (754, 33, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (755, 31, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (756, 30, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (757, 29, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (758, 28, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (759, 27, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (760, 26, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (761, 24, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (762, 23, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (763, 22, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (764, 21, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (765, 20, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (766, 16, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (767, 14, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (768, 13, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (769, 12, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (770, 11, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (771, 10, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (772, 9, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (773, 8, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (774, 7, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (775, 6, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (776, 5, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (777, 4, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (778, 3, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (779, 2, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (780, 1, 44, 0, CAST(N'2020-07-12T19:20:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (781, 44, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (782, 43, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (783, 42, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (784, 40, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (785, 39, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (786, 37, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (787, 36, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (788, 35, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (789, 33, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (790, 31, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (791, 30, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (792, 29, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (793, 28, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (794, 27, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (795, 26, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (796, 24, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (797, 23, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (798, 22, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (799, 21, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (800, 20, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (801, 16, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (802, 14, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (803, 13, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (804, 12, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (805, 11, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (806, 10, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (807, 9, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (808, 8, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (809, 7, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (810, 6, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (811, 5, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (812, 4, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (813, 3, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (814, 2, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (815, 1, 45, 0, CAST(N'2020-07-12T19:22:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (816, 45, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (817, 44, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (818, 43, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (819, 42, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (820, 40, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (821, 39, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (822, 37, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (823, 36, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (824, 35, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (825, 33, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (826, 31, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (827, 30, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (828, 29, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (829, 28, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (830, 27, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (831, 26, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (832, 24, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (833, 23, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (834, 22, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (835, 21, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (836, 20, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (837, 16, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (838, 14, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (839, 13, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (840, 12, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (841, 11, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (842, 10, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (843, 9, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (844, 8, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (845, 7, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (846, 6, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (847, 5, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (848, 4, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (849, 3, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (850, 2, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (851, 1, 46, 0, CAST(N'2020-07-12T19:27:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (852, 46, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (853, 45, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (854, 44, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (855, 43, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (856, 42, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (857, 40, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (858, 39, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (859, 37, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (860, 36, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (861, 35, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (862, 33, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (863, 31, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (864, 30, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (865, 29, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (866, 28, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (867, 27, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (868, 26, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (869, 24, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (870, 23, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (871, 22, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (872, 21, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (873, 20, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (874, 16, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (875, 14, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (876, 13, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (877, 12, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (878, 11, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (879, 10, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (880, 9, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (881, 8, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (882, 7, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (883, 6, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (884, 5, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (885, 4, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (886, 3, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (887, 2, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (888, 1, 47, 0, CAST(N'2020-07-12T19:44:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (889, 47, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (890, 46, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (891, 45, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (892, 44, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (893, 43, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (894, 42, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (895, 40, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (896, 39, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (897, 37, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (898, 36, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (899, 35, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (900, 33, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (901, 31, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (902, 30, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (903, 29, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (904, 28, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (905, 27, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (906, 26, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (907, 24, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (908, 23, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (909, 22, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (910, 21, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (911, 20, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (912, 16, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (913, 14, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (914, 13, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (915, 12, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (916, 11, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (917, 10, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (918, 9, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (919, 8, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (920, 7, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (921, 6, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (922, 5, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (923, 4, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (924, 3, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (925, 2, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (926, 1, 48, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (927, 48, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (928, 47, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (929, 46, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (930, 45, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (931, 44, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (932, 43, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (933, 42, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (934, 40, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (935, 39, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (936, 37, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (937, 36, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (938, 35, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (939, 33, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (940, 31, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (941, 30, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (942, 29, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (943, 28, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (944, 27, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (945, 26, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (946, 24, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (947, 23, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (948, 22, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (949, 21, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (950, 20, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (951, 16, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (952, 14, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (953, 13, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (954, 12, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (955, 11, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (956, 10, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (957, 9, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (958, 8, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (959, 7, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (960, 6, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (961, 5, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (962, 4, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (963, 3, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (964, 2, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (965, 1, 49, 0, CAST(N'2020-07-12T19:49:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (966, 49, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (967, 48, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (968, 47, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (969, 46, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (970, 45, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (971, 44, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (972, 43, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (973, 42, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (974, 40, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (975, 39, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (976, 37, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (977, 36, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (978, 35, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (979, 33, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (980, 31, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (981, 30, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (982, 29, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (983, 28, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (984, 27, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (985, 26, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (986, 24, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (987, 23, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (988, 22, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (989, 21, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (990, 20, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (991, 16, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (992, 14, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (993, 13, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (994, 12, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (995, 11, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (996, 10, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (997, 9, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (998, 8, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (999, 7, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1000, 6, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1001, 5, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1002, 4, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1003, 3, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1004, 2, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1005, 1, 50, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1006, 50, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1007, 49, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1008, 48, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1009, 47, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1010, 46, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1011, 45, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1012, 44, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1013, 43, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1014, 42, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1015, 40, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1016, 39, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1017, 37, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1018, 36, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1019, 35, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1020, 33, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1021, 31, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1022, 30, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1023, 29, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1024, 28, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1025, 27, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1026, 26, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1027, 24, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1028, 23, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1029, 22, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1030, 21, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1031, 20, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1032, 16, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1033, 14, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1034, 13, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1035, 12, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1036, 11, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1037, 10, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1038, 9, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1039, 8, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1040, 7, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1041, 6, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1042, 5, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1043, 4, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1044, 3, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1045, 2, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1046, 1, 51, 0, CAST(N'2020-07-12T19:53:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1047, 51, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1048, 50, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1049, 49, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1050, 48, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1051, 47, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1052, 46, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1053, 45, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1054, 44, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1055, 43, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1056, 42, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1057, 40, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1058, 39, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1059, 37, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1060, 36, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1061, 35, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1062, 33, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1063, 31, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1064, 30, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1065, 29, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1066, 28, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1067, 27, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1068, 26, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1069, 24, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1070, 23, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1071, 22, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1072, 21, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1073, 20, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1074, 16, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1075, 14, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1076, 13, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1077, 12, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1078, 11, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1079, 10, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1080, 9, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1081, 8, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1082, 7, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1083, 6, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1084, 5, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1085, 4, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1086, 3, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1087, 2, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1088, 1, 52, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1089, 52, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1090, 51, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1091, 50, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1092, 49, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1093, 48, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1094, 47, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1095, 46, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1096, 45, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1097, 44, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1098, 43, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1099, 42, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1100, 40, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1101, 39, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1102, 37, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1103, 36, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1104, 35, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1105, 33, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1106, 31, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1107, 30, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1108, 29, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1109, 28, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1110, 27, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1111, 26, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1112, 24, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1113, 23, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1114, 22, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1115, 21, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1116, 20, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1117, 16, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1118, 14, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1119, 13, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1120, 12, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1121, 11, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1122, 10, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1123, 9, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1124, 8, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1125, 7, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1126, 6, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1127, 5, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1128, 4, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1129, 3, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1130, 2, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1131, 1, 53, 0, CAST(N'2020-07-12T19:58:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1132, 53, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1133, 52, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1134, 51, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1135, 50, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1136, 49, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1137, 48, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1138, 47, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1139, 46, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1140, 45, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1141, 44, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1142, 43, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1143, 42, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1144, 40, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1145, 39, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1146, 37, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1147, 36, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1148, 35, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1149, 33, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1150, 31, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1151, 30, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1152, 29, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1153, 28, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1154, 27, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1155, 26, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1156, 24, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1157, 23, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1158, 22, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1159, 21, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1160, 20, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1161, 16, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1162, 14, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1163, 13, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1164, 12, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1165, 11, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1166, 10, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1167, 9, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1168, 8, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1169, 7, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1170, 6, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1171, 5, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1172, 4, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1173, 3, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1174, 2, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1175, 1, 54, 0, CAST(N'2020-07-12T20:02:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1176, 47, 55, 1, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1177, 46, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1178, 45, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1179, 44, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1180, 43, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1181, 42, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1182, 40, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1183, 39, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1184, 37, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1185, 36, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1186, 35, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1187, 33, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1188, 31, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1189, 30, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1190, 29, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1191, 28, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1192, 27, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1193, 26, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1194, 24, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1195, 23, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1196, 22, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1197, 21, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1198, 20, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1199, 16, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1200, 14, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1201, 13, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1202, 12, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1203, 11, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1204, 10, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1205, 9, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1206, 8, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1207, 7, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1208, 6, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1209, 5, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1210, 4, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1211, 3, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1212, 2, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1213, 1, 55, 0, CAST(N'2020-07-12T20:15:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1214, 55, 56, 1, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1215, 47, 56, 1, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1216, 46, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1217, 45, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1218, 44, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1219, 43, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1220, 42, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1221, 40, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1222, 39, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1223, 37, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1224, 36, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1225, 35, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1226, 33, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1227, 31, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1228, 30, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1229, 29, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1230, 28, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1231, 27, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1232, 26, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1233, 24, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1234, 23, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1235, 22, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1236, 21, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1237, 20, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1238, 16, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1239, 14, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1240, 13, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1241, 12, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1242, 11, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1243, 10, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1244, 9, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1245, 8, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1246, 7, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1247, 6, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1248, 5, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1249, 4, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1250, 3, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1251, 2, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1252, 1, 56, 0, CAST(N'2020-07-12T20:19:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1253, 56, 57, 1, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1254, 55, 57, 1, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1255, 47, 57, 1, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1256, 46, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1257, 45, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1258, 44, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1259, 43, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1260, 42, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1261, 40, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1262, 39, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1263, 37, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1264, 36, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1265, 35, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1266, 33, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1267, 31, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1268, 30, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1269, 29, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1270, 28, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1271, 27, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1272, 26, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1273, 24, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1274, 23, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1275, 22, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1276, 21, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1277, 20, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1278, 16, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1279, 14, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1280, 13, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1281, 12, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1282, 11, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1283, 10, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1284, 9, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1285, 8, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1286, 7, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1287, 6, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1288, 5, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1289, 4, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1290, 3, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1291, 2, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1292, 1, 57, 0, CAST(N'2020-07-12T20:22:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1293, 54, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1294, 53, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1295, 52, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1296, 51, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1297, 50, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1298, 49, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1299, 48, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1300, 47, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1301, 46, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1302, 45, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1303, 44, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1304, 43, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1305, 42, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1306, 40, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1307, 39, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1308, 37, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1309, 36, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1310, 35, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1311, 33, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1312, 31, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1313, 30, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1314, 29, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1315, 28, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1316, 27, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1317, 26, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1318, 24, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1319, 23, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1320, 22, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1321, 21, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1322, 20, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1323, 16, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1324, 14, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1325, 13, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1326, 12, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1327, 11, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1328, 10, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1329, 9, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1330, 8, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1331, 7, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1332, 6, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1333, 5, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1334, 4, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1335, 3, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1336, 2, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1337, 1, 58, 0, CAST(N'2020-07-12T20:34:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1338, 58, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1339, 54, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1340, 53, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1341, 52, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1342, 51, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1343, 50, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1344, 49, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1345, 48, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1346, 47, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1347, 46, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1348, 45, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1349, 44, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1350, 43, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1351, 42, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1352, 40, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1353, 39, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1354, 37, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1355, 36, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1356, 35, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1357, 33, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1358, 31, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1359, 30, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1360, 29, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1361, 28, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1362, 27, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1363, 26, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1364, 24, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1365, 23, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1366, 22, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1367, 21, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1368, 20, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1369, 16, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1370, 14, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1371, 13, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1372, 12, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1373, 11, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1374, 10, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1375, 9, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1376, 8, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1377, 7, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1378, 6, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1379, 5, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1380, 4, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1381, 3, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1382, 2, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1383, 1, 59, 0, CAST(N'2020-07-12T20:42:00' AS SmallDateTime), 46, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1384, 59, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1385, 58, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1386, 54, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1387, 53, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1388, 52, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1389, 51, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1390, 50, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1391, 49, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1392, 48, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1393, 47, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1394, 46, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1395, 45, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1396, 44, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1397, 43, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1398, 42, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1399, 40, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1400, 39, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1401, 37, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1402, 36, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1403, 35, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1404, 33, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1405, 31, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1406, 30, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1407, 29, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1408, 28, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1409, 27, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1410, 26, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1411, 24, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1412, 23, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1413, 22, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1414, 21, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1415, 20, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1416, 16, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1417, 14, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1418, 13, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1419, 12, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1420, 11, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1421, 10, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1422, 9, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1423, 8, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1424, 7, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1425, 6, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1426, 5, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1427, 4, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1428, 3, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1429, 2, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 46, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1430, 1, 60, 0, CAST(N'2020-07-12T20:46:00' AS SmallDateTime), 47, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1431, 58, 61, 1, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1432, 54, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1433, 53, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1434, 52, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1435, 51, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1436, 50, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1437, 49, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1438, 48, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1439, 47, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1440, 46, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1441, 45, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1442, 44, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1443, 43, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1444, 42, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1445, 40, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1446, 39, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1447, 37, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1448, 36, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1449, 35, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1450, 33, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1451, 31, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1452, 30, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1453, 29, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1454, 28, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1455, 27, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1456, 26, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1457, 24, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1458, 23, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1459, 22, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1460, 21, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1461, 20, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1462, 16, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1463, 14, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1464, 13, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1465, 12, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1466, 11, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1467, 10, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1468, 9, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1469, 8, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1470, 7, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1471, 6, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1472, 5, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1473, 4, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1474, 3, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1475, 2, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1476, 1, 61, 0, CAST(N'2020-07-12T20:49:00' AS SmallDateTime), 46, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1477, 60, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1478, 59, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1479, 58, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1480, 54, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1481, 53, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1482, 52, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1483, 51, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1484, 50, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1485, 49, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1486, 48, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1487, 47, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1488, 46, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1489, 45, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1490, 44, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1491, 43, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1492, 42, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1493, 40, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1494, 39, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1495, 37, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1496, 36, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1497, 35, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1498, 33, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1499, 31, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1500, 30, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1501, 29, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1502, 28, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1503, 27, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1504, 26, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1505, 24, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1506, 23, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1507, 22, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1508, 21, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1509, 20, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1510, 16, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1511, 14, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1512, 13, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1513, 12, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1514, 11, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1515, 10, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1516, 9, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1517, 8, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1518, 7, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1519, 6, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1520, 5, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1521, 4, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1522, 3, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 46, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1523, 2, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 47, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1524, 1, 62, 0, CAST(N'2020-07-12T20:53:00' AS SmallDateTime), 48, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1525, 62, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1526, 60, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1527, 59, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1528, 58, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1529, 54, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1530, 53, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1531, 52, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1532, 51, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1533, 50, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1534, 49, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1535, 48, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1536, 47, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1537, 46, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1538, 45, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1539, 44, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1540, 43, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1541, 42, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1542, 40, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1543, 39, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1544, 37, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1545, 36, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1546, 35, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1547, 33, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1548, 31, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1549, 30, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1550, 29, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1551, 28, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1552, 27, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1553, 26, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1554, 24, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1555, 23, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1556, 22, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1557, 21, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1558, 20, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1559, 16, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1560, 14, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1561, 13, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1562, 12, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1563, 11, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1564, 10, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1565, 9, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1566, 8, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1567, 7, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1568, 6, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1569, 5, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1570, 4, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 46, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1571, 3, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 47, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1572, 2, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 48, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1573, 1, 63, 0, CAST(N'2020-07-12T20:55:00' AS SmallDateTime), 49, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1574, 57, 64, 1, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1575, 56, 64, 1, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1576, 55, 64, 1, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1577, 47, 64, 1, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1578, 46, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1579, 45, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1580, 44, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1581, 43, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1582, 42, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1583, 40, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1584, 39, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1585, 37, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1586, 36, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1587, 35, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1588, 33, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1589, 31, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1590, 30, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1591, 29, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1592, 28, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1593, 27, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1594, 26, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1595, 24, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1596, 23, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1597, 22, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1598, 21, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1599, 20, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1600, 16, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1601, 14, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1602, 13, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1603, 12, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1604, 11, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1605, 10, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1606, 9, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1607, 8, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1608, 7, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1609, 6, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1610, 5, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1611, 4, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1612, 3, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1613, 2, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1614, 1, 64, 0, CAST(N'2020-07-13T18:09:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1615, 64, 65, 1, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1616, 57, 65, 1, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1617, 56, 65, 1, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1618, 55, 65, 1, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1619, 47, 65, 1, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1620, 46, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1621, 45, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1622, 44, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1623, 43, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1624, 42, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1625, 40, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1626, 39, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1627, 37, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1628, 36, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1629, 35, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1630, 33, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1631, 31, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1632, 30, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1633, 29, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1634, 28, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1635, 27, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1636, 26, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1637, 24, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1638, 23, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1639, 22, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1640, 21, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1641, 20, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1642, 16, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1643, 14, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1644, 13, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1645, 12, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1646, 11, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1647, 10, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1648, 9, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1649, 8, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1650, 7, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1651, 6, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1652, 5, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1653, 4, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1654, 3, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1655, 2, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1656, 1, 65, 0, CAST(N'2020-07-13T18:13:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1657, 52, 66, 1, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1658, 51, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1659, 50, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1660, 49, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1661, 48, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1662, 47, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1663, 46, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1664, 45, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1665, 44, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1666, 43, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1667, 42, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1668, 40, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1669, 39, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1670, 37, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1671, 36, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1672, 35, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1673, 33, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1674, 31, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1675, 30, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1676, 29, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1677, 28, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1678, 27, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1679, 26, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1680, 24, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1681, 23, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1682, 22, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1683, 21, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1684, 20, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1685, 16, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1686, 14, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1687, 13, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1688, 12, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1689, 11, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1690, 10, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1691, 9, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1692, 8, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1693, 7, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1694, 6, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1695, 5, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1696, 4, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1697, 3, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1698, 2, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1699, 1, 66, 0, CAST(N'2020-07-13T18:22:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1700, 54, 67, 1, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1701, 53, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1702, 52, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1703, 51, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1704, 50, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1705, 49, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1706, 48, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1707, 47, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1708, 46, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1709, 45, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1710, 44, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1711, 43, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1712, 42, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1713, 40, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1714, 39, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1715, 37, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1716, 36, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1717, 35, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1718, 33, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1719, 31, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1720, 30, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1721, 29, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1722, 28, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1723, 27, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1724, 26, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1725, 24, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1726, 23, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1727, 22, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1728, 21, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1729, 20, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1730, 16, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1731, 14, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1732, 13, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1733, 12, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1734, 11, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1735, 10, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1736, 9, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1737, 8, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1738, 7, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1739, 6, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1740, 5, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1741, 4, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1742, 3, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1743, 2, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1744, 1, 67, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1745, 67, 68, 1, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1746, 54, 68, 1, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1747, 53, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1748, 52, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1749, 51, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1750, 50, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1751, 49, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1752, 48, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1753, 47, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1754, 46, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1755, 45, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1756, 44, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1757, 43, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1758, 42, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1759, 40, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1760, 39, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1761, 37, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1762, 36, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1763, 35, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1764, 33, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1765, 31, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1766, 30, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1767, 29, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1768, 28, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1769, 27, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1770, 26, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1771, 24, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1772, 23, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1773, 22, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1774, 21, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1775, 20, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1776, 16, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1777, 14, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1778, 13, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1779, 12, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1780, 11, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1781, 10, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1782, 9, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1783, 8, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1784, 7, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1785, 6, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1786, 5, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1787, 4, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 43, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1788, 3, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 44, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1789, 2, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 45, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1790, 1, 68, 0, CAST(N'2020-07-13T18:28:00' AS SmallDateTime), 46, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1791, 17, 69, 1, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1792, 14, 69, 1, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1793, 13, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1794, 12, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1795, 11, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1796, 10, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1797, 9, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1798, 8, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1799, 7, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1800, 6, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1801, 5, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1802, 4, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1803, 3, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1804, 2, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1805, 1, 69, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1806, 69, 70, 1, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1807, 17, 70, 1, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1808, 14, 70, 1, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1809, 13, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1810, 12, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1811, 11, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1812, 10, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1813, 9, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1814, 8, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1815, 7, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1816, 6, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1817, 5, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1818, 4, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1819, 3, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1820, 2, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1821, 1, 70, 0, CAST(N'2020-07-13T18:35:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1822, 70, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1823, 69, 71, 1, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1824, 17, 71, 1, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1825, 14, 71, 1, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1826, 13, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1827, 12, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1828, 11, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1829, 10, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1830, 9, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1831, 8, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1832, 7, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1833, 6, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1834, 5, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1835, 4, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1836, 3, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1837, 2, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1838, 1, 71, 0, CAST(N'2020-07-13T18:38:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1839, 70, 72, 1, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1840, 69, 72, 1, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1841, 17, 72, 1, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1842, 14, 72, 1, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1843, 13, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1844, 12, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1845, 11, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1846, 10, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1847, 9, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1848, 8, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1849, 7, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1850, 6, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1851, 5, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1852, 4, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1853, 3, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1854, 2, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1855, 1, 72, 0, CAST(N'2020-07-13T18:45:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1856, 72, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1857, 70, 73, 1, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1858, 69, 73, 1, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1859, 17, 73, 1, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1860, 14, 73, 1, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1861, 13, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1862, 12, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1863, 11, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1864, 10, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1865, 9, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1866, 8, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1867, 7, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1868, 6, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1869, 5, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1870, 4, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1871, 3, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1872, 2, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1873, 1, 73, 0, CAST(N'2020-07-13T18:51:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1874, 73, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1875, 72, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1876, 70, 74, 1, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1877, 69, 74, 1, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1878, 17, 74, 1, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1879, 14, 74, 1, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1880, 13, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1881, 12, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1882, 11, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1883, 10, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1884, 9, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1885, 8, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1886, 7, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1887, 6, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1888, 5, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1889, 4, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1890, 3, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1891, 2, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1892, 1, 74, 0, CAST(N'2020-07-13T18:53:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1893, 74, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1894, 73, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1895, 72, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1896, 70, 75, 1, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1897, 69, 75, 1, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1898, 17, 75, 1, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1899, 14, 75, 1, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1900, 13, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1901, 12, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1902, 11, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1903, 10, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1904, 9, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1905, 8, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1906, 7, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1907, 6, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1908, 5, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1909, 4, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1910, 3, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1911, 2, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1912, 1, 75, 0, CAST(N'2020-07-13T18:57:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1913, 17, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1914, 14, 76, 1, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1915, 13, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1916, 12, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1917, 11, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1918, 10, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1919, 9, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1920, 8, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1921, 7, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1922, 6, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1923, 5, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1924, 4, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1925, 3, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1926, 2, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1927, 1, 76, 0, CAST(N'2020-07-13T19:02:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1928, 76, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1929, 17, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1930, 14, 77, 1, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1931, 13, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1932, 12, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1933, 11, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1934, 10, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1935, 9, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1936, 8, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1937, 7, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1938, 6, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1939, 5, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1940, 4, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1941, 3, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1942, 2, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1943, 1, 77, 0, CAST(N'2020-07-14T16:27:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1944, 77, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1945, 76, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1946, 17, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1947, 14, 78, 1, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1948, 13, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1949, 12, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1950, 11, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1951, 10, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1952, 9, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1953, 8, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1954, 7, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1955, 6, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1956, 5, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1957, 4, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1958, 3, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1959, 2, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1960, 1, 78, 0, CAST(N'2020-07-14T22:24:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1961, 57, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1962, 56, 79, 1, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1963, 55, 79, 1, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1964, 47, 79, 1, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1965, 46, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1966, 45, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1967, 44, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1968, 43, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1969, 42, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1970, 40, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1971, 39, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1972, 37, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1973, 36, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1974, 35, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1975, 33, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1976, 31, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1977, 30, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1978, 29, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1979, 28, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1980, 27, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1981, 26, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1982, 24, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1983, 23, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1984, 22, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1985, 21, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1986, 20, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1987, 16, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1988, 14, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1989, 13, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1990, 12, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1991, 11, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1992, 10, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1993, 9, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1994, 8, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1995, 7, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1996, 6, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1997, 5, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1998, 4, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (1999, 3, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2000, 2, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2001, 1, 79, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2002, 79, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2003, 57, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2004, 56, 80, 1, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2005, 55, 80, 1, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2006, 47, 80, 1, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2007, 46, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2008, 45, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2009, 44, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2010, 43, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2011, 42, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2012, 40, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2013, 39, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2014, 37, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2015, 36, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2016, 35, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2017, 33, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2018, 31, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2019, 30, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2020, 29, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2021, 28, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2022, 27, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2023, 26, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2024, 24, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2025, 23, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2026, 22, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2027, 21, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2028, 20, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2029, 16, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 28, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2030, 14, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 29, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2031, 13, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 30, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2032, 12, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 31, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2033, 11, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 32, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2034, 10, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 33, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2035, 9, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 34, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2036, 8, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 35, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2037, 7, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 36, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2038, 6, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 37, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2039, 5, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 38, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2040, 4, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 39, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2041, 3, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 40, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2042, 2, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 41, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2043, 1, 80, 0, CAST(N'2020-07-18T15:23:00' AS SmallDateTime), 42, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2044, 25, 81, 1, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2045, 23, 81, 1, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2046, 22, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2047, 21, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2048, 20, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2049, 16, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2050, 14, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2051, 13, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2052, 12, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2053, 11, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2054, 10, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2055, 9, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2056, 8, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2057, 7, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2058, 6, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2059, 5, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2060, 4, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2061, 3, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2062, 2, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2063, 1, 81, 0, CAST(N'2020-08-05T15:39:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2064, 81, 82, 1, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2065, 25, 82, 1, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2066, 23, 82, 1, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2067, 22, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2068, 21, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2069, 20, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2070, 16, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2071, 14, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2072, 13, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2073, 12, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2074, 11, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2075, 10, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2076, 9, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2077, 8, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2078, 7, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2079, 6, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2080, 5, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2081, 4, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2082, 3, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2083, 2, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2084, 1, 82, 0, CAST(N'2020-08-05T16:09:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2085, 82, 83, 1, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2086, 81, 83, 1, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2087, 25, 83, 1, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2088, 23, 83, 1, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2089, 22, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2090, 21, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2091, 20, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2092, 16, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2093, 14, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2094, 13, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2095, 12, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2096, 11, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2097, 10, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2098, 9, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2099, 8, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2100, 7, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2101, 6, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2102, 5, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2103, 4, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2104, 3, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2105, 2, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2106, 1, 83, 0, CAST(N'2020-08-05T16:16:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2107, 32, 84, 1, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2108, 30, 84, 1, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2109, 29, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2110, 28, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2111, 27, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2112, 26, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2113, 24, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2114, 23, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2115, 22, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2116, 21, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2117, 20, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2118, 16, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2119, 14, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2120, 13, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2121, 12, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2122, 11, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2123, 10, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2124, 9, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2125, 8, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2126, 7, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2127, 6, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2128, 5, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2129, 4, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2130, 3, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2131, 2, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2132, 1, 84, 0, CAST(N'2020-08-18T18:08:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2133, 84, 85, 1, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2134, 32, 85, 1, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2135, 30, 85, 1, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2136, 29, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2137, 28, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2138, 27, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2139, 26, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2140, 24, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2141, 23, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2142, 22, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2143, 21, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2144, 20, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2145, 16, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2146, 14, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2147, 13, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2148, 12, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2149, 11, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2150, 10, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2151, 9, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2152, 8, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2153, 7, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2154, 6, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2155, 5, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2156, 4, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2157, 3, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2158, 2, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2159, 1, 85, 0, CAST(N'2020-08-18T18:18:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2160, 34, 86, 1, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2161, 31, 86, 1, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2162, 30, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2163, 29, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2164, 28, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2165, 27, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2166, 26, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2167, 24, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2168, 23, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2169, 22, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2170, 21, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2171, 20, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2172, 16, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2173, 14, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2174, 13, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2175, 12, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2176, 11, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2177, 10, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2178, 9, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2179, 8, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2180, 7, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2181, 6, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 22, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2182, 5, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 23, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2183, 4, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 24, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2184, 3, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 25, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2185, 2, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 26, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2186, 1, 86, 0, CAST(N'2020-08-20T14:18:00' AS SmallDateTime), 27, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2187, 19, 87, 1, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2188, 15, 87, 1, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2189, 13, 87, 1, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2190, 12, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2191, 11, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2192, 10, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2193, 9, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2194, 8, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2195, 7, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2196, 6, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2197, 5, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2198, 4, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2199, 3, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2200, 2, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2201, 1, 87, 0, CAST(N'2020-08-31T13:15:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2202, 87, 88, 1, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2203, 19, 88, 1, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2204, 15, 88, 1, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2205, 13, 88, 1, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2206, 12, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2207, 11, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2208, 10, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2209, 9, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2210, 8, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2211, 7, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2212, 6, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2213, 5, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2214, 4, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2215, 3, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2216, 2, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2217, 1, 88, 0, CAST(N'2020-08-31T13:27:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2218, 88, 89, 1, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2219, 87, 89, 1, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2220, 19, 89, 1, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2221, 15, 89, 1, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2222, 13, 89, 1, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2223, 12, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2224, 11, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2225, 10, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2226, 9, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2227, 8, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2228, 7, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2229, 6, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2230, 5, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2231, 4, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2232, 3, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2233, 2, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2234, 1, 89, 0, CAST(N'2020-09-01T23:08:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2235, 89, 90, 1, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2236, 88, 90, 1, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2237, 87, 90, 1, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2238, 19, 90, 1, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2239, 15, 90, 1, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2240, 13, 90, 1, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2241, 12, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2242, 11, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2243, 10, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2244, 9, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2245, 8, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2246, 7, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2247, 6, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2248, 5, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2249, 4, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2250, 3, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2251, 2, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2252, 1, 90, 0, CAST(N'2020-09-01T23:13:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2253, 90, 91, 1, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2254, 89, 91, 1, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2255, 88, 91, 1, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2256, 87, 91, 1, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2257, 19, 91, 1, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2258, 15, 91, 1, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2259, 13, 91, 1, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2260, 12, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2261, 11, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2262, 10, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2263, 9, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2264, 8, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2265, 7, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2266, 6, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2267, 5, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2268, 4, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2269, 3, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2270, 2, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2271, 1, 91, 0, CAST(N'2020-09-01T23:16:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2272, 91, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2273, 90, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2274, 89, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2275, 88, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2276, 87, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2277, 19, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2278, 15, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2279, 13, 92, 1, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2280, 12, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2281, 11, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2282, 10, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2283, 9, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2284, 8, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2285, 7, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2286, 6, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2287, 5, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2288, 4, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2289, 3, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2290, 2, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2291, 1, 92, 0, CAST(N'2020-09-09T16:59:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2292, 92, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2293, 91, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2294, 90, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2295, 89, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2296, 88, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2297, 87, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2298, 19, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2299, 15, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2300, 13, 93, 1, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2301, 12, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2302, 11, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2303, 10, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2304, 9, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2305, 8, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2306, 7, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2307, 6, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2308, 5, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2309, 4, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2310, 3, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2311, 2, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2312, 1, 93, 0, CAST(N'2020-09-09T17:19:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2313, 93, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 1, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2314, 92, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 2, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2315, 91, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 3, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2316, 90, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 4, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2317, 89, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 5, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2318, 88, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 6, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2319, 87, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 7, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2320, 19, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 8, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2321, 15, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 9, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2322, 13, 94, 1, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 10, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2323, 12, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 11, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2324, 11, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 12, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2325, 10, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 13, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2326, 9, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 14, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2327, 8, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 15, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2328, 7, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 16, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2329, 6, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 17, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2330, 5, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 18, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2331, 4, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 19, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2332, 3, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 20, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2333, 2, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 21, 0)
GO
INSERT [dbo].[AppTran] ([Srno], [ParentId], [AppMstId], [AppMstLeftRight], [AppMstDOE], [Appmstlevel], [Joinfor]) VALUES (2334, 1, 94, 0, CAST(N'2020-09-09T17:23:00' AS SmallDateTime), 22, 0)
GO
SET IDENTITY_INSERT [dbo].[AppTran] OFF
GO
SET IDENTITY_INSERT [dbo].[CauseId] ON 
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (1, 1, 2, N'M         ', 5, CAST(N'2020-07-12T17:52:14.563' AS DateTime), 100, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (2, 13, 15, N'M         ', 75, CAST(N'2020-08-05T09:35:39.767' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (3, 13, 30, N'M         ', 75, CAST(N'2020-08-05T12:34:21.663' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (4, 13, 30, N'b         ', 120, CAST(N'2020-08-05T12:34:21.673' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (5, 30, 31, N'M         ', 75, CAST(N'2020-08-05T15:02:52.640' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (6, 13, 14, N'M         ', 75, CAST(N'2020-08-09T08:33:38.690' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (7, 14, 16, N'M         ', 75, CAST(N'2020-08-09T08:37:54.933' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (8, 14, 17, N'M         ', 75, CAST(N'2020-08-09T08:41:55.330' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (9, 14, 17, N'b         ', 120, CAST(N'2020-08-09T08:41:55.333' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (10, 31, 34, N'M         ', 75, CAST(N'2020-08-19T04:56:41.833' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (11, 30, 35, N'M         ', 75, CAST(N'2020-08-19T04:58:19.730' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (12, 31, 33, N'M         ', 75, CAST(N'2020-08-20T03:33:48.987' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (13, 31, 33, N'b         ', 120, CAST(N'2020-08-20T03:33:48.993' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (14, 30, 84, N'M         ', 75, CAST(N'2020-08-20T03:48:39.403' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (15, 30, 84, N'b         ', 120, CAST(N'2020-08-20T03:48:39.410' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (16, 30, 85, N'M         ', 75, CAST(N'2020-08-20T03:51:56.960' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (17, 30, 85, N'b         ', 120, CAST(N'2020-08-20T03:51:56.967' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (18, 23, 24, N'M         ', 75, CAST(N'2020-08-20T04:27:29.500' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (19, 23, 25, N'M         ', 75, CAST(N'2020-08-20T04:29:00.547' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (20, 23, 25, N'b         ', 120, CAST(N'2020-08-20T04:29:00.553' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (21, 23, 83, N'M         ', 75, CAST(N'2020-08-20T04:34:32.230' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (22, 23, 83, N'b         ', 120, CAST(N'2020-08-20T04:34:32.233' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (23, 24, 47, N'M         ', 75, CAST(N'2020-08-20T12:09:36.850' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (24, 47, 48, N'M         ', 75, CAST(N'2020-08-20T12:11:32.007' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (25, 47, 55, N'M         ', 75, CAST(N'2020-08-20T12:13:27.937' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (26, 47, 55, N'b         ', 120, CAST(N'2020-08-20T12:13:27.940' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (27, 47, 64, N'M         ', 75, CAST(N'2020-08-20T12:15:52.350' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (28, 31, 86, N'M         ', 75, CAST(N'2020-08-20T17:41:57.680' AS DateTime), 1500, 0, 0, 0, 1, 0)
GO
INSERT [dbo].[CauseId] ([Sno], [userid], [causeid], [PaymentCause], [Amount], [effectdate], [JoinFor], [iselegible], [pairrank], [EndAmount], [Ckstatus], [StarId]) VALUES (29, 31, 86, N'b         ', 120, CAST(N'2020-08-20T17:41:57.680' AS DateTime), 1500, 1, 1500, 0, 1, 0)
GO
SET IDENTITY_INSERT [dbo].[CauseId] OFF
GO
SET IDENTITY_INSERT [dbo].[ControlMst] ON 
GO
INSERT [dbo].[ControlMst] ([srno], [username], [password], [ePassword], [name], [admintype], [Lock], [mobileno], [List], [Profile], [ViewProfile], [Search], [wli], [calROI], [Details], [TurnOver], [Date], [PList], [payoutroi], [dateroi], [listroi], [Status], [AllotPin], [AllotedPinList], [SearchaUpdatePin], [investmentreport], [viewpassbook], [viewmodifyamt], [viewmodifyrno], [viewmodifydate], [viewmodifyptype], [AllPayoutStatements], [allpayoutstatementsroi], [SponsorList], [SponsorDateWise], [UplineList], [Downline], [ChequePrint], [ChequePrintROI], [BulkSMS], [PostQuery], [QueryList], [RepliedQueryList], [AddNews], [NewsModify], [Genealogy], [ChangePassword], [DownTOver], [viewinvestment], [addquote], [modifyquote], [addpopup], [modifypopup], [ApproveBlog], [viewrejecttopup], [viewApprovedtopup], [viewwaittopup], [resetUserTopUp], [SWA], [ADDBANK], [REWARDACHIEVERS], [CREDITUSER], [DEBITUSER], [NFM], [FRANCHISETREE], [WR], [UBB], [VIModifications], [VDTL], [VTRM], [VTRS], [GeneratePin], [FundTransfer], [FL], [NotAllotedPinList], [Detailsroi], [Reward], [payoutroitb], [dateroitb], [listroitb], [allpayoutstatementsroitb], [ChequePrintROITB], [FWPR], [FWFPR], [BDWithdralRpt], [BDTransferRpt], [regno]) VALUES (1, N'admin', N'111111', NULL, N'sa', N'sa', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', NULL, N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0', N'0')
GO
SET IDENTITY_INSERT [dbo].[ControlMst] OFF
GO
INSERT [dbo].[datamst] ([AppMstID], [AppMstRegNo], [AppMstPassword], [AppMstTitle], [Gtitle], [AppMstFName], [AppMstLName], [AppMstState], [AppMstCity], [AppMstAddress1], [AppMstPinCode], [AppMstMobile], [AppMstPrimaryPhone], [AppMstLogin], [AppMstLeftRight], [ParentID], [SponsorID], [AppMstSponsorTotal], [AppMstDOJ], [Appmstpaid], [AppMstLeftTotal], [AppMstRightTotal], [TotalNewLeft], [TotalNewRight], [cpl], [cpr], [cbfl], [cbfr], [pairRank], [npairrank], [OldPairRank], [oldprank], [CarryLeft], [CarryRight], [bincome], [BFL], [BFR], [CurrrentBalanceLeft], [CurrentBalanceRight], [BankName], [Branch], [AcountNo], [panno], [MICR], [IFC], [distt], [email], [userdob], [nom_name], [nom_rela], [JoinFor], [JAmount], [appmstactivate], [productType], [appPaiddatetime], [beneficiaryname], [bstatus], [ReceiptNo], [Type], [tdsdeduction], [ePassword], [IPAddress], [newsponsortotal], [GName], [isEdited], [TempLeftTotal], [TempRightTotal], [FastT1], [FastT2], [FastT3], [FastTrackDate], [ROIDate], [LastIP], [LastLogin], [VPBal], [FastT4], [FastT5], [vCode], [RetailerTypeid], [Revoucher], [StarId], [DSponsarTotal], [DSponsarNew]) VALUES (1, N'XSC00001', N'111111', N'Mr.', N'', N'MIKE CONTO', N'', N'', N'', N'', N'110085', N'02666889996', N'', N'XSC00001', 0, N'0', N'0', 0, CAST(N'2020-05-03T10:07:00' AS SmallDateTime), 11111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, N'hhhhhhhhhhhhh', N'NA', N'FFFF', N'CFVPK3541P', N'NA', N'NA', N'INDIA', N'INFO@BYTECAPITALS.COM', CAST(N'1901-01-01T00:00:00' AS SmallDateTime), NULL, NULL, 0, 0, N'1', 1, CAST(N'2020-05-03T10:07:00.000' AS DateTime), N'0', N'1', N'0', N'', 0, N'2222', N'106.223.212.73', 0, N'0', 1, 0, 0, 0, 0, 0, NULL, CAST(N'2020-05-03T10:07:00.000' AS DateTime), NULL, NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, 0)
GO
SET IDENTITY_INSERT [dbo].[newvptran] ON 
GO
INSERT [dbo].[newvptran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (55, 17, 100, 17, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 140.62583628632183, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-17T11:25:58.730' AS DateTime), NULL, NULL, NULL, 45)
GO
INSERT [dbo].[newvptran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (56, 13, 22, 13, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 375, 0.32, 1313.0527108433735, N'Payout', NULL, 0, 2, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-17T12:11:24.873' AS DateTime), NULL, NULL, NULL, 120)
GO
INSERT [dbo].[newvptran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (57, 14, 22, 14, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 375, 0.32, 1047.1637526576897, N'Payout', NULL, 0, 2, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-17T12:11:24.877' AS DateTime), NULL, NULL, NULL, 120)
GO
SET IDENTITY_INSERT [dbo].[newvptran] OFF
GO
INSERT [dbo].[nextid] ([appmstid], [appmstregno]) VALUES (95, NULL)
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'E9620C', N'XSC342673', N'Active', N'SARANYARCHE@GMAIL.COM', CAST(N'2020-07-12T09:51:40.710' AS DateTime), CAST(N'2020-07-12T09:53:40.710' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5FA401', N'New', N'registration', N'jaiganesh.micro@gmail.com', CAST(N'2020-07-13T05:38:40.527' AS DateTime), CAST(N'2020-07-13T05:40:40.527' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'EF9AC2', N'New', N'registration', N'yok.god@gmail.com', CAST(N'2020-07-13T05:42:31.720' AS DateTime), CAST(N'2020-07-13T05:44:31.720' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'DF7968', N'New', N'registration', N'venkateswaranpt1973@gmail.com', CAST(N'2020-07-13T05:51:51.077' AS DateTime), CAST(N'2020-07-13T05:53:51.077' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'994D67', N'New', N'registration', N'ssivasankaran100@gmail.com', CAST(N'2020-07-13T05:56:56.150' AS DateTime), CAST(N'2020-07-13T05:58:56.150' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'705175', N'New', N'registration', N'cdhanasekarantata@gmail.com', CAST(N'2020-07-13T06:22:42.590' AS DateTime), CAST(N'2020-07-13T06:24:42.590' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'69E9BD', N'New', N'registration', N'gouthamvignesh1@gmail.com', CAST(N'2020-09-09T04:48:17.840' AS DateTime), CAST(N'2020-09-09T04:50:17.840' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'CB4229', N'New', N'registration', N'Pearlsvenkatesan@gmail.com', CAST(N'2020-07-18T02:52:21.187' AS DateTime), CAST(N'2020-07-18T02:54:21.187' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D8A482', N'New', N'registration', N'aa', CAST(N'2020-07-29T22:23:21.917' AS DateTime), CAST(N'2020-07-29T22:25:21.917' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'AE8317', N'New', N'registration', N'fruit94@mail.ua', CAST(N'2020-07-31T12:27:36.273' AS DateTime), CAST(N'2020-07-31T12:29:36.273' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C2009C', N'New', N'registration', N'cvvenkateshbalaji@gmail.com', CAST(N'2020-08-05T03:08:23.657' AS DateTime), CAST(N'2020-08-05T03:10:23.657' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'83D71A', N'XSC807414', N'Active', N'SPRAKASH1971@YAHOO.COM', CAST(N'2020-08-05T04:33:18.203' AS DateTime), CAST(N'2020-08-05T04:35:18.203' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'09750C', N'New', N'registration', N'-1 OR 2+593-593-1=0+0+0+1', CAST(N'2020-08-06T05:08:38.070' AS DateTime), CAST(N'2020-08-06T05:10:38.070' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'7D34B4', N'New', N'registration', N'-1'' OR 2+346-346-1=0+0+0+1 --', CAST(N'2020-08-06T05:08:38.157' AS DateTime), CAST(N'2020-08-06T05:10:38.157' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B53C0C', N'New', N'registration', N'-1" OR 2+470-470-1=0+0+0+1 --', CAST(N'2020-08-06T05:08:38.387' AS DateTime), CAST(N'2020-08-06T05:10:38.387' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'1250F2', N'New', N'registration', N'if(now()=sysdate(),sleep(15),0)', CAST(N'2020-09-05T09:00:32.910' AS DateTime), CAST(N'2020-09-05T09:02:32.910' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'988C7F', N'New', N'registration', N'0''XOR(if(now()=sysdate(),sleep(15),0))XOR''Z', CAST(N'2020-09-05T09:00:35.500' AS DateTime), CAST(N'2020-09-05T09:02:35.500' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'350088', N'New', N'registration', N'1 waitfor delay ''0:0:15'' --', CAST(N'2020-09-05T09:00:41.557' AS DateTime), CAST(N'2020-09-05T09:02:41.557' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'75E7CE', N'New', N'registration', N'CepQGAQh''; waitfor delay ''0:0:15'' --', CAST(N'2020-08-06T05:08:43.150' AS DateTime), CAST(N'2020-08-06T05:10:43.150' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D197A7', N'New', N'registration', N'WRbBQeOl''); waitfor delay ''0:0:15'' --', CAST(N'2020-08-06T05:08:43.813' AS DateTime), CAST(N'2020-08-06T05:10:43.813' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0D68CC', N'New', N'registration', N'sample@email.tst''||DBMS_PIPE.RECEIVE_MESSAGE(CHR(9', CAST(N'2020-09-05T09:00:55.373' AS DateTime), CAST(N'2020-09-05T09:02:55.373' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A87DA8', N'New', N'-1'' OR 2+268-268-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-06T05:08:59.713' AS DateTime), CAST(N'2020-08-06T05:10:59.713' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'6C0CF3', N'New', N'1 waitfor delay ''0:0:15'' --', N'sample@email.tst', CAST(N'2020-09-05T09:01:34.450' AS DateTime), CAST(N'2020-09-05T09:03:34.450' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'505997', N'New', N'rW62UdnF''; waitfor delay ''0:0:15'' --', N'sample@email.tst', CAST(N'2020-08-06T05:09:26.757' AS DateTime), CAST(N'2020-08-06T05:11:26.757' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'EAE8B1', N'XSC740234', N'Active', N'SPRJPR@GMAIL.COM', CAST(N'2020-08-09T00:33:18.060' AS DateTime), CAST(N'2020-08-09T00:35:18.060' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'FDBC54', N'XSC924394', N'Active', N'SPRJPR@GMAIL.COM', CAST(N'2020-08-09T00:36:53.480' AS DateTime), CAST(N'2020-08-09T00:38:53.480' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'77A8A7', N'XSC141986', N'Active', N'SPRJPR@GMAIL.COM', CAST(N'2020-08-09T00:41:34.980' AS DateTime), CAST(N'2020-08-09T00:43:34.980' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'08F472', N'New', N'registration', N'1 À§À¢', CAST(N'2020-08-09T20:59:48.640' AS DateTime), CAST(N'2020-08-09T21:01:48.640' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'79739C', N'New', N'registration', N'JyI=', CAST(N'2020-08-09T20:59:49.070' AS DateTime), CAST(N'2020-08-09T21:01:49.070' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5E4071', N'New', N'1''"', N'sample@email.tst', CAST(N'2020-09-05T09:01:55.883' AS DateTime), CAST(N'2020-09-05T09:03:55.883' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B30D6B', N'New', N'registration', N'-1 OR 3*2<(0+5+384-384) --', CAST(N'2020-08-09T20:59:52.103' AS DateTime), CAST(N'2020-08-09T21:01:52.103' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F966D8', N'New', N'@@7ohbR', N'sample@email.tst', CAST(N'2020-08-09T14:02:51.820' AS DateTime), CAST(N'2020-08-09T14:04:51.820' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'AF9C99', N'New', N'JyI=', N'sample@email.tst', CAST(N'2020-08-09T20:59:58.883' AS DateTime), CAST(N'2020-08-09T21:01:58.883' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5B0DCA', N'New', N'-1'' OR 2+49-49-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T14:03:29.620' AS DateTime), CAST(N'2020-08-09T14:05:29.620' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2C491A', N'New', N'registration', N'-1 OR 2+413-413-1=0+0+0+1', CAST(N'2020-08-09T14:03:17.947' AS DateTime), CAST(N'2020-08-09T14:05:17.947' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0E4D35', N'New', N'registration', N'-1" OR 2+521-521-1=0+0+0+1 --', CAST(N'2020-08-09T14:03:18.213' AS DateTime), CAST(N'2020-08-09T14:05:18.213' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'679D01', N'New', N'registration', N'132''', CAST(N'2020-08-09T14:03:18.307' AS DateTime), CAST(N'2020-08-09T14:05:18.307' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C55AED', N'New', N'registration', N'0''XOR(if(now()=sysdate(),sleep(20.256),0))XOR''Z', CAST(N'2020-08-09T14:03:18.743' AS DateTime), CAST(N'2020-08-09T14:05:18.743' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A030FB', N'New', N'registration', N'0"XOR(if(now()=sysdate(),sleep(20.256),0))XOR"Z', CAST(N'2020-08-09T14:03:19.210' AS DateTime), CAST(N'2020-08-09T14:05:19.210' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'381335', N'New', N'registration', N'g5fEmit7'')); waitfor delay ''0:0:20.256'' --', CAST(N'2020-08-09T14:03:20.340' AS DateTime), CAST(N'2020-08-09T14:05:20.340' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'074D28', N'New', N'registration', N'5SDOTen7'' OR 92=(SELECT 92 FROM PG_SLEEP(20.256))-', CAST(N'2020-08-09T14:03:20.490' AS DateTime), CAST(N'2020-08-09T14:05:20.490' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C756A7', N'New', N'registration', N'vR1QcISg'')) OR 953=(SELECT 953 FROM PG_SLEEP(20.25', CAST(N'2020-08-09T14:03:20.813' AS DateTime), CAST(N'2020-08-09T14:05:20.813' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'7AB270', N'New', N'-1'' OR 2+238-238-1=0+0+0+1 or ''hCNzzFNj''=''', N'sample@email.tst', CAST(N'2020-08-09T14:03:31.713' AS DateTime), CAST(N'2020-08-09T14:05:31.713' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A49E54', N'New', N'-1" OR 2+466-466-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T14:03:33.837' AS DateTime), CAST(N'2020-08-09T14:05:33.837' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'BDF9CF', N'New', N'457''', N'sample@email.tst', CAST(N'2020-08-09T14:03:35.963' AS DateTime), CAST(N'2020-08-09T14:05:35.963' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'EB19B9', N'New', N'0''XOR(if(now()=sysdate(),sleep(12.412),0))XOR''Z', N'sample@email.tst', CAST(N'2020-08-09T14:03:40.257' AS DateTime), CAST(N'2020-08-09T14:05:40.257' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0D36C5', N'New', N'P11Rhq3U''; waitfor delay ''0:0:12.412'' --', N'sample@email.tst', CAST(N'2020-08-09T14:03:46.650' AS DateTime), CAST(N'2020-08-09T14:05:46.650' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'590F16', N'New', N'¿''¿"', N'sample@email.tst', CAST(N'2020-08-09T21:00:01.133' AS DateTime), CAST(N'2020-08-09T21:02:01.133' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'267624', N'New', N'registration', N'sample@email.tst', CAST(N'2020-09-05T09:01:02.640' AS DateTime), CAST(N'2020-09-05T09:03:02.640' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'E1D641', N'New', N'registration', N'-1 OR 3+384-384-1=0+0+0+1 --', CAST(N'2020-08-09T20:59:51.923' AS DateTime), CAST(N'2020-08-09T21:01:51.923' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2D7E9C', N'New', N'registration', N'-1 OR 2+337-337-1=0+0+0+1', CAST(N'2020-08-09T20:59:52.470' AS DateTime), CAST(N'2020-08-09T21:01:52.470' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A2EBBD', N'New', N'registration', N'-1 OR 3+337-337-1=0+0+0+1', CAST(N'2020-08-09T20:59:52.687' AS DateTime), CAST(N'2020-08-09T21:01:52.687' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5A9980', N'New', N'registration', N'-1 OR 3*2>(0+5+337-337)', CAST(N'2020-08-09T20:59:53.063' AS DateTime), CAST(N'2020-08-09T21:01:53.063' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'7A7D4B', N'New', N'registration', N'-1'' OR 3+165-165-1=0+0+0+1 --', CAST(N'2020-08-09T20:59:53.450' AS DateTime), CAST(N'2020-08-09T21:01:53.450' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F9F168', N'New', N'registration', N'-1'' OR 3*2>(0+5+165-165) --', CAST(N'2020-08-09T20:59:53.880' AS DateTime), CAST(N'2020-08-09T21:01:53.880' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'833927', N'New', N'1 À§À¢', N'sample@email.tst', CAST(N'2020-08-09T20:59:54.427' AS DateTime), CAST(N'2020-08-09T21:01:54.427' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F1248D', N'New', N'registration', N'-1'' OR 3*2>(0+5+434-434) or ''2iAA3wIm''=''', CAST(N'2020-08-09T20:59:54.693' AS DateTime), CAST(N'2020-08-09T21:01:54.693' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'53AC72', N'New', N'registration', N'-1" OR 3+801-801-1=0+0+0+1 --', CAST(N'2020-08-09T20:59:55.080' AS DateTime), CAST(N'2020-08-09T21:01:55.080' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'72DB2F', N'New', N'registration', N'-1" OR 3*2>(0+5+801-801) --', CAST(N'2020-08-09T20:59:55.520' AS DateTime), CAST(N'2020-08-09T21:01:55.520' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'8C9FED', N'New', N'registration', N'if(now()=sysdate(),sleep(3.297),0)/*''XOR(if(now()=', CAST(N'2020-08-09T20:59:55.713' AS DateTime), CAST(N'2020-08-09T21:01:55.713' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'69CDCC', N'New', N'registration', N'1 waitfor delay ''0:0:6.594'' --', CAST(N'2020-08-09T20:59:56.093' AS DateTime), CAST(N'2020-08-09T21:01:56.093' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'014A61', N'New', N'registration', N'sPGlW8k5''); waitfor delay ''0:0:9.891'' --', CAST(N'2020-08-09T20:59:56.467' AS DateTime), CAST(N'2020-08-09T21:01:56.467' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'EACB6A', N'New', N'registration', N'Ijp8sAGt'')); waitfor delay ''0:0:3.297'' --', CAST(N'2020-08-09T20:59:56.630' AS DateTime), CAST(N'2020-08-09T21:01:56.630' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0DB4D1', N'New', N'registration', N'3P0zgnA4''));select pg_sleep(9.891); --', CAST(N'2020-08-09T20:59:57.267' AS DateTime), CAST(N'2020-08-09T21:01:57.267' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'61611B', N'New', N'ð''''ð""', N'sample@email.tst', CAST(N'2020-08-09T21:00:03.357' AS DateTime), CAST(N'2020-08-09T21:02:03.357' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'844848', N'New', N'-1 OR 3+834-834-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T21:00:03.970' AS DateTime), CAST(N'2020-08-09T21:02:03.970' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'DA3B23', N'New', N'-1 OR 3*2<(0+5+834-834) --', N'sample@email.tst', CAST(N'2020-08-09T21:00:06.153' AS DateTime), CAST(N'2020-08-09T21:02:06.153' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0A0471', N'New', N'-1 OR 2+317-317-1=0+0+0+1', N'sample@email.tst', CAST(N'2020-08-09T21:00:10.743' AS DateTime), CAST(N'2020-08-09T21:02:10.743' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'864885', N'New', N'-1 OR 3*2<(0+5+317-317)', N'sample@email.tst', CAST(N'2020-08-09T21:00:15.093' AS DateTime), CAST(N'2020-08-09T21:02:15.093' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0A0155', N'New', N'-1'' OR 2+360-360-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T21:00:19.483' AS DateTime), CAST(N'2020-08-09T21:02:19.483' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A8DC73', N'New', N'-1'' OR 3*2>(0+5+360-360) --', N'sample@email.tst', CAST(N'2020-08-09T21:00:26.013' AS DateTime), CAST(N'2020-08-09T21:02:26.013' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5F6539', N'New', N'-1'' OR 3+802-802-1=0+0+0+1 or ''stGiL3LH''=''', N'sample@email.tst', CAST(N'2020-08-09T21:00:30.360' AS DateTime), CAST(N'2020-08-09T21:02:30.360' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'521281', N'New', N'-1'' OR 3*2>(0+5+802-802) or ''stGiL3LH''=''', N'sample@email.tst', CAST(N'2020-08-09T21:00:34.697' AS DateTime), CAST(N'2020-08-09T21:02:34.697' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'DE8767', N'New', N'-1" OR 3+859-859-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T21:00:39.083' AS DateTime), CAST(N'2020-08-09T21:02:39.083' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D16CC0', N'New', N'-1" OR 3*2<(0+5+859-859) --', N'sample@email.tst', CAST(N'2020-08-09T21:00:41.300' AS DateTime), CAST(N'2020-08-09T21:02:41.300' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'45C3BC', N'New', N'1 waitfor delay ''0:0:3.235'' --', N'sample@email.tst', CAST(N'2020-08-09T21:00:50.747' AS DateTime), CAST(N'2020-08-09T21:02:50.747' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'4C6918', N'New', N'240wAz94''); waitfor delay ''0:0:3.235'' --', N'sample@email.tst', CAST(N'2020-08-09T21:00:55.237' AS DateTime), CAST(N'2020-08-09T21:02:55.237' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'521C40', N'New', N'9NEoO8PQ'');select pg_sleep(3.235); --', N'sample@email.tst', CAST(N'2020-08-09T21:01:06.207' AS DateTime), CAST(N'2020-08-09T21:03:06.207' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'1B8C7B', N'XSC855936', N'Active', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'2020-08-18T20:57:53.120' AS DateTime), CAST(N'2020-08-18T20:59:53.120' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'CF2633', N'New', N'registration', N'jeet071997@gmail.com', CAST(N'2020-08-19T01:58:31.897' AS DateTime), CAST(N'2020-08-19T02:00:31.897' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'08C434', N'New', N'registration', N'Sandeep09', CAST(N'2020-08-19T02:03:54.633' AS DateTime), CAST(N'2020-08-19T02:05:54.633' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B56566', N'New', N'registration', N'sandeepcrip95@gmail.com', CAST(N'2020-08-19T11:12:27.977' AS DateTime), CAST(N'2020-08-19T11:14:27.977' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'26D8FA', N'XSC855626', N'Active', N'TIRUFISH@GMAIL.COM', CAST(N'2020-08-19T19:32:27.330' AS DateTime), CAST(N'2020-08-19T19:34:27.330' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D1DB66', N'XSC219974', N'Active', N'TIRUFISH@GMAIL.COM', CAST(N'2020-08-19T19:48:06.437' AS DateTime), CAST(N'2020-08-19T19:50:06.437' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'DEBEAF', N'XSC652087', N'Active', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'2020-08-19T20:28:28.313' AS DateTime), CAST(N'2020-08-19T20:30:28.313' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C2F1D5', N'XSC476389', N'Active', N'INTSANKARAN1@GMAIL.COM', CAST(N'2020-08-19T20:34:05.867' AS DateTime), CAST(N'2020-08-19T20:36:05.867' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'AA6D4C', N'New', N'registration', N'gajendrababu3636@gmail.com', CAST(N'2020-08-20T01:46:15.547' AS DateTime), CAST(N'2020-08-20T01:48:15.547' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'59E761', N'XSC114255', N'Active', N'JAIGANESH.MICRO@GMAIL.COM', CAST(N'2020-08-20T04:15:14.910' AS DateTime), CAST(N'2020-08-20T04:17:14.910' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'34C942', N'New', N'registration', N'jitendrasingh071997@gmail.com', CAST(N'2020-08-23T08:27:00.707' AS DateTime), CAST(N'2020-08-23T08:29:00.707' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'271B94', N'New', N'registration', N'spmspm1968@mail.com', CAST(N'2020-08-31T00:56:10.950' AS DateTime), CAST(N'2020-08-31T00:58:10.950' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'8F01F3', N'New', N'registration', N'Jayajayapavi@gmail.com', CAST(N'2020-09-09T04:51:37.343' AS DateTime), CAST(N'2020-09-09T04:53:37.343' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'33D2CB', N'New', N'registration', N'-1 OR 2+332-332-1=0+0+0+1', CAST(N'2020-09-05T09:00:30.523' AS DateTime), CAST(N'2020-09-05T09:02:30.523' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'E5345A', N'New', N'registration', N'krish44465@gmail.com', CAST(N'2020-07-13T06:07:19.000' AS DateTime), CAST(N'2020-07-13T06:09:19.000' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'3E1738', N'New', N'registration', N'-1'' OR 2+773-773-1=0+0+0+1 --', CAST(N'2020-09-05T09:00:30.640' AS DateTime), CAST(N'2020-09-05T09:02:30.640' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'114362', N'New', N'registration', N'sprramesh1971@gmail.com', CAST(N'2020-07-14T09:53:41.860' AS DateTime), CAST(N'2020-07-14T09:55:41.860' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F8A8E7', N'New', N'registration', N'sugunaveen36@gmail.com', CAST(N'2020-07-17T21:31:42.470' AS DateTime), CAST(N'2020-07-17T21:33:42.470' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'671060', N'New', N'registration', N'lool@mailinator.com', CAST(N'2020-07-23T18:02:22.353' AS DateTime), CAST(N'2020-07-23T18:04:22.353' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'07D2EF', N'New', N'registration', N'@@YnR3F', CAST(N'2020-08-09T14:02:47.137' AS DateTime), CAST(N'2020-08-09T14:04:47.137' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'869F89', N'New', N'registration', N'hastesurvey@gmail.com', CAST(N'2020-07-29T22:19:59.550' AS DateTime), CAST(N'2020-07-29T22:21:59.550' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'508E0B', N'XSC282635', N'Active', N'SPRJPR@GMAIL.COM', CAST(N'2020-08-05T01:34:54.930' AS DateTime), CAST(N'2020-08-05T01:36:54.930' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'1DB99D', N'XSC961601', N'Active', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'2020-08-05T02:40:00.387' AS DateTime), CAST(N'2020-08-05T02:42:00.387' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'CA875F', N'New', N'registration', N'int1sankaran@gmail.com', CAST(N'2020-08-05T03:15:14.590' AS DateTime), CAST(N'2020-08-05T03:17:14.590' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D73588', N'New', N'registration', N'intsankaran1@gmail.com', CAST(N'2020-08-05T03:45:29.420' AS DateTime), CAST(N'2020-08-05T03:47:29.420' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'11A5D4', N'New', N'registration', N'-1 OR 2+871-871-1=0+0+0+1 --', CAST(N'2020-08-09T14:03:17.867' AS DateTime), CAST(N'2020-08-09T14:05:17.867' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'84A9EA', N'New', N'registration', N'-1'' OR 2+101-101-1=0+0+0+1 or ''47axqIZ6''=''', CAST(N'2020-08-06T05:08:38.250' AS DateTime), CAST(N'2020-08-06T05:10:38.250' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'E43785', N'New', N'registration', N'JbLuPhD0''; waitfor delay ''0:0:15'' --', CAST(N'2020-09-05T09:00:43.270' AS DateTime), CAST(N'2020-09-05T09:02:43.270' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'09339E', N'New', N'registration', N'CW6phAUN'') OR 667=(SELECT 667 FROM PG_SLEEP(15))--', CAST(N'2020-08-06T05:08:46.063' AS DateTime), CAST(N'2020-08-06T05:10:46.063' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B86F79', N'New', N'registration', N'6FlXa8n0'')) OR 868=(SELECT 868 FROM PG_SLEEP(15))-', CAST(N'2020-08-06T05:08:46.817' AS DateTime), CAST(N'2020-08-06T05:10:46.817' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'3CD88B', N'New', N'-1 OR 2+534-534-1=0+0+0+1', N'sample@email.tst', CAST(N'2020-08-06T05:08:57.580' AS DateTime), CAST(N'2020-08-06T05:10:57.580' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'6E1B43', N'New', N'-1" OR 2+411-411-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-06T05:09:04.070' AS DateTime), CAST(N'2020-08-06T05:11:04.070' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B3D64B', N'New', N'if(now()=sysdate(),sleep(15),0)', N'sample@email.tst', CAST(N'2020-09-05T09:01:21.410' AS DateTime), CAST(N'2020-09-05T09:03:21.410' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C5E6D9', N'New', N'xCqfIWcf''); waitfor delay ''0:0:15'' --', N'sample@email.tst', CAST(N'2020-08-06T05:09:31.370' AS DateTime), CAST(N'2020-08-06T05:11:31.370' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'65C917', N'New', N'DN8lPUfW'')); waitfor delay ''0:0:15'' --', N'sample@email.tst', CAST(N'2020-08-06T05:09:35.987' AS DateTime), CAST(N'2020-08-06T05:11:35.987' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'E3B04C', N'New', N'tPufxVXw'' OR 282=(SELECT 282 FROM PG_SLEEP(15))--', N'sample@email.tst', CAST(N'2020-08-06T05:09:38.623' AS DateTime), CAST(N'2020-08-06T05:11:38.623' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A09647', N'New', N'registration', N'-1'' OR 2+846-846-1=0+0+0+1 or ''dSzf0MAH''=''', CAST(N'2020-08-09T14:03:18.117' AS DateTime), CAST(N'2020-08-09T14:05:18.117' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'8502DF', N'New', N'@@2BTVa', N'sample@email.tst', CAST(N'2020-08-06T05:09:54.780' AS DateTime), CAST(N'2020-08-06T05:11:54.780' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B74DC1', N'New', N'registration', N'Le7ZRdxC''; waitfor delay ''0:0:20.256'' --', CAST(N'2020-08-09T14:03:19.927' AS DateTime), CAST(N'2020-08-09T14:05:19.927' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'BFE021', N'New', N'registration', N'QnaVPRXB''); waitfor delay ''0:0:20.256'' --', CAST(N'2020-08-09T14:03:20.110' AS DateTime), CAST(N'2020-08-09T14:05:20.110' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'62D7AF', N'New', N'if(now()=sysdate(),sleep(12.412),0)', N'sample@email.tst', CAST(N'2020-08-09T14:03:38.090' AS DateTime), CAST(N'2020-08-09T14:05:38.090' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'ACA010', N'New', N'0"XOR(if(now()=sysdate(),sleep(12.412),0))XOR"Z', N'sample@email.tst', CAST(N'2020-08-09T14:03:42.387' AS DateTime), CAST(N'2020-08-09T14:05:42.387' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'790840', N'New', N'LPprrYaO'')); waitfor delay ''0:0:12.412'' --', N'sample@email.tst', CAST(N'2020-08-09T14:03:54.927' AS DateTime), CAST(N'2020-08-09T14:05:54.927' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A8BBA2', N'New', N'registration', N'¿''¿"', CAST(N'2020-08-09T20:59:49.370' AS DateTime), CAST(N'2020-08-09T21:01:49.370' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'EB496E', N'New', N'registration', N'ð''''ð""', CAST(N'2020-08-09T20:59:49.560' AS DateTime), CAST(N'2020-08-09T21:01:49.560' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'541668', N'New', N'\', N'sample@email.tst', CAST(N'2020-08-09T20:59:52.057' AS DateTime), CAST(N'2020-08-09T21:01:52.057' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'7529E5', N'New', N'registration', N'-1 OR 3*2>(0+5+384-384) --', CAST(N'2020-08-09T20:59:52.287' AS DateTime), CAST(N'2020-08-09T21:01:52.287' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'285B4F', N'New', N'registration', N'-1'' OR 3*2<(0+5+165-165) --', CAST(N'2020-08-09T20:59:53.630' AS DateTime), CAST(N'2020-08-09T21:01:53.630' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2686E5', N'New', N'registration', N'-1'' OR 2+434-434-1=0+0+0+1 or ''2iAA3wIm''=''', CAST(N'2020-08-09T20:59:54.070' AS DateTime), CAST(N'2020-08-09T21:01:54.070' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C6F058', N'New', N'registration', N'-1" OR 2+801-801-1=0+0+0+1 --', CAST(N'2020-08-09T20:59:54.870' AS DateTime), CAST(N'2020-08-09T21:01:54.870' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2AF146', N'New', N'registration', N'-1" OR 3*2<(0+5+801-801) --', CAST(N'2020-08-09T20:59:55.297' AS DateTime), CAST(N'2020-08-09T21:01:55.297' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'7E07AA', N'New', N'@@mqkkH', N'sample@email.tst', CAST(N'2020-08-09T20:59:56.610' AS DateTime), CAST(N'2020-08-09T21:01:56.610' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5B83FE', N'New', N'registration', N'CH627S8M'';select pg_sleep(3.297); --', CAST(N'2020-08-09T20:59:56.900' AS DateTime), CAST(N'2020-08-09T21:01:56.900' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'99987B', N'New', N'registration', N'-1'' OR 2+587-587-1=0+0+0+1 or ''tM7aFIvC''=''', CAST(N'2020-09-05T09:00:30.777' AS DateTime), CAST(N'2020-09-05T09:02:30.777' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'4E775F', N'New', N'-1 OR 2+834-834-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T21:00:01.787' AS DateTime), CAST(N'2020-08-09T21:02:01.787' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'7BDF08', N'New', N'-1 OR 3*2>(0+5+834-834) --', N'sample@email.tst', CAST(N'2020-08-09T21:00:08.350' AS DateTime), CAST(N'2020-08-09T21:02:08.350' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'31DD76', N'New', N'-1 OR 3+317-317-1=0+0+0+1', N'sample@email.tst', CAST(N'2020-08-09T21:00:12.937' AS DateTime), CAST(N'2020-08-09T21:02:12.937' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5490AD', N'New', N'-1'' OR 3*2<(0+5+360-360) --', N'sample@email.tst', CAST(N'2020-08-09T21:00:23.840' AS DateTime), CAST(N'2020-08-09T21:02:23.840' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'123777', N'New', N'-1'' OR 2+802-802-1=0+0+0+1 or ''stGiL3LH''=''', N'sample@email.tst', CAST(N'2020-08-09T21:00:28.213' AS DateTime), CAST(N'2020-08-09T21:02:28.213' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'9B87A6', N'New', N'-1" OR 3*2>(0+5+859-859) --', N'sample@email.tst', CAST(N'2020-08-09T21:00:47.637' AS DateTime), CAST(N'2020-08-09T21:02:47.637' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'DF2710', N'New', N'NJlsIzRw'';select pg_sleep(6.47); --', N'sample@email.tst', CAST(N'2020-08-09T21:00:59.847' AS DateTime), CAST(N'2020-08-09T21:02:59.847' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F0B3D8', N'New', N'6xB0OSoO''));select pg_sleep(3.235); --', N'sample@email.tst', CAST(N'2020-08-09T21:01:08.460' AS DateTime), CAST(N'2020-08-09T21:03:08.460' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'BEAF74', N'New', N'registration', N'jeetyadav71997@gmail.com', CAST(N'2020-08-19T02:01:23.950' AS DateTime), CAST(N'2020-08-19T02:03:23.950' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0C27FC', N'New', N'registration', N'tirufish@gmail.com', CAST(N'2020-08-18T05:47:17.867' AS DateTime), CAST(N'2020-08-18T05:49:17.867' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2D8497', N'XSC456568', N'Active', N'SPRAKASH1971@YAHOO.COM', CAST(N'2020-08-20T04:08:35.570' AS DateTime), CAST(N'2020-08-20T04:10:35.570' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'9FA89B', N'XSC768052', N'Active', N'MDJAYAVEL@GMAIL.COM', CAST(N'2020-08-20T04:11:07.160' AS DateTime), CAST(N'2020-08-20T04:13:07.160' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'212E50', N'XSC939645', N'Active', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'2020-08-20T09:41:01.397' AS DateTime), CAST(N'2020-08-20T09:43:01.397' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D4B9B7', N'New', N'registration', N'UfUVqSqG'')); waitfor delay ''0:0:15'' --', CAST(N'2020-09-05T09:00:46.863' AS DateTime), CAST(N'2020-09-05T09:02:46.863' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2EF949', N'New', N'registration', N'qQB46X4A'' OR 702=(SELECT 702 FROM PG_SLEEP(15))--', CAST(N'2020-09-05T09:00:48.633' AS DateTime), CAST(N'2020-09-05T09:02:48.633' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C44A33', N'New', N'-1 OR 2+493-493-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-09-05T09:01:04.873' AS DateTime), CAST(N'2020-09-05T09:03:04.873' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'170EF3', N'New', N'-1 OR 2+172-172-1=0+0+0+1', N'sample@email.tst', CAST(N'2020-09-05T09:01:07.080' AS DateTime), CAST(N'2020-09-05T09:03:07.080' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'87F93A', N'New', N'-1'' OR 2+458-458-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-09-05T09:01:13.300' AS DateTime), CAST(N'2020-09-05T09:03:13.300' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'213649', N'New', N'-1" OR 2+300-300-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-09-05T09:01:17.587' AS DateTime), CAST(N'2020-09-05T09:03:17.587' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D482A0', N'New', N'WrOr6Mop'')); waitfor delay ''0:0:15'' --', N'sample@email.tst', CAST(N'2020-09-05T09:01:44.577' AS DateTime), CAST(N'2020-09-05T09:03:44.577' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'1B90F9', N'New', N'6j7fQUlB'' OR 98=(SELECT 98 FROM PG_SLEEP(15))--', N'sample@email.tst', CAST(N'2020-09-05T09:01:47.893' AS DateTime), CAST(N'2020-09-05T09:03:47.893' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'E24057', N'New', N'XKJ1Kin9'') OR 931=(SELECT 931 FROM PG_SLEEP(15))--', N'sample@email.tst', CAST(N'2020-09-05T09:01:51.193' AS DateTime), CAST(N'2020-09-05T09:03:51.193' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'11220A', N'New', N'@@Rj5li', N'sample@email.tst', CAST(N'2020-09-05T09:01:58.253' AS DateTime), CAST(N'2020-09-05T09:03:58.253' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5B6535', N'New', N'registration', N'arumugaws@gmail.com', CAST(N'2020-09-09T04:27:43.530' AS DateTime), CAST(N'2020-09-09T04:29:43.530' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'09D55A', N'New', N'registration', N'kesavanlg@gmail.com', CAST(N'2020-07-13T06:26:43.240' AS DateTime), CAST(N'2020-07-13T06:28:43.240' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'97C7FD', N'New', N'registration', N'haberci6767@gmail.com', CAST(N'2020-07-21T03:40:52.220' AS DateTime), CAST(N'2020-07-21T03:42:52.220' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'583106', N'New', N'registration', N'hastemsurvey@gmail.com', CAST(N'2020-07-23T18:00:45.257' AS DateTime), CAST(N'2020-07-23T18:02:45.257' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'379716', N'XSC674648', N'Active', N'SPRJPR@GMAIL.COM', CAST(N'2020-08-05T01:00:15.100' AS DateTime), CAST(N'2020-08-05T01:02:15.100' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B1D01D', N'XSC185623', N'Active', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'2020-08-05T07:02:11.707' AS DateTime), CAST(N'2020-08-05T07:04:11.707' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'017B08', N'New', N'registration', N'-1 OR 2+500-500-1=0+0+0+1 --', CAST(N'2020-08-06T05:08:37.980' AS DateTime), CAST(N'2020-08-06T05:10:37.980' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'41E127', N'New', N'registration', N'(select(0)from(select(sleep(15)))v)/*''+(select(0)f', CAST(N'2020-09-05T09:00:39.080' AS DateTime), CAST(N'2020-09-05T09:02:39.080' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C02D15', N'New', N'registration', N'05SwF7bo'')); waitfor delay ''0:0:15'' --', CAST(N'2020-08-06T05:08:44.573' AS DateTime), CAST(N'2020-08-06T05:10:44.573' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'625C8D', N'New', N'registration', N'LBz52yGv'' OR 365=(SELECT 365 FROM PG_SLEEP(15))--', CAST(N'2020-08-06T05:08:45.280' AS DateTime), CAST(N'2020-08-06T05:10:45.280' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'A8C364', N'New', N'registration', N'\', CAST(N'2020-08-09T20:59:48.440' AS DateTime), CAST(N'2020-08-09T21:01:48.440' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'673A0A', N'New', N'registration', N'@@6jvpG', CAST(N'2020-08-06T05:08:47.857' AS DateTime), CAST(N'2020-08-06T05:10:47.857' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'9307BE', N'New', N'-1 OR 2+432-432-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-06T05:08:55.370' AS DateTime), CAST(N'2020-08-06T05:10:55.370' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2AAB9D', N'New', N'-1'' OR 2+327-327-1=0+0+0+1 or ''i7X1HGW5''=''', N'sample@email.tst', CAST(N'2020-08-06T05:09:01.877' AS DateTime), CAST(N'2020-08-06T05:11:01.877' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F7245D', N'New', N'J3aThM0r'') OR 319=(SELECT 319 FROM PG_SLEEP(15))--', N'sample@email.tst', CAST(N'2020-08-06T05:09:43.320' AS DateTime), CAST(N'2020-08-06T05:11:43.320' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'04C975', N'New', N'qjLmqSLP'')) OR 77=(SELECT 77 FROM PG_SLEEP(15))--', N'sample@email.tst', CAST(N'2020-08-06T05:09:45.963' AS DateTime), CAST(N'2020-08-06T05:11:45.963' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'6AA3B1', N'XSC674648', N'WithDraw', N'SPRJPR@GMAIL.COM', CAST(N'2020-08-09T18:41:31.370' AS DateTime), CAST(N'2020-08-09T18:43:31.370' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'FC676D', N'New', N'registration', N'-1'' OR 2+776-776-1=0+0+0+1 --', CAST(N'2020-08-09T14:03:18.020' AS DateTime), CAST(N'2020-08-09T14:05:18.020' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'65AE3C', N'New', N'registration', N'if(now()=sysdate(),sleep(20.256),0)', CAST(N'2020-08-09T14:03:18.437' AS DateTime), CAST(N'2020-08-09T14:05:18.437' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'BD99FD', N'New', N'registration', N'(select(0)from(select(sleep(20.256)))v)/*''+(select', CAST(N'2020-08-09T14:03:19.490' AS DateTime), CAST(N'2020-08-09T14:05:19.490' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D2D318', N'New', N'registration', N'1 waitfor delay ''0:0:20.256'' --', CAST(N'2020-08-09T14:03:19.693' AS DateTime), CAST(N'2020-08-09T14:05:19.693' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'ACA1BC', N'New', N'registration', N'QXUa5IGJ'') OR 883=(SELECT 883 FROM PG_SLEEP(20.256', CAST(N'2020-08-09T14:03:20.637' AS DateTime), CAST(N'2020-08-09T14:05:20.637' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'D713CE', N'New', N'registration', N'@@fSlUw', CAST(N'2020-08-09T20:59:48.890' AS DateTime), CAST(N'2020-08-09T21:01:48.890' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'567CEF', N'New', N'-1 OR 2+41-41-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T14:03:25.347' AS DateTime), CAST(N'2020-08-09T14:05:25.347' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'AC60F4', N'New', N'-1 OR 2+182-182-1=0+0+0+1', N'sample@email.tst', CAST(N'2020-08-09T14:03:27.503' AS DateTime), CAST(N'2020-08-09T14:05:27.503' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'395AF7', N'New', N'1 waitfor delay ''0:0:12.412'' --', N'sample@email.tst', CAST(N'2020-08-09T14:03:44.517' AS DateTime), CAST(N'2020-08-09T14:05:44.517' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B3BE8A', N'New', N'GG31kMZQ''); waitfor delay ''0:0:12.412'' --', N'sample@email.tst', CAST(N'2020-08-09T14:03:48.833' AS DateTime), CAST(N'2020-08-09T14:05:48.833' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'ECEA14', N'New', N'registration', N'(select convert(int,CHAR(65)))', CAST(N'2020-08-09T20:59:49.780' AS DateTime), CAST(N'2020-08-09T21:01:49.780' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'CD9DAA', N'New', N'registration', N'-1 OR 2+384-384-1=0+0+0+1 --', CAST(N'2020-08-09T20:59:51.733' AS DateTime), CAST(N'2020-08-09T21:01:51.733' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'6D47E9', N'New', N'registration', N'-1 OR 3*2<(0+5+337-337)', CAST(N'2020-08-09T20:59:52.880' AS DateTime), CAST(N'2020-08-09T21:01:52.880' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'951E5B', N'New', N'registration', N'-1'' OR 2+165-165-1=0+0+0+1 --', CAST(N'2020-08-09T20:59:53.250' AS DateTime), CAST(N'2020-08-09T21:01:53.250' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2A7B79', N'New', N'registration', N'-1'' OR 3+434-434-1=0+0+0+1 or ''2iAA3wIm''=''', CAST(N'2020-08-09T20:59:54.303' AS DateTime), CAST(N'2020-08-09T21:01:54.303' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'B3A4CB', N'New', N'registration', N'-1'' OR 3*2<(0+5+434-434) or ''2iAA3wIm''=''', CAST(N'2020-08-09T20:59:54.483' AS DateTime), CAST(N'2020-08-09T21:01:54.483' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'ECD441', N'New', N'registration', N'(select(0)from(select(sleep(3.297)))v)/*''+(select(', CAST(N'2020-08-09T20:59:55.910' AS DateTime), CAST(N'2020-08-09T21:01:55.910' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'1E39BC', N'New', N'registration', N'H2Q6X1j7''; waitfor delay ''0:0:6.594'' --', CAST(N'2020-08-09T20:59:56.280' AS DateTime), CAST(N'2020-08-09T21:01:56.280' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'867875', N'New', N'registration', N'78aQoJeI'');select pg_sleep(6.594); --', CAST(N'2020-08-09T20:59:57.073' AS DateTime), CAST(N'2020-08-09T21:01:57.073' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F1368E', N'New', N'(select convert(int,CHAR(65)))', N'sample@email.tst', CAST(N'2020-08-09T21:00:05.537' AS DateTime), CAST(N'2020-08-09T21:02:05.537' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'BD8425', N'New', N'-1 OR 3*2>(0+5+317-317)', N'sample@email.tst', CAST(N'2020-08-09T21:00:17.303' AS DateTime), CAST(N'2020-08-09T21:02:17.303' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'910AB6', N'New', N'-1'' OR 3+360-360-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T21:00:21.677' AS DateTime), CAST(N'2020-08-09T21:02:21.677' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'5D89C1', N'New', N'-1'' OR 3*2<(0+5+802-802) or ''stGiL3LH''=''', N'sample@email.tst', CAST(N'2020-08-09T21:00:32.527' AS DateTime), CAST(N'2020-08-09T21:02:32.527' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'ACF2BA', N'New', N'-1" OR 2+859-859-1=0+0+0+1 --', N'sample@email.tst', CAST(N'2020-08-09T21:00:36.910' AS DateTime), CAST(N'2020-08-09T21:02:36.910' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'DB0548', N'New', N'uTFM9Ulq''; waitfor delay ''0:0:3.235'' --', N'sample@email.tst', CAST(N'2020-08-09T21:00:53.007' AS DateTime), CAST(N'2020-08-09T21:02:53.007' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'522DC6', N'New', N'Wg1vLhBY'')); waitfor delay ''0:0:6.47'' --', N'sample@email.tst', CAST(N'2020-08-09T21:00:57.507' AS DateTime), CAST(N'2020-08-09T21:02:57.507' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'2B6BAE', N'XSC829875', N'Active', N'GAJENDRABABU3636@GMAIL.COM', CAST(N'2020-08-18T20:54:57.000' AS DateTime), CAST(N'2020-08-18T20:56:57.000' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'200C3E', N'XSC833745', N'Active', N'PEARLSVENKATESAN@GMAIL.COM', CAST(N'2020-08-19T20:26:37.820' AS DateTime), CAST(N'2020-08-19T20:28:37.820' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'35E5D1', N'New', N'registration', N'yoviw65121@99mimpi.com', CAST(N'2020-08-30T09:06:00.687' AS DateTime), CAST(N'2020-08-30T09:08:00.687' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'289417', N'XSC614939', N'Active', N'TIRUFISH@GMAIL.COM', CAST(N'2020-08-19T19:51:21.643' AS DateTime), CAST(N'2020-08-19T19:53:21.643' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F86228', N'XSC743006', N'Active', N'MDJAYAVEL@GMAIL.COM', CAST(N'2020-08-20T04:12:53.280' AS DateTime), CAST(N'2020-08-20T04:14:53.280' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'0310F2', N'New', N'registration', N'sbunirmala123@gmail.com', CAST(N'2020-09-01T10:41:57.923' AS DateTime), CAST(N'2020-09-01T10:43:57.923' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'6ACEBF', N'New', N'registration', N'-1 OR 2+229-229-1=0+0+0+1 --', CAST(N'2020-09-05T09:00:30.397' AS DateTime), CAST(N'2020-09-05T09:02:30.397' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'E8F7B1', N'New', N'registration', N'-1" OR 2+744-744-1=0+0+0+1 --', CAST(N'2020-09-05T09:00:30.893' AS DateTime), CAST(N'2020-09-05T09:02:30.893' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'22CDD4', N'New', N'registration', N'0"XOR(if(now()=sysdate(),sleep(15),0))XOR"Z', CAST(N'2020-09-05T09:00:37.397' AS DateTime), CAST(N'2020-09-05T09:02:37.397' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'088B2D', N'New', N'registration', N'4fIawxEj''); waitfor delay ''0:0:15'' --', CAST(N'2020-09-05T09:00:45.233' AS DateTime), CAST(N'2020-09-05T09:02:45.233' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'37B609', N'New', N'registration', N'wjRB810o'') OR 436=(SELECT 436 FROM PG_SLEEP(15))--', CAST(N'2020-09-05T09:00:50.420' AS DateTime), CAST(N'2020-09-05T09:02:50.420' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'03B4CD', N'New', N'registration', N'jSOx37Z2'')) OR 377=(SELECT 377 FROM PG_SLEEP(15))-', CAST(N'2020-09-05T09:00:53.087' AS DateTime), CAST(N'2020-09-05T09:02:53.087' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'AFF098', N'New', N'registration', N'1''"', CAST(N'2020-09-05T09:00:55.603' AS DateTime), CAST(N'2020-09-05T09:02:55.603' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'73D580', N'New', N'registration', N'@@7aEuv', CAST(N'2020-09-05T09:00:55.907' AS DateTime), CAST(N'2020-09-05T09:02:55.907' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'4BDF84', N'New', N'-1'' OR 2+474-474-1=0+0+0+1 or ''eAzO6Ojg''=''', N'sample@email.tst', CAST(N'2020-09-05T09:01:15.433' AS DateTime), CAST(N'2020-09-05T09:03:15.433' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'46AE4A', N'New', N'0"XOR(if(now()=sysdate(),sleep(15),0))XOR"Z', N'sample@email.tst', CAST(N'2020-09-05T09:01:28.480' AS DateTime), CAST(N'2020-09-05T09:03:28.480' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'9F0AFB', N'New', N'oNoI7jyO''; waitfor delay ''0:0:15'' --', N'sample@email.tst', CAST(N'2020-09-05T09:01:38.197' AS DateTime), CAST(N'2020-09-05T09:03:38.197' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'C3FF32', N'New', N'0''XOR(if(now()=sysdate(),sleep(15),0))XOR''Z', N'sample@email.tst', CAST(N'2020-09-05T09:01:24.993' AS DateTime), CAST(N'2020-09-05T09:03:24.993' AS DateTime))
GO
INSERT [dbo].[OPT] ([OPTCode], [AppMstRegNo], [Type], [email], [createdon], [expireon]) VALUES (N'F6CD72', N'New', N'ie6W26Qg''); waitfor delay ''0:0:15'' --', N'sample@email.tst', CAST(N'2020-09-05T09:01:41.340' AS DateTime), CAST(N'2020-09-05T09:03:41.340' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[PaymentMst] ON 
GO
INSERT [dbo].[PaymentMst] ([srno], [Plan1], [plan2], [plan3], [Tax], [OC], [JoiningAmount], [startdate], [companyname], [address], [website], [phone], [BinaryCeiling], [senderid], [profileid], [pwd], [WithdrawalDate], [smsURL], [logoURL], [CompanyHead], [gmailAccount], [gmailPassword], [SMSCredit], [BulkProfileId], [BulkSenderId], [BulkPwd], [AdminBankId], [ROI1], [ROI2], [ROI3], [ROIDate], [CRate]) VALUES (1, 8, 0, 0, 0, 0, 500, CAST(N'2020-08-27T00:00:00.000' AS DateTime), NULL, NULL, NULL, NULL, NULL, N'0', N'0', N'0', CAST(N'2018-11-02T14:39:14.310' AS DateTime), NULL, N'0', N'0', N'0', N'0', 468, N'0', N'0', N'0', NULL, 0, 0, 0, CAST(N'2018-11-25T00:00:00.000' AS DateTime), 0.2822)
GO
SET IDENTITY_INSERT [dbo].[PaymentMst] OFF
GO
INSERT [dbo].[PaymentTranB] ([PaymentTranBId], [AppFromPayment], [AppToPayment], [AppCurrent], [PayoutNo], [BinaryBalance], [ProfitPercentage], [OrbitRateDes]) VALUES (1, CAST(N'2015-05-06T00:00:00.000' AS DateTime), CAST(N'2020-07-11T00:00:00.000' AS DateTime), 0, 1, 0, 0, 300)
GO
INSERT [dbo].[PaymentTranB] ([PaymentTranBId], [AppFromPayment], [AppToPayment], [AppCurrent], [PayoutNo], [BinaryBalance], [ProfitPercentage], [OrbitRateDes]) VALUES (2, CAST(N'2020-07-12T00:00:00.000' AS DateTime), CAST(N'2020-08-16T11:08:42.537' AS DateTime), 0, 2, 0, 0, 300)
GO
INSERT [dbo].[PaymentTranB] ([PaymentTranBId], [AppFromPayment], [AppToPayment], [AppCurrent], [PayoutNo], [BinaryBalance], [ProfitPercentage], [OrbitRateDes]) VALUES (3, CAST(N'2020-08-17T11:09:00.000' AS DateTime), CAST(N'2020-08-25T11:08:42.537' AS DateTime), 1, 3, 0, 0, 300)
GO
SET IDENTITY_INSERT [dbo].[PaymentTranDraft] ON 
GO
INSERT [dbo].[PaymentTranDraft] ([payoutno], [PaymentTranDraftId], [PaymentFromDate], [PaymentToDate], [appmstid], [AppMstRegno], [OrbitNo], [CycleNo], [TPL], [TPR], [NPL], [NPR], [BFL], [TP], [BFR], [CPL], [CPR], [CFL], [CFR], [binaryAmt], [directAmt], [JumboClub1Amt], [JumboClub2Amt], [JumboClub3Amt], [JumboClub4Amt], [JumboClub5Amt], [RoyaltyAmt], [PVBVAmt], [TotalEarning], [Tds], [HandlingCharges], [DispachedAmt], [CutAmount], [AddAmount], [Remarks], [PaymentTranDraftNo], [othercharges], [Paid_Status], [paymentdisplay], [chequedate], [chequeamount], [sentSMS], [maturityDate], [tranBy], [TranId], [franchiseid], [JumboClub6Amt], [JumboClub7Amt]) VALUES (2, 1, CAST(N'2020-07-12T00:00:00.000' AS DateTime), CAST(N'2020-08-16T11:08:42.537' AS DateTime), 13, N'XSC674648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), NULL, CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), N' ', N' ', CAST(0.00 AS Decimal(18, 2)), N'0', 1, CAST(N'2020-08-16T11:08:42.537' AS DateTime), NULL, 0, CAST(N'2020-08-31T11:08:42.537' AS DateTime), NULL, 0, 0, NULL, NULL)
GO
INSERT [dbo].[PaymentTranDraft] ([payoutno], [PaymentTranDraftId], [PaymentFromDate], [PaymentToDate], [appmstid], [AppMstRegno], [OrbitNo], [CycleNo], [TPL], [TPR], [NPL], [NPR], [BFL], [TP], [BFR], [CPL], [CPR], [CFL], [CFR], [binaryAmt], [directAmt], [JumboClub1Amt], [JumboClub2Amt], [JumboClub3Amt], [JumboClub4Amt], [JumboClub5Amt], [RoyaltyAmt], [PVBVAmt], [TotalEarning], [Tds], [HandlingCharges], [DispachedAmt], [CutAmount], [AddAmount], [Remarks], [PaymentTranDraftNo], [othercharges], [Paid_Status], [paymentdisplay], [chequedate], [chequeamount], [sentSMS], [maturityDate], [tranBy], [TranId], [franchiseid], [JumboClub6Amt], [JumboClub7Amt]) VALUES (2, 2, CAST(N'2020-07-12T00:00:00.000' AS DateTime), CAST(N'2020-08-16T11:08:42.537' AS DateTime), 14, N'XSC740234', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), NULL, CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), N' ', N' ', CAST(0.00 AS Decimal(18, 2)), N'0', 1, CAST(N'2020-08-16T11:08:42.537' AS DateTime), NULL, 0, CAST(N'2020-08-31T11:08:42.537' AS DateTime), NULL, 0, 0, NULL, NULL)
GO
INSERT [dbo].[PaymentTranDraft] ([payoutno], [PaymentTranDraftId], [PaymentFromDate], [PaymentToDate], [appmstid], [AppMstRegno], [OrbitNo], [CycleNo], [TPL], [TPR], [NPL], [NPR], [BFL], [TP], [BFR], [CPL], [CPR], [CFL], [CFR], [binaryAmt], [directAmt], [JumboClub1Amt], [JumboClub2Amt], [JumboClub3Amt], [JumboClub4Amt], [JumboClub5Amt], [RoyaltyAmt], [PVBVAmt], [TotalEarning], [Tds], [HandlingCharges], [DispachedAmt], [CutAmount], [AddAmount], [Remarks], [PaymentTranDraftNo], [othercharges], [Paid_Status], [paymentdisplay], [chequedate], [chequeamount], [sentSMS], [maturityDate], [tranBy], [TranId], [franchiseid], [JumboClub6Amt], [JumboClub7Amt]) VALUES (3, 3, CAST(N'2020-08-17T11:09:00.000' AS DateTime), CAST(N'2020-08-25T11:08:42.537' AS DateTime), 23, N'XSC961601', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), NULL, CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), N' ', N' ', CAST(0.00 AS Decimal(18, 2)), N'0', 1, CAST(N'2020-08-25T11:08:42.537' AS DateTime), NULL, 0, CAST(N'2020-09-09T11:08:42.537' AS DateTime), NULL, 0, 0, NULL, NULL)
GO
INSERT [dbo].[PaymentTranDraft] ([payoutno], [PaymentTranDraftId], [PaymentFromDate], [PaymentToDate], [appmstid], [AppMstRegno], [OrbitNo], [CycleNo], [TPL], [TPR], [NPL], [NPR], [BFL], [TP], [BFR], [CPL], [CPR], [CFL], [CFR], [binaryAmt], [directAmt], [JumboClub1Amt], [JumboClub2Amt], [JumboClub3Amt], [JumboClub4Amt], [JumboClub5Amt], [RoyaltyAmt], [PVBVAmt], [TotalEarning], [Tds], [HandlingCharges], [DispachedAmt], [CutAmount], [AddAmount], [Remarks], [PaymentTranDraftNo], [othercharges], [Paid_Status], [paymentdisplay], [chequedate], [chequeamount], [sentSMS], [maturityDate], [tranBy], [TranId], [franchiseid], [JumboClub6Amt], [JumboClub7Amt]) VALUES (3, 4, CAST(N'2020-08-17T11:09:00.000' AS DateTime), CAST(N'2020-08-25T11:08:42.537' AS DateTime), 30, N'XSC807414', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), NULL, CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), N' ', N' ', CAST(0.00 AS Decimal(18, 2)), N'0', 1, CAST(N'2020-08-25T11:08:42.537' AS DateTime), NULL, 0, CAST(N'2020-09-09T11:08:42.537' AS DateTime), NULL, 0, 0, NULL, NULL)
GO
INSERT [dbo].[PaymentTranDraft] ([payoutno], [PaymentTranDraftId], [PaymentFromDate], [PaymentToDate], [appmstid], [AppMstRegno], [OrbitNo], [CycleNo], [TPL], [TPR], [NPL], [NPR], [BFL], [TP], [BFR], [CPL], [CPR], [CFL], [CFR], [binaryAmt], [directAmt], [JumboClub1Amt], [JumboClub2Amt], [JumboClub3Amt], [JumboClub4Amt], [JumboClub5Amt], [RoyaltyAmt], [PVBVAmt], [TotalEarning], [Tds], [HandlingCharges], [DispachedAmt], [CutAmount], [AddAmount], [Remarks], [PaymentTranDraftNo], [othercharges], [Paid_Status], [paymentdisplay], [chequedate], [chequeamount], [sentSMS], [maturityDate], [tranBy], [TranId], [franchiseid], [JumboClub6Amt], [JumboClub7Amt]) VALUES (3, 5, CAST(N'2020-08-17T11:09:00.000' AS DateTime), CAST(N'2020-08-25T11:08:42.537' AS DateTime), 31, N'XSC185623', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(240.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), NULL, CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), N' ', N' ', CAST(0.00 AS Decimal(18, 2)), N'0', 1, CAST(N'2020-08-25T11:08:42.537' AS DateTime), NULL, 0, CAST(N'2020-09-09T11:08:42.537' AS DateTime), NULL, 0, 0, NULL, NULL)
GO
INSERT [dbo].[PaymentTranDraft] ([payoutno], [PaymentTranDraftId], [PaymentFromDate], [PaymentToDate], [appmstid], [AppMstRegno], [OrbitNo], [CycleNo], [TPL], [TPR], [NPL], [NPR], [BFL], [TP], [BFR], [CPL], [CPR], [CFL], [CFR], [binaryAmt], [directAmt], [JumboClub1Amt], [JumboClub2Amt], [JumboClub3Amt], [JumboClub4Amt], [JumboClub5Amt], [RoyaltyAmt], [PVBVAmt], [TotalEarning], [Tds], [HandlingCharges], [DispachedAmt], [CutAmount], [AddAmount], [Remarks], [PaymentTranDraftNo], [othercharges], [Paid_Status], [paymentdisplay], [chequedate], [chequeamount], [sentSMS], [maturityDate], [tranBy], [TranId], [franchiseid], [JumboClub6Amt], [JumboClub7Amt]) VALUES (3, 6, CAST(N'2020-08-17T11:09:00.000' AS DateTime), CAST(N'2020-08-25T11:08:42.537' AS DateTime), 47, N'XSC456568', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(120.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), NULL, CAST(0.00 AS Decimal(20, 2)), CAST(0.00 AS Decimal(20, 2)), N' ', N' ', CAST(0.00 AS Decimal(18, 2)), N'0', 1, CAST(N'2020-08-25T11:08:42.537' AS DateTime), NULL, 0, CAST(N'2020-09-09T11:08:42.537' AS DateTime), NULL, 0, 0, NULL, NULL)
GO
SET IDENTITY_INSERT [dbo].[PaymentTranDraft] OFF
GO
INSERT [dbo].[PayoutDate] ([PayFromDate], [PayToDate], [payoutno], [currentdate]) VALUES (CAST(N'2015-05-06T00:00:00' AS SmallDateTime), CAST(N'2020-07-11T00:00:00' AS SmallDateTime), 1, CAST(N'2020-07-11T00:00:00.000' AS DateTime))
GO
INSERT [dbo].[PayoutDate] ([PayFromDate], [PayToDate], [payoutno], [currentdate]) VALUES (CAST(N'2020-07-12T00:00:00' AS SmallDateTime), CAST(N'2020-08-16T11:09:00' AS SmallDateTime), 2, CAST(N'2020-08-16T11:08:42.537' AS DateTime))
GO
INSERT [dbo].[PayoutDate] ([PayFromDate], [PayToDate], [payoutno], [currentdate]) VALUES (CAST(N'2020-08-17T11:09:00' AS SmallDateTime), CAST(N'2020-08-25T11:09:00' AS SmallDateTime), 3, CAST(N'2020-08-25T11:08:42.537' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[PlanTypeMst] ON 
GO
INSERT [dbo].[PlanTypeMst] ([srno], [PlanTypeId], [Pname], [Detail], [doe], [Active], [ProductType], [Amount], [JoinFor], [Points], [ROI], [capping], [DirIncome]) VALUES (1, 1, N'Starter', N'Starter', CAST(N'2020-06-26T00:07:15.667' AS DateTime), 1, 1, 100, 2.5, 150, 0, 0, 0)
GO
INSERT [dbo].[PlanTypeMst] ([srno], [PlanTypeId], [Pname], [Detail], [doe], [Active], [ProductType], [Amount], [JoinFor], [Points], [ROI], [capping], [DirIncome]) VALUES (2, 2, N'Standerd', N'Standerd', CAST(N'2020-06-26T00:07:49.250' AS DateTime), 1, 1, 500, 2.5, 150, 0, 0, 0)
GO
INSERT [dbo].[PlanTypeMst] ([srno], [PlanTypeId], [Pname], [Detail], [doe], [Active], [ProductType], [Amount], [JoinFor], [Points], [ROI], [capping], [DirIncome]) VALUES (3, 3, N'Premium', N'Premium', CAST(N'2020-06-26T00:08:20.970' AS DateTime), 1, 1, 1500, 3, 200, 0, 0, 0)
GO
INSERT [dbo].[PlanTypeMst] ([srno], [PlanTypeId], [Pname], [Detail], [doe], [Active], [ProductType], [Amount], [JoinFor], [Points], [ROI], [capping], [DirIncome]) VALUES (4, 4, N'Platinum', N'Platinum', CAST(N'2020-06-26T00:08:57.003' AS DateTime), 1, 1, 5000, 3, 200, 0, 0, 0)
GO
INSERT [dbo].[PlanTypeMst] ([srno], [PlanTypeId], [Pname], [Detail], [doe], [Active], [ProductType], [Amount], [JoinFor], [Points], [ROI], [capping], [DirIncome]) VALUES (5, 5, N'Diamond', N'Diamond', CAST(N'2020-06-26T00:10:30.627' AS DateTime), 1, 1, 10000, 4, 200, 0, 0, 0)
GO
INSERT [dbo].[PlanTypeMst] ([srno], [PlanTypeId], [Pname], [Detail], [doe], [Active], [ProductType], [Amount], [JoinFor], [Points], [ROI], [capping], [DirIncome]) VALUES (6, 6, N'Crown', N'Crown', CAST(N'2020-06-26T00:11:17.807' AS DateTime), 1, 1, 25000, 4, 200, 0, 0, 0)
GO
SET IDENTITY_INSERT [dbo].[PlanTypeMst] OFF
GO
SET IDENTITY_INSERT [dbo].[Sharemst] ON 
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (1, 2, CAST(100 AS Numeric(18, 0)), 1, CAST(N'2020-07-12T17:52:14.527' AS DateTime), 1, 0, N'XSC342673', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 6909194861)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (2, 13, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-05T09:00:49.637' AS DateTime), 1, 0, N'XSC674648', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 8529833289)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (3, 15, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-05T09:35:39.760' AS DateTime), 1, 0, N'XSC282635', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 7514609459)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (4, 23, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-05T10:40:39.607' AS DateTime), 1, 0, N'XSC961601', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 8276803399)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (5, 30, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-05T12:34:21.660' AS DateTime), 1, 0, N'XSC807414', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 3447863197)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (6, 31, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-05T15:02:52.633' AS DateTime), 1, 0, N'XSC185623', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 6961753482)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (7, 14, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-09T08:33:38.670' AS DateTime), 1, 0, N'XSC740234', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 8406933048)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (8, 16, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-09T08:37:54.930' AS DateTime), 1, 0, N'XSC924394', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 1287282468)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (9, 17, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-09T08:41:55.327' AS DateTime), 1, 0, N'XSC141986', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 7166936161)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (10, 34, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-19T04:56:41.810' AS DateTime), 1, 0, N'XSC829875', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 6239085875)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (11, 35, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-19T04:58:19.723' AS DateTime), 1, 0, N'XSC855936', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 4318919123)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (12, 33, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T03:33:48.980' AS DateTime), 1, 0, N'XSC855626', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 2504196464)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (13, 84, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T03:48:39.397' AS DateTime), 1, 0, N'XSC219974', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 3491383821)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (14, 85, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T03:51:56.957' AS DateTime), 1, 0, N'XSC614939', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 4212481204)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (15, 24, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T04:27:29.493' AS DateTime), 1, 0, N'XSC833745', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 7203078937)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (16, 25, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T04:29:00.537' AS DateTime), 1, 0, N'XSC652087', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 9095753213)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (17, 83, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T04:34:32.223' AS DateTime), 1, 0, N'XSC476389', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 7174661866)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (18, 47, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T12:09:36.840' AS DateTime), 1, 0, N'XSC456568', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 3768543623)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (19, 48, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T12:11:32.000' AS DateTime), 1, 0, N'XSC768052', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 7106817449)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (20, 55, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T12:13:27.930' AS DateTime), 1, 0, N'XSC743006', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 1142142749)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (21, 64, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T12:15:52.343' AS DateTime), 1, 0, N'XSC114255', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 1783835754)
GO
INSERT [dbo].[Sharemst] ([srno], [Appmstid], [Amount], [iselegible], [DOE], [pintype], [netamt], [appmstregno], [receiptno], [EndAmount], [selection], [PlanType], [pinsrno], [ReqId], [RestDays], [ReceiveStatus], [RewardPoint], [ROICount], [TopupTime], [joinfor], [investment]) VALUES (22, 86, CAST(1500 AS Numeric(18, 0)), 1, CAST(N'2020-08-20T17:41:57.680' AS DateTime), 1, 0, N'XSC939645', N'0', CAST(0 AS Numeric(18, 0)), 0, 0, 0, N'', 0, 0, 0, 0, 0, NULL, 1073092142)
GO
SET IDENTITY_INSERT [dbo].[Sharemst] OFF
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'16553967-bd5d-4180-92b4-001244556b65', N'CC99B330-61B4-4B0A-AB01-730CBFCC2F19', 82, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T10:14:43.903' AS DateTime), CAST(N'2020-08-18T14:14:43.903' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1db789ac-ee01-44b8-98ef-004c91cbab59', N'DA6A0368-3BBD-42C7-95C9-77ACB757C3E3', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-08T19:25:52.370' AS DateTime), CAST(N'2020-08-08T23:25:52.370' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd599b18f-778b-4fc4-ac49-007c36b03ea0', N'8370CE75-86BE-412B-950D-47E95134C622', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T10:38:06.697' AS DateTime), CAST(N'2020-06-25T16:38:06.697' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9d89cf33-6d56-4b3a-924f-00a4abd1566c', N'4CC4C408-303B-4341-AD13-80FDFA1A58AC', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T09:25:38.103' AS DateTime), CAST(N'2020-06-26T11:25:38.103' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1ce333a7-1c0f-4329-9e9d-00a98da7cb5e', N'DD076B25-5FD4-49E6-99BC-2BADD60EB36E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T00:37:42.673' AS DateTime), CAST(N'2020-08-31T04:37:42.673' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'064e9bf2-fc2f-48de-b423-0149c4037b88', N'44BA20F7-9821-49A9-ACE9-D2100206EA4A', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T04:17:35.630' AS DateTime), CAST(N'2020-08-16T11:17:35.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c22ca46c-db88-4e42-b36b-017eaa381aa9', N'BECE9C7B-EE84-40B6-B5A1-6E07FE3D28AC', 46, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T14:50:26.227' AS DateTime), CAST(N'2020-08-23T22:50:26.227' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9702e79c-bd1b-4b9b-a49b-017f6d03f2d8', N'AB1339AF-59F5-4901-AE43-D59D9CE02799', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T11:09:32.570' AS DateTime), CAST(N'2020-08-05T05:09:32.570' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'55a1c307-99d5-48d3-a69d-018dca6895e9', N'8C7EF74E-8A20-4262-B617-E44E13A8D610', 62, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-15T03:02:45.243' AS DateTime), CAST(N'2020-07-15T07:02:45.243' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25c9e767-eb85-4842-9aa6-01b068bd1180', N'49F4AD2F-2398-44B8-BAB5-3CA9328113E2', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:32:37.120' AS DateTime), CAST(N'2020-07-11T10:32:37.120' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ee93a299-4980-4a6b-bcf3-0234fe14a0ee', N'C3050FE5-B669-45C2-9A2C-2D6DEBD28AF6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T19:29:52.477' AS DateTime), CAST(N'2020-09-14T05:29:52.477' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cac7dfb2-9f63-485f-a28a-027beee8951a', N'AA062C71-E389-467B-B4F5-84B2FDD40695', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T21:37:09.640' AS DateTime), CAST(N'2020-08-21T01:37:09.640' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'42a5780d-1ff9-4a9a-a507-029fdeb9ae4d', N'84CFB331-087F-45A8-863B-ED6BEEAC76B7', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-11T07:48:03.923' AS DateTime), CAST(N'2020-08-11T21:48:03.923' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'be5c5ec6-340b-4278-a7cb-02b037e0ee34', N'0E6E035B-5E04-40F0-AE03-3DBA25359B53', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-25T00:31:44.433' AS DateTime), CAST(N'2020-08-25T04:31:44.433' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ed927f72-7c77-4477-b1d8-02f5bab1d472', N'FB7D702E-BA09-4542-8506-ADF6953B2823', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T07:54:06.013' AS DateTime), CAST(N'2020-08-03T00:54:06.013' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4fa4605f-0088-4a42-a387-032ce175af7a', N'FCA53CE9-1682-4A98-B003-6771CF5C63C4', 9, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:11:57.947' AS DateTime), CAST(N'2020-07-11T08:11:57.947' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'702d1711-eed9-4b3e-8ceb-038f55094e4a', N'DEBEAEE6-F6AB-45DD-98E9-4F6F8D71C4CA', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:03:58.840' AS DateTime), CAST(N'2020-06-28T23:03:58.840' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a4e1e3f9-11d1-4234-8eaf-0395483c8180', N'826A06C0-38C0-401B-AA8C-606423FE9DF1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:55:09.780' AS DateTime), CAST(N'2020-08-05T15:55:09.780' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'006b082c-a018-44db-ba2e-03fa462baed0', N'83321AAB-29AD-44DD-B23E-7835F53BF086', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-25T01:51:42.700' AS DateTime), CAST(N'2020-07-25T14:51:42.700' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'837c0f66-a66d-468d-8c9f-04185ec0b970', N'B580876B-8434-4490-8751-830D38F6B4DD', 24, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T09:32:00.683' AS DateTime), CAST(N'2020-07-12T13:32:00.683' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'812daf7e-e49d-4145-816f-047419d50850', N'30C5C280-EDAB-4C36-AF76-7FCC493823B5', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:43:22.053' AS DateTime), CAST(N'2020-08-20T08:43:22.053' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e4352b5c-be8e-418f-8364-04dce8e57c6c', N'F30791A1-6840-45F2-81E2-D39996AC2641', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-19T09:54:57.253' AS DateTime), CAST(N'2020-07-19T17:54:57.253' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'68d1f1ec-3853-48dc-bc2c-05200e329756', N'D506C418-77F0-4F0D-B8EB-75E75EBAB549', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T00:16:16.677' AS DateTime), CAST(N'2020-09-02T04:16:16.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9cb4a215-1a72-47ea-ba28-0607fb01fec4', N'2042BA8F-52F9-4CEA-97DB-A03719347EB2', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T08:55:10.060' AS DateTime), CAST(N'2020-09-15T15:55:10.060' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fdfaeae6-132c-417c-a212-063521dc2ed2', N'BBCE2D24-A109-4131-AA01-EC082146EDE8', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-29T04:23:54.770' AS DateTime), CAST(N'2020-07-29T09:23:54.770' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a3610375-18f3-42db-bac7-063f45e6b15c', N'BAA37B72-A610-4E54-9D95-D56B6171F0A0', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T21:15:41.457' AS DateTime), CAST(N'2020-08-19T03:15:41.457' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'860d718c-a097-49f3-aa41-066580fed9fe', N'D0628F2E-F09C-4C85-95ED-4BF3BC29E495', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:47.427' AS DateTime), CAST(N'2020-06-28T08:21:47.427' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b6e42250-584d-4ca8-bfa5-0682285b66ec', N'31638C15-84BE-49A2-A71A-D069EA5F1D7A', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:49:49.467' AS DateTime), CAST(N'2020-08-05T14:49:49.467' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6d5b040e-802e-4576-b23f-06a9f7bb20d0', N'82BDC9A4-65E0-4E9B-9CF8-03146A24415E', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T06:22:26.420' AS DateTime), CAST(N'2020-09-15T18:22:26.420' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cf3abaaa-4084-44cb-b2f9-06fb9f5c62e6', N'5F25F748-C98B-444F-AE46-1BDD639E8931', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T21:33:35.013' AS DateTime), CAST(N'2020-06-08T04:33:35.013' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'75b86b06-0eb2-4c0f-befa-07fddce29b8d', N'B12D6154-B9C1-45A5-BB49-CC2D528B2D69', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T22:38:15.480' AS DateTime), CAST(N'2020-09-04T05:38:15.480' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6102aad6-47b0-44e6-8d8c-081bfdbe8d81', N'12F6CC75-496C-403E-B0A6-B8C395A8B2CB', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T09:44:32.220' AS DateTime), CAST(N'2020-08-21T05:44:32.220' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ec5ca36f-4c35-46f0-8689-087be6802387', N'4070F71B-F334-4730-9B4B-D29284067475', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:17:51.990' AS DateTime), CAST(N'2020-09-09T10:17:51.990' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e690ab4e-9d37-4115-af3e-08b2b4de0cfd', N'3A0550F7-286C-439D-88D1-435EB32AAC3A', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:07:19.593' AS DateTime), CAST(N'2020-07-07T05:07:19.593' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bcc1f8c5-290f-4610-85ee-08e88ef246d2', N'CA125D6F-D563-4664-B2DE-72C1205B18B3', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T20:37:49.083' AS DateTime), CAST(N'2020-08-16T12:37:49.083' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'600b06a7-6e9f-4e22-b533-094ea54467d8', N'FD1DB848-D32B-47FF-8707-CD45DF79EAAB', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T10:07:13.427' AS DateTime), CAST(N'2020-09-14T14:07:13.427' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'173c9c3f-e13c-4604-84d2-095c3e5a53d9', N'A1F964AB-81EA-40E6-AC77-8015EEE68F0A', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T22:19:05.040' AS DateTime), CAST(N'2020-06-08T02:19:05.040' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8c9bc01c-226e-4829-bf45-098e85d7f942', N'159A843F-B210-4FDE-A2F7-67DFFC66A991', 83, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:34:08.447' AS DateTime), CAST(N'2020-08-20T03:34:08.447' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2a59a8d4-3ff4-4306-b87b-09da2bcb3789', N'8824B76F-86FB-41D6-A226-56B66F6D5DD3', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:19:21.217' AS DateTime), CAST(N'2020-07-09T01:19:21.217' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1a3182d9-691c-4a0c-b6a3-09e1fb51ae13', N'DD6BB7B5-2ABD-47BC-AE4B-9A4ED7285C3F', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T09:01:03.147' AS DateTime), CAST(N'2020-08-18T13:01:03.147' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'35e9ca98-f65e-40c4-8c14-0a2cb684c789', N'00DD91BA-B1B3-44B8-8908-7A6D13B10993', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-15T10:37:29.903' AS DateTime), CAST(N'2020-06-15T16:37:29.903' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'29510fe0-92cb-4600-abfb-0a4023376e91', N'30F4C40F-AAF1-4D8A-A92E-E33E851EC4AF', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T01:02:02.107' AS DateTime), CAST(N'2020-08-26T05:02:02.107' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'675ce721-006d-4cc4-8dce-0aad287805a1', N'40A63A1A-51C9-4B19-9A46-B101598301B5', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:02:46.607' AS DateTime), CAST(N'2020-06-07T21:02:46.607' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'03cd93e7-3759-4a34-b7f0-0ab329092249', N'E0A196CE-B23F-4E60-9409-9CA8469867E4', 26, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T20:59:14.477' AS DateTime), CAST(N'2020-07-09T05:59:14.477' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'47a26ce4-8a2a-45c8-94f1-0ad4c4e680f5', N'72672326-27D6-4EBA-9C85-48D3362A5312', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-05T02:55:06.733' AS DateTime), CAST(N'2020-07-05T06:55:06.733' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1a6bb56f-b3be-4180-872e-0ae8c5725f5f', N'99171B98-2459-4847-AE87-FC2460DBC76E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-06T05:08:58.687' AS DateTime), CAST(N'2020-09-06T09:08:58.687' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a56ff9b8-aba2-46a0-b55f-0b7b292378e9', N'D85F2594-6CD8-4A10-803E-A54B625E08DB', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T02:14:37.603' AS DateTime), CAST(N'2020-09-02T06:14:37.603' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4723adbe-05d9-4b89-a775-0bcb0a3b277b', N'DDEDCA8F-8E83-401F-ADF0-75E0B5255398', 55, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:12:32.393' AS DateTime), CAST(N'2020-08-20T12:12:32.393' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a88943e8-4e2a-417f-9a3b-0bef48b936f0', N'C541BDB3-A9C0-4AD6-9B00-96817183C6BA', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T21:24:04.187' AS DateTime), CAST(N'2020-08-16T04:24:04.187' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd6a128e2-ad01-464f-b5e6-0c1a6ff164ee', N'1C4BD329-D5BC-462D-9679-8F7653F0F7DF', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-06T02:34:27.677' AS DateTime), CAST(N'2020-08-06T06:34:27.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c0b3839b-1639-4e0d-b4f7-0d6b089a0025', N'DA623116-6342-4E12-9DD8-36B53810AFB8', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T08:18:26.347' AS DateTime), CAST(N'2020-09-03T13:18:26.347' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ab6755c3-ea18-4396-a9d9-0d7715f24dfc', N'FB5FFA28-4AEE-4BC6-9FE6-B1F1A7BA13DA', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T05:42:31.083' AS DateTime), CAST(N'2020-07-06T14:42:31.083' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd8831e45-44ce-4929-a573-0d859b115af0', N'94436682-869A-4C3B-8C40-C5E35A9D5AB3', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:55:12.850' AS DateTime), CAST(N'2020-08-19T23:55:12.850' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e000cacb-7bbb-4ef3-aa6e-0db21277f189', N'17FE72E4-28CD-469B-875B-87AD5A349607', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T06:20:27.160' AS DateTime), CAST(N'2020-08-02T13:20:27.160' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e03d3f70-17f1-494e-9f98-0dd88b68f935', N'BA4A14D8-6046-4B67-9318-83ECA00B3E92', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:03:40.113' AS DateTime), CAST(N'2020-07-09T08:03:40.113' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eda6d229-317d-457c-af76-0e5260620397', N'9AA2E51C-F971-4475-BC12-CB1AD6BFBF55', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T12:15:35.540' AS DateTime), CAST(N'2020-08-21T16:15:35.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cd76443b-c204-4a24-88ac-0e7fcfa99441', N'AFEEE521-0886-48FD-A162-7C1F8D42FBAC', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T21:35:33.127' AS DateTime), CAST(N'2020-09-04T01:35:33.127' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9bdd46ef-206f-47a2-bdb7-0eabd0065c86', N'091338DE-3B89-4196-9F3B-84774230CEAC', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T23:20:22.233' AS DateTime), CAST(N'2020-08-24T06:20:22.233' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1a21d5a4-2aeb-4b51-8cbb-0eb7a95efaaf', N'12256FBE-4662-49AD-9CBE-11789F5D47BB', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T03:28:48.540' AS DateTime), CAST(N'2020-09-16T07:28:48.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ab28d6ec-c43e-4e4c-9745-0ec24d30e03f', N'8E85C086-D21E-43FE-B879-5BE0EE68BDDA', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-04T23:21:15.910' AS DateTime), CAST(N'2020-07-05T06:21:15.910' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f4b4ef4a-7a0e-439c-b4f5-0fb0d279d00f', N'50C78C33-8BF6-4084-B359-C18318A704B6', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T20:25:10.130' AS DateTime), CAST(N'2020-07-11T01:25:10.130' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b9df2af7-bca9-40c0-bf8a-0fb2cee72231', N'168074C3-DC03-47A0-834B-5741E9DCAEF6', 5, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:23:04.813' AS DateTime), CAST(N'2020-07-11T04:23:04.813' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b3ee9496-e944-482c-825d-1001c487947f', N'DBA6EBED-E058-4F03-9DEE-4D96FF160010', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:09:01.693' AS DateTime), CAST(N'2020-07-09T06:09:01.693' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'229ad4b5-ee39-4c11-9957-103a0917aae1', N'0B3451BD-D1AA-436F-94D3-9F3647B6E542', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T10:16:13.757' AS DateTime), CAST(N'2020-08-18T15:16:13.757' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'26093fe3-2a75-4044-849d-103ed474dcc9', N'25AE8156-5E6F-42B2-8C9D-71CC4E57B8AF', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:16:54.523' AS DateTime), CAST(N'2020-07-11T10:16:54.523' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c9eea54b-fb17-46ee-a750-10c6388ee3b3', N'19A90F79-811E-46A1-BA85-DE18951DD70C', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:54:46.683' AS DateTime), CAST(N'2020-06-07T21:54:46.683' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'706adb5c-e08b-418d-af25-11a49fcccd04', N'08ED7867-6F45-4DA0-9014-8951067F4D4E', 36, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T12:03:45.127' AS DateTime), CAST(N'2020-06-28T13:03:45.127' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8769bbe6-9cef-4d81-8660-12045ad7a832', N'BC67B876-40BD-4C47-B118-D4CE06401B54', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T18:25:48.837' AS DateTime), CAST(N'2020-09-10T22:25:48.837' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'974a4f57-8686-4335-840b-121bcc45b026', N'E081F9CC-331A-4866-B046-7C2C28A38864', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T03:19:58.313' AS DateTime), CAST(N'2020-08-26T07:19:58.313' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9d59e1e5-13fe-4ac1-bd19-12219781a021', N'C6646894-B11B-4DCC-BA73-DB30B9A73E04', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T10:43:47.813' AS DateTime), CAST(N'2020-07-09T14:43:47.813' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dcbe2861-bbc7-4c67-a04c-12393e5d2e1f', N'A58CEB65-DB3A-441D-96AF-694EF680D5CE', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T01:51:22.537' AS DateTime), CAST(N'2020-08-18T05:51:22.537' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7bce4989-d415-4146-9dc0-12687eade44f', N'EAB8B6A2-E428-4540-AC31-3A0297132E9F', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:35:27.770' AS DateTime), CAST(N'2020-07-11T09:35:27.770' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3050c018-3342-4226-9d56-12893651e361', N'4DE2C840-2CE0-4833-A496-1334361E24D4', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T00:44:39.717' AS DateTime), CAST(N'2020-09-07T07:44:39.717' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6a5ff21e-cd30-4644-93bc-12ff664d7713', N'28E97825-E27E-4A76-9822-7C57EB0DD43F', 27, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T12:36:53.493' AS DateTime), CAST(N'2020-07-10T03:36:53.493' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eac83b91-b7e6-453c-bddb-1316565433b7', N'3E84411F-2CC1-4C18-991C-C375A06B0932', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T06:02:43.887' AS DateTime), CAST(N'2020-07-13T01:02:43.887' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7c0a8b61-4328-4382-93e1-137103f4c0ba', N'0128DEE5-906F-40BC-9B7E-89DDB01DF693', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T04:23:00.583' AS DateTime), CAST(N'2020-07-07T11:23:00.583' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7aa23a6b-025c-4f51-9e1a-13ddcc8a1fa1', N'E51DAFB7-FAC0-491F-BD64-AE93DBD63785', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T06:44:30.347' AS DateTime), CAST(N'2020-09-03T10:44:30.347' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5c71d59e-a59b-4e62-a110-13ea3487e3c0', N'74D6779C-757D-4D0A-8C9A-E390C90B2A36', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:19:42.250' AS DateTime), CAST(N'2020-07-10T02:19:42.250' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0d12949c-8c6d-4173-9aee-1444d6d5885d', N'C7F41AFE-233A-4869-9618-42E939397937', 9, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:29:24.733' AS DateTime), CAST(N'2020-07-09T10:29:24.733' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'32c499c1-67c0-4869-96f2-14e3c14b245c', N'519928E3-D418-4484-9F31-6F95F14C4CF3', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T21:58:37.807' AS DateTime), CAST(N'2020-07-11T02:58:37.807' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'de705a36-2e8f-4900-8917-15db91dce687', N'DA483A4D-C6BA-47F1-8097-4F7DF56AF1D7', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:00:30.200' AS DateTime), CAST(N'2020-08-19T23:00:30.200' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd6a7e786-a3ff-4cf2-8b32-162a622135da', N'9DE87CBB-536F-40C2-BC53-2A81066C6834', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T02:48:37.380' AS DateTime), CAST(N'2020-08-19T09:48:37.380' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ccefc5d6-f4fe-49b2-b37e-162d6bf0b377', N'CC1102BD-B104-4EFB-BD0A-96203C9E46A0', 24, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T01:23:13.347' AS DateTime), CAST(N'2020-08-26T05:23:13.347' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'905ab4c9-ff79-4bc1-ba13-1636063412f6', N'38A74672-9747-4742-B2EC-8D5CD47A4CF1', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-01T23:17:42.797' AS DateTime), CAST(N'2020-08-02T05:17:42.797' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b0c3e03e-33c5-4d12-8068-1659541f4fed', N'58E1204C-07B3-47FB-AE4D-D1EA6FDD1CFB', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T04:15:06.007' AS DateTime), CAST(N'2020-07-07T15:15:06.007' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5ffa729f-ab8d-4a58-b99b-1685963d28c4', N'174AD5B2-B419-4641-8DAC-887DC81E1573', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:36:59.017' AS DateTime), CAST(N'2020-08-20T05:36:59.017' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f070e7d6-ecf2-4316-b7f5-169626891d34', N'B91BA8A8-6F1B-4F6B-91D7-EC9E5E68C4D7', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-03T00:24:06.347' AS DateTime), CAST(N'2020-07-03T01:24:06.347' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c81b19ee-7284-4f7a-9062-16e83537fa19', N'0B123F15-565A-4BF9-8C00-5F1FB3B240AA', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:06:45.697' AS DateTime), CAST(N'2020-09-12T10:06:45.697' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'50244f0a-239d-41d1-b607-176dae71895a', N'FCD4E527-7091-482A-895A-1432EABC6F6A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T01:33:05.237' AS DateTime), CAST(N'2020-08-18T06:33:05.237' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8e1bcaf3-b3a8-4d96-8a4a-177e9e24640b', N'985E2135-CD4C-4666-994C-09D563339F7A', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T09:28:15.283' AS DateTime), CAST(N'2020-06-23T10:28:15.283' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5c0b0945-12ae-4d85-b93d-1783e7da6eda', N'6585FE83-30D3-4C3A-AC69-5EED0532703D', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T02:27:25.837' AS DateTime), CAST(N'2020-08-26T09:27:25.837' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'63e42ee0-01de-4a7f-b842-178e74779b92', N'4E0BBA9D-682C-43D1-B9A5-222A2276FC10', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T20:42:27.243' AS DateTime), CAST(N'2020-07-12T03:42:27.243' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a19d3369-42cc-4b80-9b83-17b462ffae94', N'22C4DB6F-9B5D-483A-8B19-A728537E8A33', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T11:31:24.763' AS DateTime), CAST(N'2020-08-10T17:31:24.763' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fe845066-c4d4-4013-80c2-17ef1d21d9d3', N'A88B01C0-F76B-4330-821A-B03002FC3077', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T06:06:58.803' AS DateTime), CAST(N'2020-06-09T10:06:58.803' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e8379706-9c7b-44c0-be32-1818cacd1f36', N'5D4BEA12-241B-4CFC-8066-6F0C64BAC775', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:05:42.793' AS DateTime), CAST(N'2020-06-07T21:05:42.793' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3dcc092b-d976-4369-ab05-182737f404e8', N'C6122237-A402-463B-B5CC-99DC15259059', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-07T10:15:43.273' AS DateTime), CAST(N'2020-08-07T17:15:43.273' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b1552694-1165-47c7-9a6a-1878b54571ba', N'69568966-EF5F-49D5-B927-D61ED4EBB0DF', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:06:16.997' AS DateTime), CAST(N'2020-07-10T21:06:16.997' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8acf8c58-29bd-400d-b14f-193db2d15970', N'EF76400B-48D8-4F7D-93F4-7C44B3A388D1', 25, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:28:10.603' AS DateTime), CAST(N'2020-08-20T07:28:10.603' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1d3f34e6-4c80-4419-a321-1975152b1b16', N'F0668017-A783-4EA2-8155-2823DFAD82F7', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-24T20:02:05.850' AS DateTime), CAST(N'2020-08-24T21:02:05.850' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd66e0d24-4332-403e-8c43-19dda0dd0e97', N'AFDE035E-F23D-4F51-AE54-B695DBA480CF', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-27T08:42:12.553' AS DateTime), CAST(N'2020-07-28T00:42:12.553' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ad8f7c86-8c32-4eaf-bf46-19ff6c0253c8', N'E1FB10F6-5EE3-414C-A1C5-99B696D8A2F3', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-24T21:12:02.193' AS DateTime), CAST(N'2020-08-25T04:12:02.193' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'002fb901-b00b-4dc5-9bc4-1a372a637a8b', N'85E05761-30C0-40A4-B71E-EF05154713C5', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T19:48:42.393' AS DateTime), CAST(N'2020-08-27T14:48:42.393' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e0ecbcfc-8c22-42bb-aee0-1a59fe38fe2e', N'3C95C532-0428-40AE-94D9-4AEB47930BC0', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:01:16.497' AS DateTime), CAST(N'2020-08-20T03:01:16.497' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd356804b-1255-4de5-b27a-1ab382d23b80', N'46E8E1A1-82BB-477C-AC81-F556FD7310E7', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:45:06.380' AS DateTime), CAST(N'2020-07-08T22:45:06.380' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7b644a92-dd07-437f-ae21-1aef367aa7bb', N'EBEF0E9F-0AA7-4C5E-9200-8B4D56FDBB45', 4, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:28:12.030' AS DateTime), CAST(N'2020-07-11T04:28:12.030' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5c8d3beb-757a-4d1b-a121-1b1af0247dd8', N'DF5D7AFB-F6AB-45F6-9DE5-AFF52C49C2B5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-06T03:18:46.583' AS DateTime), CAST(N'2020-08-06T07:18:46.583' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e79bfcee-faf6-4a0f-81fd-1bc9724bbaea', N'4E95C87B-3B8C-481A-8831-25503D5335D6', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T03:16:13.530' AS DateTime), CAST(N'2020-08-26T07:16:13.530' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0952eb15-458c-43d2-9850-1bd55a8e9481', N'292BB408-AF0F-465C-814B-1075CEDEA116', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T09:52:56.520' AS DateTime), CAST(N'2020-08-20T13:52:56.520' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3c213284-b00e-4683-92cc-1cfd367ce2a7', N'19B3963D-C5EC-441A-8CDB-937CD19E4651', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T22:16:57.010' AS DateTime), CAST(N'2020-09-08T05:16:57.010' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6eba8cda-eef1-415a-bd16-1d9f60890932', N'6F41E5EB-0B52-4AF7-8988-51414BE1917A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-14T04:53:04.657' AS DateTime), CAST(N'2020-08-14T08:53:04.657' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bd79dca2-5478-4938-a3dd-1dd634dbee6e', N'0E110899-53EC-46DF-A269-1848D7C38FFB', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:02:25.223' AS DateTime), CAST(N'2020-07-09T08:02:25.223' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'694d46d8-487e-4afd-b291-1e2fb182f7a9', N'B2AE4012-D3BD-4557-90EF-2694E890A052', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:04:41.583' AS DateTime), CAST(N'2020-07-07T05:04:41.583' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ce94e1f4-eb99-4a4b-b4e2-1e8aa36e8e17', N'3C7B8CBE-63E9-40C5-AE9A-7D410AD32F28', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T05:30:55.270' AS DateTime), CAST(N'2020-08-16T18:30:55.270' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a344abf1-95b6-488f-80be-1e8fcdf209b6', N'BD6F694C-E012-4321-AE5A-00B976901AE7', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T05:44:11.717' AS DateTime), CAST(N'2020-07-13T09:44:11.717' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25e477c4-24dd-401e-aba2-1e9cab873118', N'009C7E2E-F1E9-4839-B66D-2D92E27BE8C0', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-26T09:36:18.750' AS DateTime), CAST(N'2020-06-26T16:36:18.750' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'008f2449-6fbd-4a63-bd1d-1ebe8093ab09', N'4810F01C-1E9D-49C9-A5FB-D0143E6B852C', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T13:15:31.190' AS DateTime), CAST(N'2020-08-18T20:15:31.190' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8f9dc589-f7a4-4fed-bb8d-1f0222c24232', N'00A002CB-53E9-476F-80D6-BFC510088A5D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T10:31:23.547' AS DateTime), CAST(N'2020-07-11T17:31:23.547' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8ea32cc1-5266-42ac-9858-1f067b4af0b0', N'557D21B5-5BD0-467A-B2FB-7A1C367BDCC5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T09:09:20.337' AS DateTime), CAST(N'2020-08-18T16:09:20.337' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8dcac7d6-6feb-44a6-bc9e-1f14502471ff', N'D1238918-0D06-4A9B-8309-1312096934EF', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-27T08:41:10.977' AS DateTime), CAST(N'2020-07-27T12:41:10.977' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd7865796-03cd-4c2d-82ad-1f393f713465', N'A1210D56-C19E-48F5-A953-C55054C56EF6', 5, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:45:17.863' AS DateTime), CAST(N'2020-07-11T14:45:17.863' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'59cbdf2d-0b2e-4f16-b9d2-1f44dd229930', N'AD3CE4D2-E1D1-4E25-8956-6128240EDDF4', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T23:02:57.883' AS DateTime), CAST(N'2020-07-10T04:02:57.883' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0de8259c-4f26-4999-b5e6-1f4ce2b992e4', N'F1C9381E-1A9E-430C-BF30-5B0DD3996DF7', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-25T19:28:45.010' AS DateTime), CAST(N'2020-08-25T23:28:45.010' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1e54f1d9-1a43-401e-81fa-1f5726888748', N'17BE6F54-81FB-42D4-9A79-B80314D61471', 36, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T12:03:50.633' AS DateTime), CAST(N'2020-06-28T13:03:50.633' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3f58dd47-9f74-4c91-b601-1f6dd9aea070', N'C66DD768-5E6B-4F22-806C-5D31B5EA5744', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T05:41:43.980' AS DateTime), CAST(N'2020-08-31T06:41:43.980' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'93097886-4f25-46f4-a687-1f999be5d57c', N'F5C0ED08-78EB-46A2-8EBB-55CF387309C0', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T12:34:18.233' AS DateTime), CAST(N'2020-07-09T16:34:18.233' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'960aff04-e82f-4fc0-ab80-1fdf173f7e82', N'B4601702-0BE3-4574-9640-715FD894CD2B', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T04:43:42.390' AS DateTime), CAST(N'2020-08-18T08:43:42.390' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c136032c-2356-4464-8418-20a33a3944ed', N'0DCFD919-7A38-4505-90E3-4FFA358287EA', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:01:10.857' AS DateTime), CAST(N'2020-07-09T01:01:10.857' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'696c2995-6bb9-4e5e-9e23-20e03d1439c6', N'F2010FFC-BEED-459F-8F45-0862BA98ED1D', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:03:53.910' AS DateTime), CAST(N'2020-07-11T03:03:53.910' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'85d74c0a-0ce3-44e4-896c-2143e4528835', N'67F951AD-A55D-44CD-8D7F-525AD3232A96', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T05:47:48.213' AS DateTime), CAST(N'2020-09-12T20:47:48.213' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7dadeb95-976b-4251-8b06-2148a9a6497d', N'C782A381-8411-4367-94B6-BF71813E25F8', 55, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T09:39:01.527' AS DateTime), CAST(N'2020-08-16T00:39:01.527' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fae0040e-8a7e-49cf-a593-21683ab19ea3', N'CF128E53-7C7D-46AE-B508-F08BAFB5A169', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:20:22.287' AS DateTime), CAST(N'2020-07-09T08:20:22.287' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f50c1f48-86c4-48ad-9ca8-21760b72ce28', N'2B740F61-C17A-49B2-A8DE-1A50D4064602', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:18:54.043' AS DateTime), CAST(N'2020-07-09T03:18:54.043' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f0a80cd3-8ab3-4d23-8973-21b47c4d29f0', N'36CB5B07-A487-4370-8133-DF1FA03487FA', 62, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-15T03:02:05.060' AS DateTime), CAST(N'2020-07-15T07:02:05.060' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'19029802-02a8-488f-b8ba-21bdb10090ad', N'C68238C7-92B2-404A-8A6A-99079A15CCEC', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-06T02:35:34.740' AS DateTime), CAST(N'2020-08-06T06:35:34.740' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9d398d17-97ad-490d-ac7a-21d8d753632d', N'55F5E514-673E-41E5-B7AA-48BDB1A83B58', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T05:12:45.083' AS DateTime), CAST(N'2020-08-19T09:12:45.083' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7726f719-2733-4f7f-a553-2201d6a7be5c', N'0E34A20E-6F46-4DB6-9169-34111066055B', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T21:13:30.560' AS DateTime), CAST(N'2020-08-19T02:13:30.560' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e4bcaec7-0166-4be9-9e60-22172ac69a66', N'90B54470-B301-45EC-B393-BB1B56CA3C93', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T09:02:36.883' AS DateTime), CAST(N'2020-08-18T13:02:36.883' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eec45a98-a7cc-4f68-8894-2242486966e5', N'C0D317AB-9B96-448A-BC26-739C85DC3F49', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T04:10:45.460' AS DateTime), CAST(N'2020-07-07T09:10:45.460' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c997ad09-4214-41df-a26b-22568b734e5e', N'F559EB27-498C-46D1-A46D-A5C277E6ABF3', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T08:31:27.753' AS DateTime), CAST(N'2020-08-31T12:31:27.753' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b8135732-a10d-4ed9-9230-2271ec1059f2', N'FDF10D70-C48A-4DA0-BCA1-7D6C5EE9A969', 84, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:41:07.767' AS DateTime), CAST(N'2020-08-20T03:41:07.767' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'13990db7-ce7a-45d0-b54f-22b131f9fa34', N'2BF3C651-79F6-438F-84D6-EC8C3D954D85', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-27T00:09:09.373' AS DateTime), CAST(N'2020-08-27T04:09:09.373' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a2317386-bec4-4bb5-8198-230f7f685c67', N'66564B52-F48E-4045-A530-B1406BFA24AC', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T01:25:29.847' AS DateTime), CAST(N'2020-08-18T06:25:29.847' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f497c718-f22d-409d-82aa-2331f6ab22d5', N'1649808C-F208-4BA7-8700-4E4E5B08A9B8', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T11:57:18.800' AS DateTime), CAST(N'2020-08-19T21:57:18.800' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a980d86a-44c4-4c54-ab01-2339e68c8d6d', N'D9C634C0-4A21-4204-9865-2F8C0FF6A2DA', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T09:31:10.643' AS DateTime), CAST(N'2020-07-12T13:31:10.643' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'54b71fd5-6d6a-475b-9342-23b417e47f25', N'399651C4-6F94-4163-AB46-03AB5324C181', 83, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T21:00:26.587' AS DateTime), CAST(N'2020-08-23T01:00:26.587' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'359d8f0e-bc33-4a36-aeba-24792271054b', N'7B6C754F-DAA8-43C5-A8ED-F8D44ED7C1C4', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T21:13:40.853' AS DateTime), CAST(N'2020-08-20T19:13:40.853' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b978b1e6-4f7c-4974-9090-247f5ba0b227', N'D93AF750-1A56-48DF-B3CB-960DEE9AC2BC', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T08:03:26.227' AS DateTime), CAST(N'2020-07-14T22:03:26.227' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'83edbdcf-a87c-48a2-89da-24a948fa35a6', N'E04997A1-5739-4F8D-8AE1-F232CEFABAF5', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:58:09.320' AS DateTime), CAST(N'2020-07-10T16:58:09.320' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0d8ad5a8-5120-47f6-b263-25448385eaa8', N'AFDCE390-C0C8-4C56-A1BF-4A4642EAF4FC', 63, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-15T03:01:18.023' AS DateTime), CAST(N'2020-07-15T11:01:18.023' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1694b0df-8e22-4248-be82-25693992208d', N'E4F74BF2-4EFF-43D4-BF76-582CDBB490D3', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T02:47:08.933' AS DateTime), CAST(N'2020-07-06T10:47:08.933' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'43b95412-d8e2-4101-bb6b-257140d5f7f5', N'C75DF9DA-CA54-4243-9005-84344FF46AEF', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:05:48.610' AS DateTime), CAST(N'2020-09-12T13:05:48.610' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c6907109-97b5-4f62-ba29-258ff3f86323', N'7A8677FD-EDFE-4CD1-8642-6F40D4634CD3', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T01:49:56.720' AS DateTime), CAST(N'2020-08-28T06:49:56.720' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'90f923ed-5a45-4788-a9b9-25bfbec10475', N'687E46C3-A980-4647-ACA9-0246548F059A', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T21:38:02.780' AS DateTime), CAST(N'2020-09-03T07:38:02.780' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f0453a06-509c-4362-9e4a-25f57fa4129b', N'7F918C2B-9B23-4186-8346-D0FEC2B54F39', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T21:25:02.457' AS DateTime), CAST(N'2020-09-17T02:25:02.457' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'76ab00ee-c613-4a18-9cf3-2614bc0c1480', N'136ED586-A3A4-4130-9142-A88016ECD46F', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-06T03:33:08.997' AS DateTime), CAST(N'2020-09-06T07:33:08.997' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'93167869-14cf-4c4a-993e-263a76090d20', N'E0F3D18C-A84C-40B9-BC2C-F267CB4AD1F1', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:37:35.500' AS DateTime), CAST(N'2020-06-07T21:37:35.500' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'faa3b0f2-236e-4080-9c6e-26683029c17d', N'D73309FE-410E-4BCC-9767-2BF13B6FC7E5', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-19T03:27:50.473' AS DateTime), CAST(N'2020-07-19T07:27:50.473' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'183db4e0-0299-4cf6-961a-284b914c496c', N'A528E340-F3FE-404C-A197-A668B4F2A793', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:37:00.607' AS DateTime), CAST(N'2020-07-10T04:37:00.607' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'60c88749-257e-49fd-8eaf-28f1566a1ddd', N'BB4FFADA-8CB0-43C2-A933-56A2DAA19C52', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T21:11:56.177' AS DateTime), CAST(N'2020-08-19T02:11:56.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'024d3e10-5e98-49ce-b31e-2946ff06e53f', N'1E070757-67E5-4690-B5B5-73E03E743F8F', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T22:03:14.680' AS DateTime), CAST(N'2020-07-14T02:03:14.680' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4629ec2f-cd6e-4c56-8986-298355ac1991', N'EE9D9ADD-94CC-48A5-861F-23A2F8C3CB2C', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T23:56:16.227' AS DateTime), CAST(N'2020-07-07T04:56:16.227' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4e4239b5-eea0-4c36-ad6f-299ecd10f6db', N'A49F2006-7FA7-4312-96C4-B5DD5E6DA5A8', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:49:19.633' AS DateTime), CAST(N'2020-08-20T06:49:19.633' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd9c7f504-b2cf-4571-ade1-2a64d2cd2df2', N'565DD856-6B30-4605-95AD-9F50140EB639', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T23:57:31.820' AS DateTime), CAST(N'2020-09-09T03:57:31.820' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd92b3425-8981-45de-acd9-2b57b7bd01ab', N'D4427309-49F0-4968-A631-AFF8D9205D0E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T06:21:03.100' AS DateTime), CAST(N'2020-09-10T10:21:03.100' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8bba8b72-f344-4de5-9719-2bfbad2922ae', N'3FFAC32D-4BA3-4D5C-80A0-232078808006', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T23:34:55.017' AS DateTime), CAST(N'2020-08-29T03:34:55.017' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'64103996-48c6-444c-9e0e-2c560565136c', N'8EF31BC3-A889-4596-8BB6-3738CD86B641', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T20:15:37.083' AS DateTime), CAST(N'2020-07-13T19:15:37.083' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1836243c-c6e0-412a-9e82-2c80e5c5e519', N'F4146B8F-F95F-4043-818E-35A9DE266932', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-04T23:20:57.500' AS DateTime), CAST(N'2020-07-05T03:20:57.500' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c8509bd8-564c-4b47-9949-2c912685620d', N'37D968AE-C8BB-464A-B7CB-CF51AA0B5C63', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-11T18:22:35.803' AS DateTime), CAST(N'2020-09-12T06:22:35.803' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4c40849b-a00a-4ed2-9f25-2cb311f0e129', N'F7780F04-4344-4781-966A-46ED5DD0FA07', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T01:21:50.207' AS DateTime), CAST(N'2020-08-26T08:21:50.207' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'21bb546a-5629-46db-b866-2ccb9d67e887', N'4FD5A999-4E2D-4003-BEF2-F8CFC971BD06', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-04T23:27:47.520' AS DateTime), CAST(N'2020-07-05T03:27:47.520' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'76d9675c-4c1c-49d4-a195-2ce8496eb70e', N'6B06AB25-44D3-44FC-832A-76268928EF92', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T21:46:20.320' AS DateTime), CAST(N'2020-08-20T04:46:20.320' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1e90cf82-5323-4760-8d96-2d47e8e2a51a', N'FA28C12A-059E-4E6B-9FAF-093D0C1A5733', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:15:57.833' AS DateTime), CAST(N'2020-08-20T14:15:57.833' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'29362495-345e-4954-8188-2d5d4b268f8c', N'55C68D85-4705-4970-82BB-61CA7D48F103', 57, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T20:52:33.130' AS DateTime), CAST(N'2020-07-19T03:52:33.130' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e78f71a2-9975-4fe0-b4cb-2ddd8dcabea2', N'AD32EFD3-5890-4013-B180-B0CB73F32D50', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T07:46:26.833' AS DateTime), CAST(N'2020-08-20T17:46:26.833' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4e1b8738-e831-41f2-bb0a-2de3e298ac73', N'A2E726AA-3422-4CD5-B3DC-6498B9E89479', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:37:00.367' AS DateTime), CAST(N'2020-07-11T07:37:00.367' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'10978a20-fe5c-4d9c-a572-2de88094c9c8', N'07EFA96F-9C3A-4449-BAA7-B69CE2FB02F9', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T10:27:20.327' AS DateTime), CAST(N'2020-09-03T11:27:20.327' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c7836e5a-c244-4edc-a955-2e52f7e0986f', N'8EEF9180-9500-4E83-B612-C9B87E6408E5', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T05:14:27.030' AS DateTime), CAST(N'2020-08-03T08:14:27.030' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'455ef333-3276-4818-bb9d-2e606088b056', N'63603559-8C97-4D9C-B639-222158792406', 55, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T21:39:17.690' AS DateTime), CAST(N'2020-08-21T07:39:17.690' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3e35791c-dd82-4f1e-9ebc-2e7cfda6d553', N'94BD44C6-25B2-4AC6-B1F0-5EEF904DBF79', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T10:13:40.177' AS DateTime), CAST(N'2020-08-18T15:13:40.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'02e9be5e-62a1-40f7-96b5-2e8d85450e0c', N'9CC88859-1A12-4449-921B-342B2F6E9D66', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T08:30:51.883' AS DateTime), CAST(N'2020-08-15T12:30:51.883' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c61fd2e2-ea02-4145-91ef-2e91796539d6', N'4D4CD2B1-4C88-4DBA-883C-297E36955514', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-14T04:53:57.170' AS DateTime), CAST(N'2020-08-14T08:53:57.170' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2a2fa6b2-b64e-4fcd-902c-2ed1bdb699fc', N'67DD9C2E-6FC4-4695-AA1B-491E4DFFC4EA', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-08T21:43:58.267' AS DateTime), CAST(N'2020-06-09T01:43:58.267' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7ffc3937-3ee9-43c0-b8fd-2f37f5623b43', N'0C08B0B5-39E5-4505-A008-E5264746AA3E', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T02:43:47.133' AS DateTime), CAST(N'2020-07-06T10:43:47.133' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a633c7be-6900-498d-88d0-2f71d04304b0', N'620C7B72-BE40-48D4-A9F2-7C05E9C1C8CF', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T23:28:42.817' AS DateTime), CAST(N'2020-08-24T03:28:42.817' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eedb43ac-f5b8-4af5-aa51-2f87f2e519c6', N'B9B0C2CF-2A33-4054-A86F-E87D6735577E', 83, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T03:59:40.730' AS DateTime), CAST(N'2020-08-05T07:59:40.730' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'545dcf89-c8a0-481f-99e7-2fe408a5f8b7', N'C7D0DCFE-543C-4337-8680-851CE61EC593', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:43:20.807' AS DateTime), CAST(N'2020-07-08T14:43:20.807' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cb702b17-55e3-4206-a75c-300a0875cc7a', N'6B343023-B106-4378-B9D0-0513FD48F31F', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T04:38:43.683' AS DateTime), CAST(N'2020-08-23T08:38:43.683' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9d7d98ab-01ea-4e01-8554-30355fde1a17', N'3F9C0748-1732-4BE8-9392-5CC3268E745A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T01:18:37.580' AS DateTime), CAST(N'2020-08-30T02:18:37.580' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'016c8d93-83d0-4ca7-b316-304e317ce907', N'D9E1955F-8CE8-4B1C-8C01-14D07CBDF4B4', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T04:04:43.180' AS DateTime), CAST(N'2020-08-28T08:04:43.180' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'92a4142a-e139-4769-87a4-3081b9fb0368', N'1C18691C-E4EE-4394-9F3A-773A7E81EABD', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T10:49:38.023' AS DateTime), CAST(N'2020-06-25T15:49:38.023' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'55da055c-4f1b-454a-aa53-309c15662df4', N'B16A5BA7-9DF7-466B-BF9E-0753EDF391DA', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T20:28:14.613' AS DateTime), CAST(N'2020-08-17T00:28:14.613' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'880aaed5-b0c8-48b7-9630-3173f07e3c73', N'11B082B4-DA02-4E0D-B039-0265D03269BF', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-08T04:48:33.463' AS DateTime), CAST(N'2020-08-08T08:48:33.463' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'69f42fac-0ff4-456a-a4b3-31cfe8e2b0dc', N'4FF59CBE-BC9A-42F9-8AB7-E096CAFA7032', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T06:42:28.780' AS DateTime), CAST(N'2020-06-09T11:42:28.780' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'226d3e82-1ce4-4c2d-8896-321274ed7fd6', N'77BAB2C7-3C6D-4D61-B838-B6F86E6317E5', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:38:05.237' AS DateTime), CAST(N'2020-08-20T14:38:05.237' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6fce797c-dc13-4a3c-9909-3306b68a9d14', N'CF17F71C-B11B-405C-BCCA-65F01F981FF3', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:36:23.087' AS DateTime), CAST(N'2020-07-10T02:36:23.087' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f7492172-1c49-422f-b2c0-3325248118a5', N'76E67B6F-F452-41F4-B2A7-293D14656EA4', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T20:13:11.677' AS DateTime), CAST(N'2020-07-10T00:13:11.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a95bf334-3093-4879-814c-33278d85d11c', N'0B76FD97-8B5B-4285-A6FF-43D451A33813', 57, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T02:55:27.460' AS DateTime), CAST(N'2020-07-18T06:55:27.460' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8ec99d5d-ab01-48fe-9e0a-3336318cc43b', N'099B025F-6795-4807-8818-7EF0B0F1F93F', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T02:29:14.647' AS DateTime), CAST(N'2020-08-30T06:29:14.647' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1b1fe53f-46b5-4260-b061-335820bcc3ae', N'B4996289-1A49-41E4-B910-C0C8DF73F0B9', 54, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T08:26:03.090' AS DateTime), CAST(N'2020-07-12T12:26:03.090' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'587a83c9-e634-49f4-b1e3-33b0133af6fb', N'F93F9040-1B90-4A82-8CA4-C5749A52E149', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T07:08:55.013' AS DateTime), CAST(N'2020-09-12T12:08:55.013' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'24a5eacc-2128-496b-b33a-33f170b62e2f', N'00DA0E0D-D2D0-48F1-86C7-FE6FC891A81A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T03:56:46.227' AS DateTime), CAST(N'2020-08-18T07:56:46.227' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'858a9317-8a7d-49ae-a754-34288c21ef75', N'22A8A86C-3333-4808-A2CB-E298052C0188', 70, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T05:01:40.997' AS DateTime), CAST(N'2020-08-04T10:01:40.997' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'07c571a6-24db-4938-a6a9-34bcfe0eadfc', N'6BED4B17-510E-4E11-89FC-F27AF4BC2ABE', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:04:08.203' AS DateTime), CAST(N'2020-08-05T11:04:08.203' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'af1b67e1-b480-4206-a7a7-34e983b0198d', N'51F2D2A1-8922-49EA-A464-D951518EAE87', 49, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T09:48:02.793' AS DateTime), CAST(N'2020-08-15T13:48:02.793' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'03fc3572-e4f7-4972-ba41-34f58524012e', N'6A02F549-5F55-4876-8C25-DA477F4D831C', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-24T20:02:05.007' AS DateTime), CAST(N'2020-08-25T03:02:05.007' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0d911a1c-352d-495c-a036-35102b012f93', N'F1B85416-9405-4489-A9A6-54BB10C6E0AA', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T03:37:22.760' AS DateTime), CAST(N'2020-08-10T07:37:22.760' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6265aa0d-f3a8-456b-9a77-35328a8b9d69', N'7C0C8B03-CBB4-4B35-8D7C-6ABF54C34B75', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T10:42:48.437' AS DateTime), CAST(N'2020-08-05T14:42:48.437' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'611ea530-8ff8-4cc9-82a8-35681989376e', N'4819A255-8AAD-4162-8306-A9FDDD18B28F', 70, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T06:15:34.010' AS DateTime), CAST(N'2020-07-13T11:15:34.010' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'295c5b5e-7ebe-4e39-9a69-3592db8e8ee4', N'A416325B-9326-4CC9-9F5E-ABDECF94158A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T03:18:17.130' AS DateTime), CAST(N'2020-08-26T07:18:17.130' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ff278725-2537-48a6-92d3-359a2d61666c', N'C9DEC63F-C73E-4E58-8282-8844AA54AD63', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T18:55:41.703' AS DateTime), CAST(N'2020-09-02T22:55:41.703' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'78793d5e-1e8d-4e24-907f-369835392913', N'66BCBAE0-5EE9-4E99-ABD8-EB9147BC17F3', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-24T04:26:49.233' AS DateTime), CAST(N'2020-06-24T08:26:49.233' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a9c0b65f-1082-4350-b4f4-36c1bed33c0b', N'870FD705-879F-47DA-9227-4C163933E974', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T08:39:58.417' AS DateTime), CAST(N'2020-08-05T12:39:58.417' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6e8d16f0-6f08-424a-9908-375f50c909e4', N'D61D0AE0-F2A9-466A-8D11-E6645352086B', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T13:22:49.040' AS DateTime), CAST(N'2020-08-18T17:22:49.040' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4131dc93-9ca5-4d9e-b948-376082dd61c6', N'03F3CF96-6122-450B-9655-27F3D010A2DC', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-25T20:13:58.600' AS DateTime), CAST(N'2020-08-26T00:13:58.600' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0de73389-eb89-42d7-a30a-377cf7986fb9', N'2144A06C-EF05-4BE6-8876-FC90038D044A', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T20:11:25.723' AS DateTime), CAST(N'2020-07-10T00:11:25.723' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5626ff3e-2b5c-4dcf-94ea-37862450d76d', N'E35CB1E5-1652-402A-A985-5616C11DB50A', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T21:43:11.200' AS DateTime), CAST(N'2020-06-08T01:43:11.200' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'81f468cf-8608-42da-af8c-37d86f73a68e', N'CACA4A37-8BA1-45D7-BAA1-5589F45DF392', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:15:19.040' AS DateTime), CAST(N'2020-08-20T07:15:19.040' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'19de1539-f342-4eb1-a87f-37df721c1173', N'7AF47330-C5FD-46E9-823D-82A95EBD2F6A', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T03:15:33.797' AS DateTime), CAST(N'2020-09-16T16:15:33.797' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0fb08c23-1492-43f5-8b37-38123c8aeba2', N'FA92C398-D17E-420B-A9D8-D90662FEC956', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T06:39:41.677' AS DateTime), CAST(N'2020-07-12T10:39:41.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7887148f-9097-41fe-bd0d-3823dd8bceb7', N'3351D9AF-2E66-4982-9059-CF645032E558', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T04:39:21.777' AS DateTime), CAST(N'2020-08-23T08:39:21.777' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5d18c459-7503-4fe3-acbb-3850846f8599', N'02835A4B-1941-40ED-B505-E580A9E5915E', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-15T02:54:48.290' AS DateTime), CAST(N'2020-07-15T09:54:48.290' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'00c53497-a9ab-4f1f-81db-3881bf2c511f', N'AA7962B3-D6F7-44B2-8918-B165B2CAFC94', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:19:57.980' AS DateTime), CAST(N'2020-07-09T08:19:57.980' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f8c07fa5-d542-4455-be37-38aebb3341e0', N'755905CA-9270-456F-BDE7-20D8D67DB25B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:46.960' AS DateTime), CAST(N'2020-06-28T08:21:46.960' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a6e9a139-08f8-4023-86a5-38b5344c5dfb', N'9A5D1570-48EE-4BAF-9476-EAC230CF8064', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T04:45:52.850' AS DateTime), CAST(N'2020-07-12T11:45:52.850' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd7f40acb-e905-4c96-9863-3963ce51e766', N'90B28181-215D-45C3-80E3-15415FB6D41B', 74, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T22:22:52.270' AS DateTime), CAST(N'2020-07-14T02:22:52.270' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c3ca82bf-d11a-4d4c-9503-397dd9e4b439', N'DBC12A75-E8AE-4EF9-B2D2-69C75FE3FA18', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-08T08:48:25.813' AS DateTime), CAST(N'2020-08-08T12:48:25.813' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0f0caf90-3dde-49ec-be47-3a2f066dd66f', N'87D9A63F-C764-45F8-BCC2-927A51166C13', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-06T20:07:33.517' AS DateTime), CAST(N'2020-09-07T00:07:33.517' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'82b5838c-7c1c-4738-8267-3a4e6ab26f79', N'E36B63AA-644F-45B4-BD7C-E8639BEDFDBD', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:50:45.113' AS DateTime), CAST(N'2020-08-20T10:50:45.113' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'afb06d4b-1d05-49d0-bbb8-3a6379774fd4', N'3CF0B7C3-09AA-4CD3-8ADE-165EC57B9669', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T09:38:15.893' AS DateTime), CAST(N'2020-08-20T15:38:15.893' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7ad080cb-c091-4a5e-a2c2-3a86865542cc', N'95E75F3D-3C16-4B5C-A31E-6C5D4864B9D4', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T08:30:00.283' AS DateTime), CAST(N'2020-08-15T15:30:00.283' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'801630b0-1b40-4757-ab5c-3af960e210fb', N'3FEA76B4-D84B-4CCB-A897-1B0015B55EDD', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T07:32:01.047' AS DateTime), CAST(N'2020-09-07T11:32:01.047' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8833c09c-ea03-4019-ba7a-3b15ca3b02d1', N'D77BD31F-B898-47D5-B5C3-CF6E7BA94B73', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T00:39:15.403' AS DateTime), CAST(N'2020-08-09T09:39:15.403' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7114fd7a-7bd4-42c2-a9bf-3b1cdf93d12d', N'8F753665-8B91-4DF0-8E25-718AC82DAD12', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:13:14.290' AS DateTime), CAST(N'2020-07-09T01:13:14.290' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f0abd581-14ba-41b9-bd5d-3b2d311b1b6d', N'53EB04FD-2FB5-4ABF-A9CC-F403ADEEED7F', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:05:32.120' AS DateTime), CAST(N'2020-07-10T04:05:32.120' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'09b30046-3cb8-4707-a830-3b83f9c5fa3c', N'E7BF6F88-E977-4569-B18F-FD4A7CA3157D', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T03:22:57.760' AS DateTime), CAST(N'2020-09-13T07:22:57.760' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'178ccd8c-f4d2-484a-930d-3ba132f8f09d', N'E98FDAFE-A164-4BD4-9BEC-D07381E1D08B', 5, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:16:07.670' AS DateTime), CAST(N'2020-07-11T10:16:07.670' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dc68437d-54a3-464f-88ff-3cfc6293cd90', N'44AFD4B6-AB18-48E0-86F1-85CFD2308899', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-13T11:21:30.203' AS DateTime), CAST(N'2020-08-13T19:21:30.203' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f31e203d-0109-4156-a634-3d0f73f338f6', N'DBAF953B-AC14-4CBA-A17A-79EEC00F0960', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-04T21:05:14.560' AS DateTime), CAST(N'2020-09-05T04:05:14.560' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0762908d-66d5-40d7-b03d-3d6cce4be33b', N'BD8A812F-20B6-4009-B54B-4DAA6C5A8C13', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T20:41:41.990' AS DateTime), CAST(N'2020-07-14T03:41:41.990' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'342c8c2d-3fb0-42aa-883d-3d8f2d55fc4a', N'ED14EC9E-A905-4A8F-A840-F7533DF1FD6A', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:49:27.760' AS DateTime), CAST(N'2020-07-11T02:49:27.760' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'deb61842-6204-450a-94b7-3dbf7a2c3ada', N'7C5E705B-DC49-4383-93F8-C5D5401F0E6C', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T20:49:59.120' AS DateTime), CAST(N'2020-07-09T00:49:59.120' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1355b55e-81eb-44b6-8423-3ea59587b83e', N'05ADE124-9585-4E45-85FD-9AB654D936D3', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T19:48:34.457' AS DateTime), CAST(N'2020-09-08T23:48:34.457' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eddf2e18-7232-4ce0-ab63-3ed179f0a036', N'03B15C48-A6F3-4B44-8711-2C3C352737E8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T11:34:50.953' AS DateTime), CAST(N'2020-08-18T05:34:50.953' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'869bb1b4-3ce8-4e3f-ade9-3eee1156201b', N'F0CDF36D-2447-4CCC-AE70-15690C16665C', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T05:51:53.620' AS DateTime), CAST(N'2020-09-10T09:51:53.620' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4a887090-18bd-449a-bed3-3f0f335af576', N'DBC51BCE-A72A-4775-93E9-2F5510A863D9', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-03T04:06:04.080' AS DateTime), CAST(N'2020-07-03T12:06:04.080' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a992d5a4-5fb0-4740-a8e9-3f2dcc5da650', N'3F6DBC57-930A-4AFE-BD9A-DD400EC83294', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T00:52:23.550' AS DateTime), CAST(N'2020-08-26T04:52:23.550' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'86d74b47-ae53-4b1f-8a98-3f361e4e8257', N'902B0E22-163E-4F1C-9319-DF0AFB55160A', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T10:03:54.727' AS DateTime), CAST(N'2020-07-06T14:03:54.727' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'17a8c4bb-5279-4b85-babb-3f40c0fdf016', N'665300CA-2CBE-4662-A0BF-3F7E04974569', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-05T01:52:29.130' AS DateTime), CAST(N'2020-09-05T07:52:29.130' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'95aec7ad-206c-4326-bffb-3f5535a512f6', N'A8657C6A-6196-4E0E-B26F-CD8D048E3F69', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:36:06.043' AS DateTime), CAST(N'2020-08-19T23:36:06.043' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a07090f6-a12a-41ed-b94a-3f670bfbd349', N'7DC6011A-EB43-43DB-82B1-4E1603DEAF04', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T19:44:23.507' AS DateTime), CAST(N'2020-08-21T23:44:23.507' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2f9b1c8c-c3f1-4cca-b61b-3fc0f09a01e8', N'31F0C62B-723C-4B91-A6A9-C16C8E52BDEF', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:07:33.770' AS DateTime), CAST(N'2020-08-20T16:07:33.770' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8ae99d97-2222-432e-8032-403e5aa37531', N'8AFD2AE5-86E3-4164-955B-544842402E0B', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-02T11:06:14.503' AS DateTime), CAST(N'2020-07-08T02:06:14.503' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'96333241-a3cd-4d58-a900-40a43c86f49a', N'CF1E81A3-5B7E-4EF8-839C-000527C6E306', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T08:20:14.960' AS DateTime), CAST(N'2020-09-10T12:20:14.960' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'03a52e3c-b0ae-45aa-8283-40d0e69c552f', N'D3055315-34E3-4F66-998A-DD53E3A60A83', 36, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T12:03:51.313' AS DateTime), CAST(N'2020-06-28T16:03:51.313' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c622d2e5-28d7-4270-b3a5-41198fa072ae', N'AA4986B6-3311-4327-AC1F-E0113472554D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-11T10:24:51.313' AS DateTime), CAST(N'2020-08-11T18:24:51.313' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f20707d2-e405-47c7-92fd-4120cee5c03a', N'761CFA06-73B9-4855-B025-F55620B61ECB', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T01:43:29.313' AS DateTime), CAST(N'2020-08-30T05:43:29.313' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f6ffc033-a936-4519-b17b-4161eefdc056', N'FEAD1B0E-651C-40AC-9D48-C9F885A1437C', 11, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T19:07:12.237' AS DateTime), CAST(N'2020-08-02T23:07:12.237' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'63ce03d5-6e63-4c41-9003-41b51d929ffc', N'6619348F-4BF2-4604-A017-DCCF7C80A917', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T09:55:08.943' AS DateTime), CAST(N'2020-06-23T13:55:08.943' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'69490388-9f4a-4545-ba3d-420219d43362', N'5B511865-C6D8-43F0-9DDC-7D753B34BF8F', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T01:11:24.390' AS DateTime), CAST(N'2020-07-12T05:11:24.390' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7c83a966-3ec8-4b90-adf6-42247cf0fe4d', N'03E6478B-CC14-403D-A504-FD7D579CC584', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T04:05:39.350' AS DateTime), CAST(N'2020-07-12T08:05:39.350' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a924c6dc-b203-4302-9f7e-42944e64919a', N'5A6AB2A9-89BF-45AE-A234-D883F6470720', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-19T05:34:28.540' AS DateTime), CAST(N'2020-09-19T09:34:28.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4c4b0c25-24bc-49dc-bae9-429ad203378d', N'812D7212-AACD-4092-A404-1A545023EC62', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T21:20:35.340' AS DateTime), CAST(N'2020-09-17T09:20:35.340' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a3f97964-5e78-4d26-a0c3-42c40c217c09', N'974479D9-7BCC-4901-8E0E-939D1F9EACF0', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:14:23.650' AS DateTime), CAST(N'2020-07-09T15:14:23.650' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'66dcfc74-c7a0-4b34-bc95-43749b9d6376', N'1D222100-1DB7-4BFB-B114-75BCFE4207D5', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T05:34:19.907' AS DateTime), CAST(N'2020-08-18T09:34:19.907' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c1501a6d-cfda-48ad-97f8-438f98e383dc', N'03BC03C5-583A-4B07-A279-1FF5B2162B3D', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T09:57:58.947' AS DateTime), CAST(N'2020-07-14T13:57:58.947' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5cc026cb-a23f-4f14-b47c-44848b4504f5', N'E1CD40B3-BB22-4F45-B697-632A0035038F', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-08T21:54:03.803' AS DateTime), CAST(N'2020-06-09T04:54:03.803' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd012d322-edd7-4e7a-bf08-44e4f7fb21e2', N'9B3C25B3-4339-4149-96D0-AA243F06AA3F', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T05:12:44.417' AS DateTime), CAST(N'2020-08-19T06:12:44.417' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e90c4349-51fb-48d2-b23a-450b6b222e76', N'3D03C721-A8B6-4F44-B1B8-DE7031B95804', 32, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T08:00:13.807' AS DateTime), CAST(N'2020-07-14T19:00:13.807' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd6898f57-a86b-4fde-89f6-45448bba7555', N'5693795A-F29C-4856-BCEF-24205D5C85F7', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T21:07:11.540' AS DateTime), CAST(N'2020-06-07T22:07:11.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4a470127-8038-4c8f-b270-456677fabd6a', N'A2C1BFFB-5C43-4C40-82C6-0AF2796341F2', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T10:27:19.243' AS DateTime), CAST(N'2020-09-03T14:27:19.243' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bc4ec233-5330-4773-894b-458e6ff5a970', N'73A199E3-4B48-4C1A-9213-84B1B02671E1', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T10:55:03.240' AS DateTime), CAST(N'2020-06-24T19:55:03.240' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'99d5df63-a9e7-40ba-b897-4656481bd75e', N'D9DCF6C9-20A2-4B61-839B-4DFD6BD0CE77', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T11:16:44.297' AS DateTime), CAST(N'2020-06-25T20:16:44.297' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1f1f2bf5-3b23-408a-8273-468e9427250a', N'26C92F17-763A-43D2-8A3D-D0744A0237C0', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T10:56:56.813' AS DateTime), CAST(N'2020-08-04T20:56:56.813' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f0891ea1-52c9-4be2-b25d-46c548d2c4b2', N'CDD357AD-A39C-4214-94D1-AF678EDD27C5', 85, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:51:03.107' AS DateTime), CAST(N'2020-08-20T03:51:03.107' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8554022a-2598-4127-8619-47295946a951', N'9DB4FDEE-C360-4CEE-9D9F-E32612725704', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T09:19:25.230' AS DateTime), CAST(N'2020-08-19T13:19:25.230' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'42ff842d-752b-4899-92b3-473209bfd56a', N'FFB299AF-3546-4813-9C7B-A8AB6A80FC0E', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T09:06:08.423' AS DateTime), CAST(N'2020-07-09T09:06:08.423' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'46680b16-7acc-48dc-97d7-474d41a22dbc', N'AED783C3-A487-4690-A45A-1CB211A857CB', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:35:24.547' AS DateTime), CAST(N'2020-08-20T00:35:24.547' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6a51912d-9352-4809-afb5-47523fc566e5', N'F64E0A82-F45C-40D0-92CF-797A84CB3157', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T05:08:50.263' AS DateTime), CAST(N'2020-08-30T12:08:50.263' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6b173a32-ad6e-4041-9e69-47ab8d088dc3', N'E369C7D3-76E3-48E0-8FCE-38BBCAB69A84', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T01:18:36.337' AS DateTime), CAST(N'2020-08-30T05:18:36.337' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'970103cf-1b81-4cf4-b09c-47e24e011ef4', N'8E3F6A59-DBD5-4CDC-BE53-920CFCA9314F', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:15:09.933' AS DateTime), CAST(N'2020-07-09T02:15:09.933' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f9177849-07ec-4f01-bc75-484a7a1fe7ea', N'5878CC0F-BEFE-4A2C-B42A-81572CB672AD', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T11:47:36.243' AS DateTime), CAST(N'2020-07-01T20:47:36.243' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9c3a5163-b159-4c6a-a63f-48af3b638f12', N'1B9B519C-B89E-4698-9142-65188F0AD859', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T02:48:27.357' AS DateTime), CAST(N'2020-08-09T11:48:27.357' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a43e0615-6e8d-4552-98bd-48f613d66ff3', N'09CAD822-E3F8-4449-B16A-7905B5589830', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-03T01:03:52.547' AS DateTime), CAST(N'2020-07-04T12:03:52.547' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f6089e46-abee-468d-a314-49a67b7b18aa', N'CEA40FCD-8D8F-4988-A143-C38CD4654AF6', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T21:00:22.987' AS DateTime), CAST(N'2020-06-07T22:00:22.987' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8d4186ee-b212-45b8-9bcd-49d89f34dd91', N'FCC33B3C-8931-4EF9-9572-A4A5945BF74C', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T19:55:08.657' AS DateTime), CAST(N'2020-08-18T23:55:08.657' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c3fdadd8-486e-4076-93d7-49e4f3be88ca', N'AB7CA068-21BF-4FCF-B67F-63D10CEDEFC8', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:27:59.927' AS DateTime), CAST(N'2020-07-11T11:27:59.927' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'44c02fe5-de77-4744-b732-4a56cb41ee25', N'494BDBD5-1DE5-4D42-8925-002786BFE223', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T18:13:05.940' AS DateTime), CAST(N'2020-08-10T01:13:05.940' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7ab3601c-44cc-4bf5-8cd5-4b14d8c1f689', N'194932D0-3DF5-468A-BBE2-1AC4813457EA', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T02:45:12.720' AS DateTime), CAST(N'2020-08-09T11:45:12.720' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0e223f41-a540-4df6-a751-4b1e9077e354', N'2BF049F3-FC0A-437C-A757-CBCAE7712EEA', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T03:24:37.920' AS DateTime), CAST(N'2020-09-13T07:24:37.920' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'504552ef-c345-48ab-aedf-4b25c1db61a3', N'70FF1E62-BD58-4493-9CA0-318BABE5BE7B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T04:14:36.993' AS DateTime), CAST(N'2020-07-07T08:14:36.993' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b14b0c42-5d21-4129-a6b0-4b6d3c21c047', N'40FCB5FE-48DB-4A2E-ABA2-6322813DB70B', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T05:25:27.493' AS DateTime), CAST(N'2020-08-19T20:25:27.493' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'af0fd5e8-ae14-4dfc-af7d-4b9c7d7ae379', N'50D669AD-A82A-4A9C-8758-5614B7C1D74A', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T00:45:51.067' AS DateTime), CAST(N'2020-08-31T07:45:51.067' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f1def4e3-cc16-4460-a8a8-4baae6971fe6', N'6D5F2D41-B9F2-49E0-9291-DC8CC56E1230', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T11:01:01.273' AS DateTime), CAST(N'2020-07-08T18:01:01.273' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'420b5e55-3da1-45ee-9fcb-4bbd4610cf27', N'BB0190C8-1695-43CA-9727-29A1D6B11842', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-17T21:22:44.613' AS DateTime), CAST(N'2020-07-18T01:22:44.613' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd42be2bb-85c8-436c-aa83-4beac2bfae3b', N'05F6EC86-DA58-47A4-8795-188BF6C24E7E', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:52:34.050' AS DateTime), CAST(N'2020-07-09T05:52:34.050' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5a023418-56d5-439d-9638-4bfac3a6c254', N'24FE9218-D780-4D74-BF35-036B2BF6BBAF', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T08:34:12.747' AS DateTime), CAST(N'2020-08-05T15:34:12.747' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9719973c-9945-4bfa-8412-4c49ad4e9cb2', N'60B5B502-D790-4F1C-ADAF-E5EBB10EF24D', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:46:20.487' AS DateTime), CAST(N'2020-08-20T11:46:20.487' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a31e29c5-1069-4f2c-aed0-4c9709c82cf9', N'F0933917-15CB-4F37-B195-FEA69659F35C', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T09:15:09.737' AS DateTime), CAST(N'2020-08-16T17:15:09.737' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2a7d16e7-301d-4982-ac35-4cc99893db32', N'08056524-CEF1-459D-9D58-FAF43690FF12', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T06:08:45.330' AS DateTime), CAST(N'2020-09-14T07:08:45.330' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e57cd056-972b-4387-bf38-4d1c418b455c', N'16FA9780-20F0-4275-B5AF-5DFE48AEB0A8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T06:21:03.107' AS DateTime), CAST(N'2020-09-10T07:21:03.107' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'067931e1-a9ec-46e1-a15a-4d4c6e3164ac', N'72DBB3C5-052D-41FF-B243-C039BC895ABC', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T05:24:39.013' AS DateTime), CAST(N'2020-09-01T15:24:39.013' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'694f6fa2-e6ba-482c-a39a-4dc45ed92b50', N'270D0721-1669-4E76-B801-2B5DD0089B51', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T11:07:04.730' AS DateTime), CAST(N'2020-07-02T12:07:04.730' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd584ce9a-b3c9-475c-afd9-4dc53083541e', N'318A03E4-A272-48C7-BCA6-37B128E9EF5D', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-04T23:12:14.550' AS DateTime), CAST(N'2020-07-05T12:12:14.550' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3cda6b3e-5d24-4fc8-9c4c-4def36780684', N'1B35D760-2F44-4EB6-A247-7EE904ACE1E1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T22:51:44.353' AS DateTime), CAST(N'2020-07-12T02:51:44.353' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'580569cc-2d1d-41a9-8559-4e97e0ec0ab4', N'5C094683-EB99-40D4-AAB2-299CAA912A02', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:14:33.997' AS DateTime), CAST(N'2020-07-11T11:14:33.997' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c354fd18-3889-47a0-a3e8-4f40c0c8b9ba', N'DDA343F2-4D19-4697-8567-15F5253F9A2B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T09:50:48.880' AS DateTime), CAST(N'2020-06-23T13:50:48.880' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'77c71935-3b22-4f0c-a28c-4f5e6c0cf7fd', N'5E03872A-1287-4A98-8B64-5AF00DFF3586', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T00:00:39.657' AS DateTime), CAST(N'2020-08-20T04:00:39.657' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8de6f6c6-4d9f-491b-b812-50c2520d26ec', N'28DCD5F0-53FE-492E-AAE4-3D2F391333F0', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:49:36.263' AS DateTime), CAST(N'2020-08-19T23:49:36.263' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c8fc2a0f-74b5-466e-9ab6-50db8bac9e9d', N'F46C5A2D-A515-4BB5-959A-9BDEE3CAA527', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T04:17:13.993' AS DateTime), CAST(N'2020-06-09T05:17:13.993' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3caf9793-7931-4253-896c-50df7d43a75d', N'392A91EA-A399-4DBA-B1FA-925290218874', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T02:19:22.830' AS DateTime), CAST(N'2020-06-28T06:19:22.830' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'62e88d59-1694-41c3-a34e-50f8cff323e7', N'8EC4C8CA-D676-4C41-9C95-8F4EBC389C25', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T06:14:52.897' AS DateTime), CAST(N'2020-08-21T13:14:52.897' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd1afba61-6421-4740-a011-51313992ade2', N'3DE71C2F-9E8F-462E-BD74-97F984ACE12C', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-07T10:14:31.217' AS DateTime), CAST(N'2020-08-07T15:14:31.217' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b316503e-7cf3-4a44-8ac2-515afdf05d55', N'D158A582-1596-4618-BB52-4E4026524996', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T21:45:28.397' AS DateTime), CAST(N'2020-06-08T07:45:28.397' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'531a6dda-d785-442f-904e-5163974285e4', N'8AEA1C6C-4B3C-4EB2-9786-20EC0E9E1626', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T19:58:59.760' AS DateTime), CAST(N'2020-09-03T23:58:59.760' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd5f77fcc-d64d-4dd7-9be1-51ce4b54d225', N'D9D8D392-0C57-4BB6-A4F7-D9515F86A5A3', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-19T05:41:16.763' AS DateTime), CAST(N'2020-09-19T09:41:16.763' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c5f322f0-c4e9-4dd3-b66d-51db99d22203', N'9C3817EB-88E9-4ADE-ABE3-340F7BECCD69', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-17T20:02:19.730' AS DateTime), CAST(N'2020-09-18T04:02:19.730' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2bc265f6-7849-4dba-a351-521339828664', N'CE9566F0-7455-4704-860D-535A694FA888', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:54:21.083' AS DateTime), CAST(N'2020-07-08T14:54:21.083' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c69c7c0e-67d9-4e73-aaad-52d8fed1ed07', N'6A038D53-C585-4E57-91FA-BC0BE7E788C6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T19:40:26.437' AS DateTime), CAST(N'2020-09-08T23:40:26.437' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'954eea71-a32b-4d29-bb9e-53155d55accc', N'F132D1FD-705F-4D58-BCC8-417805533317', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T05:15:18.270' AS DateTime), CAST(N'2020-06-09T19:15:18.270' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cdb460f8-043c-4209-a113-53193365125e', N'7FF80759-183E-48C4-8AA3-A9EE52007B7A', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T20:57:37.283' AS DateTime), CAST(N'2020-08-19T04:57:37.283' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'01fd622c-fea8-4af5-9409-53a136b06e90', N'CB8684FD-C26D-4553-9685-FA4582D7C78A', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:26:08.140' AS DateTime), CAST(N'2020-06-07T21:26:08.140' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'89c8bc94-244a-45f9-84a6-546e717ec79f', N'B9E6E86C-7CB3-4342-A8E5-5C5624148310', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:05:54.620' AS DateTime), CAST(N'2020-08-20T13:05:54.620' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8518d6b8-f7f5-4ded-8002-54a2d044930e', N'3EAA8A5B-613F-4FA5-ADC3-CEC804413346', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:32:05.940' AS DateTime), CAST(N'2020-08-20T04:32:05.940' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'30662149-d476-424f-b17b-54f849762cc0', N'DDDAB24A-53A7-4CB9-BBB9-FDCCDCC47FE8', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T00:58:39.297' AS DateTime), CAST(N'2020-08-31T04:58:39.297' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ae94ccd4-6813-42bb-b884-5524e24964af', N'E9697A9E-221E-47C0-A6A2-D6C3C4CDB9BD', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:04:17.203' AS DateTime), CAST(N'2020-07-11T03:04:17.203' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'56abf695-c1e4-4e89-b946-55299d7de13e', N'BB3A5D82-E9DB-4ACC-9D99-18919A171BE5', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T02:55:40.490' AS DateTime), CAST(N'2020-07-12T09:55:40.490' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a68b0479-5062-44bf-8ac3-556e38ef78ec', N'14D5AC9F-5AB7-48FC-B409-CC52474430A4', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:37:38.187' AS DateTime), CAST(N'2020-08-20T14:37:38.187' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1481c6ad-67a2-4fd4-93eb-55a74b2dd558', N'D480ED73-17DD-4229-8319-F2E8434AE2E1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:55:32.993' AS DateTime), CAST(N'2020-09-09T08:55:32.993' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5ea33b77-be57-4d96-9af8-55c816388d83', N'27C308F3-4098-455C-8F1E-13EDDC5A6F96', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T20:33:13.637' AS DateTime), CAST(N'2020-09-15T09:33:13.637' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0af37986-c803-4dce-82b0-55fb35da6d2e', N'90E13200-9C75-4C08-B460-8A92E5344404', 55, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:45:14.957' AS DateTime), CAST(N'2020-08-20T08:45:14.957' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'54215e39-a456-4564-9e95-5691d9a103ad', N'4C29D1E0-812D-4B12-B026-03BEF97273A5', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T09:40:41.750' AS DateTime), CAST(N'2020-08-20T18:40:41.750' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b2e1c0bb-d541-4130-80bb-56f521af3d6d', N'D32902D5-E9F6-4882-A03A-BF867A95468E', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T03:18:12.390' AS DateTime), CAST(N'2020-08-10T07:18:12.390' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eacf1933-f3d7-43ca-be36-56fc45449674', N'162022E2-E92D-4CD0-B914-B8C790B7397F', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T13:33:22.197' AS DateTime), CAST(N'2020-08-19T17:33:22.197' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9684c388-108c-44de-8b44-571d0beffc39', N'72276C1E-F00E-4C3E-924E-7073DC8A0D92', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:17:17.450' AS DateTime), CAST(N'2020-08-20T12:17:17.450' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7c7a4ed9-c5bd-42b3-a005-571ecea33c3a', N'40FE1D11-52CA-4B92-820D-927112331974', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T05:44:01.420' AS DateTime), CAST(N'2020-08-26T09:44:01.420' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f06f21f3-0c67-4ad5-bd0f-5748960b70fe', N'69B0AF12-23F7-4705-8542-AAFB0BBBB2DF', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:53:33.817' AS DateTime), CAST(N'2020-07-11T02:53:33.817' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f7caee14-8fa0-4c6e-8db1-583846b1579d', N'AE0D0DAA-1862-4071-97F5-4E466050354F', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-26T12:15:31.630' AS DateTime), CAST(N'2020-06-26T16:15:31.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'db94cfcf-f161-4928-91eb-58d368b2c0a7', N'1C026426-C9C1-4B61-B606-01920BD190F2', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:12:58.780' AS DateTime), CAST(N'2020-08-20T08:12:58.780' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3e1a2984-febc-44d9-988e-58e55abe1436', N'89C2ADFA-6B9B-4109-BE3A-594D4A63731D', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T09:51:39.897' AS DateTime), CAST(N'2020-08-15T14:51:39.897' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fd4c9657-1acd-46b4-8d1a-595a36f6a1e9', N'388A05B7-D533-4600-8401-5BD7A90962B4', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-07T18:58:45.357' AS DateTime), CAST(N'2020-08-08T11:58:45.357' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bae379ed-fb54-478e-9159-59e7f767943b', N'439E3183-64AA-45D9-984F-59F7059D12E7', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:37:13.950' AS DateTime), CAST(N'2020-08-20T05:37:13.950' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e9c8d575-e40a-4638-b775-5a73e37a515e', N'00DF87B4-F4BC-444E-9395-15146862834E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T10:31:05.593' AS DateTime), CAST(N'2020-07-11T14:31:05.593' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8f3d7057-8b84-4e04-b11c-5a772e1fce4a', N'9E9588CD-E913-4F61-A0B6-64246751466E', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:42:44.897' AS DateTime), CAST(N'2020-08-20T05:42:44.897' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1b8b722e-03bb-4477-86c5-5acd39448faa', N'96E8ACF0-9032-4674-96E8-6E68503072E2', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T00:37:08.373' AS DateTime), CAST(N'2020-07-14T10:37:08.373' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7800d5b2-6c4a-47ee-834d-5aead3f9623e', N'421279F8-5BE8-4374-9A52-7F623EF67C15', 26, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:00:42.700' AS DateTime), CAST(N'2020-07-07T04:00:42.700' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e7db5bb7-9f19-4c67-9eed-5afa58b88229', N'808E38A3-8DCE-46AC-B5C3-B5B8E215DE98', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-23T04:10:39.540' AS DateTime), CAST(N'2020-07-23T12:10:39.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cc46c879-f332-41ab-ad33-5b4e98142a1a', N'58EA75E3-2AB4-4A0E-928C-D3A41E9E2653', 11, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:57:37.947' AS DateTime), CAST(N'2020-07-08T18:57:37.947' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bff717b1-c4ca-4eda-94dd-5b5009819e14', N'F2D7DE7D-C5E0-4A44-9E75-4049A5E47FFB', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T08:32:40.753' AS DateTime), CAST(N'2020-08-15T12:32:40.753' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f44f4fb5-f8f2-4c9e-ada7-5b56c47f261e', N'CAA9C173-4D3C-473B-85F1-3904ACADB9BC', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T02:47:08.747' AS DateTime), CAST(N'2020-07-06T03:47:08.747' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7f0cd915-af56-4fc0-922e-5b6864f1b95c', N'7202DE90-86E5-4FF7-85A6-8BB07614FA8D', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T10:38:53.403' AS DateTime), CAST(N'2020-09-01T15:38:53.403' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'beff0b0d-f776-48f3-b1f7-5b82152a201e', N'7560E955-A27E-4807-85A7-60923F20235A', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T05:01:48.660' AS DateTime), CAST(N'2020-08-22T09:01:48.660' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'24d3445a-a1db-41f8-a2c7-5bbac7a4dab5', N'B6904439-AA91-4966-9B3B-7379475FC060', 81, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T03:10:20.197' AS DateTime), CAST(N'2020-08-05T08:10:20.197' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'08148eca-be81-4e6c-bc30-5bdeabb3c81b', N'801F09A0-0542-4A84-8555-7C066DF17BDC', 43, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T06:47:25.950' AS DateTime), CAST(N'2020-07-12T11:47:25.950' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bc0e4de9-afef-4fec-bc12-5d188c7a34ad', N'FB405608-2BD2-4FCD-BD93-A950817E3000', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:32:08.870' AS DateTime), CAST(N'2020-07-11T03:32:08.870' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c2e284bf-4807-4fc5-926a-5d398d32da32', N'4092C94F-8373-4D2B-B060-C0A6140F6EE9', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T03:29:16.867' AS DateTime), CAST(N'2020-08-29T01:29:16.867' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2e2cf7d8-7def-4c49-97ce-5dc119501977', N'000CC59D-E865-4153-9135-FFBA732E7C35', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T09:49:43.637' AS DateTime), CAST(N'2020-07-14T13:49:43.637' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cac75fe3-8470-44ab-bb8f-5e3b41f0d0aa', N'39164E25-2E95-47E8-ABE5-2825488F4F94', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T11:04:13.350' AS DateTime), CAST(N'2020-07-13T13:04:13.350' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5a946f6c-6b3e-4f58-99ab-5e77cde066b5', N'869126F5-2D72-4DD9-8AD0-2080F99D4DDD', 11, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T17:30:14.460' AS DateTime), CAST(N'2020-08-04T21:30:14.460' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'22e8a86c-40c8-436c-8b42-5e9704577ed5', N'A9335727-E1C1-4835-A3B7-9CB28CAEE9E5', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-02T10:11:36.063' AS DateTime), CAST(N'2020-07-04T17:11:36.063' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'814eecbc-1cf7-4da5-9203-5ec0b77b4b51', N'0BC48E7D-A1E8-4DE7-AD56-3D7442163B9D', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-08T21:50:34.720' AS DateTime), CAST(N'2020-06-09T04:50:34.720' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9a8a57ec-2b28-46aa-89c6-5f5991d3ffc9', N'0244EC00-84E1-40DF-B29F-D04A40ACFF09', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-13T17:28:41.280' AS DateTime), CAST(N'2020-08-14T00:28:41.280' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3f53f27b-4918-4a3b-b749-5f67aa6cb75b', N'F79C2D46-1F08-4C4B-926F-1A7D8D6EAB75', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T21:10:03.203' AS DateTime), CAST(N'2020-06-07T22:10:03.203' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'434c0dcd-db4f-4fa0-bfb3-5f6d5544eb7c', N'8759F1AA-F23B-4916-9C49-968EE6CF8B6C', 57, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-17T21:38:36.710' AS DateTime), CAST(N'2020-07-18T04:38:36.710' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9c6dc7cc-775f-4249-9e3e-5fc23fe8fae4', N'3A8636B3-1083-498F-8B48-204A16D9C187', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T21:27:15.160' AS DateTime), CAST(N'2020-09-17T01:27:15.160' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd474dd04-80a7-4786-87c8-5fd99c7c6c43', N'450B4F54-0357-480D-8142-CB9EF95D9621', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-06T11:12:29.820' AS DateTime), CAST(N'2020-08-06T18:12:29.820' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4e6a941b-8eae-4805-806e-5febda9a27ea', N'3EF537EB-0EFF-40B7-A519-CC701AED93A8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T20:55:23.773' AS DateTime), CAST(N'2020-08-06T00:55:23.773' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c2f70d81-e109-461f-a5ec-60270cf8b9a0', N'54BD9CC4-F2BF-430D-B369-822085E8A367', 83, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T03:50:15.430' AS DateTime), CAST(N'2020-08-05T07:50:15.430' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'76701ca1-8795-492c-b29a-60b444f76a13', N'90CCA400-CCED-4608-8D6E-E16F6EE88F1F', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T02:46:15.023' AS DateTime), CAST(N'2020-08-05T15:46:15.023' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'95724e42-b951-44d8-88e0-60df5626583d', N'BEC8E3D3-9943-4432-8CC1-1CAB2805EF1D', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T01:34:27.923' AS DateTime), CAST(N'2020-08-05T07:34:27.923' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'45ccf60d-dc59-4350-83ca-60ec6faac6eb', N'B9976639-D2F6-40F2-880D-B30C699B8FC9', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-20T00:08:42.943' AS DateTime), CAST(N'2020-07-20T08:08:42.943' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8b7fe4a2-fe59-4692-89cf-6143139872dc', N'EEA95498-9B63-4A42-9160-6A0162AA4CF2', 76, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:46:10.100' AS DateTime), CAST(N'2020-09-09T09:46:10.100' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'96ae267b-6670-4196-a21a-61746ed9b9d1', N'4B222557-5988-48E2-8318-EE00C9806D81', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T20:24:50.703' AS DateTime), CAST(N'2020-09-09T00:24:50.703' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0caa6ad7-a34a-48ca-b3af-61a9e1aa169e', N'43DD798E-25CD-49FB-AD8F-100D5A1E342F', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:46.770' AS DateTime), CAST(N'2020-06-28T08:21:46.770' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e8e29a05-3b7e-431c-bb36-61ac30643838', N'0ADBE1E8-0995-42F3-9E69-F225838F4925', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T09:30:34.040' AS DateTime), CAST(N'2020-06-23T23:30:34.040' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'278070c9-cca2-497f-84ba-622cbcfb561d', N'264E4F5B-0C61-42AC-B606-84EED3596258', 37, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T10:32:46.423' AS DateTime), CAST(N'2020-07-01T15:32:46.423' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fef80ed4-3f1b-4a1c-a2fd-622ef9589da5', N'AD1AAD0E-00EE-4D55-B8FE-6B5AC06BAF7C', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T09:53:16.103' AS DateTime), CAST(N'2020-07-11T13:53:16.103' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f9252457-0081-47fc-9dad-62408e6017ee', N'EEB0F6E4-7AFA-47A2-B244-521096758116', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-11T03:10:58.060' AS DateTime), CAST(N'2020-09-11T07:10:58.060' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'847c5f56-4157-4478-b14a-62be9f0cee1b', N'96342379-23E9-45D1-8195-949361824069', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:46:25.580' AS DateTime), CAST(N'2020-08-05T11:46:25.580' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4a6eb180-b6bb-4959-abf5-62d94e6a1a6a', N'3271BE9B-190D-468D-92EE-E63633BE18EC', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-25T01:29:56.280' AS DateTime), CAST(N'2020-07-25T08:29:56.280' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'76bda29f-ce7e-4dd5-ad81-62fa1515fdf4', N'8E522A5D-61D7-4074-93A5-CBDE2EF034EB', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T03:00:27.463' AS DateTime), CAST(N'2020-07-12T07:00:27.463' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'57693e87-67ba-4b17-9e24-63b470862210', N'285BB205-48DD-47AA-9C8A-BD0CDB270942', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:11:34.843' AS DateTime), CAST(N'2020-07-09T06:11:34.843' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cc519411-097a-49e5-a517-63ef80e13641', N'CB9090B8-3EF1-4E30-8BA7-FA39D37B84C0', 84, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:39:29.203' AS DateTime), CAST(N'2020-08-19T23:39:29.203' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8886c394-c63e-4752-8454-64235344ea13', N'80365BD4-7278-4C11-9F6E-ED93116FD156', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:18:48.310' AS DateTime), CAST(N'2020-07-11T10:18:48.310' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'66436b8c-68c8-4855-ae65-64397c48b91e', N'A49FB3A5-690B-4AEC-ADA3-B2A214083046', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T20:47:17.860' AS DateTime), CAST(N'2020-09-17T00:47:17.860' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b8a961d1-d80c-4221-9517-643ae65b8eae', N'245726FA-5BAC-4D9C-8DB7-EAA4831884B1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-04T08:43:33.270' AS DateTime), CAST(N'2020-09-04T12:43:33.270' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b45780ee-b02a-4ead-bbd1-65d8b4da88c3', N'0361F8BB-9C97-41B7-9922-422A65E40809', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-17T22:09:38.357' AS DateTime), CAST(N'2020-09-18T02:09:38.357' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ce52c82e-dd8e-4514-a6f2-662741084976', N'F1DB5218-6964-4C95-8FD8-DD1CF15676B3', 4, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:48:48.523' AS DateTime), CAST(N'2020-07-10T02:48:48.523' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e6737542-c6ec-45a7-956e-666eaeb51be3', N'96467B26-BEA3-449F-A9C7-6E626216CE80', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:47.217' AS DateTime), CAST(N'2020-06-28T08:21:47.217' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5cc4603b-3e1f-4e36-8580-6677ac22e318', N'8AFE657F-125D-4270-98C1-B23D533EC553', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T01:13:43.283' AS DateTime), CAST(N'2020-08-18T05:13:43.283' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'57a41c85-f696-40da-b03c-668f35c87c00', N'746718F8-3DF3-4BE8-BCB8-CE3928CDF2C6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T06:21:03.097' AS DateTime), CAST(N'2020-09-10T07:21:03.097' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'533438c2-8258-4da0-bfd1-6690a115fd35', N'E17731AA-9753-4C78-A43F-C310EC7E102E', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:20:55.640' AS DateTime), CAST(N'2020-09-09T08:20:55.640' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'223ce400-532d-4328-8758-6762c8ae56dd', N'727468B9-969D-4E23-BAC8-B56DF30FE3C3', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T08:19:32.597' AS DateTime), CAST(N'2020-09-03T12:19:32.597' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e9354e70-c877-4b21-8462-67a5e3e69405', N'AAD429C4-5D7D-437F-8AF8-5B2FED4036DC', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T03:03:55.103' AS DateTime), CAST(N'2020-08-05T07:03:55.103' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'360af613-3b13-44f2-93c5-67abaf067358', N'8245131E-97EE-4CE7-81D0-AD6A311069C1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T20:30:10.397' AS DateTime), CAST(N'2020-08-17T19:30:10.397' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'452838e0-5c6a-4fd8-90b8-67df6dc693f4', N'4C7A16B4-7464-432E-8C53-2C83CB13CE5D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T00:42:14.973' AS DateTime), CAST(N'2020-08-09T07:42:14.973' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9e835132-8405-42e4-8c56-684eb1d2b1ee', N'B9B8508A-DE8B-4823-9623-6DB8362F48A0', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T21:05:29.960' AS DateTime), CAST(N'2020-08-06T02:05:29.960' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3339ff25-709d-4424-9f9a-687e8dcdb7fa', N'BBCA98D3-EC11-486F-ADF0-7401D4204C3B', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T23:46:28.190' AS DateTime), CAST(N'2020-08-24T15:46:28.190' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7722e9d4-23e8-470c-a356-68d35245bb92', N'0A6CEE9D-638F-4275-9A44-0FBD5C6FF299', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:01:00.043' AS DateTime), CAST(N'2020-08-20T10:01:00.043' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c6d2d335-6fb6-4537-a5f5-68f38b8824e4', N'EEDF0DD8-C1E5-415D-9DFF-F83270976B1B', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T08:12:20.990' AS DateTime), CAST(N'2020-07-02T03:12:20.990' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3b08039f-31b7-41e9-8a6c-69c5e1b53885', N'83A87F98-8F4E-4484-ADD5-56882A674CC6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T00:03:53.230' AS DateTime), CAST(N'2020-09-14T07:03:53.230' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'117ba479-3be6-478f-a693-69e75ef5b229', N'C90DB602-967F-43EA-978D-67AB02B4891A', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T20:22:29.753' AS DateTime), CAST(N'2020-09-03T00:22:29.753' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'312a217b-331c-49ae-8b0c-6a7e578d21b8', N'8D795203-0615-4F2A-902F-ECDE9557FE65', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T06:08:45.337' AS DateTime), CAST(N'2020-09-14T14:08:45.337' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6c6f248f-66df-413d-8ae7-6a9aaf705f90', N'BE2CD839-1235-405D-95BB-AC722999A4E9', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T06:27:00.740' AS DateTime), CAST(N'2020-09-15T20:27:00.740' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7daacd00-2a20-41a6-a5da-6a9c59ce4cc9', N'E16D247F-847B-4060-A903-8F9A5546510D', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:44:53.073' AS DateTime), CAST(N'2020-08-05T11:44:53.073' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6c55743a-aca4-4966-b336-6ac985e86d79', N'E4D13110-0F1A-4304-9D04-459D784DE60E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T11:15:50.927' AS DateTime), CAST(N'2020-07-11T15:15:50.927' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f1a55584-2f32-4e23-b955-6adba0fb5221', N'E95E0329-2D6F-4108-8EC3-F110EA49B274', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T23:10:31.177' AS DateTime), CAST(N'2020-07-10T05:10:31.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'37d2c6d7-d6b9-4c63-9df3-6b3729b1422c', N'169D01CF-BE41-42EC-966A-0953891747E8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T04:48:43.530' AS DateTime), CAST(N'2020-08-18T11:48:43.530' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'72525e23-92d8-4cca-b586-6bac6e687532', N'03E6D49C-70A1-4895-AD2D-275AE017CBEF', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T11:13:46.500' AS DateTime), CAST(N'2020-07-11T15:13:46.500' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a3e5d5fd-c3b3-4d85-8208-6becc0173b8d', N'41D6B51F-04EA-424A-9598-E45275BE0CF1', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T06:23:50.647' AS DateTime), CAST(N'2020-09-15T14:23:50.647' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd98014af-90de-4f38-a3ee-6c06609ad474', N'C831EFA7-8949-46AC-A84E-DA706773DEC4', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T09:42:47.397' AS DateTime), CAST(N'2020-08-20T13:42:47.397' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e9be83d9-c4e9-4c30-a768-6c0988b59f7a', N'65DDB034-6B00-44AD-AFD9-FB33E261F013', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T23:19:11.460' AS DateTime), CAST(N'2020-09-09T09:19:11.460' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1de809a4-8916-4a08-97a1-6c28da8c73f8', N'AD0F0C16-5F00-4AE2-9864-5D21085A4725', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T01:45:08.210' AS DateTime), CAST(N'2020-08-19T05:45:08.210' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'66272e9a-bbeb-4bcd-aa70-6c314ed985d2', N'9EF349DE-9A22-467E-AEF2-4DC8F5B4191D', 63, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-16T08:57:12.970' AS DateTime), CAST(N'2020-07-16T15:57:12.970' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bca345c3-168f-43ff-9d1e-6c4859bb21fe', N'3A0DC658-B599-449D-AA27-13BB243EF7F5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T21:47:56.920' AS DateTime), CAST(N'2020-09-02T01:47:56.920' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'37a78d75-749b-4326-a7f8-6ca2be9e1515', N'4D38E92B-6D53-41AF-81D1-44D710831D62', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T08:52:39.747' AS DateTime), CAST(N'2020-07-13T12:52:39.747' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'49c06407-bd0b-4309-b4c1-6cb8d81e9dbd', N'DDA5590E-0BE3-41AB-8D35-396F1B0F4117', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T03:50:35.663' AS DateTime), CAST(N'2020-08-04T08:50:35.663' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'93fbf185-4337-485a-903f-6d2d38f6fc4b', N'64B96B5D-70DC-4017-A8F5-D84CABB45328', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-04T23:12:47.620' AS DateTime), CAST(N'2020-07-05T06:12:47.620' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f38fd36f-3306-4497-850a-6d3464cf011a', N'5EABAACC-144D-4859-9E0B-064C22021224', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-29T10:37:46.440' AS DateTime), CAST(N'2020-06-30T13:37:46.440' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3f056b95-53a1-4bc5-95fe-6d37333c9215', N'9CA85DD3-C7FF-4726-9A48-A2ACABFAE502', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-29T00:09:23.350' AS DateTime), CAST(N'2020-08-29T10:09:23.350' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6aff20a5-1fa7-4bd4-82fb-6e23b84cdb05', N'1CADFA5A-10D4-42E3-AAAF-2F37655B9063', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T17:41:04.297' AS DateTime), CAST(N'2020-08-05T21:41:04.297' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ad075c2f-e52c-4e92-8e2d-6e2533cf8cd5', N'1EB2DE6C-C88F-4255-997C-4BFAD65A2532', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T10:41:18.853' AS DateTime), CAST(N'2020-07-18T14:41:18.853' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fe165864-709b-4ca8-b3e0-6ee89859a423', N'93D05719-3E30-4B39-9304-74C3BD65DC30', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T03:16:32.570' AS DateTime), CAST(N'2020-08-23T07:16:32.570' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3efee49d-af39-4b0f-ba55-6f226ccccc8a', N'2CD65A0B-C980-40EC-92E9-230558CBFC71', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T09:50:42.880' AS DateTime), CAST(N'2020-07-11T13:50:42.880' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1df6ba55-15f8-46fa-9aa9-6f2cfabbe1be', N'D7D390A4-C6E6-4937-A81F-E377C463CBA6', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T09:01:35.567' AS DateTime), CAST(N'2020-08-18T13:01:35.567' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cac4bb0c-98cf-466a-bbd7-6f801eb03c92', N'8946F21E-A953-4B7C-B042-332BF307AC14', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:57:52.933' AS DateTime), CAST(N'2020-08-20T09:57:52.933' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'383e3c60-0f78-4126-89e9-6f9eaced976b', N'9170078A-68A6-4285-A4DB-988D999D7C84', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:50:27.100' AS DateTime), CAST(N'2020-08-20T08:50:27.100' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a4c935fe-123f-4984-8c4f-6fa92d0b6d95', N'8F9104DA-1B9F-402B-851A-70293A58A2E0', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T04:12:09.363' AS DateTime), CAST(N'2020-08-16T09:12:09.363' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'760ba057-838d-4586-a69d-6fc97c1302b9', N'BC1738EF-A662-47FF-8FA0-CA2F60F96F32', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:33:08.173' AS DateTime), CAST(N'2020-07-09T05:33:08.173' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a4927959-9464-452b-b218-6fd22e9c03b7', N'CEA51DA5-2AB7-41CE-9C31-51A1C32C8A3B', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-25T07:19:41.493' AS DateTime), CAST(N'2020-07-25T15:19:41.493' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'280a8439-42c8-4b46-b380-6fde8d304c4e', N'935FB8A5-D28B-44C1-ADF1-7C7DC0965DC3', 57, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T02:54:11.757' AS DateTime), CAST(N'2020-07-18T06:54:11.757' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'74b6ec09-5eb1-401a-b9ef-6fe3f4e54068', N'222E1B67-088D-42D3-B087-B764FC99B601', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T10:50:19.157' AS DateTime), CAST(N'2020-08-17T14:50:19.157' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'07ab4878-bd74-41c6-89a2-70024327f733', N'3576CB23-BD87-4CE1-8B2F-F203FB3AF267', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T02:50:09.650' AS DateTime), CAST(N'2020-07-12T07:50:09.650' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'de4093a4-7464-442e-9074-7028a3575ced', N'60BA98A8-E73A-469B-8E4B-C7635ABD7F5A', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:04:45.647' AS DateTime), CAST(N'2020-08-20T03:04:45.647' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'029d248f-a257-4a9b-804c-704526b048f9', N'5C4CA6BB-B10C-4B76-B595-03299370B90A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T20:09:54.660' AS DateTime), CAST(N'2020-09-14T07:09:54.660' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f029a702-6386-4ce9-9107-704620276142', N'4A669EE0-3F32-49A8-AE03-0965B1E0F93E', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T09:20:20.733' AS DateTime), CAST(N'2020-08-20T00:20:20.733' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ab21087a-9e86-4430-b03f-7081c178264a', N'547116BC-472F-49C1-BCB6-1736F2E3E853', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-19T00:46:39.003' AS DateTime), CAST(N'2020-09-19T13:46:39.003' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e136e716-1d96-49b0-9d61-70cc24a698c4', N'AEFD64D0-6D59-44AD-AAC2-0A9981730D32', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T06:34:15.130' AS DateTime), CAST(N'2020-09-10T10:34:15.130' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'05d0574b-791f-4301-bee6-71147fbf2f4a', N'93AAA2A0-6E39-40CD-908A-C60C5B11419C', 58, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T08:13:46.667' AS DateTime), CAST(N'2020-07-12T12:13:46.667' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cbaeb0c7-7d9e-4927-9b4c-717620857e81', N'2C8C81E7-26BA-463C-9D1B-2742CC2F03DE', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:46.933' AS DateTime), CAST(N'2020-06-28T08:21:46.933' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd1d2be97-40c1-4991-b26e-71e9c37d22e1', N'09F6F1E5-2ACD-421B-9CD6-9EE28B149153', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:31:14.630' AS DateTime), CAST(N'2020-08-20T00:31:14.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7e671769-4c9e-4eb9-b68a-71f71bc8754a', N'D3B2B4BB-5F76-4FC0-8318-431E00B1EBF6', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T04:25:58.803' AS DateTime), CAST(N'2020-08-18T14:25:58.803' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a45be7ca-e95f-4ef2-9f78-7257e38a8562', N'09CF3D4C-87E7-4C57-A509-97AA5B506805', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T09:46:01.980' AS DateTime), CAST(N'2020-08-15T13:46:01.980' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd6bd5177-5b2d-4e94-8017-728e38c7e139', N'09A230F8-2835-4482-90B7-17FEF241E30B', 88, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T04:56:30.493' AS DateTime), CAST(N'2020-09-12T11:56:30.493' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'02455ffa-3a17-4664-a9e4-72a4d16bac36', N'A152CBA6-4580-4E15-81DE-82A04CCF2ACE', 87, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T17:19:02.260' AS DateTime), CAST(N'2020-09-08T22:19:02.260' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c80f9d27-2b4d-4b24-a835-72b78caaa1c9', N'90334CA2-166D-4A58-99D1-CC1167CEF50D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T07:39:39.050' AS DateTime), CAST(N'2020-08-30T23:39:39.050' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dc405a5b-a708-49bc-9c8a-72efb2ed07aa', N'F52D5A60-03C8-445F-8222-A460C3744A56', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T10:19:19.857' AS DateTime), CAST(N'2020-08-17T14:19:19.857' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8ef29197-acbb-467b-8659-72f6f9d6197b', N'819CF743-E986-4CB3-9735-F19266D584EC', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:40:27.537' AS DateTime), CAST(N'2020-07-09T01:40:27.537' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a7792132-a1fa-4bdc-b06c-73035c7408da', N'9520C72F-9521-484C-A8A5-500C4F264851', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T00:32:10.350' AS DateTime), CAST(N'2020-08-27T01:32:10.350' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ded3d489-345a-4f75-9e16-7320f702b368', N'97B73316-CD4F-41EC-ACB5-EB98728CE7C0', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-15T02:49:44.473' AS DateTime), CAST(N'2020-07-15T16:49:44.473' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6be1bdd1-f9b5-4e4f-8bdb-736683275b64', N'1FC2C9DD-BD23-4DDE-80BF-E3A060BB13E3', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T21:08:14.867' AS DateTime), CAST(N'2020-08-06T02:08:14.867' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'480dd416-485c-40ea-9fd0-736c608698dc', N'0EC09811-7484-4EC3-9B84-5E3D5A4116B0', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T09:03:20.493' AS DateTime), CAST(N'2020-08-18T13:03:20.493' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2909dfd0-4147-4575-8bff-74c19231659b', N'AB097E69-A62D-4DBC-A3B3-5E14708C7ACB', 10, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:03:41.070' AS DateTime), CAST(N'2020-07-07T05:03:41.070' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'97efab2b-0bfb-48ae-9922-75b29f5063a5', N'1B734926-DB32-4AFE-8350-E000DE86C7B0', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:42:29.543' AS DateTime), CAST(N'2020-07-09T11:42:29.543' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fc651207-0997-45a1-8020-76937363a702', N'ABEAA2A9-1FE8-477D-B657-E1C63EE7A938', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T20:25:25.087' AS DateTime), CAST(N'2020-08-31T00:25:25.087' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'998d0f1c-9032-4f09-bcb5-76e1c156f2d9', N'C8B35AF5-BB74-48E1-8571-73F2B36D6190', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T20:06:20.947' AS DateTime), CAST(N'2020-07-10T00:06:20.947' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'55b16216-cac0-4e6d-b24e-76f0da6566c1', N'B0287546-C1FD-48E0-AF8B-3674A3550706', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T05:41:44.020' AS DateTime), CAST(N'2020-08-31T06:41:44.020' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a46a0a85-62ea-4864-931b-770fcd933969', N'33AD7C7A-BDCA-477C-A222-B4524EC9DAED', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T12:28:39.360' AS DateTime), CAST(N'2020-08-04T22:28:39.360' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'20d11ce5-6528-4910-ad8d-77158d46a8f0', N'E26799EB-B165-4FCF-A980-655B0498AA0E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T21:02:49.177' AS DateTime), CAST(N'2020-08-06T02:02:49.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8fc42df2-8da4-4315-8075-771dad07e0b2', N'4A0EE927-4071-49A1-9AC8-9459E3635F0A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T02:04:50.623' AS DateTime), CAST(N'2020-07-12T06:04:50.623' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'51441b4d-1973-40ad-af3b-774a757c4882', N'F02ACE5A-59D4-44C5-90FD-E6F56ED68872', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T02:30:59.037' AS DateTime), CAST(N'2020-07-09T06:30:59.037' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'06fa0677-37ac-43a4-a048-77cb2ec98400', N'003EA6C5-8240-4B27-8D14-D966687DC4F8', 76, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:42:09.197' AS DateTime), CAST(N'2020-09-09T11:42:09.197' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'795970e0-d8be-4d6d-bf65-77f08cfd32d8', N'D9A26AA7-D5F3-4D81-843F-A71976E1738E', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T22:38:25.350' AS DateTime), CAST(N'2020-08-23T09:38:25.350' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cdac39de-1a62-4727-966a-780bee30ffbc', N'2C7922B5-4E80-48B1-B51F-B3DA78BE44D2', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T00:29:51.680' AS DateTime), CAST(N'2020-08-09T05:29:51.680' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'971ffa19-ff71-48ba-aea8-7891bc12f868', N'4DD86763-E0CB-4EF0-9CA2-66ABA89018C5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-29T08:05:39.063' AS DateTime), CAST(N'2020-08-29T12:05:39.063' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4977c466-e59e-4874-82f8-789bf2bad647', N'B3E0FA83-8A30-429B-A943-0BC20C1BDB8B', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T06:32:59.260' AS DateTime), CAST(N'2020-09-13T16:32:59.260' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9117a41d-c87a-450f-acf4-78a166e3d6b7', N'266B6813-08E6-41DD-9847-D09649A9B948', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T08:22:08.390' AS DateTime), CAST(N'2020-07-08T12:22:08.390' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'db671b65-d701-4134-ad27-78ab6d3b4bec', N'34F838A6-49E5-4ECD-A87E-B672BF6F7C67', 25, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T12:03:39.047' AS DateTime), CAST(N'2020-08-19T16:03:39.047' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ebd55cd5-8497-4db1-bf9d-7929d59e37ff', N'65EDC6F8-5FF8-4B15-A70F-BDB803D80B36', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T04:47:56.240' AS DateTime), CAST(N'2020-07-06T10:47:56.240' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'55da11c3-d4fa-415b-bd34-79909f211a95', N'72410352-C3E9-4A34-9C65-9C7DBDC75987', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T21:07:33.077' AS DateTime), CAST(N'2020-08-11T03:07:33.077' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1863bcb1-596e-4c59-8d3f-799fc6c23d51', N'02691916-D8EE-4559-BFF7-A1610A088495', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-06T03:19:46.787' AS DateTime), CAST(N'2020-08-06T08:19:46.787' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5bd5cfe7-6f44-42d3-8364-79db9d82b38a', N'A132C12A-C0FB-4EF0-86EA-5F4E48A34A8E', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T00:57:34.280' AS DateTime), CAST(N'2020-08-26T04:57:34.280' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7d5a3369-c2ae-4b92-950f-79eaba7d9a0e', N'E2B7259C-9031-470B-BF0D-A142DDEE458D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T06:48:36.067' AS DateTime), CAST(N'2020-09-14T10:48:36.067' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a53e8221-108b-40b5-b631-7a09bfbfa05d', N'A016B69D-2747-4323-8664-17A2986A26B1', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:07:08.517' AS DateTime), CAST(N'2020-07-11T03:07:08.517' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ef394d3b-fc12-452a-b137-7a724a622c7a', N'24549132-B852-4693-B43C-23E3D51ED571', 85, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:07:19.427' AS DateTime), CAST(N'2020-09-12T10:07:19.427' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8d6f449b-a3c8-4cc2-9b3c-7c0f6ef6e69d', N'1CA79709-75F6-47F5-B6F3-7155DAADF774', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:35:23.917' AS DateTime), CAST(N'2020-08-20T09:35:23.917' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'88bf5af9-3ac4-4cda-9bbc-7cc1d830fb19', N'0BD937DE-BEEF-4A23-8874-BD199AF07066', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-17T21:19:41.480' AS DateTime), CAST(N'2020-09-18T01:19:41.480' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dcf9d704-9990-411d-9011-7cf404594404', N'6FA2F6AB-8331-4B00-B717-35EA3A84932A', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T07:04:01.830' AS DateTime), CAST(N'2020-08-18T17:04:01.830' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bba14d60-cc51-4dae-a86d-7d00e18037dc', N'DB9D5241-E930-4AC7-A72C-462B1A4679BA', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:55:10.043' AS DateTime), CAST(N'2020-07-10T02:55:10.043' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e20ee9e2-19e5-4809-aa2a-7da32c6a6154', N'20A4FF96-92B7-4C95-B8BD-1DC8DD266860', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:01:45.303' AS DateTime), CAST(N'2020-08-05T22:01:45.303' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dc2b32d2-394e-4ee4-bc24-7db9db73d416', N'1AFD7D55-8763-4709-93FE-AA6C1D994A31', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T09:30:36.907' AS DateTime), CAST(N'2020-06-24T10:30:36.907' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'72f01545-51d5-48f4-a083-7e079b900000', N'AC504715-F055-4FE2-A616-C74CF12C84F8', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T21:58:42.887' AS DateTime), CAST(N'2020-07-07T07:58:42.887' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7c6d9c25-071e-4e90-9662-7e31d32ecceb', N'07F42AEA-EDAE-4B0A-96CF-DB8785E13841', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T04:49:10.640' AS DateTime), CAST(N'2020-07-11T08:49:10.640' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'74c2a085-7f3f-41aa-b6d2-7e65258f6094', N'79873F08-1215-4EA5-BDA6-13FC699FA532', 10, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:13:02.440' AS DateTime), CAST(N'2020-07-11T07:13:02.440' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5b572667-987a-498f-a69e-7e8c0e7ce1d0', N'80F51A1C-E527-497D-A93B-AA8C5F8DC1AE', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-04T09:34:06.857' AS DateTime), CAST(N'2020-07-05T05:34:06.857' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3efb1e96-083a-4a8a-9b42-7eaa94ded291', N'204613CB-A9F4-4D08-9133-4F14B7FC572E', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T21:00:11.703' AS DateTime), CAST(N'2020-08-06T02:00:11.703' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4dad636f-a595-40c2-9cdd-7ead6ec5178c', N'EE6AFD13-1352-4B10-ACBD-2B8D539DDEC4', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T06:14:44.730' AS DateTime), CAST(N'2020-08-21T13:14:44.730' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'70095831-5403-4bb6-92ff-7ec295c8ad66', N'F4D94523-B0A8-4AE3-B384-B39FC26D60EF', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:24:00.690' AS DateTime), CAST(N'2020-07-09T01:24:00.690' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ff4399c6-74e3-4fac-be47-7ec70265780c', N'14AD63F7-C650-41AE-B7EB-49650DD57C1E', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:56:06.300' AS DateTime), CAST(N'2020-07-10T19:56:06.300' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c73bf44e-94cb-4085-984d-7ed2fcf635dc', N'6B3BF4A2-4ADE-41B0-A5CB-52D11BBFE8E8', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T02:47:50.990' AS DateTime), CAST(N'2020-08-19T06:47:50.990' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'67059519-82eb-4054-ad6c-7f7414488479', N'D4739F22-7D71-42FA-A109-3F6B05BE1815', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T06:10:09.603' AS DateTime), CAST(N'2020-09-10T13:10:09.603' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'415df62d-bddb-456b-b0c0-7f7c6066234c', N'2662114D-F25E-487A-95EE-539845E38A90', 53, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T05:53:28.860' AS DateTime), CAST(N'2020-07-13T09:53:28.860' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'83fa0055-c6fe-476c-bb45-7fb9ed2fc41c', N'C291E18C-CBED-4CFF-AEA3-A58D8E2B609A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-24T19:39:14.987' AS DateTime), CAST(N'2020-08-24T23:39:14.987' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'68a35dac-ad98-4236-a8f7-800f308065c8', N'C5A152A0-9956-4456-93F2-6E19CB334D4D', 24, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T08:19:43.357' AS DateTime), CAST(N'2020-09-10T12:19:43.357' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5f63467f-71b4-4735-8629-803c9fc21c79', N'B8C1833B-AC82-4A9F-AD23-9604565AB589', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-27T00:57:54.600' AS DateTime), CAST(N'2020-08-27T08:57:54.600' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'24e515a9-d389-4947-9a8a-80e4a14fc675', N'003073E8-BBE2-4596-A85F-9EB9641259BA', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T04:35:25.330' AS DateTime), CAST(N'2020-08-05T14:35:25.330' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cee508f6-932e-46bf-9753-814323fc9185', N'723DC8CF-CCAB-4607-B351-1C3E445D328E', 63, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-16T08:57:11.337' AS DateTime), CAST(N'2020-07-16T09:57:11.337' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e9c5f145-aec8-49dd-982b-819b127963b9', N'E500C9E9-34EB-4A9B-A1B7-B6E790E60580', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:53:08.357' AS DateTime), CAST(N'2020-08-19T23:53:08.357' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7098b069-8f13-49e4-8378-81e58c4a0dd2', N'3FFD3C1E-AA01-4F91-A3E0-0BD9BC0057F0', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T20:53:42.320' AS DateTime), CAST(N'2020-08-19T07:53:42.320' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'729ef205-97f1-4c21-ad95-820ae83d58d1', N'233457A7-0EE6-4CB4-A06D-DCD61E159075', 57, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T02:35:17.740' AS DateTime), CAST(N'2020-07-18T09:35:17.740' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4a10bdaf-86a9-414d-b4d3-82576dd223eb', N'EE290E58-AD0C-4B19-8759-B8ADF469B307', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T04:12:09.357' AS DateTime), CAST(N'2020-08-16T05:12:09.357' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a362ce4b-d73d-49ff-a52e-8290eb6f1b34', N'73D0852F-97B0-4028-9E3B-3DEDBB2A730C', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-05T00:17:19.513' AS DateTime), CAST(N'2020-07-06T01:17:19.513' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'12fdaae2-3247-4cd8-b7a4-82b7152ebed8', N'D7B9B3B2-AB55-4131-A38E-8F7C1041C9D1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T23:35:54.630' AS DateTime), CAST(N'2020-08-19T06:35:54.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8c91c5b6-fa4e-4096-ba4d-82db7d0fbe8a', N'55D318C9-717F-485C-9BEC-D3277B6E95D3', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T06:16:27.870' AS DateTime), CAST(N'2020-08-10T10:16:27.870' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'687883c5-bf19-439a-9f3d-835c943f59b9', N'0D3DA40D-0008-4035-8535-6390FD13CF8E', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:19:40.917' AS DateTime), CAST(N'2020-06-07T21:19:40.917' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7bad753b-1356-4099-aa99-83aa4baab69f', N'05D0FA07-D5CD-4C42-99DA-B3FA21D0C196', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T20:57:24.187' AS DateTime), CAST(N'2020-09-02T00:57:24.187' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ee6ea11b-4ef7-436c-acc2-83ee01a09c2e', N'495DB2A2-C99D-46F2-88B1-80D5E8FB59F6', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:43:17.340' AS DateTime), CAST(N'2020-09-09T09:43:17.340' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'981f8de0-d5e0-4fd7-96d6-843aaf62e466', N'7BF8D182-D53B-4E47-81DE-B90886586C6B', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:55:20.540' AS DateTime), CAST(N'2020-07-08T17:55:20.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'51b2aa06-96c6-469e-bd38-843e7395bfdb', N'8E6907B2-C62E-4D21-AB14-4DED7E73AE0D', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T04:21:06.210' AS DateTime), CAST(N'2020-07-10T20:21:06.210' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'60a493ba-b5d2-4ff0-9528-8450ef7f0673', N'5F0BA76B-217D-4697-B1D6-A778F1034392', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T11:57:15.510' AS DateTime), CAST(N'2020-06-25T19:57:15.510' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'aaf65094-ee42-4f5c-bf9c-8452e5ba7cbb', N'98167641-0335-442D-A2BF-398E6A3E7EB3', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T13:34:17.407' AS DateTime), CAST(N'2020-08-19T17:34:17.407' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'227efd2e-cadb-4cdc-bffa-8462c9110481', N'73AAAA47-C45D-4523-ABC4-3C3D0971D41F', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T11:11:31.443' AS DateTime), CAST(N'2020-06-25T16:11:31.443' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bb79250f-1df4-4172-9590-84e909ab6cf9', N'DC30B102-CBBB-4809-8A7E-10213B7F0E55', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:41:37.043' AS DateTime), CAST(N'2020-06-07T21:41:37.043' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a683c0cf-7f32-4d30-b7f0-851ef41f158a', N'AD3F1A2A-3459-4602-91CC-D747943C0E87', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:20:42.750' AS DateTime), CAST(N'2020-06-07T21:20:42.750' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2e1c5645-e213-4cd8-a696-859ad31d9ba6', N'DD4253C2-1225-4BA4-B66D-C388DDA8257E', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T02:33:41.870' AS DateTime), CAST(N'2020-06-28T06:33:41.870' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6b1356ab-9ac3-4829-b8a4-85f378f228f0', N'2D0039FB-9D9C-4365-B661-3EA56BFAAD10', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T02:59:37.907' AS DateTime), CAST(N'2020-07-18T06:59:37.907' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'507f7b68-c24c-4d65-98b2-867c11be169c', N'67AFA7BC-5E6A-4FF2-9EE1-F51DE32BA21F', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:48:31.480' AS DateTime), CAST(N'2020-08-20T05:48:31.480' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'86772601-64d6-434f-9406-86df99ae4646', N'A78E127C-8313-435C-808A-68650D3A8A52', 22, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:55:57.457' AS DateTime), CAST(N'2020-07-09T05:55:57.457' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'53b94ddb-27e8-43e9-bfc0-86ebae19df56', N'6BFFDFB6-E206-48F8-AB8F-EBF57D6AB10B', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T03:46:14.880' AS DateTime), CAST(N'2020-07-09T08:46:14.880' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd93a7f83-4685-4b5f-b277-86f5516c416e', N'25222945-8695-4412-BF48-41CC3C0DDEAD', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T10:14:58.320' AS DateTime), CAST(N'2020-07-12T17:14:58.320' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2c8d7afe-4df2-40f6-b0d2-8722cb13110b', N'F00984EA-82B6-43CB-9430-0BF204586FFE', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T00:40:57.370' AS DateTime), CAST(N'2020-08-31T07:40:57.370' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f325a446-c020-4e15-9b65-872932e9ba3c', N'31D38847-85C3-4AFD-80BB-9238046307EE', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T20:43:21.340' AS DateTime), CAST(N'2020-07-14T00:43:21.340' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'647033eb-43da-402d-b08f-877d04631229', N'52212484-C2C8-4118-94A4-AE8346E08765', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T06:45:20.790' AS DateTime), CAST(N'2020-06-09T10:45:20.790' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e5dc73f7-10b4-459f-ade0-87b8d35252f0', N'31B333BB-167F-4EF9-87BA-D006770C2345', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T11:22:17.977' AS DateTime), CAST(N'2020-08-05T15:22:17.977' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2b0e0ac3-e9de-414e-80a5-8871d25e17aa', N'487ED302-6951-442F-84C6-EED42BD83CEC', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T22:04:31.517' AS DateTime), CAST(N'2020-07-14T11:04:31.517' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'80a2836d-edbc-4e7d-a313-88cfa7e4af65', N'8D56F2AB-BC5E-4708-B860-223051A1E4A8', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T06:52:22.777' AS DateTime), CAST(N'2020-08-10T10:52:22.777' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'38ed5bed-4155-4268-91d6-88dedcb01b2a', N'784801C7-9901-4398-B124-8AE793558900', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:35:57.967' AS DateTime), CAST(N'2020-08-20T02:35:57.967' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a9151449-416c-4277-a7cb-88f07219cb68', N'BAFF0A57-F2BC-404C-8F36-450CA4C65ED9', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T10:32:39.220' AS DateTime), CAST(N'2020-06-25T18:32:39.220' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ef057f35-bca4-43fe-87ea-8916fbb27c32', N'9128E338-5449-4FDD-9092-EF9EA701DE0F', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T20:39:54.350' AS DateTime), CAST(N'2020-08-03T01:39:54.350' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd4876429-90d3-4ab7-9bcc-896b3f8e990e', N'0D0A363F-C70E-460C-8D13-2CEFFA86D5DE', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:17:49.187' AS DateTime), CAST(N'2020-07-11T10:17:49.187' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'05231726-df78-4e13-9f63-89d3d8cb1202', N'0A4E4A34-2AB4-4BAE-8C13-353B9001A15E', 12, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T10:14:10.613' AS DateTime), CAST(N'2020-07-11T14:14:10.613' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f57ae7b0-03f7-45b7-987c-8a5b642b399f', N'59B0122F-230E-4E6E-8903-DAEA51B5C60B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T02:47:26.550' AS DateTime), CAST(N'2020-07-08T14:47:26.550' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'799bdd4f-ae2e-4489-982d-8a5ced55b22f', N'EE1A7242-EBF0-44C2-81D3-5C09F9EE2C9E', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T10:08:11.960' AS DateTime), CAST(N'2020-06-24T02:08:11.960' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25690a6c-1da3-4e81-84f5-8a6efef90978', N'A03CCD70-7BCE-45BA-AAE5-047F05E9091B', 4, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:55:55.393' AS DateTime), CAST(N'2020-07-11T11:55:55.393' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'293433fc-79e3-4a82-9fb4-8ab6224ef420', N'C10FD2DE-4091-47C9-A80A-13A57296285C', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:57:25.390' AS DateTime), CAST(N'2020-07-09T02:57:25.390' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'df32df12-229a-4929-84e3-8ac482c424ad', N'92C66502-4537-4F7C-81E2-5CAE3FA414C1', 4, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:54:03.150' AS DateTime), CAST(N'2020-07-11T06:54:03.150' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd7bf4075-add5-4520-97a0-8b016a990a7c', N'57599CCA-4DB4-41F8-8E35-9D1E5763BB08', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:47:55.933' AS DateTime), CAST(N'2020-08-20T06:47:55.933' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1ccdc8c7-e293-408c-b1c5-8b33dc7ee59e', N'02D1AF22-0C84-46B8-9154-75375D74686C', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-26T11:47:34.017' AS DateTime), CAST(N'2020-06-26T19:47:34.017' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'204bd1f4-fa99-41d2-a21d-8b4ffa030f71', N'FF117D0D-1342-4B43-8917-56BCBF857003', 88, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T04:40:42.143' AS DateTime), CAST(N'2020-09-12T08:40:42.143' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a62071a8-6923-4e55-ae8d-8b683d19ab73', N'3A3C80BF-6DBA-4642-B7CA-44831F451693', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-26T10:09:29.633' AS DateTime), CAST(N'2020-06-27T23:09:29.633' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6bc8f3b6-9798-4cf4-9e08-8ba7681e3dd6', N'45352E36-F323-4AED-B200-12903648ACB0', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T07:30:11.747' AS DateTime), CAST(N'2020-09-03T21:30:11.747' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd0e55861-806b-4f84-9dae-8bce3a312152', N'39322285-E753-4CD3-BB7E-D56535FEE7A6', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T23:04:10.917' AS DateTime), CAST(N'2020-08-23T09:04:10.917' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9bba0b01-dcee-4429-b366-8bf8718c75ba', N'4480C802-476A-44A1-9897-AF38B8EA959E', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T08:29:07.673' AS DateTime), CAST(N'2020-08-21T12:29:07.673' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'47706383-6393-43bf-b7fb-8c9c60f43fce', N'FAE9D0BC-5FE7-49E7-8023-46D8F3CF3D2A', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-08T03:15:52.380' AS DateTime), CAST(N'2020-08-08T07:15:52.380' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'242bdbf1-0d86-4c9a-ac35-8caae55ff9a2', N'3813B3FF-68E3-409B-871D-3745D933139A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T10:21:03.227' AS DateTime), CAST(N'2020-08-18T08:21:03.227' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ce3ff780-0e93-4bce-aeaa-8d157b8e5da6', N'A04026F4-EC76-48DD-B0CE-BA3DCF07B801', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T03:06:18.050' AS DateTime), CAST(N'2020-09-16T13:06:18.050' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1b7b2dcd-9bd3-411d-88dd-8d8037ed86a5', N'FDE62ED0-360F-4EC1-85E0-9F6F45A414D6', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:31:48.473' AS DateTime), CAST(N'2020-08-20T05:31:48.473' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'053fcc1d-e168-4db9-a87e-8d83b8c08deb', N'EB44930F-7189-4C86-B722-D160242460EB', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T04:49:12.197' AS DateTime), CAST(N'2020-07-12T11:49:12.197' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25a1b540-df4e-4f42-8797-8df30951002c', N'1067C4C4-C680-4345-9E04-DB30B3616FC8', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T05:48:34.860' AS DateTime), CAST(N'2020-08-19T06:48:34.860' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a51fbb38-1a3c-4c8d-87a9-8e0b6bc3e518', N'79E6ED88-BB7B-4438-86C2-ADEDACDEDB81', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-25T00:32:42.337' AS DateTime), CAST(N'2020-08-25T15:32:42.337' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e4ea7c34-bf8c-4697-8f38-8e2c9f772128', N'A9BBE228-B5F0-4ABB-9D39-F1255D83850D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T21:00:08.510' AS DateTime), CAST(N'2020-08-05T20:00:08.510' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'914e5c7b-3b15-48d7-9ac0-8e7fd083743c', N'32E97F55-900B-4E64-AC88-424B2A95DAB0', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T06:54:43.783' AS DateTime), CAST(N'2020-06-10T01:54:43.783' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'019fb478-3f26-4917-8053-8ed648eb6db5', N'B73F4491-64A9-4DFF-8B45-613778492CEA', 10, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:24:06.610' AS DateTime), CAST(N'2020-07-09T06:24:06.610' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'076aac87-2518-4d85-93a2-8eede09ab3e2', N'AF773FA6-F8C9-4C40-B44F-80E4C2F360C2', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T01:11:43.280' AS DateTime), CAST(N'2020-08-18T05:11:43.280' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a293a3af-bf85-44a8-836e-8f1f0bcc0d8f', N'456DC3C2-14D9-474D-A78A-4A796F7E1859', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T11:06:06.383' AS DateTime), CAST(N'2020-07-11T15:06:06.383' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'387b1435-f536-42de-b64e-8fc8118e092e', N'3F9B655C-3C17-49FF-A5AB-536A6E81BEEC', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T22:53:51.853' AS DateTime), CAST(N'2020-08-22T02:53:51.853' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e9101960-27dc-4534-8da6-8ff1ee190063', N'FD31A291-0436-41AB-B9A8-E16332683FB7', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T21:05:22.907' AS DateTime), CAST(N'2020-09-10T01:05:22.907' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'96248c05-f07f-43ae-9a18-90f089828e18', N'1BC3658F-BD86-46AB-904A-685A5FBD4549', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:51:16.057' AS DateTime), CAST(N'2020-07-10T02:51:16.057' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7b916665-08e0-4960-879e-910be0edb900', N'CD3FAEF5-1BA0-4230-95B4-6B248B1168E9', 83, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:28:44.213' AS DateTime), CAST(N'2020-08-20T07:28:44.213' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2e8471e1-f460-40c3-8719-912f1ac7aa7d', N'805518E0-C791-4E95-AEE9-E6FF93FF1FD9', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T09:01:05.923' AS DateTime), CAST(N'2020-09-07T13:01:05.923' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'29545faf-a470-485b-b8bd-91ded228aa4e', N'86F56BD6-99EA-4960-9D55-74B65AC17684', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T08:22:51.357' AS DateTime), CAST(N'2020-07-09T10:22:51.357' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'432107dc-5ebc-4eff-a551-922affc3df5f', N'6FBF62FD-5D8B-4D79-BAAD-B3FDD143CC39', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T23:52:58.320' AS DateTime), CAST(N'2020-06-09T06:52:58.320' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6537c68f-e3c3-4358-8f71-9230b58d53c2', N'4744AB0D-9D2D-4276-8B93-257572EDDCF9', 84, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:08:29.483' AS DateTime), CAST(N'2020-09-12T10:08:29.483' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'08d2d78c-a33a-49df-8a14-9237d0bbd801', N'B57C6D46-173A-4C14-956B-9574EDB77B63', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:58:21.207' AS DateTime), CAST(N'2020-06-07T21:58:21.207' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fa97b32a-ddee-4262-a626-92750c8b30ea', N'BF2613E1-2C85-4D1A-B37E-540C8704A3F6', 5, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:09:58.400' AS DateTime), CAST(N'2020-07-11T09:09:58.400' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8dde0d5a-c45b-405e-a74c-929a7e04962d', N'DECED4C9-A467-4B06-BF6B-517B1C9E92CE', 24, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T07:21:47.533' AS DateTime), CAST(N'2020-08-20T22:21:47.533' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'74c70659-9f49-49e2-8a74-929d49f7231b', N'7033E51F-6EF2-46F7-9D55-5B112738EDDE', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:19:26.183' AS DateTime), CAST(N'2020-07-11T10:19:26.183' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b8bdfe6e-c3e2-4a98-bfcc-92b40689395c', N'E078C486-1A3D-4153-80F7-4F38369BDFAB', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T03:26:45.990' AS DateTime), CAST(N'2020-09-07T07:26:45.990' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b8a75d6e-e837-43cb-b2b8-92c92a4d1567', N'FDF7636F-28A6-42DC-9194-C3251934171D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T01:10:53.743' AS DateTime), CAST(N'2020-08-18T05:10:53.743' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'45974d6a-e3eb-41ac-b3a0-92e16bcb10b3', N'C74D63AF-5E48-41F1-B63D-2662B15B5148', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-15T10:14:29.397' AS DateTime), CAST(N'2020-07-15T15:14:29.397' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a2fb372b-5ea0-4796-a146-92fd75756f2d', N'938CB9A8-4C7C-441C-8025-1120CEA1D7E7', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:27:04.450' AS DateTime), CAST(N'2020-08-20T05:27:04.450' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'011a1532-b392-44db-ab77-93514ec5f2b0', N'2CCDBFC3-3FF6-4EBB-B08E-D92835A9525B', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T10:32:11.870' AS DateTime), CAST(N'2020-07-10T22:32:11.870' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'78e6479f-42fe-4106-9a67-93edd282f811', N'A80A7FC1-653D-4E54-AAD8-5082336FE385', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T23:58:32.887' AS DateTime), CAST(N'2020-07-07T03:58:32.887' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fafed87e-752a-4121-8d4b-93f6cefb3ca6', N'5C4C395B-76AD-43C8-A50A-55BE8867F345', 55, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T21:41:01.817' AS DateTime), CAST(N'2020-09-03T01:41:01.817' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6b2f647d-77c7-485a-9f3b-94a7bc5e268e', N'DA820930-BE8F-44D0-8037-94852A0D3CDD', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-17T09:44:48.967' AS DateTime), CAST(N'2020-07-17T17:44:48.967' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8e7a19f2-b74c-4b0e-867a-94b48afc8122', N'F8089AB7-455E-4139-A64F-9C0564D3ACAE', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T22:08:21.980' AS DateTime), CAST(N'2020-06-08T02:08:21.980' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'db798658-dba9-47b0-9a6b-94bac61295d0', N'7C2D0A20-6E3A-493A-8BBA-02487FA21D78', 89, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:20:04.383' AS DateTime), CAST(N'2020-09-09T10:20:04.383' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'998dfaa4-4d58-4fe1-a71e-94e6147df079', N'0D535F22-AD89-431E-A9C3-136A5924C746', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:47.443' AS DateTime), CAST(N'2020-06-28T08:21:47.443' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a1b4f962-0181-4564-8b81-94fd102ee430', N'6F19866A-D215-4AA5-82E7-5AE1ADAB97EF', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T20:11:07.630' AS DateTime), CAST(N'2020-09-13T01:11:07.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd0b7f033-a273-46ed-9558-9551439af5d6', N'233E452A-7E4F-48E5-BFDB-03892A60FB83', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T18:24:12.063' AS DateTime), CAST(N'2020-08-16T22:24:12.063' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0fbab461-c92f-4475-8de5-958058d59576', N'31A5F5B1-45A6-437E-B566-B96855CC3CA8', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T03:23:54.970' AS DateTime), CAST(N'2020-09-13T07:23:54.970' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25a170e7-a1d8-4d80-baee-95f655fd39d2', N'307E3FC1-1D28-4593-9C12-E575C98C5EC6', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:12:43.553' AS DateTime), CAST(N'2020-09-12T18:12:43.553' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a2a957c3-dafa-453f-bdee-96329d41329b', N'6ADA62F4-F2C3-4D92-8AD8-954E92AF517F', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:24:18.253' AS DateTime), CAST(N'2020-07-11T07:24:18.253' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c4e7603e-4006-4148-8c04-965ae1132b4f', N'85C69A7D-0725-4254-B68F-7A9FDBFB66CE', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T10:50:29.673' AS DateTime), CAST(N'2020-07-12T17:50:29.673' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7d0c0db0-6211-4731-abf5-9676eb06167e', N'5C7A12B4-A8D1-4AD0-8E95-71704620D85F', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T03:17:03.583' AS DateTime), CAST(N'2020-08-26T07:17:03.583' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ee44beb3-18a5-4338-b539-967dda046395', N'72764351-CADB-4DC0-AAD1-11A77655CA8F', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T20:23:59.967' AS DateTime), CAST(N'2020-09-03T00:23:59.967' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a566b6b7-35c5-4d43-bf1e-96f79991cf97', N'E06F6E22-DB03-4E9C-B8F1-E80F79742242', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T00:36:25.617' AS DateTime), CAST(N'2020-08-09T09:36:25.617' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4fe0baa9-6688-466e-b292-96fd2dc91590', N'0325CB1C-05A9-422B-91BC-B98991B59E8E', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T17:38:00.857' AS DateTime), CAST(N'2020-08-20T03:38:00.857' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'da356548-b3ce-4e81-a361-97001ae24a6c', N'6CC3FDD4-8C24-43F6-AF99-5F731C427E95', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T19:00:18.183' AS DateTime), CAST(N'2020-07-10T23:00:18.183' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'93bf91cc-9e17-40e3-93d0-97a2936b5559', N'D9058393-E568-47D7-91CA-3408BE289ABC', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-12T09:43:27.273' AS DateTime), CAST(N'2020-08-12T19:43:27.273' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'90d0786f-7095-441d-a9bc-97db2d58b70a', N'16DD68DC-14DF-411E-8902-C0FD98DA54FC', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T21:41:51.473' AS DateTime), CAST(N'2020-08-21T01:41:51.473' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'afa7596b-c023-4d18-aff3-97e38c1c8b50', N'21DF2CB6-E39E-4889-B62D-B43B40024C04', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T05:05:04.567' AS DateTime), CAST(N'2020-08-22T17:05:04.567' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'29f7c067-1433-46e3-9161-981dc6105864', N'E5EDBC77-0E62-47F2-88FA-85B13BE79656', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:12:02.287' AS DateTime), CAST(N'2020-09-12T10:12:02.287' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6436736d-27d6-441e-b36e-9858772fd1f1', N'26026D83-94C1-4EFB-8611-51E97E652AA3', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T20:14:07.490' AS DateTime), CAST(N'2020-08-17T00:14:07.490' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'603518de-4b32-4669-ba3d-999cf0bbb3d9', N'BAF20626-47ED-4134-B0AC-4FC0107C872E', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T10:46:03.457' AS DateTime), CAST(N'2020-08-05T15:46:03.457' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8c836f71-70e8-4093-8710-99b37fbb11ed', N'69549DC3-89C9-4E51-932D-CFD0562DAAB8', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T01:37:12.940' AS DateTime), CAST(N'2020-07-12T09:37:12.940' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'80a4e45b-5f9b-4f3b-a52d-99d2b49eb42e', N'B1521638-0829-4EFD-85DB-F1575A594A6F', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-19T04:51:04.560' AS DateTime), CAST(N'2020-07-19T08:51:04.560' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'be1445d1-d612-4831-9ac8-9a13797504f2', N'0BFF2AA9-3624-4432-A855-366911B6EDEA', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T09:48:49.200' AS DateTime), CAST(N'2020-08-21T16:48:49.200' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bc30b5db-6c13-4eb6-93b6-9a2b20c3b04b', N'8103F752-7F37-42F5-984A-0B4A9A60565B', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T02:34:08.103' AS DateTime), CAST(N'2020-09-02T07:34:08.103' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7fb13dbf-a53b-4931-b20a-9a7798d116d2', N'9C673219-CEF9-4D6A-BE4C-7591545221C6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T10:38:39.210' AS DateTime), CAST(N'2020-09-13T21:38:39.210' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0dfc8431-1f42-4b0c-9b92-9a9a303fdf5d', N'55050CA6-3373-4178-AE57-27380D54E34F', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T11:09:18.840' AS DateTime), CAST(N'2020-06-23T12:09:18.840' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e7c7ba22-836b-4cdd-a3b1-9aad5160155c', N'45721DC8-81CC-45DA-AEDF-B1A1F154B9AA', 6, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:18:24.877' AS DateTime), CAST(N'2020-07-11T11:18:24.877' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1bb40e7b-9829-4b9f-a308-9af301c36e6e', N'8B8A684A-86A1-4073-B1BA-BEB264C27E6D', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:13:38.913' AS DateTime), CAST(N'2020-07-10T19:13:38.913' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3eced11f-e0c2-4c20-99c5-9bec090f1b54', N'2314D5AA-CE71-4D44-92BF-B783994B05B3', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T00:22:17.283' AS DateTime), CAST(N'2020-09-09T17:22:17.283' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b1505a73-0ef9-44f0-8efd-9bfc3e7dc5fc', N'4A2862CA-22E3-439A-BE83-7E388C196E93', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T12:02:45.040' AS DateTime), CAST(N'2020-07-02T05:02:45.040' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6307502f-fc9f-43aa-89dc-9c4f8c225156', N'9323C087-3DAC-4A43-BF6A-7DC730B332C1', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-02T07:30:36.623' AS DateTime), CAST(N'2020-07-02T23:30:36.623' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3bc4dd59-5693-443c-bd08-9c6edae32575', N'B2B87B90-D3CB-4C44-969A-370F67D22A16', 37, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T10:37:24.677' AS DateTime), CAST(N'2020-07-02T02:37:24.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3eed1b57-c50d-4a85-829e-9cf4438af461', N'7F037A5A-1968-40F8-983C-623D70E4CFAE', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-03T00:24:07.213' AS DateTime), CAST(N'2020-07-03T04:24:07.213' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4c8dbb38-a1da-4d6c-9604-9d74084fc13c', N'A5EF76B8-D832-4535-B0B7-94047550C2FC', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T00:44:39.710' AS DateTime), CAST(N'2020-09-07T01:44:39.710' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3694ed09-7d90-42f8-b439-9e27be4e4d8f', N'B7651A1F-5AD5-47F9-B8F5-CCD56FCF19B7', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T08:34:48.867' AS DateTime), CAST(N'2020-08-05T15:34:48.867' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'35787268-b775-4a2e-9be9-9e651ea3e8ec', N'480B0184-EDCF-40B1-8B48-0FDF378CC4EC', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:00:17.367' AS DateTime), CAST(N'2020-07-11T07:00:17.367' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fd814065-c8e2-4fab-b584-9ec36d7a2af5', N'CA083DE1-10BB-4017-AAF2-B33D5E917015', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-01T01:07:20.160' AS DateTime), CAST(N'2020-08-01T05:07:20.160' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ac6155c5-9fab-403f-9abb-9edcedde6e2d', N'B76DBDA8-D678-47AF-B2AA-83EFA53B9756', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-04T09:13:52.107' AS DateTime), CAST(N'2020-09-04T14:13:52.107' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a3fb5a9f-8905-41bf-ae2e-9ef422b8de3e', N'38FF9D68-F582-4585-8EB6-77657F7C5E5B', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T23:12:18.710' AS DateTime), CAST(N'2020-07-11T17:12:18.710' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5842a2b8-eb6c-4e66-a72d-9ef8de3a9cbd', N'597BA849-7E1D-43AA-82BF-3997860358DA', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:14:02.660' AS DateTime), CAST(N'2020-07-09T02:14:02.660' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'840838e2-8b75-4785-a4fc-9f095c2a3a23', N'C9AD91CD-D23A-4F75-945A-3364CE93550B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:10:32.003' AS DateTime), CAST(N'2020-07-09T01:10:32.003' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a8b0a58a-14a2-4cc5-9337-9f3eefc587f6', N'2CDF6287-0786-4917-8684-90ED13E93C3A', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T00:43:34.097' AS DateTime), CAST(N'2020-08-09T10:43:34.097' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'586bda6e-6a4d-4aba-9240-9f9d380c2cac', N'EEE5C137-7868-467A-AA06-7D5226FC3A9A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T08:37:54.847' AS DateTime), CAST(N'2020-09-16T15:37:54.847' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'65dc8d88-53be-4df0-b3f7-9fadeb60b3f1', N'C94A37B3-ECC8-4DFF-8DF7-4BE339ECA8C3', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:01:56.523' AS DateTime), CAST(N'2020-07-07T06:01:56.523' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5366fd14-93dc-47a8-8226-a029ace8913e', N'46F0F143-E048-4430-8DD1-0FE7BD51B7D0', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T10:22:27.030' AS DateTime), CAST(N'2020-07-12T14:22:27.030' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f47a0ebf-f709-4685-b54c-a091b96119ad', N'1DDB4D47-8507-4EAB-9F75-2CEC3EFAEA6C', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T20:23:01.117' AS DateTime), CAST(N'2020-09-03T00:23:01.117' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c5b52ab3-8ba7-4772-afa6-a0a2cf95a2de', N'47CC48E6-76E8-4774-8881-7DFEF9BF1658', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T04:27:16.633' AS DateTime), CAST(N'2020-08-18T08:27:16.633' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ee92aa2a-cf8c-4bbf-bcc5-a0a81a648bae', N'10ADFA4C-AC70-46D3-BC1C-9E271176C859', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:14:22.497' AS DateTime), CAST(N'2020-07-09T02:14:22.497' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8a566f0b-3555-4e5c-9db5-a0d680e28d2f', N'53D53F96-682C-4A87-A7BD-53E2FD33DBDA', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-14T05:13:02.973' AS DateTime), CAST(N'2020-08-14T09:13:02.973' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5cefd9e5-94bf-480f-8d93-a12372c25f5b', N'E4EFD334-35E1-4D0E-AEBE-210B35FA24D6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T10:42:06.147' AS DateTime), CAST(N'2020-07-12T05:42:06.147' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f7108be0-7e02-4aee-b0ec-a12c9c7bf724', N'78F3EBFE-7907-467D-8F1D-901F393B6720', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T06:09:38.930' AS DateTime), CAST(N'2020-09-10T17:09:38.930' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dad78997-cd24-4677-9e8d-a142c93b7609', N'A1876B3B-2690-4247-809B-CE906E1E9733', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T10:47:20.917' AS DateTime), CAST(N'2020-06-25T15:47:20.917' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'75428bbf-5b8c-420a-a22d-a14eeb31ac02', N'18196B58-1285-4D22-A22C-E2ABB833A388', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T21:00:48.877' AS DateTime), CAST(N'2020-09-10T09:00:48.877' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f53f1a21-1ec6-4ec4-98b2-a15380a516c8', N'EAE395B6-C2D1-42F8-833F-E383AD50DDF2', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-17T09:44:08.570' AS DateTime), CAST(N'2020-07-17T17:44:08.570' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a26e5908-f3af-4a52-8333-a155d64dbe66', N'3CBA80DB-73E6-42B7-BAD0-2DACC2812561', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-29T20:04:05.237' AS DateTime), CAST(N'2020-08-30T03:04:05.237' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25d67602-c81c-41a6-b26f-a1cca9c11c60', N'66DEE580-5D6A-4323-A01F-BB0BFEB1C553', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-04T23:24:15.630' AS DateTime), CAST(N'2020-07-05T13:24:15.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b5b66f6c-0b9c-4944-bc80-a228c56ce827', N'1E29CB69-9FD1-4D8E-A795-D989F482D027', 12, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:01:11.583' AS DateTime), CAST(N'2020-07-07T05:01:11.583' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8ca9017a-36f4-4be6-b62c-a26c1bc2bb2e', N'5AFB8FCA-17CD-4581-A657-23AA86E17C43', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-24T20:17:59.640' AS DateTime), CAST(N'2020-08-25T00:17:59.640' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ce4267d6-36e8-43c0-9dd9-a31adf078c29', N'1CFFE1D7-D15E-4638-8329-B32FF6396BDB', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:49:46.827' AS DateTime), CAST(N'2020-07-11T02:49:46.827' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'edbc7f53-224d-4770-ba1c-a329b0117639', N'99353D40-9D21-4087-BE49-8E496C5603A0', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T10:18:50.673' AS DateTime), CAST(N'2020-08-18T16:18:50.673' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25711a90-be94-4a6c-b6f2-a3cb3f13f50c', N'EB1D4A05-BBEC-40A9-B64E-A219F1437BF2', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T21:06:19.400' AS DateTime), CAST(N'2020-08-19T01:06:19.400' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f5281fdc-3b3a-4126-9a25-a453f1d5fd5f', N'6D42AD8C-0C17-4A3B-AB88-329679ED8AEC', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:45:04.603' AS DateTime), CAST(N'2020-06-07T21:45:04.603' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3e682996-fa4c-41c0-9369-a4b3910a2f90', N'72C07A93-A79F-404D-A3C3-4640C83C2F32', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T10:04:26.630' AS DateTime), CAST(N'2020-09-14T14:04:26.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'feb04203-f51d-442a-87ae-a4ba38434573', N'58DB398B-53A5-4E21-BF9C-3063421E45BC', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T21:34:16.490' AS DateTime), CAST(N'2020-09-01T04:34:16.490' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a7757dba-c088-42b5-908c-a5bae99841f3', N'923F490E-CBD8-4DD8-B26B-66A15A0DA024', 27, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T01:53:18.430' AS DateTime), CAST(N'2020-08-28T08:53:18.430' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'71df03a7-ada1-4776-be0e-a66e3b3adf79', N'9E8EEFE9-5746-4892-AE32-87BDD95EEF05', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T20:58:15.903' AS DateTime), CAST(N'2020-07-09T00:58:15.903' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e52d192c-3e68-4aa5-a356-a69f447f98a3', N'1D6BC034-975E-41B7-B6AA-EE898B8555DB', 12, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:05:27.673' AS DateTime), CAST(N'2020-07-11T07:05:27.673' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f30f051a-6844-4309-9df4-a6f1941252ec', N'BC6B3E7D-041F-4029-B418-1F3E94750A64', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:47:39.077' AS DateTime), CAST(N'2020-08-05T11:47:39.077' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'18935398-6283-4d33-8883-a794c2521805', N'8C60DC4E-B1A6-4895-8161-22AAA3200E55', 32, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:56:15.533' AS DateTime), CAST(N'2020-08-20T02:56:15.533' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'089b68e7-92ee-427a-9758-a7d0f68e39f4', N'B6791AF5-8B9A-411B-821C-E76794A9A143', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T06:37:02.513' AS DateTime), CAST(N'2020-07-14T17:37:02.513' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dd3819a0-9478-41c0-a3d2-a7f60ca6ce97', N'8AF975B9-49AB-4EDF-9E52-A4FF5984BF5C', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T22:32:57.033' AS DateTime), CAST(N'2020-08-29T02:32:57.033' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7345943d-1f94-477e-9c56-a80178c027bd', N'9FEBAD60-A497-4C6C-B137-A707733BCBE5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T03:11:53.030' AS DateTime), CAST(N'2020-08-28T07:11:53.030' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'59a2fbab-c762-4707-a2be-a89eb5484f78', N'B45A5D81-B326-4483-BC55-83B065C16084', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T04:53:32.190' AS DateTime), CAST(N'2020-08-04T09:53:32.190' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'711ec518-c70f-4765-8a55-a90dd6b2e167', N'7BE1D880-5851-4852-9CB3-F1800EE13265', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T04:40:16.757' AS DateTime), CAST(N'2020-08-26T08:40:16.757' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1de21338-7031-445d-8976-a9b841b4ad76', N'C5267D02-9DFB-468C-ADA6-DBF6A19B52AB', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T13:32:02.057' AS DateTime), CAST(N'2020-08-19T17:32:02.057' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'775d30fe-2276-4ff3-a38a-a9bf0eaa675f', N'7C2E772C-C028-4CF0-AE3A-7A40241F0B2F', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T01:31:24.310' AS DateTime), CAST(N'2020-07-07T06:31:24.310' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'17edbb7f-33e2-4387-b655-a9f33ec6f773', N'1ECC78EE-E483-4C3B-B085-D6BD7DA07256', 57, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T02:48:00.657' AS DateTime), CAST(N'2020-07-18T06:48:00.657' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'75c738e3-d725-4a43-bc94-aa2870b02605', N'5D3514F1-AECF-4846-84C9-F10D420ABE07', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-02T08:51:25.570' AS DateTime), CAST(N'2020-07-07T01:51:25.570' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'97bff030-82b7-4d77-8f6b-aa47533f53c9', N'A4F53B27-D653-4F74-9DE1-5BE5E895327A', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T09:22:38.680' AS DateTime), CAST(N'2020-07-12T22:22:38.680' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ae436941-1f46-4972-90fd-aa60de5de75e', N'33992920-00FB-4025-86E0-AB965B2B533F', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T18:42:48.100' AS DateTime), CAST(N'2020-07-10T22:42:48.100' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0d23eb78-98f8-4311-b6d3-ab03ecc17b21', N'C62F4160-7B37-4B99-9882-557E34170E03', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T18:06:28.300' AS DateTime), CAST(N'2020-08-23T16:06:28.300' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'51fbeeff-2959-400e-9851-ab10ce8e9c35', N'E8FBAA2A-F3C8-4332-8237-D22865555F19', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:17:23.717' AS DateTime), CAST(N'2020-07-09T04:17:23.717' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b9857ada-c88f-46d7-9347-ab27b64598b8', N'D94EA87E-3D57-4F33-BA02-9B7CE60EA365', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T07:32:33.850' AS DateTime), CAST(N'2020-08-20T21:32:33.850' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'164346cd-e7ff-47dd-bd0e-ab4f4843a933', N'5E9FB632-B3D2-4EEB-8A90-D07548B32ECC', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:48:22.607' AS DateTime), CAST(N'2020-07-10T19:48:22.607' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7e873493-4843-4db4-8749-ab8aa23d39e3', N'611D3F37-716D-4F05-B1FB-087DC6B7E3E0', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T10:13:14.900' AS DateTime), CAST(N'2020-07-11T14:13:14.900' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6b108954-b47a-437c-bc92-ac05d1f92c61', N'02B193EC-6E21-49CE-B46E-349B25E23719', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T00:16:44.177' AS DateTime), CAST(N'2020-09-01T07:16:44.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7d7e9e6d-e379-4773-b049-ac7627d6675b', N'F45B10D7-4671-4EB3-8E82-5FE66704B07A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T10:48:13.197' AS DateTime), CAST(N'2020-08-19T10:48:13.197' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0e2c887e-e00c-4deb-9cdc-ad166190f79a', N'933B49C8-4A4C-4555-BECB-7CD4F63C9A74', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-27T19:11:28.650' AS DateTime), CAST(N'2020-08-27T23:11:28.650' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ef8057ac-4475-4b25-95d6-ad325b591529', N'2D4AE695-E84A-4C5D-8F2E-A270B155BD27', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:24:19.083' AS DateTime), CAST(N'2020-08-20T00:24:19.083' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7325d78d-7cb5-47a7-a838-ad61ec57b170', N'2826B242-17D9-4222-AF2D-9D37B36E1119', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T23:06:39.987' AS DateTime), CAST(N'2020-09-01T03:06:39.987' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'30b9a721-31d3-4c65-b8f7-ae17f457aae5', N'602C23C2-E6DD-4869-96FD-4D5507D40CCC', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T20:55:35.380' AS DateTime), CAST(N'2020-07-07T03:55:35.380' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'75fc3f38-47bf-4e95-ba23-ae6105425f5d', N'AF85A5BA-2718-44E6-89E7-362BDEB3076C', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T02:55:54.280' AS DateTime), CAST(N'2020-07-08T08:55:54.280' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd9c63094-56b9-4504-9747-ae7e0d920db5', N'F7C1FF7E-5E0F-4972-8B4E-A2A3113EEDEC', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-19T03:23:00.507' AS DateTime), CAST(N'2020-07-19T07:23:00.507' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'34739b72-59a5-4a02-8988-af03a909c473', N'D68573F1-F78D-4093-AB23-E7DD0E35095B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-13T04:29:08.720' AS DateTime), CAST(N'2020-06-13T11:29:08.720' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'43c4e913-0590-4084-8ec6-af22a443223a', N'B0B4B0DB-804D-4E44-BA3A-094C000AD997', 70, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T04:58:27.840' AS DateTime), CAST(N'2020-08-04T09:58:27.840' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ab5ce0e0-e4e9-4349-8249-af2f78cdf90b', N'D17EDBF0-5B5B-48E2-8E6A-E9DBF77767D3', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:48:55.850' AS DateTime), CAST(N'2020-08-20T05:48:55.850' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'670c322e-ea16-47a7-b1b5-af8f754ae9b5', N'89155032-4A83-4221-8C03-B958EE4462E1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T00:18:46.743' AS DateTime), CAST(N'2020-09-09T04:18:46.743' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'87620ebc-92a9-45ed-b166-afb630ee8013', N'FE953997-D9D8-49FD-AEF7-04BED3AC925B', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:39:58.067' AS DateTime), CAST(N'2020-08-19T23:39:58.067' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'697d92bb-04c8-4310-8cd9-b002eaaa12b3', N'6526A4AB-31F4-415C-ACB3-50BA2AA312AA', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T03:49:07.573' AS DateTime), CAST(N'2020-08-20T21:49:07.573' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b53ce2a5-4773-4536-81a0-b01187d79c33', N'3FE93314-C458-4B29-A8D5-19B58E18E112', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T10:16:45.453' AS DateTime), CAST(N'2020-07-12T14:16:45.453' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'16556884-bf3e-4a35-a9bd-b019eea17eb0', N'103DE35B-0E6C-47F7-8FCE-7FEB803A688B', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T13:26:51.217' AS DateTime), CAST(N'2020-07-09T16:26:51.217' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f8440708-cacf-4d10-b62b-b02fff3fa5ba', N'EDA20645-8EA3-4FAD-90DE-F43CD8BE9CBA', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T01:21:47.653' AS DateTime), CAST(N'2020-08-05T05:21:47.653' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'559491d3-bca7-403a-93e0-b07f47993044', N'C45681FC-1C35-4A58-99BB-61D7AC7EE332', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T05:02:43.347' AS DateTime), CAST(N'2020-08-22T09:02:43.347' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2be1c8ba-9dfd-465e-807c-b098e5e2de6a', N'7E1DAAEF-BAFC-4AA8-94D8-204431695142', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T12:33:56.177' AS DateTime), CAST(N'2020-07-01T20:33:56.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'618bf48a-e9fe-4c56-85bb-b09b47ac2ff3', N'574DFB1A-C2AA-460A-B6E6-69C129B43E1E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T19:02:02.150' AS DateTime), CAST(N'2020-08-30T23:02:02.150' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fff0c7e3-6bcb-44b6-9132-b0c113f5a7cf', N'0DBBE449-6EE0-4F88-9817-6CA42475B7D7', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T03:59:21.593' AS DateTime), CAST(N'2020-08-22T10:59:21.593' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'90f4b08e-13a1-4068-a674-b0c8ae7f27ca', N'AF7E2908-7A19-4F35-A18B-7B0807F248D7', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:46.943' AS DateTime), CAST(N'2020-06-28T08:21:46.943' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ffc04841-b6a3-4e08-bb9d-b13be4aa23bc', N'9C7D5829-FA2C-4065-9A1B-AF7EF8E8243D', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:15:46.550' AS DateTime), CAST(N'2020-06-07T21:15:46.550' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9096dec8-1971-41de-956f-b146cc28a9c6', N'56E4AB70-A086-4F3E-86DF-1682A3B44648', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T09:19:53.860' AS DateTime), CAST(N'2020-08-19T13:19:53.860' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'616a0599-b200-4a2d-8d79-b149b324a8ff', N'C6642308-3AF4-4709-889F-D69E9D0BB74D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T20:14:09.373' AS DateTime), CAST(N'2020-07-13T00:14:09.373' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'812cef26-4317-418e-80d8-b16f99cbe68a', N'29E9444A-D1CA-4A68-9731-563FA323156C', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-03T04:14:45.433' AS DateTime), CAST(N'2020-07-03T20:14:45.433' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25d65783-c1be-41a4-bcea-b172cf3be354', N'28CD7AB7-0126-4017-9FC2-B4A99CC47F2C', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T05:20:15.250' AS DateTime), CAST(N'2020-09-15T11:20:15.250' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'27c8f380-faf2-4e8d-8628-b174d2fffce6', N'9A2BB9E8-EE84-406D-BCA7-B4EDF29ACD92', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T21:04:47.097' AS DateTime), CAST(N'2020-08-06T01:04:47.097' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'71792f8a-fc29-47b1-93df-b1788414e208', N'8F765E52-3E06-4CCF-B2F6-0794F04D1542', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T04:49:44.167' AS DateTime), CAST(N'2020-07-11T16:49:44.167' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'24215fe5-2c8c-49b7-a817-b19bb49d9a53', N'8B3C80A6-DC24-41FA-B9AC-5442A743A40B', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T21:40:48.017' AS DateTime), CAST(N'2020-08-21T01:40:48.017' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'83249c9f-9698-4dbc-a268-b1bc7c29dcad', N'8353465A-C1EA-49F5-A1DE-E819C04A74DF', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T05:41:47.507' AS DateTime), CAST(N'2020-08-18T13:41:47.507' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'955436d6-441b-428e-80e5-b1e0fe766a78', N'22420800-3DB4-49D3-A212-829F05BADED0', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-24T21:25:09.570' AS DateTime), CAST(N'2020-07-25T01:25:09.570' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'87c50720-2651-48c3-acb2-b206362ff342', N'DC3396CD-761E-40FD-A3B2-571FA490CBC9', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T22:16:36.623' AS DateTime), CAST(N'2020-06-08T02:16:36.623' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7444264c-dcb1-49ce-97a8-b2388d56024e', N'B738F6AF-19E2-428F-89CD-F4637C77FB7E', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T02:25:23.483' AS DateTime), CAST(N'2020-09-09T14:25:23.483' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bb50f438-0a5d-4b0d-8a22-b23f1487c410', N'744263FF-6631-4B25-963F-78BEE5EBC012', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T21:37:31.393' AS DateTime), CAST(N'2020-08-20T09:37:31.393' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b3dbcc33-ba67-4393-8339-b2e23f5e9fbb', N'CB20E5FE-2378-4F2F-8298-1372D75C468E', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-07T10:10:18.280' AS DateTime), CAST(N'2020-08-07T18:10:18.280' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e5cb6f11-8412-4627-b782-b3d5c62ba481', N'83CFFAD7-C080-4ECF-AF71-7DAF7E4CCAC1', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:28:22.547' AS DateTime), CAST(N'2020-08-20T17:28:22.547' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fb36788b-5be6-4ea5-849a-b4230e046436', N'1F9980D6-AD23-4F43-B807-2C09144AE172', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T10:06:11.080' AS DateTime), CAST(N'2020-06-24T11:06:11.080' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ae0fc738-6ee2-48f5-bace-b43fb6fe252e', N'8B917E5D-394E-45CE-B6FA-C342E7E835B8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T03:34:33.063' AS DateTime), CAST(N'2020-08-10T10:34:33.063' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'96aa6f25-e900-493c-930d-b4df02f44364', N'F81A28F6-57E4-4149-87C6-2BF66B6A4317', 8, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:02:58.927' AS DateTime), CAST(N'2020-07-11T07:02:58.927' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9f047f58-cfc6-4241-b185-b501773917db', N'553D78C9-4EE0-4A58-9D75-188249DC5878', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T10:04:35.150' AS DateTime), CAST(N'2020-08-20T17:04:35.150' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9b1025f7-f729-4b7c-af44-b61cc53902d6', N'2037227D-E9C4-4A33-BA47-604DF46EAE29', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T11:59:37.177' AS DateTime), CAST(N'2020-08-17T16:59:37.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'018ad412-0add-4b31-ada1-b6264a81e0a0', N'76EB9468-A06A-4C51-AB92-E7523D5BCBAF', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-18T07:25:50.177' AS DateTime), CAST(N'2020-09-18T08:25:50.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3aa63522-98f5-4ba7-a284-b652a2a15470', N'03471403-A1E2-408E-9E0B-325F6AA2405E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-16T19:50:18.220' AS DateTime), CAST(N'2020-07-16T23:50:18.220' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a42cd522-5405-4e8f-9daf-b69d67e17537', N'3EE93EDE-FB3F-4A7D-9E3F-44B9BCFCB7B6', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T02:49:54.623' AS DateTime), CAST(N'2020-08-21T06:49:54.623' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4aedb50e-a921-4d84-a7b7-b6a9c451e256', N'DC2DBE19-7175-48FE-9C9B-F78558EC2AE3', 72, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T03:56:25.647' AS DateTime), CAST(N'2020-08-18T07:56:25.647' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ed80fdc0-f64a-41c4-bda9-b6d5e4fa4578', N'BC9A90E8-307C-4E46-88BD-528EEC28BFAD', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T09:51:34.287' AS DateTime), CAST(N'2020-09-01T23:51:34.287' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'02475993-d120-4a47-bf46-b72cdf0cccb0', N'78989D08-5CE6-4A32-80F0-BE4832CD38E6', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:24:45.000' AS DateTime), CAST(N'2020-07-09T02:24:45.000' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1a124806-b08b-4694-8af5-b7462e0d1d6d', N'1F19522E-C58F-4135-B21D-2122632291CF', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T23:15:08.170' AS DateTime), CAST(N'2020-07-12T06:15:08.170' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'66eca9fa-41cc-4ad0-a373-b7709220f36f', N'D1A4990A-FAC4-4B69-BC01-9BD9D44213E3', 12, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:49:45.503' AS DateTime), CAST(N'2020-07-08T21:49:45.503' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f16e9d19-8d74-469d-bf21-b794d909916d', N'C486B766-86E7-44ED-899F-2532C576F341', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T21:54:20.333' AS DateTime), CAST(N'2020-09-09T01:54:20.333' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'75bcc16a-e800-4f94-bd4c-b7bd7fe6e1ce', N'16817A36-24DE-4EA8-8277-1E3D84FB2362', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T04:40:41.773' AS DateTime), CAST(N'2020-08-26T08:40:41.773' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9c1578bd-0b7e-4e61-b7a0-b7db80650693', N'E3DAB3F0-2B93-4859-880D-FD782308A5FE', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T01:42:12.570' AS DateTime), CAST(N'2020-08-18T10:42:12.570' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f4c3e2b6-c8f3-49ad-8faa-b7ef2276e3db', N'0215F030-38CE-40CB-A2D3-C2CA5FE5FB7F', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T23:30:07.307' AS DateTime), CAST(N'2020-08-05T03:30:07.307' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cc96c395-6a6f-49da-a78c-b804e63c4082', N'D1148429-3CF6-46AE-9E2D-2A82B5331DE6', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:22:23.253' AS DateTime), CAST(N'2020-07-11T03:22:23.253' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9d3dde0a-8e53-4225-8735-b833c4a8d7c9', N'124B6233-CEB0-49C2-BD62-2B43916E29E3', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T23:22:52.023' AS DateTime), CAST(N'2020-08-29T11:22:52.023' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7f60dae6-ae1f-44a3-a735-b8a7d5decbe7', N'D6FE1C34-E17A-4115-905B-C77E4D5B9A96', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T04:41:12.643' AS DateTime), CAST(N'2020-08-26T14:41:12.643' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'79ab8e1c-ef07-4626-b4f0-b8d9ffe3597a', N'F29DE92C-2C2E-4F11-91A8-5AC8DBC508C1', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T06:55:31.060' AS DateTime), CAST(N'2020-08-05T15:55:31.060' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'427ff2e7-dbea-4c41-97df-b94946ba004f', N'F8E64362-DBDC-4272-AB04-19B89ED32494', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:15:29.883' AS DateTime), CAST(N'2020-07-11T03:15:29.883' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7430f696-7ac8-45d5-b1aa-b96dfbffb8b8', N'6087A469-9A12-44D5-86E4-520570D9239C', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:08:27.250' AS DateTime), CAST(N'2020-07-11T10:08:27.250' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'37aa6631-dfa9-4a7e-a59d-b975d9e970f2', N'8F52BA73-8A9F-423C-87BA-0E026E70BD1D', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T04:27:36.067' AS DateTime), CAST(N'2020-08-05T11:27:36.067' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'22b2c007-3f68-4500-ae0d-b9c8a3ea3e38', N'CCEDEF75-5C63-4652-B40D-C21265B8585F', 36, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T12:32:52.270' AS DateTime), CAST(N'2020-07-01T17:32:52.270' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a4931733-9c28-4ccd-a8ac-ba1c535a8a9c', N'4E8152FB-34EA-41F1-A8E9-3B3156630B43', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T01:48:48.680' AS DateTime), CAST(N'2020-07-11T23:48:48.680' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c2c7656c-c649-4bd2-bfba-ba22c22ca0ca', N'C5C04FD6-44A8-42BD-A0E9-F905D6521F02', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T02:30:41.350' AS DateTime), CAST(N'2020-08-26T10:30:41.350' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd08ca383-913d-4796-be2e-ba6608ff2a98', N'4316B10F-9184-4FB5-A091-657E2110B8A7', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T07:56:14.550' AS DateTime), CAST(N'2020-09-13T22:56:14.550' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'311a0fbe-973e-408d-a987-ba7649a4b781', N'A1C12D64-34E2-484F-8294-CCBDB43AEC5D', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T05:52:33.737' AS DateTime), CAST(N'2020-09-10T13:52:33.737' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7236952d-4baa-4ce4-ab93-bac2066ffdf9', N'7B12C99A-5A20-4FDA-AC9E-93CAD838392C', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:22:49.137' AS DateTime), CAST(N'2020-06-07T21:22:49.137' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fa889bfc-e8b3-4728-9072-bb056e23cfb7', N'F9582BC5-FE86-4FD1-BA62-B3469355D6EB', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T07:07:16.547' AS DateTime), CAST(N'2020-08-15T11:07:16.547' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'876a70c2-89c2-4cc0-83d5-bb238f1661e9', N'CD440C3A-6683-44DF-929E-08970B05D5B5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T20:50:39.873' AS DateTime), CAST(N'2020-07-09T07:50:39.873' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e5def587-d29b-491c-a32f-bb34e0b89c12', N'3FB2890D-0A91-4C07-97A4-61797D3849EE', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T04:39:44.487' AS DateTime), CAST(N'2020-08-26T08:39:44.487' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e513da64-f86d-4ab6-9190-bb46f1baab09', N'B6B3688D-C7DF-40EB-B468-1E3318CBB0FF', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T09:33:54.367' AS DateTime), CAST(N'2020-08-20T18:33:54.367' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f65e8779-b919-43fb-8f17-bbf1970224a7', N'DF6DF2A9-6197-4F30-9202-C9ADC66CBFD9', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T01:24:36.170' AS DateTime), CAST(N'2020-08-26T05:24:36.170' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'73cff4b9-0510-4f3b-8762-bc0edfbcd3c2', N'4B3C3F6B-B73F-4956-84AC-2BD85AE08D66', 28, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T23:11:02.480' AS DateTime), CAST(N'2020-07-19T03:11:02.480' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3d8a61f8-5295-4c61-9602-bc0f545f9fc5', N'6A871ECA-E9CF-4541-85EC-79A87AB05961', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T07:17:53.320' AS DateTime), CAST(N'2020-08-20T17:17:53.320' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3aef54b1-c803-4821-9441-bc3c79bba9ee', N'E7DD1329-D773-48C8-A3B7-6F54D07AC5E6', 54, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T07:58:31.150' AS DateTime), CAST(N'2020-07-12T11:58:31.150' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'24a7b92b-9fb8-4128-bd28-bc45528e0aae', N'AB77394E-C3F7-43B0-BC8D-167F2A36EE41', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T06:23:43.647' AS DateTime), CAST(N'2020-07-08T19:23:43.647' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1717668b-de38-46a1-b971-bc95532b8627', N'38DF2313-B6CB-45D2-8D60-747BB9F06CC2', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-27T00:51:42.880' AS DateTime), CAST(N'2020-08-27T05:51:42.880' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'88c0346f-5254-4159-bfaa-bcf41a7fc6e3', N'DF61AF52-D16A-43BE-B288-1E204E0B3BC3', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T02:51:15.763' AS DateTime), CAST(N'2020-08-05T06:51:15.763' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'824a99d0-cda8-4ab3-911d-bd339a52bcf7', N'7BA090B8-746C-4408-B211-1AE793AA6C2C', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:00:31.183' AS DateTime), CAST(N'2020-08-20T14:00:31.183' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4d497f15-4448-46ba-9ff0-bd6d4f900a5c', N'BDF2E7F5-A485-4454-AD90-4FA5D0EB6D52', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T09:32:11.870' AS DateTime), CAST(N'2020-08-19T13:32:11.870' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c94eb532-9e0f-4aec-81d6-bd6e773628f9', N'6C3FE44E-4F18-4A51-9AEA-BD92AA5B96D2', 52, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T04:57:51.000' AS DateTime), CAST(N'2020-08-04T10:57:51.000' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c8c64cc8-3055-4b6f-8a5c-be11adf00872', N'1FBA0286-4190-41A2-9DDF-7F934AED1F76', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-16T22:05:18.573' AS DateTime), CAST(N'2020-08-17T06:05:18.573' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5ff77477-9ec2-42df-b3ac-be4dd7e914fd', N'1917E17C-0093-4373-A776-04701B9C4CEC', 32, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:10:26.080' AS DateTime), CAST(N'2020-09-12T13:10:26.080' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a1854daf-49da-4982-b40a-be9f9a93c81d', N'B1A71394-0102-44BB-846F-3A55F88503E9', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T09:56:44.667' AS DateTime), CAST(N'2020-07-11T16:56:44.667' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'42ff9f0a-0724-41c6-8b5d-bed1f9e9a7b0', N'A751491A-786C-41BA-9998-36533D284B07', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T20:02:54.540' AS DateTime), CAST(N'2020-08-21T16:02:54.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e6b01b9b-15a7-4699-9a90-bee62ecb5ff0', N'247B5576-2E2B-41F9-A12D-7E6294578589', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T23:41:50.360' AS DateTime), CAST(N'2020-08-21T03:41:50.360' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'43ed748e-f683-4f55-8767-beebd616e97e', N'3A6B9CAE-8684-49F7-A309-32F8909F140F', 25, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:35:02.083' AS DateTime), CAST(N'2020-07-09T14:35:02.083' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2ae3a4c0-7c83-4d8c-a0ff-bf0d9d56bb9b', N'354D3121-882F-4284-B514-10F3872BF3FB', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T20:39:20.417' AS DateTime), CAST(N'2020-07-15T14:39:20.417' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1ec81804-1b69-4f9c-a94c-bf542cc9d382', N'3982E53D-1CAE-40FB-BE65-760ECF213C6F', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-06T09:38:59.627' AS DateTime), CAST(N'2020-09-06T13:38:59.627' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e6bc1ea8-ca27-46de-becf-bf9fbf7e958c', N'44CBC6B1-0160-4D93-8A4C-43B17E1A2DC9', 5, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:14:23.203' AS DateTime), CAST(N'2020-07-11T04:14:23.203' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e5730c84-032b-4893-a43a-c00cfa5accaf', N'AB7D5DE8-E2F2-4B92-9B11-2EADAAF91FBA', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-05T02:57:54.377' AS DateTime), CAST(N'2020-07-05T06:57:54.377' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fab66c09-b2c3-404c-8bce-c031a3649930', N'24FD635E-B3F5-49D4-B104-75172C91217A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-06T02:33:49.380' AS DateTime), CAST(N'2020-08-06T07:33:49.380' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'84263448-cfd7-4927-b5bf-c07091231acb', N'7FB4F38B-7661-46DD-B7BD-F5B22326AF5B', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T20:07:36.143' AS DateTime), CAST(N'2020-07-10T03:07:36.143' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'392fe105-2535-41d8-8b36-c10aff84e953', N'B8AFEA8C-1188-44D7-9ED3-4DD04129E1D0', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:08:09.840' AS DateTime), CAST(N'2020-07-09T01:08:09.840' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4cee6753-e184-4b50-9a1b-c1935515d8c0', N'CCC6A390-7C39-4B06-9169-7F2866BABD48', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T06:51:57.917' AS DateTime), CAST(N'2020-06-09T13:51:57.917' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5ec33fce-263e-446f-9a03-c20f43108a17', N'913DC0EA-FB9D-4F23-9EC6-A6638D6201FA', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T01:15:40.893' AS DateTime), CAST(N'2020-08-31T23:15:40.893' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3c2bb72d-fa00-4294-b40a-c211e8b0f9ea', N'E83B8C66-50C2-4123-A9D9-192DACB090E8', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T23:27:04.890' AS DateTime), CAST(N'2020-08-05T03:27:04.890' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dfcae334-8f0f-4928-a21a-c22c8e039fba', N'29507DB3-AD05-4063-9E48-331AB03E4FD0', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T19:59:32.773' AS DateTime), CAST(N'2020-08-19T10:59:32.773' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'31d228c9-bdda-46d4-93b5-c233b2c4a313', N'696CCE82-D312-4166-B24A-D5505381D3AF', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T09:48:32.193' AS DateTime), CAST(N'2020-07-14T18:48:32.193' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'85703d7c-5067-46af-9ca2-c2e0063df32e', N'E8CBED8D-9EBB-4A90-A430-5E2F29D84C14', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T03:06:04.277' AS DateTime), CAST(N'2020-08-05T10:06:04.277' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2cca8d37-d72c-44c5-8f81-c30d7e33af75', N'931E53EB-1D95-492B-9C12-FC31C1CB72C5', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T10:17:28.993' AS DateTime), CAST(N'2020-07-09T21:17:28.993' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c9746e1a-4612-49b8-91a1-c340a57dbbb3', N'C9AD055E-0D5D-4E4D-8465-5BF5E936E8C9', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T03:20:24.007' AS DateTime), CAST(N'2020-08-26T10:20:24.007' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'674ffc74-fa78-4bf4-a3d0-c350ccfa578a', N'BA64BC5B-113B-4D83-9B78-04E5E0914D99', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:31:54.400' AS DateTime), CAST(N'2020-09-09T09:31:54.400' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a1bd80b9-d193-4a32-9efc-c36d3eb3dfa4', N'C9241211-7BF3-43D0-BCAA-3F93896F8C9A', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T02:15:27.077' AS DateTime), CAST(N'2020-06-28T07:15:27.077' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3f4179ee-1c8c-46e7-be56-c37f678f3b55', N'24D79207-BEEA-4B3E-8A00-88A8503EEE2E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T01:43:06.163' AS DateTime), CAST(N'2020-07-14T05:43:06.163' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f78be38c-560d-4299-a13f-c382c3e3891d', N'26D7D096-60AF-4FB9-A491-52105B5EF842', 74, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T05:00:36.937' AS DateTime), CAST(N'2020-07-15T02:00:36.937' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c4f6aae2-bfa4-4c24-a57c-c3b1e11571b0', N'AACAE366-509F-410F-BE8B-32A7F7266405', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T21:42:38.903' AS DateTime), CAST(N'2020-08-21T18:42:38.903' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4a8d7fee-7e4e-4a11-807f-c3dd8fe47197', N'372FE7AD-A2CD-42CF-BBE2-9303DA7AE5F2', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-08T03:18:43.163' AS DateTime), CAST(N'2020-08-08T07:18:43.163' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'427c0caa-1335-4246-a461-c4609ffed4c4', N'45E4D4B3-9CBD-45EE-87C9-9DA3A3054ADA', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T03:14:57.813' AS DateTime), CAST(N'2020-09-16T07:14:57.813' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3bdead1e-3c61-4b8c-974b-c4ac5271f252', N'32872D13-835A-4B9D-8069-9B19DCFC3C06', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T18:39:37.660' AS DateTime), CAST(N'2020-08-09T23:39:37.660' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5fb0683a-0be0-4e26-aefd-c4b7e04d2f5a', N'4D49019E-19AA-4078-A973-0C16B79F8AFD', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-11T18:25:00.293' AS DateTime), CAST(N'2020-09-12T01:25:00.293' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'494dc371-7d15-49a3-91ef-c4e094e7b9eb', N'43455CC4-A4D5-4968-9849-61FBE0090A82', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:27:46.183' AS DateTime), CAST(N'2020-06-07T21:27:46.183' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd89d2ab6-555b-4ace-8599-c4e3706fee1c', N'3DE43052-0678-4A98-B84D-E5E188CAA9E5', 87, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-08T17:16:38.440' AS DateTime), CAST(N'2020-09-08T18:16:38.440' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5e425490-e5b0-45b1-9d16-c54df942db9c', N'C4C59716-B009-4102-B1E0-B669F96AFB29', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T01:01:59.877' AS DateTime), CAST(N'2020-09-15T05:01:59.877' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4ba720cb-8d1e-4b06-a858-c5863d63abb3', N'0D9FDEE4-BF23-4E36-A8FF-42AC509A9D21', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:29:37.343' AS DateTime), CAST(N'2020-07-11T15:29:37.343' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c1a96cdd-8217-4e22-abfa-c58fa5f42499', N'E06052BD-BF6D-4C8C-B58B-AA3502D040A6', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-22T07:45:05.817' AS DateTime), CAST(N'2020-07-22T14:45:05.817' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'910e8c67-edcb-4f03-9165-c61b6ebd0988', N'0D61C546-63FE-4AA5-BDE2-F67BAA67341D', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T02:56:35.897' AS DateTime), CAST(N'2020-08-15T03:56:35.897' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd8116bfe-1a9e-414f-92f9-c625ae46f83f', N'B6172F19-488B-4302-8B44-616375781123', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T07:45:17.120' AS DateTime), CAST(N'2020-07-06T11:45:17.120' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7fef6aaa-c073-4bde-8e6c-c63bd1708665', N'CC1E69B3-7186-49FE-812C-1B4F8429360A', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-04T09:25:26.690' AS DateTime), CAST(N'2020-09-04T13:25:26.690' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'35b8e4ac-3677-473f-812e-c707f28f9829', N'AC3E7E70-C895-49DD-8BCD-EF45B45B48E0', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-17T21:24:57.930' AS DateTime), CAST(N'2020-07-18T01:24:57.930' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd672983b-d49c-4aba-8b8a-c73108f003c7', N'03AE811A-ED7E-4FA3-881A-0E08A3C54D05', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T21:07:17.690' AS DateTime), CAST(N'2020-08-06T02:07:17.690' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c5de4a8a-73a9-48a1-af0d-c786daa2b80b', N'C5C0766F-2AD1-4AF6-BCAF-6839A829D7D3', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T21:43:50.440' AS DateTime), CAST(N'2020-07-13T01:43:50.440' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'819f80db-88c5-4fc8-95a9-c85493af25d0', N'05572023-192C-4BFE-A661-2B637929C4F8', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T13:18:29.030' AS DateTime), CAST(N'2020-08-18T20:18:29.030' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0f7f4be3-c5bf-460e-8710-c87a23879d04', N'14EB3FDD-3FDE-48EA-9499-544F72F9CDFE', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T20:59:30.540' AS DateTime), CAST(N'2020-09-10T00:59:30.540' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b123301f-4226-4208-b3b5-c8b8f5c6efc6', N'955ED53D-DD55-441C-8327-DC43FB04F887', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T00:30:59.523' AS DateTime), CAST(N'2020-08-09T09:30:59.523' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'64ccbf2e-5230-42c8-8615-c8bb42cace3b', N'057E4250-E43F-4C99-A3F7-008ED35DD3F6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-04T04:46:34.780' AS DateTime), CAST(N'2020-09-04T08:46:34.780' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'aee5cd50-795e-430b-8943-c91b1969de86', N'F0AD8991-50B8-448B-BB53-0BF13F805031', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T06:21:45.333' AS DateTime), CAST(N'2020-09-01T16:21:45.333' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'351fbfd8-22d7-4ba9-b021-c98249825b23', N'008AD8EE-A214-4A45-B506-58F65A0948A5', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T04:24:52.240' AS DateTime), CAST(N'2020-08-05T09:24:52.240' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f6b81286-3ee1-4eb9-b7c4-c9dd556888bf', N'2A26A05B-50E2-499E-A719-CA6D90FD7DF4', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T08:27:13.470' AS DateTime), CAST(N'2020-08-15T15:27:13.470' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c3c9faf1-eb31-47d8-8c77-cae62ebbf146', N'02A7FA09-31CA-4217-9E59-84339B30C5A5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T10:33:15.390' AS DateTime), CAST(N'2020-09-01T17:33:15.390' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6fe68f21-4a93-410d-902f-cbfd9887c019', N'4430A0B3-5AE6-40C1-9713-303A9A3E3901', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T05:41:43.973' AS DateTime), CAST(N'2020-08-31T06:41:43.973' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b71f3b4c-c33c-4c28-8357-cc0cbdc229ed', N'0542C7C3-01BD-4475-8725-5A53010EA305', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T10:59:07.040' AS DateTime), CAST(N'2020-07-11T17:59:07.040' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ba4d88c4-c7c9-44c5-ab6f-cc6b00bb21b6', N'58F542F1-6121-4129-86C1-8817610B3AE5', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-25T02:17:07.553' AS DateTime), CAST(N'2020-08-25T09:17:07.553' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9daa3dfa-4be0-4887-915c-ccf7a04e5917', N'E0B73D18-4AB6-437F-9E67-40EB0733C96C', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T23:07:37.633' AS DateTime), CAST(N'2020-09-08T03:07:37.633' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'281180b2-caf9-4583-9728-ccfae2bf96b5', N'3F32C8D9-741C-4EBE-8982-808607F28E07', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T07:57:31.390' AS DateTime), CAST(N'2020-08-15T11:57:31.390' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f982c193-79bc-45cc-a871-ccff7c70e107', N'35A82E4A-1002-418F-B343-B83EA07A7772', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T05:41:44.030' AS DateTime), CAST(N'2020-08-31T16:41:44.030' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3c9a7359-3d40-4f1d-bd39-cd2c0705db2a', N'D717D558-7C06-4307-9F67-5F66FC4E0A67', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-22T08:37:33.867' AS DateTime), CAST(N'2020-08-22T15:37:33.867' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'af90d0ab-8fc9-4b37-a02d-cd77e38c003b', N'D237325A-60F3-487F-B4A4-35ED20AADAB8', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T21:03:18.297' AS DateTime), CAST(N'2020-09-10T11:03:18.297' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'166bc540-40a6-4efb-83ba-cda67953a91d', N'57EE9261-0902-4FE4-9FA6-92B223D3E1D1', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:58:30.903' AS DateTime), CAST(N'2020-07-09T01:58:30.903' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'69d96a0c-0fe0-42ec-a470-ce634c971648', N'6650B1FC-F201-4652-AB49-7FB9C330CC4A', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-06T19:25:47.257' AS DateTime), CAST(N'2020-08-06T23:25:47.257' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9201bba8-c20e-480a-b5bf-cea440856ebf', N'0393B27D-BBE5-4E69-8D70-64458D50DC5A', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T11:09:19.440' AS DateTime), CAST(N'2020-06-23T21:09:19.440' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dca95023-97d8-4fdd-ac56-cf1ad73e57c6', N'95D5E9C9-2CBE-4972-B370-317CBDD60EED', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T03:15:35.273' AS DateTime), CAST(N'2020-08-23T07:15:35.273' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'30aec108-0392-4712-bffa-cf30e40894ec', N'32344EC5-62DF-4CAA-8F0D-C18C7C3994FE', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T10:43:19.693' AS DateTime), CAST(N'2020-06-25T15:43:19.693' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'20ecc81e-3939-441e-85ff-cf3e6c238777', N'B805BCCE-F2DD-4ECE-85D4-F694787F738D', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T01:21:18.177' AS DateTime), CAST(N'2020-07-12T05:21:18.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'11e26272-d31d-418d-8180-cf5d3e0fd6ad', N'1743380C-EC61-4EEE-85C8-F6D3A80DB21E', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T10:43:23.667' AS DateTime), CAST(N'2020-09-01T14:43:23.667' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3669032d-0342-41c8-9fc5-cf9aef0ed39f', N'E013AA3C-081C-44D3-BF47-891C3C8C44B7', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T23:27:02.497' AS DateTime), CAST(N'2020-08-10T17:27:02.497' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'16569513-ce76-46c0-b95f-cfcd3283210a', N'1B8FDE74-1D1F-4F4D-A506-003139C01FEC', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T08:54:21.130' AS DateTime), CAST(N'2020-07-09T00:54:21.130' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cc2e6dc1-bd85-4c6d-845b-d06cf7c8f71d', N'F123E475-61AD-4121-A1EF-59CB7E68CB68', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T10:06:30.160' AS DateTime), CAST(N'2020-09-14T16:06:30.160' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ee4ddab2-0d3f-45d8-8fae-d09385ee37de', N'7CF54B0A-E30B-4496-BE76-842E69063D2D', 24, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-28T23:31:29.187' AS DateTime), CAST(N'2020-08-29T05:31:29.187' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'591f7a7d-6c9b-4418-9384-d09f3646a0c6', N'536B0C0E-78FF-4A3D-B4F0-7D39063186A7', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-01T04:19:54.233' AS DateTime), CAST(N'2020-08-01T11:19:54.233' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bf595c4c-ed3b-4c88-87ea-d0a188f53392', N'88280F62-37C1-4602-955D-970BE65F168B', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-25T02:18:30.727' AS DateTime), CAST(N'2020-08-25T06:18:30.727' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'53554487-2095-42fc-ad73-d0b02a889d55', N'2FB8290E-524C-4E3D-84BA-675E3C6A6308', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T02:21:37.953' AS DateTime), CAST(N'2020-08-21T08:21:37.953' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'40bdcaf8-c629-42b9-a112-d0edd81634ed', N'7FF7C4C5-74B3-43E1-89BE-E812794B86F7', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T19:01:34.647' AS DateTime), CAST(N'2020-08-30T23:01:34.647' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1ccc0f8f-b871-4b32-accc-d111e3693d77', N'5B17A89B-BED2-492C-9B9B-493C2028D629', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T20:14:59.627' AS DateTime), CAST(N'2020-07-10T02:14:59.627' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9027c88e-73fb-46f7-a6f2-d16d39ae0189', N'E07ADD6A-431F-4579-9A3B-024930F2D414', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T03:05:30.547' AS DateTime), CAST(N'2020-09-16T07:05:30.547' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'63e5356e-ddad-4be3-a70e-d259a170d6b7', N'15AE5E98-B28F-4439-983B-80209733B854', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:04:04.523' AS DateTime), CAST(N'2020-08-20T20:04:04.523' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3408d256-2e2b-4c2a-b217-d2e114dd6f7b', N'4A054306-8D83-4EEB-A9B7-1BF79E823F7B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:34:01.853' AS DateTime), CAST(N'2020-07-11T02:34:01.853' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'35405cee-2f6a-450c-a16c-d2e3c052bc37', N'8B4173B5-48A4-4415-872C-6B323184F2DF', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-18T07:25:49.480' AS DateTime), CAST(N'2020-09-18T11:25:49.480' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5c36235d-3f8b-4437-abfc-d303124c4e61', N'986BCABF-5C67-4964-9099-0ABCA4D43C84', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:44:57.170' AS DateTime), CAST(N'2020-09-09T09:44:57.170' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'af92b0b5-7a31-4c75-933d-d322603aab1f', N'42FB09E2-FCE8-43D7-B79A-C49E18E8196C', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T01:05:57.467' AS DateTime), CAST(N'2020-08-21T14:05:57.467' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8fa99e30-24a7-498c-8478-d32e15cf4c0b', N'26774ACD-F80A-4A25-99C6-D0FABF895A4A', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-23T09:28:13.867' AS DateTime), CAST(N'2020-06-23T13:28:13.867' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4fc0699b-e91b-46b8-b457-d3770856a804', N'3759CB8E-F09A-4AA1-8BF5-B37F7A432CF0', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T03:50:44.580' AS DateTime), CAST(N'2020-07-14T07:50:44.580' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ce31d64c-29ee-440e-aba2-d4243adecf4a', N'F837EA5B-E6E5-4CC0-A386-7899FB9193BA', 24, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:46:49.687' AS DateTime), CAST(N'2020-07-09T19:46:49.687' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a72dd5bc-b156-4a4e-afc2-d437f3d8fac1', N'EEFAD16B-C841-4EF8-81EA-34F3BE1EA19B', 52, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T05:54:28.717' AS DateTime), CAST(N'2020-07-13T09:54:28.717' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'50bf2177-2d6e-4a32-9d4b-d4a5afa311d9', N'306B4DC7-F8FA-40C6-99B4-E7326B94FC82', 6, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:29:26.333' AS DateTime), CAST(N'2020-07-11T09:29:26.333' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e2b35ea4-ffb3-436a-a7e9-d50be53bfc0a', N'008B8ABC-7DE5-4905-8306-58B9A7FB37FE', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-07T18:58:09.007' AS DateTime), CAST(N'2020-08-07T23:58:09.007' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f640d67d-8aa2-4990-97bf-d58047b1dbfd', N'49E6AA32-5A6C-49C1-8226-B08EB761AA88', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-11T10:30:12.760' AS DateTime), CAST(N'2020-08-11T18:30:12.760' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e2936352-20d9-4c3f-a5dc-d618d70a5753', N'D31251DA-EA25-4F30-923D-C041BFB33751', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-16T21:24:32.783' AS DateTime), CAST(N'2020-09-17T05:24:32.783' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dd9aadb8-7588-4b6e-b7b6-d63d76cf7f90', N'6543D5CB-7D1E-4B35-B62C-669D1D65CE0C', 11, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:08:36.460' AS DateTime), CAST(N'2020-07-11T08:08:36.460' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'88174b5e-dfbf-4db5-8fca-d66c10d3c6ba', N'846B3438-C93E-46D2-B83A-6C2F17835979', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T18:55:15.840' AS DateTime), CAST(N'2020-07-10T23:55:15.840' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4475d0cc-49cd-4604-9021-d6a08626989d', N'B9F81EFF-FB9F-444F-BC4F-7509CE9E5CC1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-16T02:28:39.173' AS DateTime), CAST(N'2020-07-16T09:28:39.173' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4300cdcf-a595-41ea-b6fc-d6b0cd7f20de', N'E640D935-9822-4955-AF0E-03E2DF95D9D0', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T21:56:20.200' AS DateTime), CAST(N'2020-07-07T01:56:20.200' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6605331c-ac97-4f5b-aaca-d8948c7633bd', N'92FAFF10-D306-429F-8F88-70A6547DC472', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-15T10:37:29.903' AS DateTime), CAST(N'2020-06-15T11:37:29.903' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c7899743-c919-4c87-813a-d92f79f60102', N'86A91D31-55D1-4F69-AE1C-9800C4267B6B', 86, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T06:20:17.373' AS DateTime), CAST(N'2020-08-21T08:20:17.373' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'619551fb-34e0-45c5-9162-d96c210bd4c4', N'7DAD1465-1053-4B81-84A4-03A5949BE6F8', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:38:46.443' AS DateTime), CAST(N'2020-07-10T06:38:46.443' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'890f31a9-ffd8-459c-8899-da1e9540493b', N'425B1BF7-4041-47FA-9FD6-44C7C36CD7F2', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T18:24:43.460' AS DateTime), CAST(N'2020-09-10T22:24:43.460' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b200ec88-7293-471e-b156-da7c56b47d8a', N'423AE6CD-4D23-4756-84C4-78A9471B2F54', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:47:02.627' AS DateTime), CAST(N'2020-07-10T02:47:02.627' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4c003ef9-ed97-4878-999c-db4baa26c080', N'E141974E-7C4C-4AB5-9FF1-4565344851E5', 11, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T17:28:31.613' AS DateTime), CAST(N'2020-08-04T22:28:31.613' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e10985fc-1270-472a-9794-dbb8981b6cb5', N'32FACAD6-40C8-4902-9BF2-FAA3B3F3FEB7', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T00:55:27.067' AS DateTime), CAST(N'2020-08-26T04:55:27.067' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1786b014-2e98-4ba1-99e7-dc0ab35396d4', N'973708D0-51D5-4E22-A4F3-A52AD9FA2FE8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T09:46:23.430' AS DateTime), CAST(N'2020-08-31T13:46:23.430' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6e0623b7-4aa3-4a17-9400-dc406f039a9d', N'76455971-F823-42D0-B069-58B3A927EF95', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T19:06:33.750' AS DateTime), CAST(N'2020-07-11T02:06:33.750' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6be907de-53c5-4807-b779-dc51e90dbcc1', N'282A4188-99F9-4987-B264-8EB2039A3A0E', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T18:58:27.700' AS DateTime), CAST(N'2020-07-10T22:58:27.700' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8149c14c-f1ad-49e7-9dc7-dc7b59934f84', N'FFDABD06-DA94-4FA0-9F80-9387AF0CC65F', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T04:49:26.653' AS DateTime), CAST(N'2020-08-18T08:49:26.653' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'25985aeb-b28e-4769-a196-dcb68ff40fc8', N'84934820-1DD6-459B-B893-D4C102FFDD2B', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T11:03:53.753' AS DateTime), CAST(N'2020-07-11T15:03:53.753' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd59e82d4-87e0-499d-b6d5-dcf45902e815', N'498DD68A-6DE3-40B5-9875-42E314180D42', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T21:08:56.440' AS DateTime), CAST(N'2020-06-07T22:08:56.440' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c49a58e2-36e1-4526-83a8-dd1ab75bf489', N'53526FDC-FDBB-4F40-9276-48E9248736F7', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T12:22:27.477' AS DateTime), CAST(N'2020-07-11T21:22:27.477' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bf070255-f6d2-42f6-9c99-dda826380b83', N'CA0688EE-BC2B-4FF4-94C8-8EB2730B671B', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T20:00:02.690' AS DateTime), CAST(N'2020-08-21T02:00:02.690' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ee41e919-93dd-4f50-b8a9-ddae3230b905', N'C2874A06-F451-4C74-AB76-D2F434EDE401', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:14:29.267' AS DateTime), CAST(N'2020-08-20T12:14:29.267' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c7b6acdc-09ad-4ecc-a5fc-ddb95a8329d6', N'231EE5A9-F8AF-4D36-9E6E-301DD70BAE3F', 88, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T04:53:28.137' AS DateTime), CAST(N'2020-09-12T08:53:28.137' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8c4fc405-04d1-4f93-98f7-ddfba37d8674', N'4DC64141-3B8E-478E-9481-A779EBEE4BD7', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T09:40:21.787' AS DateTime), CAST(N'2020-08-02T20:40:21.787' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ca58b64c-eae9-4aa5-950b-de036b8d770a', N'D98841C0-AC12-4F67-9E1F-62C3CEDE0E93', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T21:24:26.560' AS DateTime), CAST(N'2020-09-03T06:24:26.560' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9e05093a-f1de-43ad-87e0-de0d7178f42d', N'3C2EB26C-E547-4A35-A5F8-9F41F02D01B3', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T04:32:31.490' AS DateTime), CAST(N'2020-08-26T19:32:31.490' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'78821335-e4e0-4527-a5e0-dead5ba2f3dd', N'887C6331-9377-4719-B2E5-506018AB7A72', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T21:05:19.500' AS DateTime), CAST(N'2020-09-10T01:05:19.500' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'244efa2d-00b4-4793-9c6b-deb3c607731d', N'1CD921F9-FDB8-4E00-B8B4-311B831B91D6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-13T11:27:49.997' AS DateTime), CAST(N'2020-08-13T15:27:49.997' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'22b462ce-46e0-47aa-b0a9-ded976c8bc52', N'34F75427-A4AA-442E-8EDE-AEF16174BCC6', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T23:21:32.640' AS DateTime), CAST(N'2020-08-05T09:21:32.640' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'01e8aa7d-da56-4c01-bbe2-dfaf9d50d20c', N'B14E90CC-B2E6-484B-AE57-718671CFE944', 10, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:24:53.287' AS DateTime), CAST(N'2020-07-09T16:24:53.287' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'31afe550-fc9e-432d-98ea-dfba18e34aa3', N'66582083-6E56-42F3-9D1E-4FE12135ECD7', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:09:58.010' AS DateTime), CAST(N'2020-08-20T08:09:58.010' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f439e238-0d70-4465-a4a5-dfcc325861a0', N'940979DD-FD52-4988-A753-7540B80FA47A', 55, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T01:00:35.243' AS DateTime), CAST(N'2020-08-26T05:00:35.243' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'bef8cff8-7c1f-48d5-83e0-e01edda1f643', N'092C122A-D776-4D0C-A431-39DD45EB0AF0', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-25T06:55:36.643' AS DateTime), CAST(N'2020-07-25T10:55:36.643' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dd18aeae-d78a-4caf-a88a-e03d16eaab4c', N'8C59B226-B8CF-45D8-A251-19E82EAFE2BE', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-25T09:24:23.853' AS DateTime), CAST(N'2020-06-25T13:24:23.853' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'80b53dc5-ce3d-408e-ae04-e047e8768761', N'1478ED0B-778A-4474-A8F4-50F5EAB12CD2', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T19:41:06.280' AS DateTime), CAST(N'2020-08-21T23:41:06.280' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'47ddf5ae-1030-4b4c-963e-e0ef462c1958', N'7478A02D-9B34-4303-BFCA-5C756BAD5AF1', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:45:07.520' AS DateTime), CAST(N'2020-08-20T08:45:07.520' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c33f85c9-350a-40c7-8a88-e0f7fe34d98b', N'8F3C2D81-87D7-442E-8A26-517464522FC4', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T06:57:32.180' AS DateTime), CAST(N'2020-07-12T10:57:32.180' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0a905cd9-2993-4db3-9ed6-e0f89c87b7d7', N'3C212605-C2F8-455A-8694-8561D53597D4', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T02:41:25.873' AS DateTime), CAST(N'2020-08-05T14:41:25.873' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9afdf89e-61e6-48e8-baac-e10b2b2d37b0', N'A1471B90-E52D-40B7-84D8-4D2244439A9E', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T04:23:19.417' AS DateTime), CAST(N'2020-09-09T09:23:19.417' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a0bd5031-6156-4e50-a634-e192d43206f1', N'D4FEDCB7-C118-4476-8D12-05CF4B2093F4', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T04:37:14.457' AS DateTime), CAST(N'2020-07-12T11:37:14.457' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0c075bc3-a674-490c-a657-e1f035b68f26', N'F78AF53A-92A6-40DA-B5C1-042EAB329DCE', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-25T00:32:29.020' AS DateTime), CAST(N'2020-08-25T04:32:29.020' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd87c2da1-ddb6-4064-9ac2-e204eb79f2fc', N'4703536F-C303-48BF-BF9C-5C6210F41C9E', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T01:19:00.700' AS DateTime), CAST(N'2020-07-13T11:19:00.700' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'942f2c81-9688-495c-a19a-e22c2add99cd', N'BA028E98-5CBE-47D9-AC10-EFC82047C139', 1, 0, NULL, NULL, NULL, NULL, CAST(N'2020-06-07T20:14:03.687' AS DateTime), CAST(N'2020-06-07T21:14:03.687' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'967ee3fc-a5db-47f1-a6ba-e2a5f82bcab7', N'7C35B268-F280-48AF-B9D5-C6E0106C64CF', 58, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T08:12:25.490' AS DateTime), CAST(N'2020-07-12T16:12:25.490' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a22a338b-41da-470f-b6c0-e2c8452ec13a', N'6EE78C59-90C1-47C6-B8CC-9D0C3144890D', 57, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-18T05:34:21.740' AS DateTime), CAST(N'2020-07-18T09:34:21.740' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'27e883e2-9ed4-4846-b821-e31eb20028c6', N'044E8777-EA70-4CBE-B724-FCAC2ABEAE99', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T01:50:27.200' AS DateTime), CAST(N'2020-08-03T00:50:27.200' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd7a86566-6abd-4acb-a211-e362748276a4', N'BC4F6606-56AE-4994-89C1-6009748A5519', 83, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T02:28:03.970' AS DateTime), CAST(N'2020-08-30T09:28:03.970' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd58e27de-1152-49a7-9b7c-e388ff63afff', N'6E18A495-F5DA-4402-AC3B-718F7A17EFB0', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T23:30:44.700' AS DateTime), CAST(N'2020-08-05T03:30:44.700' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5e726389-73ba-45bb-8223-e3bafea75c2e', N'1ABD8376-6EA0-45E9-BDEF-35BF33EC451F', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-08T19:25:04.383' AS DateTime), CAST(N'2020-08-09T00:25:04.383' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8bcde86f-b724-4a2a-8b02-e3dbf23146c8', N'5089DD14-9FBE-4629-AA7D-C577B88CE097', 70, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T20:25:15.523' AS DateTime), CAST(N'2020-08-27T00:25:15.523' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'279d9db4-3cf7-48fe-a7ba-e3df1a38ddf2', N'84DE1CC5-19BC-4AEF-93A5-16947763BBC9', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-08T08:48:51.570' AS DateTime), CAST(N'2020-08-08T14:48:51.570' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3a4dc445-8521-4e4c-8d13-e3e529eb1854', N'256BF315-2C63-4C5C-A515-7E942F208F06', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-09T04:17:15.710' AS DateTime), CAST(N'2020-06-10T04:17:15.710' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'31ddca20-07b8-44b2-bbbd-e447d7d286df', N'6BBE5617-0DE6-4D97-851A-BC761B3F184B', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-15T02:56:36.890' AS DateTime), CAST(N'2020-08-15T12:56:36.890' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8eb8515c-44bf-4698-8d9b-e4a46b30f18e', N'8E8A4B82-E5E9-49ED-908A-E8C0E6165309', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T18:37:53.730' AS DateTime), CAST(N'2020-09-14T22:37:53.730' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'32881144-d4cb-4dd0-8bc7-e4c330e31cc4', N'43D70111-F868-4FE4-98F1-BFCA5438F05E', 24, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:24:57.830' AS DateTime), CAST(N'2020-08-20T07:24:57.830' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'55366b66-835f-4578-9f86-e4ec240bc08d', N'6BB908E7-CF2F-46CB-AC10-D466EFBE88AB', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T21:54:06.913' AS DateTime), CAST(N'2020-07-09T06:54:06.913' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f44a1703-5768-42eb-b82c-e4f321e34d96', N'95B1DAB8-4777-4CE6-AD7E-A640FA4A3580', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T20:56:34.473' AS DateTime), CAST(N'2020-07-13T00:56:34.473' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'28e9c96b-1cb0-4893-97d2-e547a7d6dba0', N'2A30F971-1CEC-42D2-8FB8-617A9E28F173', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T08:46:10.323' AS DateTime), CAST(N'2020-08-05T17:46:10.323' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a5da563c-a4a0-4dbc-8097-e54f1fa93d94', N'D4B1FAF8-DBD3-4D45-8138-1D5602EED23B', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:08:59.153' AS DateTime), CAST(N'2020-09-12T10:08:59.153' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'16776e8a-173c-4c8c-abb3-e591d5939493', N'42AA2DD8-E459-4F5B-B45A-F430B393FAF1', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T10:52:04.787' AS DateTime), CAST(N'2020-07-11T19:52:04.787' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'9cd80ec4-3e4e-4fc6-b5e1-e5f9b3c0cd6f', N'61776792-3FE5-4C27-85EB-A89A601748C7', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-18T05:43:02.413' AS DateTime), CAST(N'2020-09-18T11:43:02.413' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f3f758eb-1707-42e8-98a3-e628bf7f4e4e', N'2626D823-7415-4BEB-92AC-6D8350F419F7', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T10:19:39.577' AS DateTime), CAST(N'2020-08-18T15:19:39.577' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6ba59d73-5daf-4563-97b3-e62d866667e2', N'0C0679DD-383F-4F9E-A73D-98A8B3722156', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T23:14:50.467' AS DateTime), CAST(N'2020-07-11T03:14:50.467' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ccf5f1c9-d962-4998-b6d0-e634ed5d7079', N'ABC2DE9B-C4D5-4E16-B171-2234A47E2BC4', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T20:32:49.030' AS DateTime), CAST(N'2020-09-16T00:32:49.030' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2882da28-3e5e-4410-8daf-e65a14d4092b', N'D9B4805A-B85F-44CF-A528-04821DCB8D19', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-05T05:33:00.907' AS DateTime), CAST(N'2020-07-05T09:33:00.907' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'60ce1de6-505e-4784-86bd-e693877bae36', N'42A9948D-8008-41DA-ADC5-45CEE4F19CFB', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T05:19:00.303' AS DateTime), CAST(N'2020-07-12T10:19:00.303' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8ba54a73-ee94-4e63-bdc9-e6e82627c451', N'8CD7042E-7F5A-49A6-936F-BB4301A366EA', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T05:59:09.680' AS DateTime), CAST(N'2020-07-13T09:59:09.680' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'7a8fb3ee-ec20-460c-ac5e-e718ce29d7dd', N'39910266-3C8A-41E4-8E73-55181868AFAC', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T18:25:56.317' AS DateTime), CAST(N'2020-07-11T22:25:56.317' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1e711e37-b6cc-4cb1-84f0-e7290b63e9f7', N'4972C6B3-0AAE-4F2F-88BA-B0361A3CFB80', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T21:07:57.453' AS DateTime), CAST(N'2020-08-19T01:07:57.453' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5ec34681-b72d-4317-bf0f-e765e8f80606', N'441A43C9-7E68-4F13-8C05-A59E6FDE1940', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-31T09:46:11.197' AS DateTime), CAST(N'2020-08-31T13:46:11.197' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'82b3f6ba-f1cf-477d-beb9-e7c2ed77060d', N'96D5732A-9A9F-4D8E-A8DC-63C5BC0C6363', 83, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T20:29:41.253' AS DateTime), CAST(N'2020-08-20T07:29:41.253' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a91308a5-38f1-412c-a4db-e7dba7560274', N'90A08E13-6C0E-4CF8-B440-C54764763CB6', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-05T08:59:15.990' AS DateTime), CAST(N'2020-09-05T12:59:15.990' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c8b52d0c-221c-43f6-aa46-e7e4936259e0', N'B9A7E670-3096-4FB7-A515-516B941A2ACD', 27, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T12:12:20.717' AS DateTime), CAST(N'2020-07-10T05:12:20.717' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a63612de-4984-4d6b-8560-e82aadb5a22f', N'40553767-7E6D-4514-BFE9-D8FDE76F5B02', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T09:54:04.940' AS DateTime), CAST(N'2020-08-21T04:54:04.940' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd729cfc2-58fa-44ae-b33e-e86c1ffa2284', N'C42F7630-76B6-48BC-A2EA-39AD23561360', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T22:52:55.613' AS DateTime), CAST(N'2020-07-10T21:52:55.613' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a8ba74ba-1e58-44e4-a107-e8a2ae3659ca', N'B474EC10-B2BB-4C53-A292-F75005B94051', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T00:26:49.630' AS DateTime), CAST(N'2020-09-02T07:26:49.630' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'248e57fd-3604-48b4-978d-e8bbca481dd4', N'9CCB2B9F-6EBD-4FF5-BBEB-D749AB7FBA3E', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-02T19:04:10.373' AS DateTime), CAST(N'2020-08-02T23:04:10.373' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f808d47e-e0bd-4359-981d-e921f45198b9', N'16A0A33B-C515-4172-8388-BAC87F7D62D8', 64, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-02T21:28:40.620' AS DateTime), CAST(N'2020-09-03T13:28:40.620' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'35aa9bcd-c7ba-4f04-845e-e926915c4c39', N'57BE4AA3-FCC0-4D53-9409-45503ECDB2D3', 84, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T12:01:00.970' AS DateTime), CAST(N'2020-08-19T19:01:00.970' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ff75833a-bbba-44a9-be10-e9303844a28e', N'6B2A5F04-D28B-4BB3-8BBC-A7E8EAECA4C5', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-14T20:16:45.253' AS DateTime), CAST(N'2020-09-15T00:16:45.253' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8a72ade6-2f7a-4bd2-90c9-ea06e40a280c', N'E3F05F23-21BA-4B45-AC3F-07C169991306', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T02:43:30.143' AS DateTime), CAST(N'2020-08-21T12:43:30.143' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'116cbe19-68b3-4a87-bf3a-ea208874a53b', N'2A2572C1-E7EA-42D3-8C12-AF6425657440', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-18T05:38:51.050' AS DateTime), CAST(N'2020-08-18T12:38:51.050' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2b882c67-5615-44bf-b6e2-ea5745718719', N'CFF3F925-EA23-4FD6-9A9A-7CF848A00863', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-12T08:39:32.423' AS DateTime), CAST(N'2020-07-12T18:39:32.423' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'784d0854-a517-4413-9fb0-eab91500ce7f', N'DB7E62CA-04B7-44AF-A10C-85B981F1AFEB', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T07:48:08.850' AS DateTime), CAST(N'2020-08-05T13:48:08.850' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1ed17500-0a0b-4b6c-99f0-eaf77a9261a2', N'90E95755-478C-405A-BFA2-97599DBA225D', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T20:54:24.677' AS DateTime), CAST(N'2020-07-09T05:54:24.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2885beca-f4e4-4bc4-90f6-eb0c45f4888b', N'4DC03750-240C-4356-94B8-72E8C3B67243', 33, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T19:54:36.193' AS DateTime), CAST(N'2020-08-19T23:54:36.193' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5488e8b8-b260-4d1d-bf19-eb6e2e1f8151', N'01094125-DD55-4F1E-A132-3262FEEB00D2', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T00:23:24.580' AS DateTime), CAST(N'2020-08-17T04:23:24.580' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'79693f47-6c21-4e0f-9057-eb8083309014', N'F379AF6B-1471-4E2F-B45F-DE12DCD0D318', 20, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-02T08:51:21.210' AS DateTime), CAST(N'2020-07-02T18:51:21.210' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'18c79736-62dd-4f06-9b13-ebeca0517c2a', N'CF8C5DE6-BDB1-4EE6-977A-01A2EBF25272', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T20:52:07.993' AS DateTime), CAST(N'2020-07-12T03:52:07.993' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0c9bceb9-d298-47ff-bf86-ecc3ccc44455', N'9CDD971F-61D7-446E-8B0A-8E283FA343B3', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:47.403' AS DateTime), CAST(N'2020-06-28T08:21:47.403' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2e346fed-3763-4f7c-9900-ecfe28fcbe2f', N'20C30C8E-713D-4903-A024-9B3A6774804E', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-14T03:58:21.950' AS DateTime), CAST(N'2020-07-15T03:58:21.950' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'33e05331-44e0-4ea6-bee0-ed176f7e0a6e', N'CB1F4259-7010-474F-8648-7920EBDB9E41', 27, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T13:21:38.617' AS DateTime), CAST(N'2020-07-10T02:21:38.617' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c786cbf9-f737-4ea1-b37e-ed5fc12b419c', N'1C61B4DC-F1DA-4593-A346-813BED9FC006', 7, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T01:06:02.050' AS DateTime), CAST(N'2020-07-11T12:06:02.050' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'678d69f9-d692-4d6e-8523-ed791bd44d51', N'B0255C3F-3789-4388-9BA4-EB2E4C9AB83B', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T00:06:27.250' AS DateTime), CAST(N'2020-08-26T06:06:27.250' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'495ed688-bcf0-4855-bf5d-eda2a059296d', N'ED208BD0-1807-4944-B9A9-5CD993AD8E76', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-06T01:58:32.910' AS DateTime), CAST(N'2020-09-06T08:58:32.910' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'32c098fa-4e4c-4d4c-a1b8-ee213b3971b7', N'04C1D5C8-CFCC-4129-B253-52B00F31C421', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-03T21:34:41.013' AS DateTime), CAST(N'2020-09-04T01:34:41.013' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ad065110-1910-41a2-803b-ee2b4a7c1f43', N'8CA97DBC-CEF3-49F0-9F17-6F6B27999981', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-08T23:28:40.863' AS DateTime), CAST(N'2020-06-09T03:28:40.863' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4ab32125-fe69-4397-b617-ee3dda438d94', N'6897FE4F-C871-4A22-8B65-1C4E8511D6A7', 32, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T06:06:26.677' AS DateTime), CAST(N'2020-09-12T10:06:26.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4495d262-e779-43f1-bc2c-ee826bab171b', N'2C1E2124-8B3C-4CC7-A82E-B50AA2314148', 35, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T03:24:14.477' AS DateTime), CAST(N'2020-09-13T07:24:14.477' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'94ad6f10-d822-42a5-a97d-ee8be1773ee2', N'4DE56A9B-CD45-46FE-BACB-935167AD0DAD', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T08:17:38.153' AS DateTime), CAST(N'2020-09-10T12:17:38.153' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'95a9568a-63ca-4fd1-b214-eee629eb9730', N'7456544E-CBE2-47FD-8421-537C3B4CF3A1', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T21:48:12.943' AS DateTime), CAST(N'2020-07-09T22:48:12.943' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'db03149a-7a12-4bd2-a4e6-ef95f5edf0e5', N'9E961061-8777-4617-9681-301DA5A7359D', 48, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:10:47.550' AS DateTime), CAST(N'2020-08-20T12:10:47.550' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'cc4523cf-e659-4264-a918-efb4691feaaf', N'7C0B01A1-F33F-4CC2-8BC6-BB4A44ECA418', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-09T05:02:08.040' AS DateTime), CAST(N'2020-09-09T10:02:08.040' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eb4143b9-52d6-4244-a10e-efcabc237de5', N'7BB61FC7-E39E-44E6-8479-EFEEBE11C26B', 26, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-06T23:57:32.227' AS DateTime), CAST(N'2020-07-07T04:57:32.227' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e82a081e-af95-46b1-975c-efe21e159b64', N'59CAD71F-1ACD-4892-8FE7-021152C5ACD4', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T04:21:11.617' AS DateTime), CAST(N'2020-08-20T12:21:11.617' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a243bd55-4c41-4392-a574-efee3b365421', N'3B12339B-A2E0-4E61-AD51-BECE54FFEED5', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T21:52:58.643' AS DateTime), CAST(N'2020-07-11T14:52:58.643' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'37b54aa3-47ab-4800-88e5-f01d85dbca93', N'43EE7DEF-7A32-48D2-AFFA-60A639632C2F', 37, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-01T10:21:35.190' AS DateTime), CAST(N'2020-07-01T15:21:35.190' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'775ef248-79c5-4d53-887a-f09856044333', N'74E50E5D-F23C-4567-B9EE-E3964D567FAC', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-20T01:49:08.347' AS DateTime), CAST(N'2020-08-20T05:49:08.347' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'2395382a-aa0c-4e7a-a297-f10ba3a42358', N'355721FF-6D09-4D97-BCDE-D3CE9ACDB556', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-26T12:24:15.053' AS DateTime), CAST(N'2020-06-26T22:24:15.053' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a99c3f5f-0f45-4031-99ae-f1c0ce5bde8c', N'5333F637-A144-40DC-8A39-A7366A67C725', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:46.940' AS DateTime), CAST(N'2020-06-28T11:21:46.940' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dc704bf9-21be-4331-b7e5-f1cc088cbae5', N'7AA3ED82-751D-4B23-B12E-A3C39BBB86F8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T11:08:51.677' AS DateTime), CAST(N'2020-07-11T15:08:51.677' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'831872bd-ea72-42e6-88fb-f2004656b6cd', N'65E619F2-1D8B-43E9-B68D-29AE9A4C790E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T03:34:05.193' AS DateTime), CAST(N'2020-08-17T07:34:05.193' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd5bc5d52-359e-48bd-97f9-f215c3b7a216', N'42EA312E-1663-44C1-8754-68E55B56C6C1', 2, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:08:54.360' AS DateTime), CAST(N'2020-07-11T17:08:54.360' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c70460a9-5b64-4646-8a7f-f25417eefd33', N'59820A8A-8A39-4995-8183-7490F1974D0A', 55, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T00:54:23.520' AS DateTime), CAST(N'2020-08-26T04:54:23.520' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f0995ee8-304a-4f85-81f3-f2586b9e48c4', N'91809EC6-E0EA-4B91-8ABD-2C93214BCC45', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T23:26:12.610' AS DateTime), CAST(N'2020-08-10T03:26:12.610' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'5a68f8d0-639f-4256-a407-f2958386cb78', N'2C68A9E8-900E-4A71-B986-AECBA997364B', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-12T05:25:40.760' AS DateTime), CAST(N'2020-08-12T09:25:40.760' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'fd023c88-ffa5-4add-bafd-f2e625d47ee8', N'2439B4AF-2459-40A4-8E93-C0B6813208D8', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-10T05:17:22.740' AS DateTime), CAST(N'2020-09-10T09:17:22.740' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd9e7032a-f94b-40f2-828b-f3439b49e625', N'249CE8BD-5E12-44A8-8D26-EB110C3FBEF9', 6, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:58:02.817' AS DateTime), CAST(N'2020-07-11T13:58:02.817' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f2574823-aef8-44c3-9d93-f38e210d88a8', N'A8AC81CA-5988-40B6-9922-DB09FB4AEB2D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-07T23:07:36.690' AS DateTime), CAST(N'2020-09-08T00:07:36.690' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'b8cc6e98-0aae-4f2d-a918-f3b257b3dd84', N'8B47C96E-7904-447D-B175-C58A1ED76BD5', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T23:01:51.700' AS DateTime), CAST(N'2020-07-10T18:01:51.700' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'dc11a2a0-0f45-492c-860b-f3e6f47aa4b1', N'083C5B91-D978-4750-A846-E21F32AAE34A', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-01T23:16:17.600' AS DateTime), CAST(N'2020-08-02T03:16:17.600' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'11e217e2-a769-4e2e-93df-f40f100dbea4', N'B8724861-14F9-4404-9241-C4478628899B', 31, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-14T07:35:04.847' AS DateTime), CAST(N'2020-08-14T14:35:04.847' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'60e7b06d-ca00-494d-a05b-f4172f840f93', N'DFCFC2A6-FD56-4E98-A258-929819AB89E7', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-10T11:32:32.277' AS DateTime), CAST(N'2020-08-10T15:32:32.277' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'37f1aeda-5752-47b6-a137-f46430bea76c', N'979FBFD2-023F-4737-8AA9-E8335DDC15E8', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T03:30:21.163' AS DateTime), CAST(N'2020-06-28T10:30:21.163' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'71b4d5e0-e977-4537-8449-f4ac136c2f39', N'D326CB32-CDA0-4E4F-9C40-F877DED7F9BB', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-26T03:19:02.130' AS DateTime), CAST(N'2020-08-26T07:19:02.130' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'091c7201-a758-4473-8aad-f4ad3ca9e204', N'9B0B94F3-0C0E-44DF-9340-2334623A0A9A', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T04:39:18.940' AS DateTime), CAST(N'2020-09-12T05:39:18.940' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'eea885da-2556-4f24-9416-f4fd383fbf36', N'E43E574F-677A-4792-9E0D-ED12C662AAC2', 47, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T19:26:09.793' AS DateTime), CAST(N'2020-08-21T23:26:09.793' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'1f975de7-e5ca-43b8-bc84-f535edde7cdd', N'08A54C91-7496-4EA5-B1C8-F2FAFD0B0008', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-08T22:23:10.547' AS DateTime), CAST(N'2020-07-09T02:23:10.547' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0bf986eb-9ab0-471a-b64d-f53c3bd9ef96', N'D41954E2-8C85-42B9-8556-BDF92580A5FD', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-13T08:22:52.137' AS DateTime), CAST(N'2020-07-13T15:22:52.137' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'895852ac-3979-4189-a54d-f57faf52cdbc', N'2F0FB392-DA1C-43E2-ADC0-BF99D3FD3EB7', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T02:39:40.340' AS DateTime), CAST(N'2020-08-05T07:39:40.340' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4f20f116-0c1a-4308-a9df-f61a5bf74fef', N'E108FC97-7603-4C73-8555-D265A9AE9D52', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-12T04:39:18.820' AS DateTime), CAST(N'2020-09-12T08:39:18.820' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'c10234d8-3a5d-4c58-9418-f68f859d0500', N'D99FB9D4-4CCB-4730-9B4E-67A062727616', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-21T23:38:35.970' AS DateTime), CAST(N'2020-08-22T03:38:35.970' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'f01c6a5b-ca68-4277-b723-f69ba84ac5a6', N'D29E8A9A-0024-4472-AFA5-3EDCA9F256B4', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:17:18.167' AS DateTime), CAST(N'2020-06-28T11:17:18.167' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'40669a3e-1dff-49b2-a9de-f6f89dfe72c8', N'EFF11319-1940-4751-A4FB-591EBFA7BC17', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T22:00:37.960' AS DateTime), CAST(N'2020-07-11T03:00:37.960' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8c7bb8e9-ddcd-4574-b81e-f7585d810672', N'81945929-E37A-477E-BBD0-91BCAFD37C42', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-11T06:20:01.070' AS DateTime), CAST(N'2020-07-11T10:20:01.070' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'249a58fd-0c79-477e-9237-f7c14511c8dd', N'7EFBF159-89E2-4494-B78D-E1FAFD73CD4C', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-10T01:55:58.393' AS DateTime), CAST(N'2020-07-10T05:55:58.393' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0ebf00c9-19a0-43ff-be98-f81d1ffc14e4', N'9E565CDD-E4E7-4DEB-BCBE-307BCBF29996', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-27T04:36:18.673' AS DateTime), CAST(N'2020-08-27T15:36:18.673' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'af894987-9ed2-4e1a-85f3-f85c087c7bb2', N'0B230F3D-29B7-4684-8D7A-0159AEC81806', 17, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T21:48:12.930' AS DateTime), CAST(N'2020-07-10T04:48:12.930' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'77cd8426-9de6-41bc-a393-f8de23995514', N'4F345D76-BDF7-4599-ABB1-C6F60378781E', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T11:49:50.597' AS DateTime), CAST(N'2020-08-17T18:49:50.597' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a029baa4-7a3d-4979-9e70-f8e41d4246fe', N'9C775C93-597D-4143-9070-9BADC32D0FE2', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-23T23:25:00.450' AS DateTime), CAST(N'2020-08-24T03:25:00.450' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'd32b8dbb-bc7e-4a76-9039-f947132dfcb8', N'27FF6289-23E4-4083-A80B-145604EFD9AD', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T04:55:05.217' AS DateTime), CAST(N'2020-08-04T12:55:05.217' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0a69a951-22e0-4324-82c4-f9630169306e', N'7EAD28C7-1C38-4B8A-92B2-B16C2953C1DF', 11, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T07:49:10.307' AS DateTime), CAST(N'2020-08-17T14:49:10.307' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'19d52648-a648-45a4-879f-f9fea895c389', N'DB281428-9CF2-414F-B656-C6642323FA16', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-12T06:24:11.113' AS DateTime), CAST(N'2020-08-12T13:24:11.113' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'099df1d1-0039-4cc2-9f3d-fa716bb6c5a2', N'1B206C60-EC0A-4B0C-A87C-8352C26A09E3', 19, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-01T10:46:13.070' AS DateTime), CAST(N'2020-09-01T15:46:13.070' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'84b807a5-957a-4220-8011-fa7ac0f62a4a', N'541A6D05-03C9-47CA-8A2E-8F9F988500A3', 34, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-19T13:31:17.667' AS DateTime), CAST(N'2020-08-19T17:31:17.667' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'3c385457-00dd-43fd-a4b3-fb39b705d96a', N'910AB226-55BE-4621-8E80-ED81C2736D61', 15, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:05:37.493' AS DateTime), CAST(N'2020-07-07T05:05:37.493' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'90f19d43-049b-4e27-9d8f-fb4450c7fe43', N'6BB088DD-6D8B-4B41-BB5D-0992EFEEA867', 23, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-05T02:32:23.320' AS DateTime), CAST(N'2020-08-05T12:32:23.320' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'6eba5f02-7c3b-4198-9e71-fb563d1a1f2a', N'CBBAC461-C3A7-42BA-99C4-B9A142102257', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-09T00:34:18.000' AS DateTime), CAST(N'2020-08-09T04:34:18.000' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'51057cb8-cef5-4328-8bf5-fb60de48c264', N'4737B1C0-2811-4122-A2E7-CE5D40318781', 4, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T20:09:24.470' AS DateTime), CAST(N'2020-07-10T00:09:24.470' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4beb2d7b-b70a-42ce-bd38-fb6c1bacb819', N'A10FBDCA-EB6E-49F7-8967-60419B872DCE', 63, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-15T02:57:14.483' AS DateTime), CAST(N'2020-07-15T12:57:14.483' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'a494d4da-2c72-4ea5-bf38-fc7642c259a3', N'D2CA86D2-E39B-4B0C-B6AF-2120E9A8B6BD', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-05T04:27:31.990' AS DateTime), CAST(N'2020-07-05T18:27:31.990' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'816e14a3-c467-45b4-b516-fc93dbb10fec', N'3C3900D0-0D35-42F6-8BB6-DC591AAA7301', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-15T12:18:18.233' AS DateTime), CAST(N'2020-06-15T17:18:18.233' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'aef561b5-3b7b-4361-9538-fcb3f66b0438', N'121C450F-70D2-45E9-B725-CED7084ACB57', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-04T23:31:06.380' AS DateTime), CAST(N'2020-08-05T03:31:06.380' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'44c7f887-7955-4346-9d98-fccb0469eacf', N'4AA7CDF4-A85D-4AD0-80A4-6E865690A337', 30, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-01T23:20:12.220' AS DateTime), CAST(N'2020-08-03T17:20:12.220' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'8fdea8d9-ab8a-4735-baf4-fdb376a962fb', N'0985B554-0A5E-4F2A-B7EF-24068C4596E4', 14, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-09T23:00:39.613' AS DateTime), CAST(N'2020-07-10T03:00:39.613' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'4bc1d13f-3bf6-4bad-8853-fe1f22c3f031', N'66EBA06C-5186-46A7-AEBB-8662EE139D97', 16, 1, NULL, NULL, NULL, NULL, CAST(N'2020-07-07T00:06:21.567' AS DateTime), CAST(N'2020-07-07T05:06:21.567' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'ad9d4a7a-3f4a-437b-b790-fe6555dfedc1', N'5A75249F-AB15-473D-82E9-995CA2FAACDB', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-13T23:58:04.087' AS DateTime), CAST(N'2020-09-14T21:58:04.087' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'92d9ffb7-b9f6-41e7-8997-fe7c8e248f23', N'6D55EBD2-7BDC-4260-8392-1C6259F10BD9', 3, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-18T02:46:35.177' AS DateTime), CAST(N'2020-09-18T06:46:35.177' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'106350a6-9331-432f-b9a2-fe837102032d', N'6BE9C250-E73D-4C21-8618-7076C3E7B259', 1, 1, NULL, NULL, NULL, NULL, CAST(N'2020-06-28T07:21:46.953' AS DateTime), CAST(N'2020-06-28T08:21:46.953' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0c64f7d7-b710-463c-a367-feee7776b9d4', N'9DAC1A56-0E3E-4AA3-A40B-7CC3A4435AD9', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-09-15T03:23:28.890' AS DateTime), CAST(N'2020-09-15T17:23:28.890' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'0200748d-eec0-413a-97d4-ff65742d0031', N'4B01FA38-FE17-421C-8761-43F518E8A17D', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-30T09:52:54.410' AS DateTime), CAST(N'2020-08-30T13:52:54.410' AS DateTime))
GO
INSERT [dbo].[tbl_AccessToken] ([Id], [AuthToken], [userid], [IsActive], [CreatedOn], [UpdatedOn], [CreatedBy], [UpdatedBy], [IssuedOn], [ExpiresOn]) VALUES (N'e89e18ca-1465-489b-b31a-ffbc3ad5cfa2', N'A68BABF3-8FCF-43B9-887B-BB00BA2EFF70', 13, 1, NULL, NULL, NULL, NULL, CAST(N'2020-08-17T19:58:53.440' AS DateTime), CAST(N'2020-08-17T23:58:53.440' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[VPTran] ON 
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (1, 2, 100, 2, CAST(N'2020-07-12T17:52:14.563' AS DateTime), 100, 0.2822, 100, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T10:39:58.217' AS DateTime), N'Admin', N'1', NULL, 28.22)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (2, 13, 100, 13, CAST(N'2020-08-05T09:00:49.637' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T10:48:45.847' AS DateTime), N'Admin', N'1', NULL, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (3, 13, 12, 13, CAST(N'2020-08-05T09:00:49.637' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 2, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T10:58:16.967' AS DateTime), NULL, NULL, 8529833289, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (4, 15, 100, 15, CAST(N'2020-08-05T09:30:39.760' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:18:58.980' AS DateTime), N'Admin', N'1', 7514609459, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (6, 13, 22, 15, CAST(N'2020-08-05T09:35:39.767' AS DateTime), 265.768958, 0.2822, 265.768958, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:29:26.847' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (7, 23, 100, 23, CAST(N'2020-08-05T10:20:39.607' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:31:53.303' AS DateTime), N'Admin', N'1', NULL, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (8, 23, 12, 23, CAST(N'2020-08-05T10:40:39.607' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 4, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:34:36.760' AS DateTime), NULL, NULL, 8276803399, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (9, 30, 100, 30, CAST(N'2020-08-05T12:24:21.660' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:36:37.360' AS DateTime), N'Admin', N'1', 8276803399, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (10, 30, 12, 30, CAST(N'2020-08-05T12:34:21.660' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 5, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:39:28.653' AS DateTime), NULL, NULL, 3447863197, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (11, 13, 22, 30, CAST(N'2020-08-05T12:34:21.663' AS DateTime), 265.768958, 0.2822, 531.537916, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:40:57.033' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (12, 31, 100, 31, CAST(N'2020-08-05T15:00:52.633' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:42:50.063' AS DateTime), N'Admin', N'1', 0, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (13, 31, 12, 31, CAST(N'2020-08-05T15:02:52.633' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 6, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:48:22.870' AS DateTime), NULL, NULL, 6961753482, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (14, 30, 22, 31, CAST(N'2020-08-05T15:02:52.640' AS DateTime), 265.768958, 0.2822, 265.768958, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:51:05.457' AS DateTime), NULL, NULL, 6961753482, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (15, 14, 100, 14, CAST(N'2020-08-09T08:30:38.670' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:53:56.040' AS DateTime), N'Admin', N'1', NULL, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (16, 14, 12, 14, CAST(N'2020-08-09T08:33:38.670' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 7, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:57:40.353' AS DateTime), NULL, NULL, 8406933048, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (17, 13, 22, 14, CAST(N'2020-08-09T08:33:38.690' AS DateTime), 265.768958, 0.2822, 797.306874, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:00:11.253' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (18, 16, 100, 16, CAST(N'2020-08-09T08:34:54.930' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:01:37.783' AS DateTime), N'Admin', N'1', 0, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (19, 16, 12, 16, CAST(N'2020-08-09T08:37:54.930' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 8, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:05:02.627' AS DateTime), NULL, NULL, 1287282468, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (20, 14, 22, 16, CAST(N'2020-08-09T08:37:54.933' AS DateTime), 265.768958, 0.2822, 265.768958, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:07:01.290' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (21, 17, 100, 17, CAST(N'2020-08-09T08:41:55.327' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:09:17.753' AS DateTime), N'Admin', N'1', NULL, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (22, 17, 12, 17, CAST(N'2020-08-09T08:41:55.327' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 9, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:11:31.290' AS DateTime), NULL, NULL, 7166936161, 1500)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (23, 14, 22, 17, CAST(N'2020-08-09T08:41:55.330' AS DateTime), 265.768958, 0.2822, 531.537916, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:14:06.187' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (42, 2, 100, 2, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 7.8125, 0.32, 107.8125, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.553' AS DateTime), NULL, NULL, 6909194861, 2.5)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (43, 13, 100, 13, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 937.931874, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.557' AS DateTime), NULL, NULL, 8529833289, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (44, 15, 100, 15, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 5456.004163, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.560' AS DateTime), NULL, NULL, 7514609459, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (45, 23, 100, 23, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 140.625, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.560' AS DateTime), NULL, NULL, 8276803399, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (46, 30, 100, 30, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 406.393958, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.563' AS DateTime), NULL, NULL, 3447863197, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (47, 31, 100, 31, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 140.625, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.563' AS DateTime), NULL, NULL, 6961753482, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (48, 14, 100, 14, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 672.162916, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.567' AS DateTime), NULL, NULL, 8406933048, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (49, 16, 100, 16, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 140.625, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.567' AS DateTime), NULL, NULL, 1287282468, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (50, 17, 100, 17, CAST(N'2020-08-16T11:08:42.537' AS DateTime), 140.625, 0.32, 140.625, N'ROI', NULL, 0, 0, CAST(N'2020-09-16T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:29:26.570' AS DateTime), NULL, NULL, 7166936161, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (51, 35, 100, 35, CAST(N'2020-08-19T01:46:37.580' AS DateTime), 4688, 0, 4688, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T13:16:37.580' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (52, 34, 100, 34, CAST(N'2020-08-19T01:48:01.560' AS DateTime), 4687.5, 0, 4687.5, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T13:18:01.560' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (53, 34, 12, 34, CAST(N'2020-08-19T04:56:41.810' AS DateTime), 4687.5, 0.32, 0, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T20:56:41.813' AS DateTime), NULL, NULL, 6239085875, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (54, 31, 22, 34, CAST(N'2020-08-19T04:56:41.837' AS DateTime), 234.375, 0.32, 375, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T20:56:41.833' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (55, 35, 12, 35, CAST(N'2020-08-19T04:58:19.723' AS DateTime), 4687.5, 0.32, 0.5, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T20:58:19.723' AS DateTime), NULL, NULL, 4318919123, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (56, 30, 22, 35, CAST(N'2020-08-19T04:58:19.730' AS DateTime), 234.375, 0.32, 640.768958, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T20:58:19.730' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (57, 33, 100, 33, CAST(N'2020-08-20T00:27:56.770' AS DateTime), 5315, 0, 5315, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T11:57:56.770' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (58, 33, 100, 33, CAST(N'2020-08-20T00:28:19.750' AS DateTime), 1, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T11:58:19.747' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (59, 84, 100, 84, CAST(N'2020-08-20T00:30:01.100' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:00:01.100' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (60, 85, 100, 85, CAST(N'2020-08-20T00:31:44.720' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:01:44.720' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (61, 24, 100, 24, CAST(N'2020-08-20T00:32:34.093' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:02:34.093' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (62, 25, 100, 25, CAST(N'2020-08-20T00:32:59.610' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:02:59.610' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (63, 83, 100, 83, CAST(N'2020-08-20T00:34:13.487' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:04:13.487' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (64, 47, 100, 47, CAST(N'2020-08-20T00:34:39.980' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:04:39.980' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (65, 48, 100, 48, CAST(N'2020-08-20T00:35:07.280' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:05:07.280' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (66, 55, 100, 55, CAST(N'2020-08-20T00:35:32.513' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:05:32.513' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (67, 64, 100, 64, CAST(N'2020-08-20T00:35:54.600' AS DateTime), 5316, 0, 5316, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T12:05:54.600' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (68, 33, 12, 33, CAST(N'2020-08-20T03:33:48.980' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T19:33:48.980' AS DateTime), NULL, NULL, 2504196464, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (69, 31, 22, 33, CAST(N'2020-08-20T03:33:48.990' AS DateTime), 265.76895818568391, 0.2822, 640.76895818568391, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T19:33:48.990' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (70, 84, 12, 84, CAST(N'2020-08-20T03:48:39.397' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T19:48:39.397' AS DateTime), NULL, NULL, 3491383821, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (71, 30, 22, 84, CAST(N'2020-08-20T03:48:39.403' AS DateTime), 265.76895818568391, 0.2822, 906.53791618568391, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T19:48:39.403' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (72, 85, 12, 85, CAST(N'2020-08-20T03:51:56.957' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T19:51:56.957' AS DateTime), NULL, NULL, 4212481204, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (73, 30, 22, 85, CAST(N'2020-08-20T03:51:56.963' AS DateTime), 265.76895818568391, 0.2822, 1172.3068743713679, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T19:51:56.963' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (74, 24, 12, 24, CAST(N'2020-08-20T04:27:29.493' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T20:27:29.497' AS DateTime), NULL, NULL, 7203078937, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (75, 23, 22, 24, CAST(N'2020-08-20T04:27:29.500' AS DateTime), 265.76895818568391, 0.2822, 406.39395818568391, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T20:27:29.500' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (76, 25, 12, 25, CAST(N'2020-08-20T04:29:00.537' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T20:29:00.540' AS DateTime), NULL, NULL, 9095753213, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (77, 23, 22, 25, CAST(N'2020-08-20T04:29:00.550' AS DateTime), 265.76895818568391, 0.2822, 672.16291637136783, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T20:29:00.550' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (78, 83, 12, 83, CAST(N'2020-08-20T04:34:32.223' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T20:34:32.223' AS DateTime), NULL, NULL, 7174661866, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (79, 23, 22, 83, CAST(N'2020-08-20T04:34:32.230' AS DateTime), 265.76895818568391, 0.2822, 937.93187455705174, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-19T20:34:32.230' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (80, 47, 12, 47, CAST(N'2020-08-20T12:09:36.840' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:09:36.840' AS DateTime), NULL, NULL, 3768543623, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (81, 24, 22, 47, CAST(N'2020-08-20T12:09:36.850' AS DateTime), 265.76895818568391, 0.2822, 266.38979447200563, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:09:36.850' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (82, 48, 12, 48, CAST(N'2020-08-20T12:11:32.000' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:11:32.000' AS DateTime), NULL, NULL, 7106817449, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (83, 47, 22, 48, CAST(N'2020-08-20T12:11:32.007' AS DateTime), 265.76895818568391, 0.2822, 266.38979447200563, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:11:32.007' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (84, 55, 12, 55, CAST(N'2020-08-20T12:13:27.930' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:13:27.933' AS DateTime), NULL, NULL, 1142142749, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (85, 47, 22, 55, CAST(N'2020-08-20T12:13:27.937' AS DateTime), 265.76895818568391, 0.2822, 532.15875265768955, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:13:27.937' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (86, 64, 12, 64, CAST(N'2020-08-20T12:15:52.343' AS DateTime), 5315.3791637136783, 0.2822, 0.62083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:15:52.343' AS DateTime), NULL, NULL, 1783835754, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (87, 47, 22, 64, CAST(N'2020-08-20T12:15:52.350' AS DateTime), 265.76895818568391, 0.2822, 797.92771084337346, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T04:15:52.350' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (88, 86, 100, 86, CAST(N'2020-08-20T21:30:45.017' AS DateTime), 5315.5, 0, 5315.5, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T09:00:45.017' AS DateTime), N'admin', N'1', NULL, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (89, 86, 12, 86, CAST(N'2020-08-20T17:41:57.680' AS DateTime), 5315.3791637136783, 0.2822, 0.12083628632171894, N'TOP-UP', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T09:41:57.680' AS DateTime), NULL, NULL, 1073092142, 0)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (90, 31, 22, 86, CAST(N'2020-08-20T17:41:57.680' AS DateTime), 265.76895818568391, 0.2822, 906.53791637136783, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-20T09:41:57.680' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (91, 2, 100, 2, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 8.85896527285613, 0.2822, 116.67146527285613, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:21.987' AS DateTime), NULL, NULL, 6909194861, 2.5)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (92, 13, 100, 13, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1097.3932489114104, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:21.990' AS DateTime), NULL, NULL, 8529833289, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (93, 15, 100, 15, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 5615.46553791141, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:21.990' AS DateTime), NULL, NULL, 7514609459, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (94, 23, 100, 23, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1097.3932494684621, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:21.990' AS DateTime), NULL, NULL, 8276803399, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (95, 30, 100, 30, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1331.7682492827782, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:21.993' AS DateTime), NULL, NULL, 3447863197, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (96, 31, 100, 31, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1065.9992912827781, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:21.997' AS DateTime), NULL, NULL, 6961753482, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (97, 14, 100, 14, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 831.6242909114103, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.000' AS DateTime), NULL, NULL, 8406933048, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (98, 16, 100, 16, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 300.0863749114103, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.000' AS DateTime), NULL, NULL, 1287282468, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (99, 17, 100, 17, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 300.0863749114103, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.003' AS DateTime), NULL, NULL, 7166936161, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (100, 34, 100, 34, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 159.46137491141033, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.003' AS DateTime), NULL, NULL, 6239085875, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (101, 35, 100, 35, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 159.96137491141033, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.007' AS DateTime), NULL, NULL, 4318919123, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (102, 33, 100, 33, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.007' AS DateTime), NULL, NULL, 2504196464, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (103, 84, 100, 84, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.010' AS DateTime), NULL, NULL, 3491383821, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (104, 85, 100, 85, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.010' AS DateTime), NULL, NULL, 4212481204, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (105, 24, 100, 24, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 425.85116938341594, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.013' AS DateTime), NULL, NULL, 7203078937, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (106, 25, 100, 25, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.013' AS DateTime), NULL, NULL, 9095753213, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (107, 83, 100, 83, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.020' AS DateTime), NULL, NULL, 7174661866, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (108, 47, 100, 47, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 957.38908575478376, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.020' AS DateTime), NULL, NULL, 3768543623, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (109, 48, 100, 48, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.023' AS DateTime), NULL, NULL, 7106817449, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (110, 55, 100, 55, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.023' AS DateTime), NULL, NULL, 1142142749, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (111, 64, 100, 64, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 160.08221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.030' AS DateTime), NULL, NULL, 1783835754, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (112, 86, 100, 86, CAST(N'2020-08-26T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 159.58221119773205, N'ROI', NULL, 0, 0, CAST(N'2020-09-26T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:06:22.030' AS DateTime), NULL, NULL, 1073092142, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (113, 23, 22, 23, CAST(N'2020-08-25T11:08:42.537' AS DateTime), 850.46066619418855, 0.2822, 1947.8539156626507, N'Payout', NULL, 0, 3, CAST(N'2020-09-25T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:08:26.423' AS DateTime), NULL, NULL, NULL, 240)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (114, 30, 22, 30, CAST(N'2020-08-25T11:08:42.537' AS DateTime), 850.46066619418855, 0.2822, 2182.2289154769669, N'Payout', NULL, 0, 3, CAST(N'2020-09-25T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:08:26.427' AS DateTime), NULL, NULL, NULL, 240)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (115, 31, 22, 31, CAST(N'2020-08-25T11:08:42.537' AS DateTime), 850.46066619418855, 0.2822, 1916.4599574769668, N'Payout', NULL, 0, 3, CAST(N'2020-09-25T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:08:26.427' AS DateTime), NULL, NULL, NULL, 240)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (116, 47, 22, 47, CAST(N'2020-08-25T11:08:42.537' AS DateTime), 425.23033309709427, 0.2822, 1382.619418851878, N'Payout', NULL, 0, 3, CAST(N'2020-09-25T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-08-26T00:08:26.427' AS DateTime), NULL, NULL, NULL, 120)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (117, 2, 100, 2, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 8.85896527285613, 0.2822, 125.53043054571225, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.383' AS DateTime), NULL, NULL, 6909194861, 2.5)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (118, 13, 100, 13, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1256.8546238228207, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.393' AS DateTime), NULL, NULL, 8529833289, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (119, 15, 100, 15, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 5774.9269128228207, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.397' AS DateTime), NULL, NULL, 7514609459, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (120, 23, 100, 23, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 2107.3152905740612, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.400' AS DateTime), NULL, NULL, 8276803399, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (121, 30, 100, 30, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 2341.6902903883774, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.400' AS DateTime), NULL, NULL, 3447863197, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (122, 31, 100, 31, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 2075.9213323883773, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.403' AS DateTime), NULL, NULL, 6961753482, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (123, 14, 100, 14, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 991.0856658228206, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.403' AS DateTime), NULL, NULL, 8406933048, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (124, 16, 100, 16, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 459.54774982282061, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.410' AS DateTime), NULL, NULL, 1287282468, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (125, 17, 100, 17, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 459.54774982282061, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.430' AS DateTime), NULL, NULL, 7166936161, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (126, 34, 100, 34, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 318.92274982282066, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.437' AS DateTime), NULL, NULL, 6239085875, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (127, 35, 100, 35, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.42274982282066, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.447' AS DateTime), NULL, NULL, 4318919123, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (128, 33, 100, 33, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.450' AS DateTime), NULL, NULL, 2504196464, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (129, 84, 100, 84, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.453' AS DateTime), NULL, NULL, 3491383821, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (130, 85, 100, 85, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.463' AS DateTime), NULL, NULL, 4212481204, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (131, 24, 100, 24, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 585.31254429482624, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.490' AS DateTime), NULL, NULL, 7203078937, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (132, 25, 100, 25, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.490' AS DateTime), NULL, NULL, 9095753213, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (133, 83, 100, 83, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.497' AS DateTime), NULL, NULL, 7174661866, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (134, 47, 100, 47, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1542.0807937632883, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.500' AS DateTime), NULL, NULL, 3768543623, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (135, 48, 100, 48, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.500' AS DateTime), NULL, NULL, 7106817449, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (136, 55, 100, 55, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.503' AS DateTime), NULL, NULL, 1142142749, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (137, 64, 100, 64, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.54358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.507' AS DateTime), NULL, NULL, 1783835754, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (138, 86, 100, 86, CAST(N'2020-09-01T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 319.04358610914238, N'ROI', NULL, 0, 0, CAST(N'2020-10-01T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-02T00:38:01.510' AS DateTime), NULL, NULL, 1073092142, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (139, 2, 100, 2, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 8.85896527285613, 0.2822, 134.38939581856837, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.370' AS DateTime), NULL, NULL, 6909194861, 2.5)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (140, 13, 100, 13, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1416.315998734231, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.373' AS DateTime), NULL, NULL, 8529833289, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (141, 15, 100, 15, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 5934.3882877342312, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.373' AS DateTime), NULL, NULL, 7514609459, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (142, 23, 100, 23, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 2266.7766654854718, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.377' AS DateTime), NULL, NULL, 8276803399, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (143, 30, 100, 30, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 2501.151665299788, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.377' AS DateTime), NULL, NULL, 3447863197, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (144, 31, 100, 31, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 2235.3827072997879, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.380' AS DateTime), NULL, NULL, 6961753482, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (145, 14, 100, 14, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1150.5470407342309, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.380' AS DateTime), NULL, NULL, 8406933048, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (146, 16, 100, 16, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 619.00912473423091, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.380' AS DateTime), NULL, NULL, 1287282468, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (147, 17, 100, 17, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 619.00912473423091, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.383' AS DateTime), NULL, NULL, 7166936161, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (148, 34, 100, 34, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 478.384124734231, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.383' AS DateTime), NULL, NULL, 6239085875, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (149, 35, 100, 35, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 478.884124734231, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.390' AS DateTime), NULL, NULL, 4318919123, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (150, 33, 100, 33, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.390' AS DateTime), NULL, NULL, 2504196464, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (151, 84, 100, 84, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.393' AS DateTime), NULL, NULL, 3491383821, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (152, 85, 100, 85, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.393' AS DateTime), NULL, NULL, 4212481204, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (153, 24, 100, 24, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 744.77391920623654, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.397' AS DateTime), NULL, NULL, 7203078937, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (154, 25, 100, 25, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.397' AS DateTime), NULL, NULL, 9095753213, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (155, 83, 100, 83, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.400' AS DateTime), NULL, NULL, 7174661866, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (156, 47, 100, 47, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 1701.5421686746986, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.403' AS DateTime), NULL, NULL, 3768543623, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (157, 48, 100, 48, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.407' AS DateTime), NULL, NULL, 7106817449, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (158, 55, 100, 55, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.410' AS DateTime), NULL, NULL, 1142142749, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (159, 64, 100, 64, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 479.00496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.413' AS DateTime), NULL, NULL, 1783835754, 45)
GO
INSERT [dbo].[VPTran] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (160, 86, 100, 86, CAST(N'2020-09-08T11:08:42.537' AS DateTime), 159.46137491141033, 0.2822, 478.50496102055274, N'ROI', NULL, 0, 0, CAST(N'2020-10-08T11:08:42.537' AS DateTime), 0, 0, NULL, CAST(N'2020-09-09T00:05:36.413' AS DateTime), NULL, NULL, 1073092142, 45)
GO
SET IDENTITY_INSERT [dbo].[VPTran] OFF
GO
SET IDENTITY_INSERT [dbo].[vptranbackup] ON 
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (1, 2, 100, 2, CAST(N'2020-07-12T17:52:14.563' AS DateTime), 100, 0, 100, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T10:39:58.217' AS DateTime), N'Admin', N'1', NULL, 0)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (2, 13, 100, 13, CAST(N'2020-08-05T09:00:49.637' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T10:48:45.847' AS DateTime), N'Admin', N'1', NULL, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (3, 13, 12, 13, CAST(N'2020-08-05T09:00:49.637' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 2, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T10:58:16.967' AS DateTime), NULL, NULL, 8529833289, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (4, 15, 100, 15, CAST(N'2020-08-05T09:30:39.760' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:18:58.980' AS DateTime), N'Admin', N'1', 7514609459, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (6, 13, 22, 15, CAST(N'2020-08-05T09:35:39.767' AS DateTime), 265.768958, 0.2822, 265.768958, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:29:26.847' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (7, 23, 100, 23, CAST(N'2020-08-05T10:20:39.607' AS DateTime), 5315.379163, 0, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:31:53.303' AS DateTime), N'Admin', N'1', NULL, 0)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (8, 23, 12, 23, CAST(N'2020-08-05T10:40:39.607' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 4, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:34:36.760' AS DateTime), NULL, NULL, 8276803399, 0)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (9, 30, 100, 30, CAST(N'2020-08-05T12:24:21.660' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:36:37.360' AS DateTime), N'Admin', N'1', 8276803399, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (10, 30, 12, 30, CAST(N'2020-08-05T12:34:21.660' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 5, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:39:28.653' AS DateTime), NULL, NULL, 3447863197, 0)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (11, 13, 22, 30, CAST(N'2020-08-05T12:34:21.663' AS DateTime), 265.768958, 0.2822, 531.537916, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:40:57.033' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (12, 31, 100, 31, CAST(N'2020-08-05T15:00:52.633' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:42:50.063' AS DateTime), N'Admin', N'1', 0, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (13, 31, 12, 31, CAST(N'2020-08-05T15:02:52.633' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 6, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:48:22.870' AS DateTime), NULL, NULL, 6961753482, 0)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (14, 30, 22, 31, CAST(N'2020-08-05T15:02:52.640' AS DateTime), 265.768958, 0.2822, 265.768958, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:51:05.457' AS DateTime), NULL, NULL, 6961753482, 75)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (15, 14, 100, 14, CAST(N'2020-08-09T08:30:38.670' AS DateTime), 5315.379163, 0, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:53:56.040' AS DateTime), N'Admin', N'1', NULL, 0)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (16, 14, 12, 14, CAST(N'2020-08-09T08:33:38.670' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 7, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T11:57:40.353' AS DateTime), NULL, NULL, 8406933048, 0)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (17, 13, 22, 14, CAST(N'2020-08-09T08:33:38.690' AS DateTime), 265.768958, 0.2822, 797.306874, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:00:11.253' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (18, 16, 100, 16, CAST(N'2020-08-09T08:34:54.930' AS DateTime), 5315.379163, 0.2822, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:01:37.783' AS DateTime), N'Admin', N'1', 0, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (19, 16, 12, 16, CAST(N'2020-08-09T08:37:54.930' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 8, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:05:02.627' AS DateTime), NULL, NULL, 1287282468, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (20, 14, 22, 16, CAST(N'2020-08-09T08:37:54.933' AS DateTime), 265.768958, 0.2822, 265.768958, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:07:01.290' AS DateTime), NULL, NULL, NULL, 75)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (21, 17, 100, 17, CAST(N'2020-08-09T08:41:55.327' AS DateTime), 5315.379163, 0, 5315.379163, N'Self', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:09:17.753' AS DateTime), N'Admin', N'1', NULL, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (22, 17, 12, 17, CAST(N'2020-08-09T08:41:55.327' AS DateTime), 5315.379163, 0.2822, 0, N'TOP-UP', NULL, 9, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:11:31.290' AS DateTime), NULL, NULL, 7166936161, 1500)
GO
INSERT [dbo].[vptranbackup] ([BankTranId], [AppmstId], [BankTranMode], [PaidAppmstID], [BankTranDate], [BankTranAmount], [OutAmount], [BankTranBalance], [BankTranRemarks], [Reason], [TranId], [payoutno], [DispDate], [IsActive], [UpDateTime], [DimoundID], [doe], [TranBY], [trancharge], [investment], [dollar]) VALUES (23, 14, 22, 17, CAST(N'2020-08-09T08:41:55.330' AS DateTime), 265.768958, 0.2822, 531.537916, N'Direct Income', NULL, NULL, 0, CAST(N'1900-01-01T00:00:00.000' AS DateTime), 0, 0, NULL, CAST(N'2020-08-18T12:14:06.187' AS DateTime), NULL, NULL, NULL, 75)
GO
SET IDENTITY_INSERT [dbo].[vptranbackup] OFF
GO
/****** Object:  Index [Unq_AdminViewMst_AdminId]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[AdminViewMst] ADD  CONSTRAINT [Unq_AdminViewMst_AdminId] UNIQUE NONCLUSTERED 
(
	[AdminId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_AppMst]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [IX_AppMst] UNIQUE NONCLUSTERED 
(
	[AppMstRegNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [Ck_brandmst_brand]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[BrandMst] ADD  CONSTRAINT [Ck_brandmst_brand] UNIQUE NONCLUSTERED 
(
	[brand] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_FranchiseMst_Email]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[FranchiseMst] ADD  CONSTRAINT [UQ_FranchiseMst_Email] UNIQUE NONCLUSTERED 
(
	[Email] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_FranchiseMst_PinCode]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[FranchiseMst] ADD  CONSTRAINT [UQ_FranchiseMst_PinCode] UNIQUE NONCLUSTERED 
(
	[PinCode] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_FranchiseMst_UserId]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[FranchiseMst] ADD  CONSTRAINT [UQ_FranchiseMst_UserId] UNIQUE NONCLUSTERED 
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [Ck_packsizemst_PackSize]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[PackSizeMst] ADD  CONSTRAINT [Ck_packsizemst_PackSize] UNIQUE NONCLUSTERED 
(
	[PackSize] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [unique_pinmst_pinno]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [unique_pinmst_pinno] UNIQUE NONCLUSTERED 
(
	[PinNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_PinMst_PinNo]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [UQ_PinMst_PinNo] UNIQUE NONCLUSTERED 
(
	[PinNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [IX_ReCommissionMst]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[ReCommissionMst] ADD  CONSTRAINT [IX_ReCommissionMst] UNIQUE NONCLUSTERED 
(
	[OperatorId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [rewardmst_minpoint]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[rewardMst] ADD  CONSTRAINT [rewardmst_minpoint] UNIQUE NONCLUSTERED 
(
	[minPoint] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [rewardmst_name]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[rewardMst] ADD  CONSTRAINT [rewardmst_name] UNIQUE NONCLUSTERED 
(
	[name] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [rewardmst_rewardrank]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[rewardMst] ADD  CONSTRAINT [rewardmst_rewardrank] UNIQUE NONCLUSTERED 
(
	[rewardRank] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [un_rewardmst_maxpoint]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[rewardMst] ADD  CONSTRAINT [un_rewardmst_maxpoint] UNIQUE NONCLUSTERED 
(
	[maxPoint] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [un_rewardmst_minpoint]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[rewardMst] ADD  CONSTRAINT [un_rewardmst_minpoint] UNIQUE NONCLUSTERED 
(
	[minPoint] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [un_rewardmst_name]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[rewardMst] ADD  CONSTRAINT [un_rewardmst_name] UNIQUE NONCLUSTERED 
(
	[name] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [un_rewardmst_rewardrank]    Script Date: 10/28/2020 2:04:47 PM ******/
ALTER TABLE [dbo].[rewardMst] ADD  CONSTRAINT [un_rewardmst_rewardrank] UNIQUE NONCLUSTERED 
(
	[rewardRank] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
ALTER TABLE [dbo].[AdminControl] ADD  CONSTRAINT [DF_AdminControl_SubAdmin]  DEFAULT ((0)) FOR [UserName]
GO
ALTER TABLE [dbo].[AdminControl] ADD  CONSTRAINT [DF_AdminControl_Password]  DEFAULT ((0)) FOR [Password]
GO
ALTER TABLE [dbo].[AdminControl] ADD  CONSTRAINT [DF_AdminControl_LogInDateTime]  DEFAULT ((0)) FOR [LogInDateTime]
GO
ALTER TABLE [dbo].[AdminControl] ADD  CONSTRAINT [DF_AdminControl_admintype]  DEFAULT ((0)) FOR [admintype]
GO
ALTER TABLE [dbo].[AdminControl] ADD  CONSTRAINT [DF_AdminControl_Date]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [Date]
GO
ALTER TABLE [dbo].[AdminControl] ADD  CONSTRAINT [DF_AdminControl_IPAddress]  DEFAULT ((0)) FOR [IPAddress]
GO
ALTER TABLE [dbo].[AdminViewMst] ADD  CONSTRAINT [DF__AdminViewMs__doe__781FBE44]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[AdminViewMst] ADD  DEFAULT ((0)) FOR [FranchiseID]
GO
ALTER TABLE [dbo].[AdminViewMst] ADD  DEFAULT ((0)) FOR [DownLineFID]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstID]  DEFAULT ((0)) FOR [AppMstID]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstPassword]  DEFAULT ('') FOR [AppMstPassword]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstTitle]  DEFAULT ('') FOR [AppMstTitle]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_Gtitle]  DEFAULT ('') FOR [Gtitle]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstFName]  DEFAULT ('') FOR [AppMstFName]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstLName]  DEFAULT ('') FOR [AppMstLName]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstState]  DEFAULT ('') FOR [AppMstState]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstCity]  DEFAULT ('') FOR [AppMstCity]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstAddress1]  DEFAULT ('') FOR [AppMstAddress1]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstPinCode]  DEFAULT ('') FOR [AppMstPinCode]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstMobile]  DEFAULT ('') FOR [AppMstMobile]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstPrimaryPhone]  DEFAULT ('') FOR [AppMstPrimaryPhone]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstLogin]  DEFAULT ('') FOR [AppMstLogin]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstLeftRight]  DEFAULT ((0)) FOR [AppMstLeftRight]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_ParentID]  DEFAULT ((0)) FOR [ParentID]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_SponsorID]  DEFAULT ((0)) FOR [SponsorID]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstSponsorTotal]  DEFAULT ((0)) FOR [AppMstSponsorTotal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstDOJ]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [AppMstDOJ]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_Appmstpaid]  DEFAULT ((0)) FOR [Appmstpaid]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstLeftTotal]  DEFAULT ((0)) FOR [AppMstLeftTotal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AppMstRightTotal]  DEFAULT ((0)) FOR [AppMstRightTotal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_TotalNewLeft]  DEFAULT ((0)) FOR [TotalNewLeft]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_TotalNewRight]  DEFAULT ((0)) FOR [TotalNewRight]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_cpl]  DEFAULT ((0)) FOR [cpl]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_cpr]  DEFAULT ((0)) FOR [cpr]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_ncpl]  DEFAULT ((0)) FOR [cbfl]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_ncpr]  DEFAULT ((0)) FOR [cbfr]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_pairRank]  DEFAULT ((0)) FOR [pairRank]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_npairrank]  DEFAULT ((0)) FOR [npairrank]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_OldPairRank]  DEFAULT ((0)) FOR [OldPairRank]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_oldprank]  DEFAULT ((0)) FOR [oldprank]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_CarryLeft]  DEFAULT ((0)) FOR [CarryLeft]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_CarryRight]  DEFAULT ((0)) FOR [CarryRight]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_bincome]  DEFAULT ((0)) FOR [bincome]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_BFL]  DEFAULT ((0)) FOR [BFL]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_BFR]  DEFAULT ((0)) FOR [BFR]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_CurrrentBalanceLeft]  DEFAULT ((0)) FOR [CurrrentBalanceLeft]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_CurrentBalanceRight]  DEFAULT ((0)) FOR [CurrentBalanceRight]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_BankName]  DEFAULT ('NA') FOR [BankName]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_Branch]  DEFAULT ('NA') FOR [Branch]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_AcountNo]  DEFAULT ('NA') FOR [AcountNo]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_panno]  DEFAULT ('NA') FOR [panno]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_MICR]  DEFAULT ('NA') FOR [MICR]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_IFC]  DEFAULT ('NA') FOR [IFC]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_distt]  DEFAULT ('NA') FOR [distt]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_userdob]  DEFAULT ('01/01/1901') FOR [userdob]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_JoinFor]  DEFAULT ((0)) FOR [JoinFor]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_JAmount]  DEFAULT ((0)) FOR [JAmount]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__appmstac__69C6B1F5]  DEFAULT ((0)) FOR [appmstactivate]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__productT__540C7B00]  DEFAULT ((1)) FOR [productType]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__appmstpa__58D1301D]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [appPaiddatetime]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_beneficiaryname]  DEFAULT ((0)) FOR [beneficiaryname]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_bstatus]  DEFAULT ((0)) FOR [bstatus]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__ReceiptN__2882FE7D]  DEFAULT ((0)) FOR [ReceiptNo]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__Type__062DE679]  DEFAULT ('') FOR [Type]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__tdsdeduc__07220AB2]  DEFAULT ((0)) FOR [tdsdeduction]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__ePasswor__08162EEB]  DEFAULT ('') FOR [ePassword]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__IPAddres__68687968]  DEFAULT ('0') FOR [IPAddress]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__newspons__695C9DA1]  DEFAULT ((0)) FOR [newsponsortotal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__GName__6D2D2E85]  DEFAULT ('0') FOR [GName]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_isEdited]  DEFAULT ((0)) FOR [isEdited]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__TempLeft__2759D01A]  DEFAULT ((0)) FOR [TempLeftTotal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__TempRigh__284DF453]  DEFAULT ((0)) FOR [TempRightTotal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__FastT1__2942188C]  DEFAULT ((0)) FOR [FastT1]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__FastT2__2A363CC5]  DEFAULT ((0)) FOR [FastT2]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__FastT3__2B2A60FE]  DEFAULT ((0)) FOR [FastT3]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__VPBal__2C1E8537]  DEFAULT ((0)) FOR [VPBal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__FastT4__2D12A970]  DEFAULT ((0)) FOR [FastT4]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__FastT5__2E06CDA9]  DEFAULT ((0)) FOR [FastT5]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_RetailerTypeid]  DEFAULT ((0)) FOR [RetailerTypeid]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF_AppMst_Revoucher]  DEFAULT ((0)) FOR [Revoucher]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [appmst_DSponsarTotal]  DEFAULT ((0)) FOR [DSponsarTotal]
GO
ALTER TABLE [dbo].[AppMst] ADD  CONSTRAINT [DF__AppMst__DSponsar__6621099A]  DEFAULT ((0)) FOR [DSponsarNew]
GO
ALTER TABLE [dbo].[AppTran] ADD  CONSTRAINT [DF_AppTran_AppMstLeftRight]  DEFAULT ((0)) FOR [AppMstLeftRight]
GO
ALTER TABLE [dbo].[AppTran] ADD  CONSTRAINT [DF_AppTran_AppMstDOE]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [AppMstDOE]
GO
ALTER TABLE [dbo].[AppTran] ADD  CONSTRAINT [DF_AppTran_Appmstlevel]  DEFAULT ((0)) FOR [Appmstlevel]
GO
ALTER TABLE [dbo].[AppTran] ADD  CONSTRAINT [DF_AppTran_Joinfor]  DEFAULT ((1)) FOR [Joinfor]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ('') FOR [BankName]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ('') FOR [Branch]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ('') FOR [acno]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ('') FOR [AcType]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ('') FOR [HolderName]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ('') FOR [IFS]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ('') FOR [MICR]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[BankMst] ADD  DEFAULT ((0)) FOR [appmstid]
GO
ALTER TABLE [dbo].[blockedID] ADD  DEFAULT ('0') FOR [comment]
GO
ALTER TABLE [dbo].[blockedID] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [blockDate]
GO
ALTER TABLE [dbo].[blog] ADD  CONSTRAINT [DF_blog_appmstregno]  DEFAULT ((0)) FOR [appmstregno]
GO
ALTER TABLE [dbo].[blog] ADD  CONSTRAINT [DF__blog__Commentby__2DD1C37F]  DEFAULT ((0)) FOR [Commentby]
GO
ALTER TABLE [dbo].[blog] ADD  CONSTRAINT [DF__blog__Comments__2EC5E7B8]  DEFAULT ((0)) FOR [Comments]
GO
ALTER TABLE [dbo].[blog] ADD  CONSTRAINT [DF__blog__status__2FBA0BF1]  DEFAULT ((0)) FOR [status]
GO
ALTER TABLE [dbo].[blog] ADD  CONSTRAINT [DF__blog__doe__30AE302A]  DEFAULT (CONVERT([varchar](23),dateadd(minute,(330),getutcdate()),(121))) FOR [doe]
GO
ALTER TABLE [dbo].[BrandMst] ADD  CONSTRAINT [DF__BrandMst__brand__208CD6FA]  DEFAULT ('0') FOR [brand]
GO
ALTER TABLE [dbo].[BrandMst] ADD  CONSTRAINT [DF__BrandMst__DOE__2180FB33]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[BrandMst] ADD  CONSTRAINT [DF__BrandMst__Status__22751F6C]  DEFAULT ((1)) FOR [Status]
GO
ALTER TABLE [dbo].[BTCRequestMst] ADD  CONSTRAINT [DF_BTCRequestMst_RDate]  DEFAULT (getdate()) FOR [RDate]
GO
ALTER TABLE [dbo].[BTCRequestMst] ADD  CONSTRAINT [DF_BTCRequestMst_Status]  DEFAULT ((0)) FOR [Status]
GO
ALTER TABLE [dbo].[BTCRequestMst] ADD  CONSTRAINT [DF_BTCRequestMst_RequestTyp]  DEFAULT ((0)) FOR [RequestTyp]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_EMailId]  DEFAULT ('0') FOR [EMailId]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_DOE]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_Price]  DEFAULT ((0)) FOR [Price]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_NetPrice]  DEFAULT ((0)) FOR [NetPrice]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_Quantity]  DEFAULT ((0)) FOR [Quantity]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_Discount]  DEFAULT ((0)) FOR [Discount]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_DiscountType]  DEFAULT ((0)) FOR [DiscountType]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_NetAmt]  DEFAULT ((0)) FOR [NetAmt]
GO
ALTER TABLE [dbo].[CartMst] ADD  CONSTRAINT [DF_CartMst_OrderStatus]  DEFAULT ((0)) FOR [OrderStatus]
GO
ALTER TABLE [dbo].[CartProductMst] ADD  CONSTRAINT [DF_CartProductMst_doe]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[CartProductMst] ADD  CONSTRAINT [DF_CartProductMst_isDeleted]  DEFAULT ((0)) FOR [isDeleted]
GO
ALTER TABLE [dbo].[CartProductMst] ADD  CONSTRAINT [DF_CartProductMst_PID]  DEFAULT ('') FOR [PID]
GO
ALTER TABLE [dbo].[CategoryMst] ADD  CONSTRAINT [DF__CategoryM__CatNa__224B023A]  DEFAULT ('0') FOR [CatName]
GO
ALTER TABLE [dbo].[CategoryMst] ADD  CONSTRAINT [DF__CategoryM__Descr__233F2673]  DEFAULT ('0') FOR [Description]
GO
ALTER TABLE [dbo].[CategoryMst] ADD  CONSTRAINT [DF__CategoryMst__DOE__24334AAC]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[CategoryMst] ADD  CONSTRAINT [DF__CategoryM__isDel__25276EE5]  DEFAULT ((1)) FOR [Status]
GO
ALTER TABLE [dbo].[CategoryMst] ADD  DEFAULT ((1)) FOR [ProType]
GO
ALTER TABLE [dbo].[CauseId] ADD  CONSTRAINT [DF_CauseId_Amount]  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[CauseId] ADD  CONSTRAINT [DF_CauseId_effectdate]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [effectdate]
GO
ALTER TABLE [dbo].[CauseId] ADD  CONSTRAINT [DF_CauseId_JoinFor]  DEFAULT ((1)) FOR [JoinFor]
GO
ALTER TABLE [dbo].[CauseId] ADD  CONSTRAINT [DF__CauseId__iselegi__31B762FC]  DEFAULT ((0)) FOR [iselegible]
GO
ALTER TABLE [dbo].[CauseId] ADD  DEFAULT ((0)) FOR [pairrank]
GO
ALTER TABLE [dbo].[CauseId] ADD  DEFAULT ((0)) FOR [EndAmount]
GO
ALTER TABLE [dbo].[CauseId] ADD  CONSTRAINT [DF_CauseId_Ckstatus]  DEFAULT ((0)) FOR [Ckstatus]
GO
ALTER TABLE [dbo].[CauseId] ADD  CONSTRAINT [StarId]  DEFAULT ((0)) FOR [StarId]
GO
ALTER TABLE [dbo].[cmddesk] ADD  CONSTRAINT [DF__cmddesk__doe__20E1DCB5]  DEFAULT (CONVERT([varchar](23),dateadd(minute,(330),getutcdate()),(121))) FOR [doe]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_username]  DEFAULT ((0)) FOR [username]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_password]  DEFAULT ((0)) FOR [password]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_name]  DEFAULT ((0)) FOR [name]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_admintype]  DEFAULT ((0)) FOR [admintype]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Lock]  DEFAULT ((0)) FOR [Lock]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_mobileno]  DEFAULT ((0)) FOR [mobileno]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_List]  DEFAULT ((0)) FOR [List]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Profile]  DEFAULT ((0)) FOR [Profile]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_ViewProfile]  DEFAULT ((0)) FOR [ViewProfile]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Search]  DEFAULT ((0)) FOR [Search]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_wli]  DEFAULT ((0)) FOR [wli]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_calROI]  DEFAULT ((0)) FOR [calROI]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Details]  DEFAULT ((0)) FOR [Details]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_TurnOver]  DEFAULT ((0)) FOR [TurnOver]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Date]  DEFAULT ((0)) FOR [Date]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_PList]  DEFAULT ((0)) FOR [PList]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_payoutroi]  DEFAULT ((0)) FOR [payoutroi]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_dateroi]  DEFAULT ((0)) FOR [dateroi]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_listroi]  DEFAULT ((0)) FOR [listroi]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Status]  DEFAULT ((0)) FOR [Status]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_AllotPin]  DEFAULT ((0)) FOR [AllotPin]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_AllotedPinList]  DEFAULT ((0)) FOR [AllotedPinList]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_SearchaUpdatePin]  DEFAULT ((0)) FOR [SearchaUpdatePin]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_investmentreport]  DEFAULT ((0)) FOR [investmentreport]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_viewpassbook]  DEFAULT ((0)) FOR [viewpassbook]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viewm__51700577]  DEFAULT ('0') FOR [viewmodifyamt]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viewm__526429B0]  DEFAULT ('0') FOR [viewmodifyrno]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viewm__53584DE9]  DEFAULT ('0') FOR [viewmodifydate]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viewm__544C7222]  DEFAULT ('0') FOR [viewmodifyptype]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_AllPayoutStatements]  DEFAULT ((0)) FOR [AllPayoutStatements]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_allpayoutstatementsroi]  DEFAULT ((0)) FOR [allpayoutstatementsroi]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_SponsorList]  DEFAULT ((0)) FOR [SponsorList]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_SponsorDateWise]  DEFAULT ((0)) FOR [SponsorDateWise]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_UplineList]  DEFAULT ((0)) FOR [UplineList]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Downline]  DEFAULT ((0)) FOR [Downline]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_ChequePrint]  DEFAULT ((0)) FOR [ChequePrint]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_ChequePrintROI]  DEFAULT ((0)) FOR [ChequePrintROI]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_BulkSMS]  DEFAULT ((0)) FOR [BulkSMS]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_PostQuery]  DEFAULT ((0)) FOR [PostQuery]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_QueryList]  DEFAULT ((0)) FOR [QueryList]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_RepliedQueryList]  DEFAULT ((0)) FOR [RepliedQueryList]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_AddNews]  DEFAULT ((0)) FOR [AddNews]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_NewsModify]  DEFAULT ((0)) FOR [NewsModify]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_Genealogy]  DEFAULT ((0)) FOR [Genealogy]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_ChangePassword]  DEFAULT ((0)) FOR [ChangePassword]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_DownTOver]  DEFAULT ((0)) FOR [DownTOver]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viewi__062DE679]  DEFAULT ((0)) FOR [viewinvestment]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__addqu__07220AB2]  DEFAULT ((0)) FOR [addquote]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__modif__08162EEB]  DEFAULT ((0)) FOR [modifyquote]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_addpopup]  DEFAULT ((0)) FOR [addpopup]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_modifypopup]  DEFAULT ((0)) FOR [modifypopup]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF_ControlMst_ApproveBlog]  DEFAULT ((0)) FOR [ApproveBlog]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viwre__5A1A5A11]  DEFAULT ('0') FOR [viewrejecttopup]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viwAp__5B0E7E4A]  DEFAULT ('0') FOR [viewApprovedtopup]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__viwwa__5C02A283]  DEFAULT ('0') FOR [viewwaittopup]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__reset__251C81ED]  DEFAULT ('0') FOR [resetUserTopUp]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__SWA__2610A626]  DEFAULT ('0') FOR [SWA]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__ADDBA__2704CA5F]  DEFAULT ('0') FOR [ADDBANK]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__REWAR__27F8EE98]  DEFAULT ('0') FOR [REWARDACHIEVERS]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__CREDI__28ED12D1]  DEFAULT ('0') FOR [CREDITUSER]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__DEBIT__29E1370A]  DEFAULT ('0') FOR [DEBITUSER]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__NFM__2BC97F7C]  DEFAULT ('0') FOR [NFM]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__FRANC__2EA5EC27]  DEFAULT ('0') FOR [FRANCHISETREE]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__WR__2F9A1060]  DEFAULT ('0') FOR [WR]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__UBB__308E3499]  DEFAULT ('0') FOR [UBB]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__VIMod__318258D2]  DEFAULT ('0') FOR [VIModifications]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__VDTL__32767D0B]  DEFAULT ('0') FOR [VDTL]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__VTRM__336AA144]  DEFAULT ('0') FOR [VTRM]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__VTRS__345EC57D]  DEFAULT ('0') FOR [VTRS]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__Gener__5BCD9859]  DEFAULT ('0') FOR [GeneratePin]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__FundT__5CC1BC92]  DEFAULT ('0') FOR [FundTransfer]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__FL__5DB5E0CB]  DEFAULT ('0') FOR [FL]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__NotAl__5EAA0504]  DEFAULT ('0') FOR [NotAllotedPinList]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__Rewar__5F9E293D]  DEFAULT ('0') FOR [Reward]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__payou__60924D76]  DEFAULT ('0') FOR [payoutroitb]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__dater__618671AF]  DEFAULT ('0') FOR [dateroitb]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__listr__627A95E8]  DEFAULT ('0') FOR [listroitb]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__allpa__636EBA21]  DEFAULT ('0') FOR [allpayoutstatementsroitb]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__Chequ__6462DE5A]  DEFAULT ('0') FOR [ChequePrintROITB]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMst__FWPR__65570293]  DEFAULT ('0') FOR [FWPR]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__FWFPR__664B26CC]  DEFAULT ('0') FOR [FWFPR]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__BDWit__673F4B05]  DEFAULT ('0') FOR [BDWithdralRpt]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__BDTra__68336F3E]  DEFAULT ('0') FOR [BDTransferRpt]
GO
ALTER TABLE [dbo].[ControlMst] ADD  CONSTRAINT [DF__ControlMs__regno__69279377]  DEFAULT ('0') FOR [regno]
GO
ALTER TABLE [dbo].[CPTran] ADD  DEFAULT ((0)) FOR [BankTranAmount]
GO
ALTER TABLE [dbo].[CPTran] ADD  DEFAULT ('') FOR [BankTranRemarks]
GO
ALTER TABLE [dbo].[CPTran] ADD  DEFAULT ('') FOR [Reason]
GO
ALTER TABLE [dbo].[CPTran] ADD  DEFAULT ((0)) FOR [TranId]
GO
ALTER TABLE [dbo].[CPTran] ADD  DEFAULT ((0)) FOR [payoutno]
GO
ALTER TABLE [dbo].[CPTran] ADD  DEFAULT ((0)) FOR [PayId]
GO
ALTER TABLE [dbo].[CPTran] ADD  DEFAULT ('') FOR [TranBY]
GO
ALTER TABLE [dbo].[deactiveMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[DeletedData] ADD  CONSTRAINT [DF_DeletedData_Joinfor]  DEFAULT ((1)) FOR [Joinfor]
GO
ALTER TABLE [dbo].[DeletedData] ADD  CONSTRAINT [DF_DeletedData_sponsorid]  DEFAULT ((0)) FOR [sponsorid]
GO
ALTER TABLE [dbo].[DeletedData] ADD  CONSTRAINT [DF_DeletedData_DOE]  DEFAULT (dateadd(minute,(630),getdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[DiamondMst] ADD  CONSTRAINT [DF_DiamondMst_AppMstRegNo]  DEFAULT ('0') FOR [AppMstRegNo]
GO
ALTER TABLE [dbo].[DiamondMst] ADD  CONSTRAINT [DF_Table1_PairRank]  DEFAULT ((0)) FOR [DiamondID]
GO
ALTER TABLE [dbo].[DiamondMst] ADD  CONSTRAINT [DF_DiamondMst_GetLevel]  DEFAULT ((0)) FOR [GetLevel]
GO
ALTER TABLE [dbo].[FinalReward] ADD  CONSTRAINT [DF_FinalReward_AppMstRegNo]  DEFAULT ((0)) FOR [AppMstRegNo]
GO
ALTER TABLE [dbo].[FinalReward] ADD  CONSTRAINT [DF_FinalReward_totalpair]  DEFAULT ((0)) FOR [totalpair]
GO
ALTER TABLE [dbo].[FinalReward] ADD  CONSTRAINT [DF_FinalReward_AwardName]  DEFAULT ((0)) FOR [AwardName]
GO
ALTER TABLE [dbo].[FinalReward] ADD  CONSTRAINT [DF_FinalReward_Qualify]  DEFAULT ((0)) FOR [Qualify]
GO
ALTER TABLE [dbo].[FinalReward] ADD  CONSTRAINT [DF__FinalRewa__statu__5C6CB6D7]  DEFAULT ((0)) FOR [Dispatch]
GO
ALTER TABLE [dbo].[FinalReward] ADD  CONSTRAINT [DF_FinalReward_status]  DEFAULT ((0)) FOR [status]
GO
ALTER TABLE [dbo].[FinalReward] ADD  CONSTRAINT [DF_FinalReward_AwardAchivedDate]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [AwardAchivedDate]
GO
ALTER TABLE [dbo].[FranchiseTran] ADD  DEFAULT ((0)) FOR [BankTranAmount]
GO
ALTER TABLE [dbo].[FranchiseTran] ADD  DEFAULT ('') FOR [BankTranRemarks]
GO
ALTER TABLE [dbo].[FranchiseTran] ADD  DEFAULT ('') FOR [Reason]
GO
ALTER TABLE [dbo].[FranchiseTran] ADD  DEFAULT ((0)) FOR [TranId]
GO
ALTER TABLE [dbo].[FranchiseTran] ADD  DEFAULT ((0)) FOR [payoutno]
GO
ALTER TABLE [dbo].[FranchiseTran] ADD  DEFAULT ((0)) FOR [PayId]
GO
ALTER TABLE [dbo].[FranchiseTran] ADD  DEFAULT ('') FOR [TranBY]
GO
ALTER TABLE [dbo].[GiftOrderMst] ADD  CONSTRAINT [DF_GiftOrderMst_Status]  DEFAULT ((0)) FOR [Status]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [BankName]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [Branch]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [acno]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [AcType]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [HolderName]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [IFS]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [Panno]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ('') FOR [byupdate]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[HistoryBankMst] ADD  DEFAULT ((0)) FOR [appmstid]
GO
ALTER TABLE [dbo].[InvoiceMst] ADD  CONSTRAINT [DF_InvoiceMst_IDate]  DEFAULT (getdate()) FOR [IDate]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_AppMstId]  DEFAULT ((0)) FOR [AppMstId]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_BankTranMode]  DEFAULT ((0)) FOR [BankTranMode]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_paidAppMstId]  DEFAULT ((0)) FOR [paidAppMstId]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_BankTranDate]  DEFAULT (getdate()) FOR [BankTranDate]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_BankTranAmount]  DEFAULT ((0)) FOR [BankTranAmount]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_OutAmount]  DEFAULT ((0)) FOR [OutAmount]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_BankTranBalance]  DEFAULT ((0)) FOR [BankTranBalance]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_BankTranStatus]  DEFAULT ((0)) FOR [BankTranStatus]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF_BankTran_Payoutno]  DEFAULT ((0)) FOR [Payoutno]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF__BankTran__tranch__08D548FA]  DEFAULT ((0)) FOR [trancharge]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF__BankTran__Reason__1273C1CD]  DEFAULT ('') FOR [Reason]
GO
ALTER TABLE [dbo].[IPTran] ADD  CONSTRAINT [DF__BankTran__TranId__0ABD916C]  DEFAULT ((0)) FOR [TranId]
GO
ALTER TABLE [dbo].[IPTran] ADD  DEFAULT ('') FOR [TranBY]
GO
ALTER TABLE [dbo].[KPTran] ADD  CONSTRAINT [DF_KPTran_BankTranStatus]  DEFAULT ((0)) FOR [BankTranStatus]
GO
ALTER TABLE [dbo].[LoadTran] ADD  CONSTRAINT [DF_LoadTran_AppMstId]  DEFAULT ((0)) FOR [AppMstId]
GO
ALTER TABLE [dbo].[LoadTran] ADD  CONSTRAINT [DF_LoadTran_BankTranMode]  DEFAULT ((0)) FOR [BankTranMode]
GO
ALTER TABLE [dbo].[LoadTran] ADD  CONSTRAINT [DF_LoadTran_paidAppMstId]  DEFAULT ((0)) FOR [paidAppMstId]
GO
ALTER TABLE [dbo].[LoadTran] ADD  CONSTRAINT [DF_LoadTran_BankTranDate]  DEFAULT (getdate()) FOR [BankTranDate]
GO
ALTER TABLE [dbo].[LoadTran] ADD  CONSTRAINT [DF_LoadTran_BankTranAmount]  DEFAULT ((0)) FOR [BankTranAmount]
GO
ALTER TABLE [dbo].[LoadTran] ADD  CONSTRAINT [DF_LoadTran_BankTranBalance]  DEFAULT ((0)) FOR [BankTranBalance]
GO
ALTER TABLE [dbo].[LoadTran] ADD  DEFAULT ((0)) FOR [trancharge]
GO
ALTER TABLE [dbo].[LoadTran] ADD  CONSTRAINT [DF_LoadTran_ReqId]  DEFAULT ((0)) FOR [ReqId]
GO
ALTER TABLE [dbo].[LoadTran] ADD  DEFAULT ('') FOR [reason]
GO
ALTER TABLE [dbo].[LoadTran] ADD  DEFAULT ((0)) FOR [isRetailer]
GO
ALTER TABLE [dbo].[LoadTran] ADD  DEFAULT ((0)) FOR [TranNo]
GO
ALTER TABLE [dbo].[LoadTran] ADD  DEFAULT ((0)) FOR [ComBal]
GO
ALTER TABLE [dbo].[manualTopUP] ADD  DEFAULT ('') FOR [regno]
GO
ALTER TABLE [dbo].[manualTopUP] ADD  DEFAULT ('') FOR [fname]
GO
ALTER TABLE [dbo].[manualTopUP] ADD  DEFAULT ((0)) FOR [amount]
GO
ALTER TABLE [dbo].[manualTopUP] ADD  DEFAULT ('') FOR [mode]
GO
ALTER TABLE [dbo].[manualTopUP] ADD  DEFAULT ('') FOR [DDno]
GO
ALTER TABLE [dbo].[MaturityMst] ADD  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[MaturityMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [Doe]
GO
ALTER TABLE [dbo].[MaturityMst] ADD  DEFAULT ('') FOR [Comment]
GO
ALTER TABLE [dbo].[MaturityMst] ADD  DEFAULT ((0)) FOR [isGiven]
GO
ALTER TABLE [dbo].[MaturityMst] ADD  DEFAULT ('') FOR [tranBy]
GO
ALTER TABLE [dbo].[MaturityMst] ADD  DEFAULT ((0)) FOR [TranId]
GO
ALTER TABLE [dbo].[MessageMst] ADD  CONSTRAINT [DF_Table_1_MName]  DEFAULT ('') FOR [Mbody]
GO
ALTER TABLE [dbo].[MessageMst] ADD  CONSTRAINT [DF_MessageMst_AppmstID]  DEFAULT ('') FOR [AppmstID]
GO
ALTER TABLE [dbo].[MessageMst] ADD  CONSTRAINT [DF_MessageMst_Subject]  DEFAULT ('') FOR [Subject]
GO
ALTER TABLE [dbo].[MessageMst] ADD  CONSTRAINT [DF_MessageMst_Status]  DEFAULT ('') FOR [Status]
GO
ALTER TABLE [dbo].[MessageMst] ADD  CONSTRAINT [DF_MessageMst_MDate]  DEFAULT ('') FOR [MDate]
GO
ALTER TABLE [dbo].[MessagesMst] ADD  DEFAULT ('') FOR [MName]
GO
ALTER TABLE [dbo].[MessagesMst] ADD  DEFAULT ('') FOR [AppmstID]
GO
ALTER TABLE [dbo].[MessagesMst] ADD  DEFAULT ('') FOR [Subject]
GO
ALTER TABLE [dbo].[MessagesMst] ADD  DEFAULT ('') FOR [Status]
GO
ALTER TABLE [dbo].[MessagesMst] ADD  DEFAULT ('') FOR [MDate]
GO
ALTER TABLE [dbo].[MessagesMst] ADD  DEFAULT ('') FOR [MTime]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInv__Appms__247D636F]  DEFAULT ((0)) FOR [AppmstregNo]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInv__Amoun__257187A8]  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInv__Amoun__2665ABE1]  DEFAULT ((0)) FOR [Amount1]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInves__DOJ__2759D01A]  DEFAULT (CONVERT([varchar](23),dateadd(minute,(330),getutcdate()),(121))) FOR [DOJ]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInve__DOJ1__284DF453]  DEFAULT (CONVERT([varchar](23),dateadd(minute,(330),getutcdate()),(121))) FOR [DOJ1]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInv__Plant__2942188C]  DEFAULT ((0)) FOR [Plantype]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInv__Plant__2A363CC5]  DEFAULT ((0)) FOR [Plantype1]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF_ModifyInvestment_Multiplier]  DEFAULT ((0)) FOR [Multiplier]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF_ModifyInvestment_rno]  DEFAULT ((0)) FOR [rno]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF_ModifyInvestment_rno1]  DEFAULT ((0)) FOR [rno1]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInv__admin__2B2A60FE]  DEFAULT ((0)) FOR [admin]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInve__date__2C1E8537]  DEFAULT (CONVERT([varchar](23),dateadd(minute,(330),getutcdate()),(121))) FOR [date]
GO
ALTER TABLE [dbo].[ModifyInvestment] ADD  CONSTRAINT [DF__ModifyInv__Modif__2D12A970]  DEFAULT ((0)) FOR [ModificationCode]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_modifiedby]  DEFAULT ((0)) FOR [modifiedby]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_appmstregno]  DEFAULT ((0)) FOR [appmstregno]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_title1]  DEFAULT ((0)) FOR [title1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_title2]  DEFAULT ((0)) FOR [title2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_fname1]  DEFAULT ((0)) FOR [fname1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_fname2]  DEFAULT ((0)) FOR [fname2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_GTitle1]  DEFAULT ((0)) FOR [GTitle1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_GTitle2]  DEFAULT ((0)) FOR [GTitle2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_GName1]  DEFAULT ((0)) FOR [GName1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_GName2]  DEFAULT ((0)) FOR [GName2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_panno1]  DEFAULT ((0)) FOR [panno1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_panno2]  DEFAULT ((0)) FOR [panno2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_AcountNo1]  DEFAULT ((0)) FOR [AcountNo1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_AccountNo2]  DEFAULT ((0)) FOR [AccountNo2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_bankname1]  DEFAULT ((0)) FOR [bankname1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_Bankname2]  DEFAULT ((0)) FOR [Bankname2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_Branch1]  DEFAULT ((0)) FOR [Branch1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_Branch2]  DEFAULT ((0)) FOR [Branch2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_ifs1]  DEFAULT ((0)) FOR [ifs1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_ifs2]  DEFAULT ((0)) FOR [ifs2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_micr1]  DEFAULT ((0)) FOR [micr1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_micr2]  DEFAULT ((0)) FOR [micr2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_Address1]  DEFAULT ((0)) FOR [Address1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_Address2]  DEFAULT ((0)) FOR [Address2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_City1]  DEFAULT ((0)) FOR [City1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_City2]  DEFAULT ((0)) FOR [City2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_State1]  DEFAULT ((0)) FOR [State1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_State2]  DEFAULT ((0)) FOR [State2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_distt10]  DEFAULT ((0)) FOR [distt1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_PinCode1]  DEFAULT ((0)) FOR [PinCode1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_PinCode2]  DEFAULT ((0)) FOR [PinCode2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_PrimaryPhone1]  DEFAULT ((0)) FOR [PrimaryPhone1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_PrimaryPhone2]  DEFAULT ((0)) FOR [PrimaryPhone2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_Mobile1]  DEFAULT ((0)) FOR [Mobile1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_Mobile2]  DEFAULT ((0)) FOR [Mobile2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_nomname1]  DEFAULT ((0)) FOR [nomname1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_nomname2]  DEFAULT ((0)) FOR [nomname2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_nomrela1]  DEFAULT ((0)) FOR [nomrela1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_nomrela2]  DEFAULT ((0)) FOR [nomrela2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_userdob1]  DEFAULT ((0)) FOR [userdob1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_userdob2]  DEFAULT ((0)) FOR [userdob2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_password1]  DEFAULT ((0)) FOR [password1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_password2]  DEFAULT ((0)) FOR [password2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_activate1]  DEFAULT ((0)) FOR [activate1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_activate2]  DEFAULT ((0)) FOR [activate2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_epassword1]  DEFAULT ((0)) FOR [epassword1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_epassword2]  DEFAULT ((0)) FOR [epassword2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_reasontomodify]  DEFAULT ((0)) FOR [reasontomodify]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_type1]  DEFAULT ((0)) FOR [type1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF_modifyprofile_type2]  DEFAULT ((0)) FOR [type2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF__modifypro__email__7E6CC920]  DEFAULT ((0)) FOR [email1]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  CONSTRAINT [DF__modifypro__email__7F60ED59]  DEFAULT ((0)) FOR [email2]
GO
ALTER TABLE [dbo].[modifyprofile] ADD  DEFAULT (getdate()) FOR [doe]
GO
ALTER TABLE [dbo].[NewsMst] ADD  CONSTRAINT [DF_NewsMst_NewsMstinset]  DEFAULT (dateadd(minute,(330),getdate())) FOR [NewsMstinset]
GO
ALTER TABLE [dbo].[NewsMst] ADD  CONSTRAINT [DF__NewsMst__newstyp__2BE97B0D]  DEFAULT ('0') FOR [newstype]
GO
ALTER TABLE [dbo].[OrderDetail] ADD  CONSTRAINT [DF__OrderDetail__DOE__6D6238AF]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[OrderMst] ADD  CONSTRAINT [DF_OrderMst_DOE]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[OrderMst] ADD  CONSTRAINT [DF_OrderMst_isDeleted]  DEFAULT ((0)) FOR [isDeleted]
GO
ALTER TABLE [dbo].[PackSizeMst] ADD  CONSTRAINT [DF__PackSizeM__PackS__21B6055D]  DEFAULT ('0') FOR [PackSize]
GO
ALTER TABLE [dbo].[PackSizeMst] ADD  CONSTRAINT [DF__PackSizeMst__DOE__22AA2996]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[PackSizeMst] ADD  CONSTRAINT [DF__PackSizeM__Statu__239E4DCF]  DEFAULT ((1)) FOR [Status]
GO
ALTER TABLE [dbo].[PagePermissions] ADD  DEFAULT ('') FOR [userid]
GO
ALTER TABLE [dbo].[PagePermissions] ADD  DEFAULT ('') FOR [pagename]
GO
ALTER TABLE [dbo].[PagePermissions] ADD  DEFAULT ((0)) FOR [permission]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF_PaymentMst_senderid]  DEFAULT ((0)) FOR [senderid]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF_PaymentMst_profileid]  DEFAULT ((0)) FOR [profileid]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF_PaymentMst_pwd]  DEFAULT ((0)) FOR [pwd]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF__PaymentMs__Withd__1FCDBCEB]  DEFAULT (getdate()) FOR [WithdrawalDate]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF_PaymentMst_logoURL]  DEFAULT ((0)) FOR [logoURL]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF__PaymentMs__Compa__21B6055D]  DEFAULT ('0') FOR [CompanyHead]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF__PaymentMs__gmail__22AA2996]  DEFAULT ('0') FOR [gmailAccount]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  CONSTRAINT [DF__PaymentMs__gmail__239E4DCF]  DEFAULT ('0') FOR [gmailPassword]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  DEFAULT ((0)) FOR [SMSCredit]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  DEFAULT ('0') FOR [BulkProfileId]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  DEFAULT ('0') FOR [BulkSenderId]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  DEFAULT ('0') FOR [BulkPwd]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  DEFAULT ((0)) FOR [ROI1]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  DEFAULT ((0)) FOR [ROI2]
GO
ALTER TABLE [dbo].[PaymentMst] ADD  DEFAULT ((0)) FOR [ROI3]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF__PaymentTr__appms__3335971A]  DEFAULT ((0)) FOR [appmstid]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_OrbitNo]  DEFAULT ((0)) FOR [OrbitNo]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_CycleNo]  DEFAULT ((0)) FOR [CycleNo]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_directaAmt]  DEFAULT ((0)) FOR [directAmt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_JumboClub1Amt]  DEFAULT ((0)) FOR [JumboClub1Amt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_JumboClub2Amt]  DEFAULT ((0)) FOR [JumboClub2Amt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_JumboClub3Amt]  DEFAULT ((0)) FOR [JumboClub3Amt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_JumboClub4Amt]  DEFAULT ((0)) FOR [JumboClub4Amt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_JumboClub5Amt]  DEFAULT ((0)) FOR [JumboClub5Amt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_RoyaltyAmt]  DEFAULT ((0)) FOR [RoyaltyAmt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_PVBVAmt]  DEFAULT ((0)) FOR [PVBVAmt]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_TotalEarning]  DEFAULT ((0)) FOR [TotalEarning]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_HandlingCharges]  DEFAULT ((0)) FOR [HandlingCharges]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_CutAmount]  DEFAULT ((0)) FOR [CutAmount]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_AddAmount]  DEFAULT ((0)) FOR [AddAmount]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_Remarks]  DEFAULT (' ') FOR [Remarks]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_PaymentTranDraftNo]  DEFAULT (' ') FOR [PaymentTranDraftNo]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_othercharges]  DEFAULT ((0)) FOR [othercharges]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF__PaymentTr__payme__276EDEB3]  DEFAULT ((0)) FOR [paymentdisplay]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  CONSTRAINT [DF_PaymentTranDraft_sentSMS]  DEFAULT ((0)) FOR [sentSMS]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  DEFAULT ((0)) FOR [TranId]
GO
ALTER TABLE [dbo].[PaymentTranDraft] ADD  DEFAULT ((0)) FOR [franchiseid]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_PinNo]  DEFAULT ((0)) FOR [PinNo]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_PinPassword]  DEFAULT ((0)) FOR [PinPassword]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_isActivate]  DEFAULT ((0)) FOR [isActivate]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_paidAppMstId]  DEFAULT ((0)) FOR [paidAppMstId]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_RegNo]  DEFAULT ((0)) FOR [RegNo]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_ActiveDate]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [ActiveDate]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_JoinFor]  DEFAULT ((0)) FOR [JoinFor]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__pintype__1975C517]  DEFAULT ((0)) FOR [pintype]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__amount__1A69E950]  DEFAULT ((0)) FOR [amount]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__allotmen__1B5E0D89]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [allotmentdate]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__allotedt__1C5231C2]  DEFAULT ((0)) FOR [allotedto]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__plantype__220B0B18]  DEFAULT ((1)) FOR [plantype]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_mode]  DEFAULT ((0)) FOR [mode]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_TransferId]  DEFAULT ((0)) FOR [TransferId]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_chequeno]  DEFAULT ((0)) FOR [chequeno]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_bank]  DEFAULT ((0)) FOR [bank]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_branch]  DEFAULT ((0)) FOR [branch]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_depositedamount]  DEFAULT ((0)) FOR [depositedamount]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF_PINMst_remark]  DEFAULT ((0)) FOR [remark]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__ReceiptN__15502E78]  DEFAULT ((0)) FOR [ReceiptNo]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__tranid__1B13F4C6]  DEFAULT ((0)) FOR [tranid]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__transact__1C0818FF]  DEFAULT ((0)) FOR [transactionNo]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__pincount__1CFC3D38]  DEFAULT ((0)) FOR [pincount]
GO
ALTER TABLE [dbo].[PINMst] ADD  CONSTRAINT [DF__PINMst__producti__7A8729A3]  DEFAULT ((0)) FOR [productid]
GO
ALTER TABLE [dbo].[PINMst] ADD  DEFAULT ((0)) FOR [Alloted]
GO
ALTER TABLE [dbo].[PINMst] ADD  DEFAULT ((0)) FOR [paidstatus]
GO
ALTER TABLE [dbo].[PinTran] ADD  DEFAULT ((0)) FOR [Appmstid]
GO
ALTER TABLE [dbo].[PinTran] ADD  DEFAULT ((0)) FOR [paidAppmstid]
GO
ALTER TABLE [dbo].[PinTran] ADD  DEFAULT ((0)) FOR [PinSrNo]
GO
ALTER TABLE [dbo].[PinTran] ADD  DEFAULT (getutcdate()) FOR [dot]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeMst__doe__4B2D1C3C]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeM__Activ__4C214075]  DEFAULT ((1)) FOR [Active]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeM__Produ__4D1564AE]  DEFAULT ((0)) FOR [ProductType]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeM__Amoun__4E0988E7]  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeM__JoinF__4EFDAD20]  DEFAULT ((0)) FOR [JoinFor]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeMst__ROI__4FF1D159]  DEFAULT ((0)) FOR [ROI]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeM__cappi__50E5F592]  DEFAULT ((0)) FOR [capping]
GO
ALTER TABLE [dbo].[PlanTypeMst] ADD  CONSTRAINT [DF__PlanTypeM__DirIn__581D0306]  DEFAULT ((0)) FOR [DirIncome]
GO
ALTER TABLE [dbo].[PMoney] ADD  DEFAULT ((0)) FOR [Status]
GO
ALTER TABLE [dbo].[PMoney] ADD  DEFAULT ((0)) FOR [Place]
GO
ALTER TABLE [dbo].[PMoney] ADD  DEFAULT ((0)) FOR [product]
GO
ALTER TABLE [dbo].[ProductMst] ADD  CONSTRAINT [DF_ProductMst_ProductName]  DEFAULT ('') FOR [ProductName]
GO
ALTER TABLE [dbo].[ProductMst] ADD  CONSTRAINT [DF_ProductMst_Amount]  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[ProductMst] ADD  CONSTRAINT [DF_ProductMst_joinfor]  DEFAULT ((0)) FOR [joinfor]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT ((0)) FOR [RewardPoint]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT ((0)) FOR [isDeleted]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT ((0)) FOR [Tax]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT ((0)) FOR [ProductAmt]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT ((0)) FOR [TaxAmt]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT (' ') FOR [Photo]
GO
ALTER TABLE [dbo].[ProductMst] ADD  DEFAULT (' ') FOR [Description]
GO
ALTER TABLE [dbo].[ProfileImageMst] ADD  DEFAULT ('0') FOR [ImageName]
GO
ALTER TABLE [dbo].[ProfileImageMst] ADD  DEFAULT ('0') FOR [AppMstregno]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_Name]  DEFAULT ((0)) FOR [Name]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_RegNo]  DEFAULT ((0)) FOR [RegNo]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_mobileno]  DEFAULT ((0)) FOR [mobileno]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_query]  DEFAULT ('0') FOR [query]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_querydate]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [querydate]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_status]  DEFAULT ((0)) FOR [status]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_reply]  DEFAULT ('0') FOR [reply]
GO
ALTER TABLE [dbo].[querymaster] ADD  CONSTRAINT [DF_querymaster_replydate]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [replydate]
GO
ALTER TABLE [dbo].[RDate] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[RechargeMst] ADD  CONSTRAINT [DF__RechargeM__LoadT__681373AD]  DEFAULT ('') FOR [LoadType]
GO
ALTER TABLE [dbo].[RechargeMst] ADD  CONSTRAINT [DF__RechargeM__TranN__690797E6]  DEFAULT ((0)) FOR [TranNo]
GO
ALTER TABLE [dbo].[RechargeMst] ADD  CONSTRAINT [DF__RechargeM__TranS__69FBBC1F]  DEFAULT ((0)) FOR [TranStatus]
GO
ALTER TABLE [dbo].[RechargeMst] ADD  DEFAULT ((0)) FOR [IsRetailer]
GO
ALTER TABLE [dbo].[RechargeMst] ADD  DEFAULT ((0)) FOR [dstatus]
GO
ALTER TABLE [dbo].[RechargeMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [ardate]
GO
ALTER TABLE [dbo].[RechargeMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [disputedate]
GO
ALTER TABLE [dbo].[ReCommissionMst] ADD  CONSTRAINT [DF__ReCommiss__Commi__6A26A4A8]  DEFAULT ((0)) FOR [Commission]
GO
ALTER TABLE [dbo].[ReCommissionMst] ADD  CONSTRAINT [DF__ReCommiss__Commi__6B1AC8E1]  DEFAULT ((0)) FOR [CommissionMode]
GO
ALTER TABLE [dbo].[ReCommissionMst] ADD  CONSTRAINT [DF__ReCommissio__doe__6C0EED1A]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[ReCommissionMst] ADD  DEFAULT ((0)) FOR [OperatorId]
GO
ALTER TABLE [dbo].[ReCommissionMst] ADD  DEFAULT ((0)) FOR [OperatorName]
GO
ALTER TABLE [dbo].[ReCommissionMst] ADD  CONSTRAINT [DF_ReCommissionMst_Surcharge]  DEFAULT ((0)) FOR [Surcharge]
GO
ALTER TABLE [dbo].[RefundMst] ADD  DEFAULT ((0)) FOR [appmstid]
GO
ALTER TABLE [dbo].[RefundMst] ADD  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[RefundMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[RefundMst] ADD  DEFAULT ((0)) FOR [status]
GO
ALTER TABLE [dbo].[RefundMst] ADD  DEFAULT ('') FOR [AdminId]
GO
ALTER TABLE [dbo].[RegisterMobileNo] ADD  CONSTRAINT [DF__RegisterM__Appli__02D256E1]  DEFAULT ('0') FOR [ApplicantName]
GO
ALTER TABLE [dbo].[RegisterMobileNo] ADD  CONSTRAINT [DF__RegisterM__EMail__03C67B1A]  DEFAULT ('0') FOR [EMailId]
GO
ALTER TABLE [dbo].[RegisterMobileNo] ADD  CONSTRAINT [DF__RegisterM__Mobil__04BA9F53]  DEFAULT ('0') FOR [MobileNo]
GO
ALTER TABLE [dbo].[RegisterMobileNo] ADD  CONSTRAINT [DF__RegisterM__IPAdd__05AEC38C]  DEFAULT ('0') FOR [IPAddrss]
GO
ALTER TABLE [dbo].[RegisterMobileNo] ADD  CONSTRAINT [DF__RegisterMob__doe__06A2E7C5]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_requestNo]  DEFAULT ((0)) FOR [requestNo]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_AppmstRegno]  DEFAULT ((0)) FOR [AppmstRegno]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_Amount]  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_Amount1]  DEFAULT ((0)) FOR [Amount1]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_Status]  DEFAULT ((0)) FOR [Status]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_Status1]  DEFAULT ((0)) FOR [Status1]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_comment]  DEFAULT ((0)) FOR [comment]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_comment1]  DEFAULT ((0)) FOR [comment1]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_ReceiptNo]  DEFAULT ((0)) FOR [ReceiptNo]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  CONSTRAINT [DF_RequestMstModifications_ReceiptNo1]  DEFAULT ((0)) FOR [ReceiptNo1]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  DEFAULT (CONVERT([varchar](23),dateadd(minute,(330),getutcdate()),(121))) FOR [date]
GO
ALTER TABLE [dbo].[RequestMstModifications] ADD  DEFAULT ((0)) FOR [admin]
GO
ALTER TABLE [dbo].[ResetDates] ADD  DEFAULT ((0)) FOR [noOfEntry]
GO
ALTER TABLE [dbo].[rewardMst] ADD  DEFAULT ((0)) FOR [RewardID]
GO
ALTER TABLE [dbo].[rewardMst] ADD  DEFAULT ((0)) FOR [DaysLimit]
GO
ALTER TABLE [dbo].[rewardMst] ADD  DEFAULT ((0)) FOR [pairPoint]
GO
ALTER TABLE [dbo].[RPTran] ADD  DEFAULT (getdate()) FOR [doe]
GO
ALTER TABLE [dbo].[scanDocs] ADD  DEFAULT ((0)) FOR [UserId]
GO
ALTER TABLE [dbo].[scanDocs] ADD  DEFAULT ((0)) FOR [ImageName]
GO
ALTER TABLE [dbo].[scanDocs] ADD  DEFAULT ((0)) FOR [docType]
GO
ALTER TABLE [dbo].[scanDocs] ADD  CONSTRAINT [status]  DEFAULT ((0)) FOR [status]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_Tax]  DEFAULT ((0)) FOR [Tax]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_OC]  DEFAULT ((0)) FOR [OC]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__Compa__1367E606]  DEFAULT (' ') FOR [CompanyName]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__Compa__145C0A3F]  DEFAULT (' ') FOR [CompanyAddress]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__Websi__15502E78]  DEFAULT (' ') FOR [Website]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__Mobil__164452B1]  DEFAULT (' ') FOR [MobileNo]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__Phone__173876EA]  DEFAULT (' ') FOR [PhoneNo]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__Sende__1920BF5C]  DEFAULT (' ') FOR [SenderId]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__Profi__1A14E395]  DEFAULT (' ') FOR [ProfileId]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__SmsPa__1B0907CE]  DEFAULT (' ') FOR [SmsPassword]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF__SettingMs__SmsUr__1BFD2C07]  DEFAULT (' ') FOR [SmsUrl]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_LogoURL]  DEFAULT (' ') FOR [LogoURL]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_HeaderImageURL]  DEFAULT (' ') FOR [DealTitle]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_DealImageURL]  DEFAULT (' ') FOR [DealImageURL]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_ProductName]  DEFAULT ((0)) FOR [ProductName]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_Title]  DEFAULT ((0)) FOR [Title]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_PackSize]  DEFAULT ((0)) FOR [PackSize]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_Availability]  DEFAULT ((0)) FOR [Availability]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_Price]  DEFAULT ((0)) FOR [Price]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_MRP]  DEFAULT ((0)) FOR [MRP]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_BuyNow]  DEFAULT ((0)) FOR [BuyNow]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_showMobileNo]  DEFAULT ((0)) FOR [showMobileNo]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_showPhoneNo]  DEFAULT ((0)) FOR [showPhoneNo]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_PoweredBy]  DEFAULT (' ') FOR [PoweredBy]
GO
ALTER TABLE [dbo].[SettingMst] ADD  CONSTRAINT [DF_SettingMst_TermAndCondition]  DEFAULT ('') FOR [TermAndCondition]
GO
ALTER TABLE [dbo].[SettingMst] ADD  DEFAULT ('0') FOR [gmailPassword]
GO
ALTER TABLE [dbo].[SettingMst] ADD  DEFAULT ('') FOR [HeaderTitle]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_Appmstid]  DEFAULT ((0)) FOR [Appmstid]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_Amount]  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_iselegible]  DEFAULT ((0)) FOR [iselegible]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_DOE]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF__Sharemst__topup__1D4655FB]  DEFAULT ((1)) FOR [pintype]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF__Sharemst__netamt__300424B4]  DEFAULT ((0)) FOR [netamt]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF__Sharemst__receip__74994623]  DEFAULT ((0)) FOR [receiptno]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_EndAmount]  DEFAULT ((0)) FOR [EndAmount]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_selection]  DEFAULT ((0)) FOR [selection]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF__Sharemst__PlanTy__65370702]  DEFAULT ((0)) FOR [PlanType]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF__Sharemst__pinsrn__662B2B3B]  DEFAULT ((0)) FOR [pinsrno]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_ReqId]  DEFAULT ('') FOR [ReqId]
GO
ALTER TABLE [dbo].[Sharemst] ADD  DEFAULT ((0)) FOR [RestDays]
GO
ALTER TABLE [dbo].[Sharemst] ADD  DEFAULT ((0)) FOR [ReceiveStatus]
GO
ALTER TABLE [dbo].[Sharemst] ADD  DEFAULT ((0)) FOR [RewardPoint]
GO
ALTER TABLE [dbo].[Sharemst] ADD  DEFAULT ((0)) FOR [ROICount]
GO
ALTER TABLE [dbo].[Sharemst] ADD  CONSTRAINT [DF_Sharemst_TopupTime]  DEFAULT ((0)) FOR [TopupTime]
GO
ALTER TABLE [dbo].[SmsMst] ADD  DEFAULT ('0') FOR [Mobile]
GO
ALTER TABLE [dbo].[SmsMst] ADD  DEFAULT ('0') FOR [TextMsg]
GO
ALTER TABLE [dbo].[SmsMst] ADD  DEFAULT ('0') FOR [Response]
GO
ALTER TABLE [dbo].[SmsMst] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [Doe]
GO
ALTER TABLE [dbo].[Sub2CategoryMst] ADD  CONSTRAINT [DF_Sub2CategoryMst_DOE]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[Sub2CategoryMst] ADD  CONSTRAINT [DF__Sub2Catego__Statu__5812160E]  DEFAULT ((1)) FOR [Status]
GO
ALTER TABLE [dbo].[SubcatCoupon] ADD  CONSTRAINT [de_doe]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[SubcatCoupon] ADD  CONSTRAINT [de_status]  DEFAULT ((1)) FOR [Status]
GO
ALTER TABLE [dbo].[SubCategoryMst] ADD  CONSTRAINT [DF__SubCatego__CatId__77EAB41A]  DEFAULT ((0)) FOR [CatId]
GO
ALTER TABLE [dbo].[SubCategoryMst] ADD  CONSTRAINT [DF__SubCatego__SubCa__78DED853]  DEFAULT ('0') FOR [SubCatName]
GO
ALTER TABLE [dbo].[SubCategoryMst] ADD  CONSTRAINT [DF_SubCategoryMst_ImageName]  DEFAULT ((0)) FOR [ImageName]
GO
ALTER TABLE [dbo].[SubCategoryMst] ADD  CONSTRAINT [DF__SubCatego__Descr__79D2FC8C]  DEFAULT ('0') FOR [Description]
GO
ALTER TABLE [dbo].[SubCategoryMst] ADD  CONSTRAINT [DF__SubCategory__DOE__7AC720C5]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[SubCategoryMst] ADD  CONSTRAINT [DF__SubCatego__isDel__7BBB44FE]  DEFAULT ((1)) FOR [Status]
GO
ALTER TABLE [dbo].[tbl_AccessToken] ADD  CONSTRAINT [DF__tbl_AccessTo__Id__1980B20F]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ('0') FOR [AppMstRegNo]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [PairRank]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ('0') FOR [AwardName]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [AwardRank]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [minDate]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [maxDate]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [AwardAchivedDate]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [isGiven]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ('0') FOR [Comment]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [rewardid]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [leftPoint]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [RightPoint]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [totalpair]
GO
ALTER TABLE [dbo].[tblreward] ADD  DEFAULT ((0)) FOR [status]
GO
ALTER TABLE [dbo].[userModifyProfile] ADD  DEFAULT ((0)) FOR [activate1]
GO
ALTER TABLE [dbo].[userModifyProfile] ADD  DEFAULT ((0)) FOR [activate2]
GO
ALTER TABLE [dbo].[userModifyProfile] ADD  DEFAULT ('') FOR [email1]
GO
ALTER TABLE [dbo].[userModifyProfile] ADD  DEFAULT ('') FOR [email2]
GO
ALTER TABLE [dbo].[userModifyProfile] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [date]
GO
ALTER TABLE [dbo].[userModifyProfile] ADD  DEFAULT ((0)) FOR [tdsdeduction1]
GO
ALTER TABLE [dbo].[userModifyProfile] ADD  DEFAULT ((0)) FOR [tdsdeduction2]
GO
ALTER TABLE [dbo].[VPTran] ADD  CONSTRAINT [DF_VPTran_OutAmount]  DEFAULT ((0)) FOR [OutAmount]
GO
ALTER TABLE [dbo].[VPTran] ADD  DEFAULT ((0)) FOR [payoutno]
GO
ALTER TABLE [dbo].[VPTran] ADD  DEFAULT ((0)) FOR [DispDate]
GO
ALTER TABLE [dbo].[VPTran] ADD  DEFAULT ((0)) FOR [IsActive]
GO
ALTER TABLE [dbo].[VPTran] ADD  CONSTRAINT [DF_VPTran_UpDateTime]  DEFAULT ((0)) FOR [UpDateTime]
GO
ALTER TABLE [dbo].[VPTran] ADD  DEFAULT (getdate()) FOR [doe]
GO
ALTER TABLE [dbo].[VPTran] ADD  DEFAULT ((0)) FOR [dollar]
GO
ALTER TABLE [dbo].[WithdrawAmt] ADD  DEFAULT ((0)) FOR [TotalWithdraw]
GO
ALTER TABLE [dbo].[WithdrawAmt] ADD  DEFAULT ((0)) FOR [OnceWithdraw]
GO
ALTER TABLE [dbo].[WithdrawAmt] ADD  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [doe]
GO
ALTER TABLE [dbo].[WithdrawAmt] ADD  DEFAULT ((0)) FOR [TotalRecharge]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF_WithdrawMst_DOE]  DEFAULT (dateadd(minute,(330),getutcdate())) FOR [DOE]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF_WithdrawMst_Amount]  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF_WithdrawMst_BTCAmount]  DEFAULT ((0)) FOR [BTCAmount]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF_WithdrawMst_TDS]  DEFAULT ((0)) FOR [TDS]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF_WithdrawMst_Handling]  DEFAULT ((0)) FOR [Handling]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF_WithdrawMst_Dispatch]  DEFAULT ((0)) FOR [Dispatch]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF_WithdrawMst_Status]  DEFAULT ((0)) FOR [Status]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawM__WAmou__200DB40D]  DEFAULT ((0)) FOR [WAmount]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawM__BankN__2101D846]  DEFAULT ('') FOR [BankName]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawMst__DOT__21F5FC7F]  DEFAULT (getutcdate()) FOR [DOT]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawM__Payme__22EA20B8]  DEFAULT ('') FOR [PaymentMode]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawM__ispai__23DE44F1]  DEFAULT ((0)) FOR [ispaid]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawMst__PAN__24D2692A]  DEFAULT ('') FOR [PAN]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawM__TranI__25C68D63]  DEFAULT ((0)) FOR [TranId]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawM__payme__26BAB19C]  DEFAULT ('') FOR [paymentCause]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawMs__AcNo__7C3A67EB]  DEFAULT ((0)) FOR [AcNo]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawM__Branc__7D2E8C24]  DEFAULT ((0)) FOR [Branch]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawMs__MICR__7E22B05D]  DEFAULT ((0)) FOR [MICR]
GO
ALTER TABLE [dbo].[WithdrawMst] ADD  CONSTRAINT [DF__WithdrawMs__IFSC__7F16D496]  DEFAULT ((0)) FOR [IFSC]
GO
ALTER TABLE [dbo].[GiftCardMst]  WITH CHECK ADD  CONSTRAINT [FK_GiftCardMst_GiftCardMst] FOREIGN KEY([ID])
REFERENCES [dbo].[GiftCardMst] ([ID])
GO
ALTER TABLE [dbo].[GiftCardMst] CHECK CONSTRAINT [FK_GiftCardMst_GiftCardMst]
GO
/****** Object:  StoredProcedure [dbo].[AcceptRequest]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
create proc  [dbo].[AcceptRequest](@Srno int,@regno varchar(50),@flag int output)  
as  
begin  
 set @flag=0  
 if(exists(select srno from requestmst where srno=@Srno and Appmstregno=@regno and status=2))  
 begin  
  update requestmst set status=0 where srno=@Srno and Appmstregno=@regno and status=2  
  set @flag=1  
 end  
end





GO
/****** Object:  StoredProcedure [dbo].[acountdateroi]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[acountdateroi](@appmstid varchar(20),@payoutno int)                        
 as                            
           begin                 
     select paymentfromdate=convert(char(10),paymentfromdate,103),paymenttodate=convert(char(10),paymenttodate,103) from paymenttrandraftroi where appmstid=@appmstid and payoutno=@payoutno          
        
        
end





GO
/****** Object:  StoredProcedure [dbo].[ActivatePinRange]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE  [dbo].[ActivatePinRange](@StartPin varchar(50),@EndPin varchar(50)) AS    
declare @Start as int    
declare @End as int    
select @Start=Count(PinNo) from Pinmst where PinsrNo=@StartPin    
select @End=Count(PinNo) from Pinmst where PinsrNo=@EndPin    
update Pinmst set isActivate='1',ActiveDate=getdate() where isactivate='0' and PinsrNo between  @StartPin and @EndPin





GO
/****** Object:  StoredProcedure [dbo].[ActivateUser]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  --exec [RechargeUser] 'GBT784997','GBT424273','1234',500,'',''                         
--select * from CasueID WHERE appmstid=1                  
  --select * from sharemst WHERE APPMSTREGNO='GBT128215'                  
CREATE  proc[dbo].[ActivateUser](@SessionRegNo varchar(50),@RegNo nvarchar(50) ,   @SKey varchar(4)  ,                      
 @AmountType float,                          
@bal varchar(100) output,                          
@flag varchar(100) output)                           
as                          
                            
begin                          
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                             
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                           
set @Bbalance=0                          
set @rechargedAmt=0                          
set @estimateReAmt=0                           
set @getdate= dbo.GetServerDate()                          
set @Amount=@AmountType                          
set @jf=@Amount                          
                   
 if(@Amount is null or @Amount<=0)                            
 begin                            
 set @flag='Amount must be greater than zero.'                    
 return ;                           
 end                       
select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                          
select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                           
         
   DECLARE  @CheckT BIGINT      
    SET @CheckT =(SELECT Appmstpaid FROM AppMst  WHERE AppMstID=@appmstid)          
  IF @CheckT=1          
  BEGIN          
    set @flag='Account Allready Active'             
    set @bal= @Abalance        
    RETURN;                       
  END               
            
 if not exists(select appmstregno from appmst where appmstregno=@SessionRegNo and ePassword=@SKey )                                        
   begin                                        
    set @flag='Security Key not Match !'                                        
  return                                        
   end             
 Declare @CheckAmount bigint                         
 set  @CheckAmount= dbo.AcountCheck(@AmountType)                      
 if @CheckAmount=0                      
  begin                      
   set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'                   
   return ;                       
 end             
            
             
            
   DECLARE @CheckType int            
   SET @CheckType =(SELECT Isnull(count(appmstid),0) FROM sharemst  WHERE AppMstID=@appmstid)            
   IF @CheckType<>0            
    BEGIN            
     if(exists(select appmstregno from appmst where appmstregno=@regno))                            
     BEGIN                        
     select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                                           
     select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                                           
     if(@Bbalance>=@AmountType)                                                 
      BEGIN            
        set @Abalance=@Bbalance - @AmountType                                                                             
        insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                                          
        values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'Activate Account',@sharemstid+1)            
  insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                          
       values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)            
        set @bal= @Abalance                
        UPDATE APPMST SET Appmstpaid=1, VPBal=0 , jamount= @AmountType,   JoinFor= @AmountType  WHERE APPMSTID=@appmstid        
   set @flag='1'               
        set @bal= @Abalance                    
      END            
                 
     END              
    END            
 ELSE            
    BEGIN            
            
set nocount on                           
set xact_abort on                            
begin transaction                            
Begin try                        
   if(exists(select appmstregno from appmst where appmstregno=@regno))                            
    Begin                          
      select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                                           
      select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                                           
       if(@Bbalance>=@AmountType)                       
        begin                   
         set @Abalance=@Bbalance - @AmountType                                                                             
         insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                                          
         values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'Activate Account',@sharemstid+1)     
     
                      
                                                                   
         set @bal= @Abalance                      
        End                   
       Else                                                           
        Begin                                
         set @flag='Insuficient Balance !' --Insufficient Balance                         
         print @flag                           
         Rollback Transaction                                  
         Return                                
        End                     
                     
       insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                          
       values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)                        
                    
       set @sharemstid=IDENT_CURRENT('sharemst')                           
       select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                            
       update appmst set jamount=jamount+@AmountType,  Revoucher=@AmountType, JoinFor=JoinFor+@AmountType, ROIDate=getdate() where appmstregno=@regno                            
                          
      ---*************                            
       Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                           
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                            
       Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                          
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                          
       select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                            
       update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                            
       update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                           
       update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                            
       execute [DirectIncome] @AppMstId , @AmountType                          
		execute BinaryIncome  @regno ,@AmountType    
		execute BosterIncome @regno                           
       set @flag='1'                        
    END                
   ELSE            
   BEGIN            
    set @flag='Invalid User ID !'             
   END                
  END TRY                          
  begin catch                            
    set @flag=ERROR_MESSAGE()                          
  end catch                          
                            
                          
                   
                       
 if(@flag='1')                            
 commit transaction                            
 else                            
 rollback transaction             
 END            
                        
END
GO
/****** Object:  StoredProcedure [dbo].[ActivateUserAdmin]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  --exec [RechargeUser] 'GBT784997','GBT424273','1234',500,'',''                         
--select * from CasueID WHERE appmstid=1                  
  --select * from sharemst WHERE APPMSTREGNO='GBT128215'                  
create  proc[dbo].[ActivateUserAdmin]( @RegNo nvarchar(50) ,                       
 @AmountType float,                          
@bal varchar(100) output,                          
@flag varchar(100) output)                           
as                          
                            
begin                          
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                             
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                           
set @Bbalance=0                          
set @rechargedAmt=0                          
set @estimateReAmt=0                           
set @getdate= dbo.GetServerDate()                          
set @Amount=@AmountType                          
set @jf=@Amount                          
                   
 if(@Amount is null or @Amount<=0)                            
 begin                            
 set @flag='Amount must be greater than zero.'                    
 return ;                           
 end                       
select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                          
select @Sappmstid=appmstid from appmst where appmstregno=@sponsorid                           
         
   DECLARE  @CheckT BIGINT      
    SET @CheckT =(SELECT Appmstpaid FROM AppMst  WHERE AppMstID=@appmstid)          
  IF @CheckT=1          
  BEGIN          
    set @flag='Account Allready Active'             
    set @bal= @Abalance        
    RETURN;                       
  END               
            
            
 Declare @CheckAmount bigint                         
 set  @CheckAmount= dbo.AcountCheck(@AmountType)                      
 if @CheckAmount=0                      
  begin                      
   set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'                   
   return ;                       
 end             
            
             
            
   DECLARE @CheckType int            
   SET @CheckType =(SELECT Isnull(count(appmstid),0) FROM sharemst  WHERE AppMstID=@appmstid)            
   IF @CheckType<>0            
    BEGIN            
     if(exists(select appmstregno from appmst where appmstregno=@regno))                            
     BEGIN                        
                                           
             
               
		insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                          
       values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)            
        set @bal= @Abalance                
        UPDATE APPMST SET Appmstpaid=1, VPBal=0 , jamount= @AmountType,   JoinFor= @AmountType  WHERE APPMSTID=@appmstid        
		set @flag='1'               
        set @bal= @Abalance                    
               
                 
     END              
    END            
 ELSE            
    BEGIN            
            
set nocount on                           
set xact_abort on                            
begin transaction                            
Begin try                        
   if(exists(select appmstregno from appmst where appmstregno=@regno))                            
    Begin                          
                        
                          
                     
       insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                          
       values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)                        
                    
       set @sharemstid=IDENT_CURRENT('sharemst')                           
       select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                            
       update appmst set jamount=jamount+@AmountType,  Revoucher=@AmountType, JoinFor=JoinFor+@AmountType, ROIDate=getdate() where appmstregno=@regno                            
                          
      ---*************                            
       Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                           
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                            
       Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                          
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                          
       select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                            
       update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                            
       update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                           
       update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                            
       execute [DirectIncome] @AppMstId , @AmountType                          
   execute BinaryIncome  @regno ,@AmountType                           
       set @flag='1'                        
    END                
   ELSE            
   BEGIN            
    set @flag='Invalid User ID !'             
   END                
  END TRY                          
  begin catch                            
    set @flag=ERROR_MESSAGE()                          
  end catch                          
                            
                          
                   
                       
 if(@flag='1')                            
 commit transaction                            
 else                            
 rollback transaction             
 END            
                        
END
GO
/****** Object:  StoredProcedure [dbo].[ActivefastTrack]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
CREATE proc[dbo].[ActivefastTrack]    
(    
@appmstregno varchar(50),@amount float,@epassword varchar(50),@flag varchar(100) output    
)    
as    
set nocount on                                                                        
set xact_abort on                                                                                     
 begin transaction     
declare @appmstid int,@btranid int,@amt float,@getdate datetime=getutcdate(),@Abalance float,@FastTrackDate datetime     
if not exists(select appmstregno from appmst where appmstregno=@appmstregno and appmstpaid=1)    
begin    
 set @flag='Invalid User'    
  Rollback Transaction     
 return    
end    
if not exists(select epassword from appmst where appmstregno=@appmstregno and epassword=@epassword)    
begin    
set @flag='Invalid transaction password !'    
Rollback Transaction     
return    
end    
 select @FastTrackDate=FastTrackDate from appmst where appmstRegNo=@appmstregno        
  if(@FastTrackDate>=@getdate)    
 begin    
 set @flag='Invalid date time to active fasttrack date !'    
  Rollback Transaction     
 return    
 end      
 select @appmstid=appmstid from appmst  where appmstregno=@appmstregno and appmstpaid=1    
 set @amt=[dbo].getbalance(@appmstid)    
 if(@amt<@amount)    
 begin    
  set @flag='Invalid Amount,Amount must be greater than or equal to 50'    
   Rollback Transaction     
  return    
 end    
	 set @Abalance=@amt-@amount    
	 --add fasttrack date     
	  update appmst set fastt1=0, FastTrackDate=DateAdd(day, 7, @getdate) where appmstregno=@appmstregno    
	 --- end    
	 ----Insert into iptran    
	  insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                    
			values (@appmstid,17,@appmstid,@getdate,@amount,@Abalance,'Activate FastTrack',1,0)    
	 ---End    
	 set @flag='1'     
 if(@flag='1')    
 begin    
  commit Transaction     
 end    
 else    
 begin    
  Rollback Transaction     
 end    
     




GO
/****** Object:  StoredProcedure [dbo].[Addbrand]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[Addbrand](@BrandID int, @BrandName  varchar(50),@OutMsg varchar(100) output ,
@Userid varchar(50),
@IsActive char(1)  
)      
as      
begin
Declare @CT int
if @BrandID =0    
		 BEGIN 
		
		   Select @CT=IsNull(count(brand),0) from BrandMst Where brand=@BrandName and UserID=@Userid;
		   if @CT=0
		   BEGIN
			  INSERT INTO BrandMst (brand, Status, UserID) Values    
			  (@BrandName,  @IsActive, @UserID);
			   Set @OutMsg ='Brand add Successful' 
		   END   
		   
		   else 
		   
		   begin
		    Set @OutMsg ='Brand Allready in Active List'
		   end 
		    
		 END    
ELSE    
		 BEGIN 
		   Set @OutMsg ='Code In Database'
		      Select @CT=IsNull(count(brand),0) from BrandMst Where brand=@BrandName and UserID=@Userid and srno<>@BrandID;
 
		   if @CT=0
		   BEGIN   
				Update  BrandMst set brand=@BrandName,      
				Status=@IsActive, UserID=@UserID where srno=@BrandID;
				Set @OutMsg ='Brand Update Successfully' 
		   END  
		    else 
		   
		   begin
		    Set @OutMsg ='Brand Allready in Active List'
		   end  
END          
 end



 

GO
/****** Object:  StoredProcedure [dbo].[AddBTC]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE procedure [dbo].[AddBTC](@SrnoID int, @BTCType  varchar(50), @Address varchar(100), 
@OutMsg varchar(100) output    
)        
as        
begin  
Declare @CT int  
if @SrnoID =0      
   BEGIN   
     INSERT INTO BTCAddressAmt (AType, Address) Values      
     (@BTCType,  @Address);  
      Set @OutMsg ='Add Successful'   
     END     
  else 
     BEGIN     
    Update  BTCAddressAmt set Address=@Address,        
    AType=@BTCType where srno=@SrnoID;  
    Set @OutMsg ='  Update Successfully'   
    
         
 end  
  
  end
  
   
 
GO
/****** Object:  StoredProcedure [dbo].[Addcategory]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[Addcategory](@CatName  varchar(50),@Ptype varchar(100),@flag int output)              



    



as              



    



begin              



    



 set @flag=0                  



    



 set nocount on                                                                                                               



    



 set xact_abort on                    



    



 begin transaction                        



    



 if not exists(select catid from CategoryMst where CatName=@CatName )                    



    



 begin            



    



 insert into CategoryMst (CatName,protype)values(@CatName,@Ptype)       



    



 set @flag=11             



    



 end                      



    



 else                    



    



 begin         



    



   select @flag=Status from CategoryMst where CatName=@CatName                 



    



 end                     



    



 if(@flag=11)                                    



    



 commit transaction                                    



    



 else                                     



    



 rollback transaction                                            



    



              



    



end 







GO
/****** Object:  StoredProcedure [dbo].[AddEditGiftCardMst]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- [AddEditGiftCardMst] 1, 'AMZONE','CLP', 'Canada','E', 'HINEW', 'HI', '', '1', '100,200,250,300,350,400,500,1000,5000,' ,'', ''     
CREATE procedure [dbo].[AddEditGiftCardMst] (      
  @ID  bigint,      
  @PName varchar(100),      
  @Curency varchar(50),      
  @Country varchar(50),      
  @SendType char(10),      
  @Description nvarchar(MAX),      
  @Termscondition nvarchar(MAX),      
  @Photo varchar(100),      
  @IsActive char(10) ,      
  @Amount VARCHAR(500),    
  @iName VARCHAR(500) output,    
  @flag int output    
      
  )      
      
as       
begin       
      
      
create table #GiftCardAmountAmst(  Amount varchar(50))      
DECLARE @Number VARCHAR(500);      
DECLARE @charSpliter CHAR;      
SET @charSpliter = ',';      
SET @Amount = @Amount + @charSpliter;      
WHILE CHARINDEX(@charSpliter, @Amount) > 0      
BEGIN      
    SET @Number = SUBSTRING(@Amount, 0, CHARINDEX(@charSpliter, @Amount));      
    SET @Amount = SUBSTRING(@Amount, CHARINDEX(@charSpliter, @Amount) + 1, LEN(@Amount));      
 INSERT INTO #GiftCardAmountAmst (Amount)values(@Number)      
END;      
      
      
IF @ID=0      
 BEGIN      
   insert into GiftCardMst(ProductName, Curency,Country,SendType,Description,Termscondition,LastDate,IsActive )      
   values(@PName, @Curency,@Country,@SendType,@Description,@Termscondition,GETDATE(),@IsActive)         
   DECLARE @GiftCardid BIGINT      
   SET @GiftCardid =@@IDENTITY      
    
   set @iName=cast(@GiftCardid as varchar)+@Photo    
   update GiftCardMst set Photo= @iName where id=@GiftCardid       
   insert into GiftCardAmountAmst (GiftCardID,Amount)                        
   select  @GiftCardid, Amount from #GiftCardAmountAmst     
     
   set  @flag =11;    
 END      
ELSE      
 BEGIN      
   DELETE FROM  GiftCardAmountAmst WHERE GiftCardID=@ID      
   UPDATE GiftCardMst SET  ProductName=@PName, Curency=@Curency,Country=@Country,SendType=@SendType,      
   Description=@Description,Termscondition=@Termscondition,IsActive=@IsActive WHERE ID=@ID      
   insert into GiftCardAmountAmst (GiftCardID,Amount)                        
   select  @ID, Amount from #GiftCardAmountAmst     
    
   IF @Photo<>''      
   BEGIN      
    
   update GiftCardMst set Photo= cast(@ID as varchar)+'.jpg'  where id=@ID      
   END      
   set  @flag =22;    
 END      
    set @iName=cast(@GiftCardid as varchar)+'.jpg'       
    
  delete GiftCardAmountAmst where Amount=0    
DROP TABLE #GiftCardAmountAmst      
      
      
end       
       
        
    
  
  
  
  --SELECT * FROM GiftCardMst
GO
/****** Object:  StoredProcedure [dbo].[AddPackSize]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[AddPackSize](@PackSize  varchar(50),@flag int output)        



as        



begin        



 set @flag=0                      



 set nocount on                                                                                                         



 set xact_abort on              



 begin transaction                  



 if not exists(select * from PackSizeMst where PackSize=@PackSize )              



 begin        



 insert into PackSizeMst(PackSize)values(@PackSize)               



 set @flag=11       



 end     



else    



begin    



select @flag=Status from PackSizeMst where  PackSize=@PackSize 



end               



 if(@flag=11)                              



 commit transaction                              



 else                               



 rollback transaction                                       



end





GO
/****** Object:  StoredProcedure [dbo].[AddProduct]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE procedure  [dbo].[AddProduct]    
(@ProductName varchar(500),@Title varchar(50),@BrandName varchar(50),@CatId int,@SubCatName varchar(50) ,                              

@Sub2CatName varchar(50) ,@Price float,@MRP float,
@Quantity int,@PackSize int,@PackSizeUnitName varchar(50) ,@ImageName varchar(50), @RedeemPoint as float, 
 @userid varchar(50)    ,
 @Description varchar(max),@OfferType int,@flag int output,@iName varchar(50) output,@ProductId int output)    
 




as                                                                







begin                                                                







 set @flag=0                                                                              







 set nocount on    







 set xact_abort on                                                                      







 declare @Discount float ,@BrandId int ,@SubCatId int,@Sub2CatId int,@PackSizeUnitId int,@id varchar(50)                                                    

 
 set @Discount=0                                   



 set @BrandId=0                                   





 set @SubCatId=0                                      



 
 set @Sub2CatId=0                                 

  set @PackSizeUnitId=0                                      

  
 set @BrandId=0                                   

 

 set @SubCatId=0                                      







 set @Sub2CatId=0                                 







 set @PackSizeUnitId=0      
 if(@MRP<>0)                 
 begin           
  set @Discount= ((@MRP-@Price) / @MRP )*100     
 end 
 else
 begin
 set @MRP=0
  set @Discount=0
 end
                                                   

 if((not exists(select SubCatName from SubCategoryMst where  SubCatName=@SubCatName)) and @SubCatName !='')                              
  begin                                  
  
  insert into SubCategoryMst (CatId,SubCatName)values(@CatId,@SubCatName)                                   
   End                                
    select @SubCatId=SubCatId from SubCategoryMst where  SubCatName=@SubCatName    and @SubCatName!=''                                
	 if((not exists(select SubCatName from Sub2CategoryMst where  SubCatName=@Sub2CatName )) and @Sub2CatName !='' and @SubCatId<>0)                              
	  Begin                                  

 insert into Sub2CategoryMst (SubCatId,SubCatName)values(@SubCatId,@SubCatName)                                   
  End                                

   if((not exists(select brand from brandMst where  brand=@BrandName)) and @BrandName !='')                                
    begin                                  

	  insert into BrandMst(brand)values(@BrandName)                                             
 End                                
 
if((not exists(select PackSize from PackSizeMst where  PackSize=@PackSizeUnitName)) and @PackSizeUnitName !='')                              




begin                                  








 insert into PackSizeMst(PackSize)values(@PackSizeUnitName)                                             









end                                







select @BrandId=srno from BrandMst where  brand=@BrandName and @BrandName!=''                              







select @PackSizeUnitId=srno from PackSizeMst where  PackSize=@PackSizeUnitName  and @PackSizeUnitName!=''                              







      







select @Sub2CatId=Sub2CatId from Sub2CategoryMst where  SubCatName=@Sub2CatName  and @Sub2CatName!=''                                                         







 begin transaction                                       







      







 if not exists(select productid from ShopProductMst where ProductName=@ProductName and CatId=@CatId )    







 begin                       







      







--generate 12 digit id start                







  







set @id=newid()                







      







set @id=substring(@id,25,12)           







      







if(exists(select pid from ShopProductMst where pid=@id))       







      







begin              







      







set @id=newid()                







      







set @id=substring(@id,25,12)              







      







end                                             







      







--generate 12 digit id end                







      







 insert into ShopProductMst (pid,ProductName,Title,BrandId,CatId,SubCatId,Sub2CatId,

 Price,Mrp,discount,Quantity,PackSize,PackSizeUnitId,ImageName,Description,OfferType,RedeemPoints,userid

  )                              
  


 values(@id,@ProductName,@Title,@BrandId,@CatId,@SubCatId,@Sub2CatId,@Price,@MRP,@Discount,@Quantity,

 @PackSize,@PackSizeUnitId,@iName,@Description,@OfferType,@RedeemPoint, @userid)                                                  

      


set @ProductId=@@identity          







      







if(@ImageName!='0')                                                              







      







begin                         







      







                                                        







      







 set @iName=cast(@ProductId as varchar(50))+@ImageName                                                                







      







                    







      







update ShopProductMst set ImageName=@iName where productname=@ProductName   and CatId=@CatId                   







      







end                                                              







      







else                                                          







      







begin                                                              







      







 set @iName='0'                                       







      







end                             







      







 set @flag=11                                                                        







      







 end                                                                        







      







 else                                                             







      







 begin                                                                      







      







    select @flag=Status from ShopProductMst where ProductName=@ProductName                                                         







      







 end                               







      







 if(@flag=11)                                                                                      







      







 commit transaction                                                                                      







      







 else                               







      







 rollback transaction                                                                                              







      







end 



















GO
/****** Object:  StoredProcedure [dbo].[AddSub2Category]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE procedure [dbo].[AddSub2Category](@SubCatId int, @SubCatName  varchar(50),@flag int output)            

as            

begin            

 set @flag=0                          

 set nocount on                                                                                                             

 set xact_abort on                  

 begin transaction                      

 if not exists(select * from Sub2CategoryMst where SubCatName=@SubCatName and SubCatId=@SubCatId)                 

 begin                  

 insert into Sub2CategoryMst (SubCatId,SubCatName)values(@SubCatId,@SubCatName)                    

 set @flag=11                    

 end                    

 else                  

 begin                  

    select @flag=Status from Sub2CategoryMst where  SubCatName=@SubCatName and SubCatId=@SubCatId    

 end                   

 if(@flag=11)                                  

 commit transaction                                  

 else                                   

 rollback transaction                                          

            

end






GO
/****** Object:  StoredProcedure [dbo].[AddSubCategory]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE procedure [dbo].[AddSubCategory](@CatId int,@ImageName varchar(100), @SubCatName  varchar(50),@flag int output)            



as            



begin            



 set @flag=0                          



 set nocount on                                                                                                             



 set xact_abort on                  



 begin transaction                      



 if not exists(select subcatid from SubCategoryMst where SubCatName=@SubCatName and CatId=@CatId)                  



 begin                           



 insert into SubCategoryMst (CatId,SubCatName,ImageName)values(@CatId,@SubCatName,@ImageName)     



 set @flag=11            



 end                    



 else                  



 begin                  



 select @flag=Status from SubCategoryMst where SubCatName=@SubCatName  and CatId=@CatId     



 end                   



 if(@flag=11)                                  



 commit transaction                                  



 else                                   



 rollback transaction                                          



            



end












GO
/****** Object:  StoredProcedure [dbo].[AddToBank]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[AddToBank] (@appmstid int,@amount float,@remark varchar(50),@Payoutno int,@payTranId int) 
as 
begin 
declare @PmtTrnDrftId int,@Bbalance float,@BtranId int 

	
set @Bbalance=0 
if(@amount>0) 
begin      
 select @BtranId=max(BankTranId) from banktran where AppMstId=@appmstid                                                        
 select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@appmstid and BankTranId=@BtranId                                                   
 set @Bbalance = @Bbalance + isnull(@amount,0)                                                  
 insert into banktran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                                  
 BankTranRemarks,BankTranStatus,payoutno,pinsrno)                                                   
 values(@appmstid,3,@appmstid,dateadd(minute,330,getutcdate()),isnull(@amount,0),isnull(@Bbalance,0),@remark,1,@Payoutno,@payTranId)                                                  
end  
end





GO
/****** Object:  StoredProcedure [dbo].[AddToCart]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AddToCart] (@CustomerId varchar(50), @customername varchar(50), @addr varchar(100),@city varchar(50),@State varchar(50),@pinCode varchar(10), @mobile varchar(20),@email varchar(50),                  

@price float,@NetPrice float, @reddempoint float, @quantity int,@discount float,@NetAmt float,@products CartProductType readonly,@cId int,@CartId int output)                   

as               

begin               

 declare @getdate datetime,@query varchar(8000)                   

 set @getdate=dateadd(minute,330,getutcdate())                 

 --insert into nextid (customerid) values(@cId)                

 if(exists(select cartId from cartMst where CartID=@cId))                   

 begin               

         

  update cartmst set Price=@price,NetPrice=@NetPrice,Quantity=@quantity,Discount=@Discount,NetAmt=@NetAmt, redeempoint=@reddempoint,                  

  [Address]=@Addr,City=@City,[State]=@State,PinCode=@PinCode,MobileNo=@Mobile,EMailId=@EMail,customerId=@customerid, customername=@customername where cartid=@cId               

                

  update CartProductMst set isDeleted=1 where isDeleted=0 and cartid=@cId and Pid not in(select pid from @products)                  

  update CartProductMst set Quantity=n.pqty,Price=n.Price,TotalPrice=n.total from  @products n where  CartProductMst.cartid=@cId and               

  CartProductMst.pid=n.pid               

              

  insert into CartProductMst (pid,Quantity,Price,TotalPrice,CartId,doe)                  

  select pid,pQty,Price,Total,@cId,@getdate from @products where pid not in(select pid from CartProductMst where cartid=@cId)                  

    set @CartId=@cId              

 end                   

 else                   

 begin                 

                   

  insert into cartmst (CustomerId,customername, Price,NetPrice,redeempoint, Quantity,Discount,DiscountType,NetAmt,doe,[Address],City,[State],PinCode,MobileNo,EMailId)               

  values(@CustomerId, @customername, @price,@NetPrice,@reddempoint,  @quantity,@Discount,'0',@NetAmt,@getdate,@Addr,@City,@State,@PinCode,@Mobile,@EMail  )               

  SELECT @CartId=ident_current('cartmst')                

  insert into CartProductMst (PID,Quantity, Price, Redeempoint,TotalPrice,  CartId )                

  select PID,Pqty,Price, Redeempoint,Total,  @CartId from @products               

         

         

 --select * from CartProductMst        

  /*              

  set @query='insert into CartProductMst (ProductId,Quantity,Price,TotalPrice,CartId)                

  select productId,Quantity,Price,TotalPrice,' + convert(varchar(20),@CartId)+' where ProductMst where Pid in(select items from '+ schema_name()+               

  '.split('+@pids+'))'               

  select @query               

  --exec(@query)               

  */              

                

 end               

end  


GO
/****** Object:  StoredProcedure [dbo].[AdminExsist]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[AdminExsist](@uname varchar(50))      
      
as      
begin      
select username,password from controlmst where username=@uname    
      
    
end





GO
/****** Object:  StoredProcedure [dbo].[AdminExsisttype]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[AdminExsisttype](@uname varchar(50), @pwd varchar(50) )          
          
as          
begin   
  
If Exists(select username from controlmst where username=@uname AND password=@pwd)         
select username,password, Admintype from controlmst where username=@uname  And Password= @pwd     
          
        
end





GO
/****** Object:  StoredProcedure [dbo].[AdvisorsOfFranchise]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[AdvisorsOfFranchise](@regno varchar(50),@mindate datetime,@maxdate datetime,@search varchar(50))              
as                 
begin                                
--returns list of downline non franchise member of franchise id and their total investment, payout and fund balance               
declare @text varchar(max)    
  /*  
declare @appid int,@isfranchise bit        
SELECT @appid=FranchiseId FROM FranchiseMst WHERE FranchiseCode=@regno   
  */  
set @text='Select appmst.AppMstID,AppMst.AppMstRegNo,UPPER(AppMst.AppMstFName) as name,               
(select isnull(sum(amount),0) from Sharemst where Appmstid=appmst.AppMstID)as amount,convert(char(20),AppMst.AppMstDOJ,103) as doj,              
(select isnull(sum(DispachedAmt),0) from PaymentTranDraft where appmstid1=AppMst.AppMstID) as payout,'              
+SCHEMA_NAME()+'.getbalance(AppMst.AppMstID) as balance              
from appmst inner join franchisemst on appmst.franchiseid=franchisemst.franchiseid where franchisemst.franchiseCode   = '''+@regno+''' and  
(case when len('''+@search+''')=0 and CAST(FLOOR(CAST(appmstdoj  as float)) as datetime)     
between CAST(FLOOR(CAST(cast('''+convert(varchar(50),@mindate) +''' as datetime)  as float)) as datetime) and     
CAST(FLOOR(CAST(cast('''+convert(varchar(50),@maxdate) +''' as datetime)  as float)) as datetime) then 1   
when len('''+@search+''')>0 and (appmst.appmstregno='''+@search+''' or appmstfname like ''%'+@search +'%'') then 1 else 0 end)=1 Order by AppMstId'     
--select @text    
execute (@text)      
    
--Select AppMst.AppMstRegNo,UPPER(AppMst.AppMstFName) as name,appmst.jamount as jamount, convert(char(20),appmst.appmstdoj,103) as AppmstDOJ,                 
--(select isnull(SUM(DispachedAmt),0) from PaymentTranDraft where appmstid1=AppMst.AppMstID) as Payout,domain_forever.getbalance(AppMst.AppMstID)  as banktranbalance                   
-- from AppMst WHere FranchiseID  = @regno and IsFranchise=0 Order by AppMstId                                
end





GO
/****** Object:  StoredProcedure [dbo].[afterpayout]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[afterpayout]    
as    
begin    
update appmst set    
  
cbfl=bfl,cbfr=bfr,    
bfl=carryleft,bfr=carryright  
    
update appmst set totalnewleft=0,totalnewright=0,    
carryleft=0,carryright=0,    
npairrank=0    
end





GO
/****** Object:  StoredProcedure [dbo].[AllotPin]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[AllotPin](@Amount float,@ProductId int,@Remark varchar(100),@pintype int,@paidstatus int,@allotedto varchar(50),@mode varchar(50),

@TransactionNumber int,@bank varchar(50),@branch varchar(50),@depositedamount float,@fromPinSrNo int ,@toPinSrNo int,@NoOfPin int,@flag varchar(100) out)      

as                  

begin                  

	declare @appmstid int,@tranid int,@joinfor int, @BtranId int, @Bbalance float, @Amt float         

	select @appmstid=AppMstID from AppMst  where AppMstRegNo=@allotedto                  

	select @tranid=isnull(MAX(tranid),1) from PINMst                  

	set @tranid=@tranid+1              



	select @joinfor=joinfor from ProductMst where SrNo=@ProductId  

	select @Amt=Amount from PlanTypeMst where srno=@ProductId

	Set @Amt=isnull(@Amt,0)
	set @Amount=@Amt
	Set @Amt=(@Amt * @NoOfPin)

	select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@appmstid

	select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@appmstid and BankTranId=@BtranId                         

	If(@Bbalance>=@Amt)                             

	Begin                                              

		insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)

		values (@appmstid,17,@appmstid,dateadd(minute,(330),getutcdate()),@Amt,(@Bbalance - @Amt),'PURCHASE-PIN',1,@tranid)   

			

		update pinmst set amount=@Amount,remark=@Remark,JoinFor=1,productid=@ProductId,pintype=@pintype,

		allotmentdate=(dateadd(minute,(330),getutcdate())),allotedto=@appmstid,alloted=@appmstid,mode=@mode,transactionNo=@TransactionNumber,

		bank=@bank,branch=@branch,depositedamount=@depositedamount,tranid=@tranid,        

		isactivate=1,paidstatus=@paidstatus where pinsrno between @fromPinSrNo and @toPinSrNo  

		set @flag='Pin Alloted Successfully!'

	End                                            

	Else                                       

	Begin  

	    set @flag='Insuficient Balance !' --Insufficient Balance 

		Return              

	 End     

End


GO
/****** Object:  StoredProcedure [dbo].[AllPins]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[AllPins](@regno varchar(50))      
as      
begin      
 if EXISTS(select * from appmst where appmstregno=@regno)    
begin    
Select PinsrNo,Pinno,PinPassword,PaidAppMstId=case PaidAppMstId when 0 then 'UnUsed' when 1 then 'Used' end,Joinfor,Amount,RegNo,convert(char(20),allotmentdate,103) as allotmentdate,allotedto,UPPER(remark) AS REMARK,UPPER(mode) AS MODE,TransferId,UPPER(chequeno) AS chequeno,UPPER(bank) AS bank,UPPER(branch) AS branch,depositedamount from PinMst where allotedto=@regno order by pinsrno      
end    
end





GO
/****** Object:  StoredProcedure [dbo].[allproductamtsum]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[allproductamtsum](@mindate datetime,@maxdate datetime)  
as  
begin  
select sum(s.amount) as amount from sharemst s,appmst a where s.appmstid=a.appmstid and CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between @mindate and @maxdate   
  
end





GO
/****** Object:  StoredProcedure [dbo].[ApprovedBlogComments]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[ApprovedBlogComments](@status bit,@srno int)    
as    
begin    
update  blog  set status=@status where srno=@srno 
end





GO
/****** Object:  StoredProcedure [dbo].[BankBalance]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[BankBalance](@search varchar(50)= null,@adminUname varchar(50)=null)                
as   
begin   
              
select isnull(appmst.AppMstRegNo,'Admin') as userid,isnull(appmst.appmstfname,'Admin') as fname,                
 convert(varchar,banktrandate,103) as banktrandate,BanktranBalance   ,case when Reason='0' then '' else Reason end as reason          
from IPTran inner join (Select max(BankTranId) as BankTranId From IPTran group by appmstid) as n on IPTran.BankTranId=n.BankTranId         
left join AppMst on IPTran.AppMstId=AppMst.AppMstID where (case when @search is null then 1 when @search is not null and 
appmst.appmstregno like @search then 1 else 0 end)=1 order by AppMst.appmstid 

end





GO
/****** Object:  StoredProcedure [dbo].[BankTranDisplayByMonth]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[BankTranDisplayByMonth](@regno varchar(50),@month varchar(50),@year varchar(50))                                    
as                                    
declare @appmstid int                                    
select @appmstid=AppMstID from AppMst where AppMstRegNo=@regno;                                    
select case when f.FranchiseCode is not null and b.BankTranRemarks='USER TRANSFER' then f.FranchiseCode   
 when a.AppmstRegNo is not null  then a.AppmstRegNo   
 when b.paidAppMstId=-111 then 'Admin'
else '-'  end  
 as CRegNo, 
 case when f.FranchiseCode is not null and b.BankTranRemarks='USER TRANSFER' then f.Title+' '+ f.name 
 when a.AppmstRegNo is not null  then a.Appmsttitle+' '+a.appmstfname 
 when b.paidAppMstId=-111 then 'Admin' 
else '-'  end   as uname, 
a.appmstid, 
 convert(varchar(12),b.BankTranDate,103) as dt,b.BankTranAmount as Amt,b.BankTranBalance as blnce, b.Reason,                                 
  case                                  
 when b.BankTranRemarks = 'Transfer' and b.BankTranMode=1 then 'Transfer Outgoing'                                  
 when b.BankTranRemarks = 'Transfer' and b.BankTranMode=2 then 'Transfer Incoming'                                  
when  b.BankTranMode=31 then 'Transfer Coppertrenzs'                                  
 else b.BankTranRemarks end as Remarks,            
  case when b.BankTranMode in (2,3,100) then b.BankTranAmount else '' end as Incoming,    
 case when b.BankTranMode in (1,4,11) then b.BankTranAmount else '' end as Outgoing,                           
b.PinSrNo As pinsrNo from banktran b left join Appmst a                                    
 on b.paidAppMstID=a.Appmstid and b.BankTranRemarks in('Transfer','RECHARGE')  left join FranchiseMst f on b.paidAppMstId=f.FranchiseId  and b.BankTranRemarks='USER TRANSFER'                                     
where b.AppMstID=@appmstid and datepart(year,b.BankTranDate)>=@year and datepart(month,b.BankTranDate)>=@month  order by b.BankTranDate





GO
/****** Object:  StoredProcedure [dbo].[BankTranDisplayByYear]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[BankTranDisplayByYear](@regno varchar(50),@year varchar(50))                                
as                                
declare @appmstid int                                
select @appmstid=AppMstID from AppMst where AppMstRegNo=@regno;                                
select a.AppmstRegNo as CRegNo,a.Appmsttitle+space(1)+appmstfname as uname ,a.appmstid,                                
 convert(varchar(12),b.BankTranDate,103) as dt,b.BankTranAmount as Amt,b.BankTranBalance as blnce, b.Reason,                             
  case                              
 when b.BankTranRemarks = 'Transfer' and b.BankTranMode=1 then 'Transfer Outgoing'                              
 when b.BankTranRemarks = 'Transfer' and b.BankTranMode=2 then 'Transfer Incoming'                              
when  b.BankTranMode=31 then 'Transfer Coppertrenzs'                              
 else b.BankTranRemarks end as Remarks,                              
b.PinSrNo As pinsrNo from banktran b inner join Appmst a                                
 on b.paidAppMstID=a.Appmstid                                
    where b.AppMstID=@appmstid and convert(varchar(12),datepart(year,b.BankTranDate))>=@year   order by b.BankTranDate





GO
/****** Object:  StoredProcedure [dbo].[BankTranDisplayToDay]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[BankTranDisplayToDay](@regno varchar(50))                            
as                            
declare @appmstid int                            
select @appmstid=AppMstID from AppMst where AppMstRegNo=@regno;                            
select a.AppmstRegNo as CRegNo,a.Appmsttitle+space(1)+appmstfname as uname,a.appmstid,                            
 convert(varchar(12),b.BankTranDate,103) as dt,b.BankTranAmount  as Amt,b.BankTranBalance as blnce, b.Reason   ,                     
 case                        
 when b.BankTranRemarks = 'Transfer' and b.BankTranMode=1 then 'Transfer Outgoing'                        
 when b.BankTranRemarks = 'Transfer' and b.BankTranMode=2 then 'Transfer Incoming'            
when b.BankTranMode=31 then 'Transfer t'                        
 else b.BankTranRemarks end as Remarks,
 case when b.BankTranMode in (2,3,100) then b.BankTranAmount else '' end as Incoming,    
 case when b.BankTranMode in (1,4,11) then b.BankTranAmount else '' end as Outgoing,                         
 b.PinSrNo As pinsrNo from banktran b inner join Appmst a                            
 on b.paidAppMstID=a.Appmstid                            
--where b.AppMstID=@appmstid and convert(datetime,convert(varchar(12),b.BankTranDate,102))=convert(datetime,convert(varchar(12),dateadd(minute,330,getutcdate()),102)) order by b.BankTranDate                    
 where b.AppMstID=@appmstid and  CAST(FLOOR(CAST(b.BankTranDate as float)) as datetime) = CAST(FLOOR(CAST(dateadd(minute,330,getutcdate()) as float)) as datetime)  order by b.BankTranDate





GO
/****** Object:  StoredProcedure [dbo].[BinaryIncome]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
    
CREATE proc   [dbo].[BinaryIncome] @downid nvarchar(50),@jf int           
as            
BEGIN           
--1:1 plan        
--100 left and 100 right=1 pair           
set nocount on            
declare @SponsorID nvarchar(50) , @AppMstLeftTotal  float, @AppMstRightTotal float ,                                                                                
@pairrate float ,@min int,@leftspon int,@rightspon int,@BFL float ,@BFR float,@cl float,                                                                                
@cr float,@pair int ,@paircount int,@AppmstId int,@nbincome float,@regno nvarchar(50)                                                                                 
,@pairRank int ,@parentid int ,@cpl float,@cpr float ,@bcpr float ,@bcpl float ,@lefttotal float,                                                                                
@rightTotal float ,@bincome float,@paid int                       
declare @total int,@inc int,@a int,@b int,@c int ,@b1 int ,@binaryincome float,                                                                                
@ceiling float,@npair int,@upid varchar(50),@LR int,@iselegible int                                                                                           
select @appmstid=appmstid from appmst where appmstregno=@downid                                                                                                      
set @LR=0                                                                                                        
set @total=1                                                                                                        
set @inc=1                                                                                             
------leg count                                                                                        
declare binarycur cursor for select parentid from apptran where appmstid=@appmstid                                                                                   
open binarycur                                                                                  
fetch next from binarycur into @parentid                                                                                         
while @@Fetch_Status=0                                                                                                  
begin                                                                                      
select @SponsorID=SponsorId ,@AppMstLeftTotal=Appmstlefttotal,@AppMstRightTotal=Appmstrighttotal,                                                                                
@regno=AppMstRegNo,@BFL=BFL,@BFR=BFR,@bincome=bincome,@paid=appmstpaid from AppMst where AppMstID =@parentid                                                                                                     
set @nbincome=0       
set @npair=0          
set @pair=0           
set @pairRank=0       
set @cpl=0            
set @cpr=0            
set @iselegible=0       
select @pairRank=pairRank  from appmst where appmstregno=@regno                                                                                                       
select @leftspon=count(*) from appmst where  sponsorid=@regno and Appmstleftright=0 and appmstpaid=1                                                                                       
select @rightspon=count(*) from appmst where sponsorid=@regno  and Appmstleftright=1 and appmstpaid=1                           
                                        
if(@AppMstLeftTotal >=1 and  @AppMstRightTotal>=1 and @leftspon>=1 and @rightspon>=1)                           
begin                                                                  
 if (@AppMstLeftTotal > @AppMstRightTotal)                                                                            
   set @pair = @AppMstRightTotal                         
    if (@AppMstLeftTotal < @AppMstRightTotal)     
      set @pair = @AppMstLeftTotal        
 if (@AppMstLeftTotal = @AppMstRightTotal)                                                      
   set @pair = @AppMstLeftTotal                                                                            
end                                                                              
                                                                           
if(@pair>@pairrank and @pair>0  and @leftspon>=1 and @rightspon>=1 )                                                                                  
begin                                         
 select @pairrate=plan1 from paymentmst                                                   
 set @nPair=@pair-@pairrank                                                                                      
 update appmst set pairrank=@pair,npairrank=npairrank+@npair  where appmstregno=@regno                                                                                 
 update appmst set cpl=npairrank,cpr=npairrank  where  appmstregno=@regno                                                                             
 set @nbincome=(@pairrate*@nPair)/100                                                                                         
 update appmst set  bincome= bincome+@nbincome where appmstregno=@regno                                                                               
 if(@paid=1)                                                                                  
  set @paid=1                                                                                  
 else                                                                                
  set @paid=0           
  if(exists(select srno from Sharemst where Amount>0 and Appmstid=@parentid))          
  set @iselegible=1           
  else         
  set @iselegible=0         
 insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible,pairrank,effectdate)values(@parentid,@AppMstID,'b',@nbincome,@jf,@iselegible,@nPair, dbo.GetServerDate())                                                                                    
end           
update appmst set carryleft=appmstlefttotal-(pairrank),carryright=appmstrighttotal-(pairrank)       
where AppMstRegNo=@regno                                         
set @inc=@inc+1   
 --***************Calculate Reward   
 --exec CalculateReward  @regno                                                                                                      
fetch next  from binarycur into @parentid                                                                                            
end       
---------------end while----------------------------------       
close binarycur                                                                                  
deallocate binarycur                                                                                              
end   
  
  
  --select * from causeid
GO
/****** Object:  StoredProcedure [dbo].[BinaryIncome_temp]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[BinaryIncome_temp] @downid nvarchar(50),@jf int     
as      
BEGIN     
--1:1 plan      
set nocount on      
declare @SponsorID nvarchar(50) , @AppMstLeftTotal  float, @AppMstRightTotal float ,                                                                          
@pairrate float ,@min int,@leftspon int,@rightspon int,@BFL float ,@BFR float,@cl float,                                                                          
@cr float,@pair int ,@paircount int,@AppmstId int,@nbincome float,@regno nvarchar(50)                                                                           
,@pairRank int ,@parentid int ,@cpl float,@cpr float ,@bcpr float ,@bcpl float ,@lefttotal float,                                                                          
@rightTotal float ,@bincome float,@paid int                 
declare @total int,@inc int,@a int,@b int,@c int ,@b1 int ,@binaryincome float,                                                                          
@ceiling float,@npair int,@upid varchar(50),@LR int,@iselegible int,@getdate datetime                                                                                      
select @appmstid=appmstid from appmst where appmstregno=@downid                                                                                                
set @LR=0                                                                                                  
set @total=1                                                                                                  
set @inc=1                                                                                       
------leg count  
set @getdate='2013-08-15'                                                                                 
declare binarycur cursor for select parentid from apptran where appmstid=@appmstid                                                                             
open binarycur                                                                            
fetch next from binarycur into @parentid                                                                                   
while @@Fetch_Status=0                                                                                            
begin                                                                                
select @SponsorID=SponsorId ,@AppMstLeftTotal=Appmstlefttotal,@AppMstRightTotal=Appmstrighttotal,                                                                          
@regno=AppMstRegNo,@BFL=BFL,@BFR=BFR,@bincome=bincome,@paid=appmstpaid from AppMst where AppMstID =@parentid                                                                                               
set @nbincome=0                                                                                          
set @npair=0                                                                                                 
set @pair=0                                                                                            
set @pairRank=0                                                                                            
set @cpl=0                                                                                            
set @cpr=0                                                                                            
set @iselegible=0     
select @pairRank=pairRank  from appmst where appmstregno=@regno                                                                                                 
select @leftspon=count(*) from appmst where  sponsorid=@regno and Appmstleftright=0 and appmstpaid=1                                                                                 
select @rightspon=count(*) from appmst where sponsorid=@regno  and Appmstleftright=1 and appmstpaid=1                     
                                  
if(@AppMstLeftTotal >=1 and  @AppMstRightTotal>=1 and @leftspon>=1 and @rightspon>=1)                     
begin                                                            
 if (@AppMstLeftTotal > @AppMstRightTotal)                                                                      
   set @pair = @AppMstRightTotal                    
    if (@AppMstLeftTotal < @AppMstRightTotal)                                                                                 
      set @pair = @AppMstLeftTotal                                                                                    
 if (@AppMstLeftTotal = @AppMstRightTotal)                                                
   set @pair = @AppMstLeftTotal                                                                         
end                                                                        
                                                                     
if(@pair>@pairrank and @pair>0  and @leftspon>=1 and @rightspon>=1 )                                                                            
begin                                   
 select @pairrate=plan1 from paymentmst                                             
 set @nPair=@pair-@pairrank                                                                                
 update appmst set pairrank=@pair,npairrank=npairrank+@npair  where appmstregno=@regno                                                                           
 update appmst set cpl=npairrank,cpr=npairrank  where  appmstregno=@regno                                                                       
 set @nbincome=@pairrate*@nPair                                                                                   
 update appmst set  bincome= bincome+@nbincome where appmstregno=@regno                                                                         
 if(@paid=1)                                                                            
  set @paid=1                                                                            
 else                                                                          
  set @paid=0     
  if(exists(select srno from Sharemst where Amount>0 and Appmstid=@parentid))    
  set @iselegible=1     
  else   
  set @iselegible=0 
 insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible,pairrank,effectdate)
 values(@parentid,@AppMstID,'b',@nbincome,@jf,@iselegible,@nPair,@getdate)                                                                              
end     
update appmst set carryleft=appmstlefttotal-pairrank,carryright=appmstrighttotal-pairrank                                                                       
where AppMstRegNo=@regno                                   
set @inc=@inc+1                                                                                                  
fetch next  from binarycur into @parentid                                                                                      
end                     
---------------end while----------------------------------                                                                                    
close binarycur                                                                            
deallocate binarycur                                                                                        
end





GO
/****** Object:  StoredProcedure [dbo].[BinaryincomeCursor]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--[BinaryincomeCursor] '2019-01-19 17:26:55.797'
 
CREATE  proc[dbo].[BinaryincomeCursor] (@DateTime datetime)
as

begin
 
DECLARE @appmstregno VARCHAR(50), @AmountType float -- database name 
 
DECLARE db_cursor CURSOR FOR 
select appmstregno, Amount from Sharemst where  replace(convert(varchar, doe, 106),' ','-')  =replace(convert(varchar, @DateTime, 106),' ','-')
 

OPEN db_cursor  
FETCH NEXT FROM db_cursor INTO @appmstregno, @AmountType  

WHILE @@FETCH_STATUS = 0  
BEGIN  
       execute BinaryIncome  @appmstregno ,@AmountType
		--print @appmstregno
      FETCH NEXT FROM db_cursor INTO @appmstregno, @AmountType  
END 

CLOSE db_cursor  
DEALLOCATE db_cursor 

end
GO
/****** Object:  StoredProcedure [dbo].[BinaryIncomennnn]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
 --[RechargeUser]'youthe', 'testtest4'           
CREATE proc [dbo].[BinaryIncomennnn] @downid nvarchar(50),@jf float                           
as                             
BEGIN                   
--Binary Amount updated on 16-Oct-2012 11:26 AM from 500 to 600 per pair                        
--first pair 1:2/2:1  and rest 1:1 plan                          
declare @SponsorID nvarchar(50) , @AppMstLeftTotal  float, @AppMstRightTotal float ,                            
@pairrate int ,@min int,@leftspon int,@rightspon int,@BFL float ,@BFR float,@cl float,                                                                                
@cr float,@pair float ,@paircount int,@AppmstId int,@nbincome float,@regno nvarchar(50)                                                                                 
,@pairRank int ,@parentid int ,@cpl float,@cpr float ,@bcpr float ,@bcpl float ,@lefttotal float,                                                                                
@rightTotal float ,@bincome float,@paid int ,@ypin int                                                                                                   
declare @total int,@inc int,@a int,@b int,@c int ,@b1 int ,@binaryincome float,                                                                                
@ceiling float,@npair int,@upid varchar(50),@LR int                                            
declare @TotalRewardLeft float,@TotalRewardRight float,@RewardPoint float,@RewardPair int,@NewRewardPair int,@CauseRewardPoint float                                            
select @appmstid=appmstid from appmst where appmstregno=@downid                                                                                                      
set @LR=0                                                                                                        
set @total=1                                                                                                        
set @inc=1                                                              
select top 1 @pairrate=plan1 from paymentmst                                                                                      
declare binarycur cursor for select parentid from apptran with (NOLOCK) where appmstid=@appmstid                                                                                   
open binarycur                                                                                  
fetch next from binarycur into @parentid                                                                                         
while @@Fetch_Status=0                                                                                                  
begin                                             
    ---Reward pair rank                                            
    set @RewardPoint=0                                            
    set @TotalRewardLeft=0                                            
    set @TotalRewardRight=0                                            
    set @RewardPair=0                                            
    set @NewRewardPair=0                                          
    select @SponsorID=SponsorId ,@AppMstLeftTotal=appmstlefttotal,@AppMstRightTotal=appmstrighttotal,@regno=AppMstRegNo,@BFL=BFL,@BFR=BFR,@bincome=bincome         
    from AppMst WITH (NOLOCK)  where AppMstID =@parentid                                                                                                     
                                       
    set @nbincome=0                                          
    set @npair=0                                          
    set @pair=0                                          
    set @pairRank=0                                         
    set @cpl=0                                           
    set @cpr=0                                           
    select @pairRank=pairRank  from appmst WITH (NOLOCK) where appmstregno=@regno                                          
    select @leftspon=count(*) from appmst WITH (NOLOCK)  where  sponsorid=@regno and Appmstleftright=0 and appmstpaid=1                   
    select @rightspon=count(*) from appmst WITH (NOLOCK)  where sponsorid=@regno  and Appmstleftright=1 and appmstpaid=1                     
    if (@AppMstLeftTotal >= @AppMstRightTotal and @AppMstLeftTotal >=2  and @AppMstRightTotal >=1 )                          
    begin                                     
       if (@AppMstLeftTotal = @AppMstRightTotal)            
       begin                                                                                            
      set @pair = @AppMstLeftTotal-1                                                                           
       end                                                                 
       if (@AppMstRightTotal <> @AppMstLeftTotal)                                                                                              
      set @pair = @AppMstRightTotal                                     
    end                                       
    else if (@AppMstRightTotal > @AppMstLeftTotal and @AppMstRightTotal >=2 and @AppMstLeftTotal >=1 )                                                           
    begin                                                                                                
       set @pair = @AppMstLeftTotal                                            
    end                             
    if(@pair>@pairrank and @pair>0 and @leftspon>=1 and @rightspon>=1)                                                                  
    begin                           
     set @nPair=@pair-@pairrank                          
     update appmst set pairrank=@pair,npairrank=npairrank+@npair  where appmstregno=@regno                                                                                            
     set @nbincome= @nPair*@pairrate                                                                             
     update appmst set  bincome= bincome+@nbincome where appmstregno=@regno                                                                                                  
                         
      EXECUTE [dbo].[uspStarBinaryIncome] @parentid,@nPair,@AppMstID,@Jf                              
     --insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,effectdate, isElegible,pairrank)        
     --values(@parentid,@AppMstID,'b',@nbincome,@jf,getdate(),1,@nPair)         
                                                                                            
     update appmst set cpl=0,cpr=0 where pairrank=0 and appmstregno=@regno                                                                                           
     update appmst set cpl=appmstrighttotal+1,cpr=appmstrighttotal where appmstlefttotal>appmstrighttotal and pairrank>0 and appmstregno=@regno                         
     update appmst set cpl=appmstlefttotal,cpr=appmstlefttotal+1 where appmstlefttotal<appmstrighttotal and pairrank>0 and appmstregno=@regno                       
     --if left=right take 2 from left and 1 from right                          
     update appmst set cpl=appmstlefttotal,cpr=appmstlefttotal-1 where appmstlefttotal=appmstrighttotal and pairrank>0 and appmstregno=@regno                        
    end                        
     update appmst set carryleft=appmstlefttotal-appmstrighttotal-1,carryright=0 where appmstlefttotal>appmstrighttotal and pairrank>0 and appmstregno=@regno                         
     update appmst set carryleft=0,carryright=appmstrighttotal-appmstlefttotal-1 where appmstlefttotal<appmstrighttotal and pairrank>0 and appmstregno=@regno                       
     --if left=right take 2 from left and 1 from right                          
     update appmst set carryleft=appmstlefttotal-(pairrank+1),carryright=appmstrighttotal-pairrank where appmstlefttotal=appmstrighttotal and pairrank>0 and appmstregno=@regno        
     -- Exec binaryLevelIncome  @parentid, @nbincome        
    set @inc=@inc+1          
     
fetch next  from binarycur into @parentid                        
end ----------end while--                      
close binarycur                          
deallocate binarycur                        
end   
GO
/****** Object:  StoredProcedure [dbo].[binaryLevelIncome]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst where appmstregno='GL264284'


	--Exec binaryLevelIncome  4387, 900, 1
CREATE procedure   [dbo].[binaryLevelIncome] (@parentId INT  ,@samount float, @pno bigint, @max1 datetime)                     
as   
begin        


 DECLARE @levelIncome NUMERIC(18,2), @AID bigint ,@appmstidr bigint ,@b  float, @BtranId int,@Bbalance float  , @appmstlevel bigint      

 declare @Fastappmstid bigint, @secondappmstid bigint, @FirstAmount float, @SecondAmount float
 select  @Fastappmstid=  appmstid from appmst where appmstregno = (select SponsorID from appmst where AppMstID =@parentId)

 
 set @Fastappmstid  =isnull(@Fastappmstid,0)

 	
  select @secondappmstid=Isnull(appmstid,0) from appmst where appmstregno = (select SponsorID from appmst where AppMstID =@Fastappmstid)
   set @secondappmstid  =isnull(@secondappmstid,0)
	 
 if @Fastappmstid<>0
 	
 
		begin
			if @samount<>0 
			begin 
					set @BtranId=0          
					set @Bbalance=0 
					set @b=  @samount*5/100

	
					select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Fastappmstid                                                                              
					select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Fastappmstid and BankTranId=@BtranId  
					set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@b,0))  
					
					 
					insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno, TranId)                     
					values(@Fastappmstid,22,@parentId,@max1,isnull(@b ,0),isnull(@Bbalance,0),'Level',@pno, 1)    


					--if @secondappmstid<>0
					--begin
					
					--declare @BtranIdNew int,@NewBbalance float   ,   @bsecond float
					--set @BtranIdNew=0          
					--set @NewBbalance=0 
					--set @bsecond=  @samount*5/100
					--select @BtranIdNew=isnull(max(BankTranId),0) from VPTran where AppMstId=@secondappmstid                                                                              
					--select @NewBbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@secondappmstid and BankTranId=@BtranIdNew  
					--set @NewBbalance = convert(float,@NewBbalance) + convert(float,isnull(@bsecond,0))   
					
					--insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno, TranId)                     
					--values(@secondappmstid,22,@parentId,@max1,isnull(@bsecond ,0),isnull(@NewBbalance,0),'Level',@pno, 2)  


					--end
			end 
		end
 end

GO
/****** Object:  StoredProcedure [dbo].[blockID]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[blockID](@regno varchar(50),@pwd varchar(50),@reason varchar(max),@name varchar(50) output,@mobile varchar(50) output,@flag int output)        
as         
        
begin        
set @flag=0             
set @name='0'      
set @mobile='0'        
declare @count int  ,@id int       
select @count=count(*) from blockedID where appmstid=(select appmstid from appmst where appmstregno=@regno )                
select @id=appmstid,@name=appmsttitle+space(1)+appmstfname,@mobile=appmstmobile  from appmst where appmstregno=@regno        
 if(@count>0)              
 begin              
 set @flag=1        
 end              
 else              
 begin              
 insert into blockedID(appmstid,comment)values(@id,@reason)        
 update appmst set  appmstpassword= @pwd where appmstid=@id        
 set @flag=2        
                 
 end          
        
        
end





GO
/****** Object:  StoredProcedure [dbo].[BosterIncome]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
 --select * from sharemst          
 --select * from appmst          
  --[BosterIncome] 'AGF991270'          
          
 --select dbo.DirectSponsarcount(2,70000)          
CREATE procedure [dbo].[BosterIncome] @AppMstIdregno varchar(20)              
as                     
begin                     
          
          
declare @DatePaid    datetime, @DayCT bigint, @appmstregno varchar(20), @AppmstidSponsorID bigint,@AppMstId bigint ,  @sponsaridnew varchar(30) ,         
@SponsareDatePaid    datetime ,  @SDayCT bigint, @PAmount bigint, @SAmount bigint          
set @sponsaridnew=(select SponsorID from appmst  where appmstregno=@AppMstIdregno)         
        
set @sponsaridnew=(select SponsorID from appmst  where appmstregno=@AppMstIdregno)         
        
set @AppMstId=(select appmstid from appmst  where appmstregno=@sponsaridnew)         
         
set @DatePaid =(select  top 1  DOE from Sharemst where Appmstid=@AppMstId order by srno DESC)          
set @PAmount =(select  top 1  Amount from Sharemst where Appmstid=@AppMstId order by srno DESC)          
           
          
set @DayCT= datediff (D, @DatePaid, GETDATE())          
          
if @DayCT<=15          
begin          
Declare @DirectCheck bigint          
set @DirectCheck= dbo.DirectSponsarcount(@AppMstId, @PAmount)          
if @DirectCheck=1          
	begin          
	update Sharemst set ROICount=1 where Appmstid=@AppMstId          
	end          
       
          
end          
          
          
           
end                    
           
           
GO
/****** Object:  StoredProcedure [dbo].[BulkJoining]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
               
 CREATE proc [dbo].[BulkJoining] (@appmstREgNo varchar(50) ,@PlanType    bigint, @AmountType float,              
 @epassword varchar(50) ,              
 @flag VARCHAR(50) OUTPUT, @bal VARCHAR(50) OUTPUT)              
 as              
 begin              
 DECLARE @site_value INT;  DECLARE @tIME INT,@BtranId bigint , @appmstid bigint, @Bbalance float              
 declare @Amount float              
 set @Amount=0;              
      
     
    return
  declare @CT  int    
    
set @CT =(select Isnull(Count(*), 0) from AppMst where SponsorID=@appmstREgNo)    
  if @CT>=1    
    
begin    
  set @flag='Sorry! You can not sponsor more than 21 account.'     
  return ;      
end    
            
 set @appmstid= (select appmstid from appmst  WITH (NOLOCK) where appmstregno=@appmstREgNo)              
SET @site_value = 0;              
 IF @plantype=1              
 begin              
 set @tIME=19              
              
 set @Amount=@AmountType*20              
 end              
              
  IF @plantype=2              
 begin              
 set @tIME=39              
 set @Amount=@AmountType*40              
 end              
              
   IF @plantype=3              
 begin              
 set @tIME=59              
 set @Amount=@AmountType*60              
 end              
 IF @plantype=4              
 begin              
 set @tIME=79              
 set @Amount=@AmountType*80              
 end              
 IF @plantype=5              
  begin              
 set @tIME=99              
 set @Amount=@AmountType*100              
 end              
              
   if(@Amount is null or @Amount<=0)                
  begin                
  set @flag='Amount must be greater than zero.'                
  return ;               
  end                
              
  select @BtranId=isnull(max(BankTranId),0) from IPTran WITH (NOLOCK) where AppMstId=@appmstid                                                                                               
  select @Bbalance=isnull(BanktranBalance,0) from IPTran  WITH (NOLOCK)where appmstid=@appmstid and BankTranId=@BtranId                               
    if(@Bbalance>=@Amount)               
    begin              
         WHILE @site_value <= @tIME              
     BEGIN              
        Declare @appmstregnoL varchar(50), @appmstregnoR varchar(50)              
                    
       Declare @Name varchar(50), @Mobile varchar(50), @Email varchar(50), @PWD varchar(50), @City varchar(100), @State varchar(100)             
       select @Name=AppMstFName, @Mobile=AppMstMobile, @Email=email, @PWD=AppMstPassword,  @City=AppMstCity, @State=AppMstState from appmst WITH (NOLOCK) where appmstregno=@appmstREgNo              
                   
       SET @site_value = @site_value + 1                
                      
        exec [InsertData5Bulk] @State,@City, @appmstREgNo, @appmstREgNo, @Name,   @Mobile, @Email, 0,'122.0.1.1',@PWD,@appmstregnoL out,'',''              
        exec [RechargeUserBulk] @appmstREgNo,@appmstregnoL  , @AmountType              
        SET @site_value = @site_value + 1;              
              
                     
        exec [InsertData5Bulk] @State,@City,  @appmstREgNo, @appmstREgNo, @Name,   @Mobile, @Email,  1,'122.0.1.1',@PWD, @appmstregnoR out,'',''              
        exec [RechargeUserBulk] @appmstREgNo,@appmstregnoR  , @AmountType              
     END;              
              
       execute BinaryIncome  @appmstregnoL ,@AmountType               
      execute BinaryIncome  @appmstregnoR ,@AmountType               
      exec DiamondLevelincome              
   set @flag='1' --Insufficient Balance               
    end              
ELSE              
              
  Begin                 
                 
    set @flag='Insuficient Balance !' --Insufficient Balance                  
           
        Return                    
              
     End                  
              
              
               
               
 end 
GO
/****** Object:  StoredProcedure [dbo].[BulkJoiningLeft]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
           
 create proc [dbo].[BulkJoiningLeft] (@appmstREgNo varchar(50) ,@tIME INT    )              
 as              
 begin              
 DECLARE @site_value INT;  DECLARE @BtranId bigint , @appmstid bigint, @Bbalance float              
 declare @Amount float              
 set @Amount=0;              
SET @site_value = 0;         
     
     WHILE @site_value <= @tIME              
     BEGIN              
             
                    
       Declare @Name varchar(50), @Mobile varchar(50), @Email varchar(50), @PWD varchar(50), @City varchar(100), @State varchar(100)             
       select @Name=AppMstFName, @Mobile=AppMstMobile, @Email=email, @PWD=AppMstPassword,  @City=AppMstCity, @State=AppMstState from appmst WITH (NOLOCK) where appmstregno=@appmstREgNo              
     
	 
	 exec [InsertData5] @appmstREgNo, @appmstREgNo,   @Name, @Mobile, @Email, @City, @City,  0, '122.0.1.1','111','','',''   
	 
	     SET @site_value = @site_value + 1;              
            
               
 end 
 End
GO
/****** Object:  StoredProcedure [dbo].[BulkJoiningNew]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

 CREATE proc [dbo].[BulkJoiningNew] (@appmstREgNo varchar(50))                
 as                
 begin                
 DECLARE @site_value INT;  DECLARE @tIME INT,@BtranId bigint , @appmstid bigint, @Bbalance float                
 declare @Amount float                
 set @Amount=0;                
       
 
                  
        Declare @appmstregnoL varchar(50), @appmstregnoR varchar(50)                
                      
       Declare @Name varchar(50), @Mobile varchar(50), @Email varchar(50), @PWD varchar(50), @City varchar(100), @State varchar(100)               
       select @Name=AppMstFName, @Mobile=AppMstMobile, @Email=email, @PWD=AppMstPassword,  @City=AppMstCity, @State=AppMstState from appmst WITH (NOLOCK) where appmstregno=@appmstREgNo                
        exec [InsertData5Bulk] @State,@City, @appmstREgNo, @appmstREgNo, @Name,   @Mobile, @Email, 0,'122.0.1.1',@PWD,@appmstregnoL out,'',''                
		exec GenerateAdminFund  @appmstregnoL,12000,   'Admin' ,1     
		exec[RechargePowerLag] @appmstregnoL,12000,'',''
        exec [InsertData5Bulk] @State,@City,  @appmstREgNo, @appmstREgNo, @Name,   @Mobile, @Email,  1,'122.0.1.1',@PWD, @appmstregnoR out,'',''                
         exec GenerateAdminFund  @appmstregnoR, 12000,   'Admin',1  
		 exec [RechargePowerLag] @appmstregnoR,12000,'',''              
               
                
          
                 
 end 
GO
/****** Object:  StoredProcedure [dbo].[CalculateReward]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[CalculateReward] 'gl440759'    
--delete  from tblreward    
--select * from tblreward  order by srno DESC  
--(select isnull(awardrank,0) from tblreward where awardrank=1 and appmstregno='GR288236' )     
--select isnull(payoutno,0) from VPTran where payoutno=1 and AppMstId=2  and BankTranRemarks= 'Reward'    
CREATE proc[dbo].[CalculateReward]  @regno varchar(50)                             
as                             
begin                             
 set nocount on                             
  declare @getdate datetime,@minPoint int,@days int,@rank int,@awardName varchar(200),@rpLeft float, @rpRight float ,@AppmstID int ,@totalpair int  ,@appPaiddatetime datetime                  
  set @minPoint=0                             
  set @days=0                              
  set @rank=0         
  set @getdate=getutcdate()            
 set @rpLeft=0                               
 set @rpRight=0                               
 if(exists (select appmstid from appmst with (noLock) where    pairRank>=25 and appmstregno=@regno   and (appmstpaid=1 or appmstactivate=1)))                                    
 begin             
   select @rpLeft=AppMstLeftTotal,@rpRight=AppMstRightTotal,@AppmstID=AppmstID,@appPaiddatetime=appPaiddatetime from appmst where appmstregno=@regno                              
   --Start of 1st reward                                      
   select @minPoint=minPoint,@days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=1                                       
   --Start Insert the rewards                         
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1     
       
   --and (EffectDate>=      CAST(FLOOR(cast(@appPaiddatetime as float))as datetime)   --and  EffectDate<=CAST(FLOOR(cast(dateadd(day,@days,@appPaiddatetime) as float))as datetime)    
                  
                         
   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin  
   print 'rr'                                            
   --  insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
   --  select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
   --  @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,dateadd(day,@days,@appPaiddatetime) as MaxDate from causeid                               
   --  where Userid=@AppmstID and  @totalpair>=@minPoint       
   ----exec RewareINcomeVP @regno  ,@awardName, @rank       
   end                                
                     
   --Start of 2ND reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=2          
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2)       
   --Start Insert the rewards                    
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1     
       
                       
   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
   insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,dateadd(day,@days,@appPaiddatetime) as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint        
   exec RewareINcomeVP @regno  ,@awardName, @rank            
   end                
                      
   --Start of 3RD reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=3          
select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3)          
   --Start Insert the rewards                          
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                               
   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno))                                
begin                                              
   insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint          
   exec RewareINcomeVP @regno  ,@awardName, @rank         
   end                                    
                      
                       
   --Start of 4TH reward                              
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=4      
  select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4)        
   --Start Insert the rewards                             
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                              
   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
   insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint       
   exec RewareINcomeVP @regno  ,@awardName, @rank           
   end                                    
                      
                       
   --Start of 5TH reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=5      
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4,5)     
   --Start Insert the rewards                           
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                            
   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
   insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                 
     where Userid=@AppmstID and  @totalpair>=@minPoint        
   exec RewareINcomeVP @regno  ,@awardName, @rank           
   end                                     
                       
   --Start of 6TH reward                            
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=6      
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4,5,6)        
   --Start Insert the rewards                       
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                                 
   if(not exists(select AppMstRegNo from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
 insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint      
   exec RewareINcomeVP @regno  ,@awardName, @rank             
   end        
       
       
       
    --Start of 7TH reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=7     
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4,5,6,7)        
   --Start Insert the rewards                       
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                                 
   if(not exists(select AppMstRegNo from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
 insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint       
   exec RewareINcomeVP @regno  ,@awardName, @rank            
   end                        
       
       
                --Start of 8TH reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=8      
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4,5,6,7,8)        
   --Start Insert the rewards                       
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                                 
   if(not exists(select AppMstRegNo from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
 insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint       
   exec RewareINcomeVP @regno  ,@awardName, @rank            
   end         
       
    --Start of 9TH reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=9     
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4,5,6,7,8,9)        
   --Start Insert the rewards                       
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                                 
   if(not exists(select AppMstRegNo from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
 insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint      
   exec RewareINcomeVP @regno  ,@awardName, @rank             
   end           
       
       
    --Start of 10TH reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=10     
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4,5,6,7,8,9,10)        
   --Start Insert the rewards                       
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                                 
   if(not exists(select AppMstRegNo from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
 insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint       
   exec RewareINcomeVP @regno  ,@awardName, @rank            
   end          
       
       
    --Start of 11TH reward                                      
   select @days=DaysLimit,@rank=rewardRank,@awardName=pairpoint from rewardmst where rewardrank=11    
 select @minPoint=sum(minPoint) from rewardmst where rewardrank in (2,3,4,5,6,8,7,9,10,11)        
   --Start Insert the rewards                       
   select @totalpair=sum(pairrank) from causeid where paymentCause='b' and userid=@AppmstID  and  iselegible=1                                                 
   if(not exists(select AppMstRegNo from tblreward where awardrank=@rank and appmstregno=@regno))                                
   begin                                              
 insert into tblreward (AppMstRegNo,totalpair,AwardName,[status],AwardAchivedDate,AwardRank,leftPoint,RightPoint,minDate,MaxDate)                      
     select distinct @regno,@totalpair as TotalPair,@awardName as AwardName,0,Getutcdate() as MaxDate,                                       
     @rank as AwardRank,@rpLeft as leftTotal,@rpRight as rightTotal,@appPaiddatetime as MinDate,Getutcdate() as MaxDate from causeid                                
     where Userid=@AppmstID and  @totalpair>=@minPoint          
   exec RewareINcomeVP @regno  ,@awardName, @rank         
   end                                                                                     
       end --end if condition                                            
end     
    
    
GO
/****** Object:  StoredProcedure [dbo].[CalculateReward_DateWise_Apr]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[CalculateReward_DateWise_Apr](@minDate datetime,@maxDate datetime)                                                                                          
as                                                                                                        
begin        
declare @rewardId int                                                                                                    
set xact_abort on                                                                                                        
set nocount on                 
begin transaction                 
if(@minDate>@maxDate or @maxDate>DATEADD(MINUTE,330,GETUTCDATE()))         
begin         
commit transaction       
 return            
 end      
            
if(exists(select srno from  tblreward where minDate=@minDate and maxDate=@maxDate))              
begin      
commit transaction      
return              
end      
select @rewardId=isnull(MAX(rewardid),0) from RewardPostedMst     
update rewardMst set mindate =@minDate ,maxdate=@maxDate,doe =DATEADD(MINUTE,330,GETUTCDATE())      
insert into RewardPostedMst (RewardID,minDate,maxDate,doe,rewardRank,name,minPoint,maxPoint)    
select @rewardId,mindate,maxdate,DATEADD(MINUTE,330,GETUTCDATE()),rewardRank,name,minPoint,maxPoint from rewardMst     
    
/*              
insert into tblreward (AppMstRegNo,PairRank,AwardName,AwardRank,minDate,maxDate)           
select c.AppMstRegNo,c.TotalPair,                
case                 
when c.TotalPair between 150000 and (400000-1) then 'Rs 4000 or mobile'                
when c.TotalPair between 400000 and (750000-1) then 'Rs 10000 cash or 7" Tab'                
when c.TotalPair between 750000 and (1500000-1) then 'Rs 20000/ or tour'                
when c.TotalPair between 1500000 and (2500000-1) then 'Rs 40000/ or bike'                 
when c.TotalPair between 2500000 and (5000000-1) then 'Rs 100000 cash'                 
when c.TotalPair between 5000000 and (10000000-1) then 'Rs 250000/ or alto car'                 
when c.TotalPair between 10000000 and (20000000-1) then 'swift car'          
when c.TotalPair between 20000000 and (40000000-1) then 'XUV 500'            
when c.TotalPair between 40000000 and (80000000-1) then 'Mercedes Benz'             
when c.TotalPair>=80000000 then 'BMW'                
else '' end as AwardName,                
case                 
when c.TotalPair between 150000 and (400000-1) then 1                
when c.TotalPair between 400000 and (750000-1) then 2                
when c.TotalPair between 750000 and (1500000-1) then 3                
when c.TotalPair between 1500000 and (2500000-1) then 4          
when c.TotalPair between 2500000 and (5000000-1) then 5          
when c.TotalPair between 5000000 and (10000000-1) then 6        
when c.TotalPair between 10000000 and (20000000-1) then 7        
when c.TotalPair between 20000000 and (40000000-1) then 8        
when c.TotalPair between 40000000 and (80000000-1) then 9          
when c.TotalPair>=80000000 then 10                
else 0 end as AwardRank,                
@minDate,@maxDate from               
(select appmstid,appmstregno,appmstdoj,leftTotal,rightTotal,case when leftTotal<=rightTotal then leftTotal else rightTotal end as TotalPair from           
(select appmstid,appmstregno,convert(varchar,appmstdoj,103) as appmstdoj,          
(select isnull(SUM(amount),0) from Sharemst where Appmstid in (select AppMstID from AppTran where ParentId=AppMst.AppMstID and AppMstLeftRight=0) and CAST(FLOOR(cast(doe as float))as datetime) between @mindate and @maxdate) as leftTotal,          
(select isnull(SUM(amount),0) from Sharemst where Appmstid in (select AppMstID from AppTran where ParentId=AppMst.AppMstID and AppMstLeftRight=1) and CAST(FLOOR(cast(doe as float))as datetime) between @mindate and @maxdate) as rightTotal          
from appmst ) n where leftTotal>=150000 and rightTotal>=150000) as c        
*/   
commit transaction    
end





GO
/****** Object:  StoredProcedure [dbo].[changeincomeROI]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[changeincomeROI](@paymenttodate datetime)                                    
as                                      
select a.PaymentTranDraftId,a.appmstid,b.appmstregno,b.appmsttitle+space(1)+b.appmstfname as name,a.totalearning,a.dispachedAmt,paymentdisplay =                                    
case a.paymentdisplay        
when 0 then 'Hide'        
when 1 then 'Show'        
end                                    
from appmst b,paymenttrandraftroi a where a.appmstid=b.appmstregno and a.paymenttodate=@paymenttodate and a.dispachedAmt>0 order by a.appmstid





GO
/****** Object:  StoredProcedure [dbo].[changeincomeROITB]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[changeincomeROITB](@paymenttodate datetime)                                      
as                                        
select a.PaymentTranDraftId,a.appmstid,b.appmstregno,b.appmsttitle+space(1)+b.appmstfname as name,a.totalearning,a.dispachedAmt,paymentdisplay =                                      
case a.paymentdisplay          
when 0 then 'Hide'          
when 1 then 'Show'          
end                                      
from appmst b,paymenttrandraftroitb a where a.appmstid=b.appmstregno and a.paymenttodate=@paymenttodate and a.dispachedAmt>0 order by a.appmstid





GO
/****** Object:  StoredProcedure [dbo].[changeuserprofile]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[changeuserprofile](@address varchar(200),@lname varchar(50),@distt varchar(50),@nomname varchar(50),@phoneno varchar(50),@nomrela varchar(50),@dob varchar(50),@state varchar(50),@city varchar(50),@pincode varchar(50),@mobile varchar(50),@bankname varchar(50),@branch varchar(50),@accno varchar(50),@panno varchar(50),@emailid varchar(50),@regno varchar(50),@pwd varchar(50),@MICR varchar(50),@IFC varchar(50))  
  
as   
begin  
  
update AppMst set  AppMstAddress1=@address,AppMstLName=@lname,distt=@distt,nom_name=@nomname,AppMstPrimaryPhone=@phoneno,nom_rela=@nomrela,userdob=@dob,AppMstState=@state,AppMstCity=@city,AppMstPinCode=@pincode, AppmstMobile=@mobile ,BankName=@bankname,Branch=@branch,AcountNo=@accno,panno=@panno,email=@emailid,MICR=@MICR,IFC=@IFC where AppMstRegNo=@regno and AppMstPassword=@pwd  
  
end





GO
/****** Object:  StoredProcedure [dbo].[checkAdmin]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[checkAdmin](@uid varchar(50),@pwd varchar(50))              

as              

begin              

  select username,[password],admintype,lock,dateadd(minute,(330),getutcdate()) as logindate, name from controlmst where username=@uid and   password=@pwd            

end

 









GO
/****** Object:  StoredProcedure [dbo].[checkAdmintype]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[checkAdmintype](@username varchar(50))      
      
as      
begin      
    
select admintype from controlmst where username=@username    
      
    
end





GO
/****** Object:  StoredProcedure [dbo].[checkamount]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[checkamount](@id varchar(50),@srno varchar(50))  
as   
begin  
select srno,amount,convert(varchar(20),doe,103) as doe,pintype=case pintype when 1 then 'Joining' when 2 then 'TopUp' end from sharemst where appmstid in (@id) and srno in (@srno)
end





GO
/****** Object:  StoredProcedure [dbo].[CheckDailyCapping]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc[dbo].[CheckDailyCapping] @flag varchar(100) out 
as 
begin 
	--This procedure is used to set capping of daily basis , it resets the binary amt in cause id table 
	declare @getdate datetime,@payDate datetime,@appmstid int,@effectdate datetime,@topUpAmt float, 
	@deduction float,@binaryAmt float,@sno int,@tempAmt float,@tempDeduct float   
	set @getdate=DATEADD(minute,330,GETUTCDATE()) 
	if(exists(select payoutno from PayoutDate)) 
		select top 1 @payDate=PayToDate from PayoutDate order by payoutno desc 
	else 
		set @payDate=dateadd(d,-15,@getdate) 
	
	
	declare cur_Cap cursor for select causeid.userid,cast(floor(cast(effectdate as float)) as datetime) from causeid inner join sharemst on causeid.userid=sharemst.appmstid where causeid.paymentcause='b' and
	cast(floor(cast(effectdate as float)) as datetime) between cast(floor(cast(@payDate as float)) as datetime) and cast(floor(cast(@getdate as float)) as datetime) 
	group by causeid.userid,cast(floor(cast(effectdate as float)) as datetime) having isnull(sum(causeid.amount),0)>isnull(sum(sharemst.amount),0) 
	open cur_Cap 
	fetch next from cur_Cap into @appmstid,@effectdate 
	while @@FETCH_STATUS=0 
	begin 
		set @topUpAmt=0 
		set @deduction=0 
		set @binaryAmt=0 
		select @binaryAmt=ISNULL(SUM(amount),0) from CauseId where userid=@appmstid and PaymentCause='b' and cast(floor(cast(effectdate as float)) as datetime)=cast(floor(cast(@effectdate as float)) as datetime) 
		select top 1 @topUpAmt=ISNULL(SUM(amount),0) from Sharemst where Appmstid=@appmstid 
		
		set @deduction=case when @binaryAmt>@topUpAmt then @binaryAmt - @topUpAmt else 0 end 
		------Start of Inner Cursor --
		declare cur_inner cursor for select sno,amount from causeid where paymentcause='b' and userid=@appmstid and cast(floor(cast(effectdate as float)) as datetime)=cast(floor(cast(@effectdate as float)) as datetime) 
		order by sno desc 
		open cur_inner 
		fetch next from cur_inner into @sno,@tempAmt 
		while @@FETCH_STATUS=0 and @deduction>0 
		begin 
		
			set @tempDeduct=case when @deduction<=@tempAmt then @tempAmt-@deduction else @deduction-@tempAmt end 
			update causeid set EndAmount=EndAmount+@tempDeduct,Amount=Amount-@tempDeduct where sno=@sno and userid=@appmstid and PaymentCause='b' and  cast(floor(cast(effectdate as float)) as datetime)=cast(floor(cast(@effectdate as float)) as datetime) 
			set @deduction= @deduction-@tempDeduct 

			fetch next from cur_inner into @sno,@tempAmt 
		end 
		close cur_inner 
		deallocate cur_inner 
		------End of Inner Cursor -- 
		
		fetch next from cur_Cap into @appmstid,@effectdate 
	end 
	close cur_Cap 
	deallocate cur_Cap 
	set @flag='1' 
end





GO
/****** Object:  StoredProcedure [dbo].[checkout]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[checkout](@cartID int,@CustomerId varchar(50),@flag varchar(100) output)       
as       
begin       
      
set nocount on       
      
if(not exists(select CartID from CartMst where CartID=@cartID and OrderStatus=0))      
begin      
 set @flag='Please select some items into cart.'       
 return ;      
end       
if(not exists(select appmstregno from appmst where appmstregno=@customerId and appmstactivate=1))       
begin      
 set @flag='Please login first, may be your session is expired.'       
 return ;      
end       
set xact_abort on       
begin transaction       
 begin try       
    
 update shopproductmst set shopproductmst.Quantity=shopproductmst.Quantity-cartmst.Quantity from cartProductMst inner join cartmst on cartmst.cartid=cartProductMst.cartid      
   where cartProductMst.PID=shopproductmst.pid and cartmst.cartid=@cartId       
 insert into ordermst(CartId,CustomerId)       
 values(@cartId,@CustomerId)       
 update cartmst set OrderStatus=1 where cartId=@Cartid and OrderStatus=0       
 set @flag='1'       
 commit transaction       
 end try       
 begin catch       
  rollback transaction       
 end catch       
      
end    

GO
/****** Object:  StoredProcedure [dbo].[checkpayoutdate]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[checkpayoutdate]                                          
as                                              
begin             
            
            
declare @payDate datetime       
        
        
select TOp 1 Convert( varchar(10),DATEADD(minute, 330, getutcdate()),103) AS Currentdate       
 end





GO
/****** Object:  StoredProcedure [dbo].[CheckPinSrNo]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[CheckPinSrNo]      
(      
   @chkpinsrno int      
)      
as      
select PinsrNo from pinmst where PinsrNo=@chkpinsrno





GO
/****** Object:  StoredProcedure [dbo].[checkplantype]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[checkplantype](@srno int,@id int)                
as begin                
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstid =@id    )                  
begin                 
set nocount on                                                                             
set xact_abort on                                                                                              
begin transaction                     
select s.appmstid,a.appmstregno,a.appmsttitle+space(2)+a.appmstfname as name,Producttype=case a.Producttype when 1 then 'Plan A' when 2 then 'Plan B' when 3 then 'Plan C' when 4 then 'Plan D'when 5 then 'Plan E' end,s.amount,plantype as pType,plantype =case s.plantype when 1 then 10000 when 2 then 15000 when 3 then 25000 when 4 then 500000 end,convert(varchar(20),s.doe,103)        
 as date,s.srno,s.receiptno from sharemst s,appmst a where s.appmstid=a.appmstid and s.appmstid=@id and s.srno=@srno      
commit transaction                 
end                 
end





GO
/****** Object:  StoredProcedure [dbo].[checkpwd]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[checkpwd] (@username varchar(50),@password varchar(50))  
  
as   
  
begin  
  if exists (select appmstregno from appmst where appmstregno=@username    )
begin
select  appmstPassword from appmst where appmstPassword=@password and    
appmstregno=@username  
  end
end





GO
/****** Object:  StoredProcedure [dbo].[CheckROIDoubleCoundown]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--[CheckROIDoubleCoundown] 'etradedesk'
CREATE  procedure  [dbo].[CheckROIDoubleCoundown] @sid varchar(50)                                          
as begin 
 
SELECT FORMAT(DATEADD(day, 2, appmstDOJ), 'dd MMM yyyy HH:mm:ss.fffffff') as ROID , 


 case
        when DATEADD(day, 2, appmstDOJ) > getdate() then 0
        else 1
    end as Rstatus

  from  appmst    
   where appmstregno =@sid    
                               
end 

GO
/****** Object:  StoredProcedure [dbo].[CheckSidAndUname]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[CheckSidAndUname] @SID varchar(50),@uname varchar(50),@flag int output      
as      
BEGIN      
 declare @totalid int      
 set @flag=0      
 if exists( select appmstregno  from AppMst where AppMstRegNo=@SID)
  begin
		if exists( select appmstregno  from AppMst where AppMstLogin=@uname)
		  begin
		  set @flag=2     
		  end 
		else
		  begin
		  set @flag=11
		  end
  end 
  else
  begin
  set @flag=1
  end 
 return @flag        
end





GO
/****** Object:  StoredProcedure [dbo].[CheckSponsor1]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[CheckSponsor1] 'GBT0000001'  
CREATE  procedure  [dbo].[CheckSponsor1] @sid varchar(50)                                        
as begin                                               
select Type, AppMstTitle,gtitle, appmstpassword,AppMstFName,AppMstLName,AppMstAddress1,epassword,nom_name, nom_rela ,AcountNo ,         
GName,case when  not exists (select isnull(Image,'0')            
 from imagesmst where AppMstRegNo=AppMst.AppMstRegNo) then '0' else (select isnull(Image,'0') from imagesmst where AppMstRegNo=AppMst.AppMstRegNo) end  as photo,            
 AppMstCity,AppMstState, AppMstMobile,AppMstPinCode,AppMstPrimaryPhone,appmstlefttotal,appmstrighttotal,appmstactivate,             
 email,distt,CONVERT(VARCHAR(10), userdob, 103) as userdob,tdsdeduction,type  ,isEdited ,            
 AppMstRegNo,convert(varchar(50),AppMstDOJ,103) as AppMstDOJ  ,case AppMstLeftRight when 0 then 'Left' when 1 then  'Right' else '' end as AppMstLeftRight,SponsorID                    
from AppMst(nolock)  where AppMstRegNo =@sid                                              
end     
    
    
    
    
GO
/****** Object:  StoredProcedure [dbo].[CheckStartDate]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
       
CREATE procedure  [dbo].[CheckStartDate]  @flag int output                  
as                    
begin                    
declare @d1 int                    
set @flag=0                    
set @d1=(select ROI1 from paymentmst  )      
       
 set @flag=1               
                   
end        
      
      
        
        
        
GO
/****** Object:  StoredProcedure [dbo].[checkSuperAdmin]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[checkSuperAdmin](@usernme varchar(50),@password varchar(50))      
      
as      
begin      
select username,password from controlmst where username=@usernme and password=@password and admintype='sa'    
      
    
end





GO
/****** Object:  StoredProcedure [dbo].[checkUser]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[checkUser](@sponsorId varchar(50),@STPass varchar(50),@UserId varchar(50),@flag varchar(50) out)    
as    
Begin     
Set @flag='0'    
 If(exists(select appmstid from AppMst where AppMstRegNo=@sponsorId and ePassword=@STPass))    
 Begin    
  If(not exists(select appmstid from AppMst where AppMstRegNo=@UserId))    
  Begin    
   Set @flag='1'    
  End    
  else    
  Set @flag='User id already exist. Please try another userid.'    
 End    
 else    
 Set @flag='Invalid sponsor id or Password.'    
End




GO
/****** Object:  StoredProcedure [dbo].[checkuserEpwd]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[checkuserEpwd] (@username varchar(50))              
              
as               
              
begin              
  if exists (select appmstid from AppMst where AppMstRegNo=@username    )            
begin            
select   ePassword,AppMstTitle+space(1)+AppMstFName as uname,appmstMobile from appmst where appmstregno=@username              
  end            
end





GO
/****** Object:  StoredProcedure [dbo].[CheckUserId2]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[CheckUserId2] (@idno varchar(50))     
as begin                  
select PaymentTranDraftId as payid,DispachedAmt, payoutno,tds,HandlingCharges,TotalEarning, appmstid,appmstregno,          
convert(varchar,PaymentToDate,103) as tdate   
                
from PaymentTranDraft(nolock)  where AppMstRegno=@idno            
and paymentdisplay=1 order by payoutno asc           
end





GO
/****** Object:  StoredProcedure [dbo].[CheckUserId2ROI]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[CheckUserId2ROI] (@idno varchar(50))                       
as begin      
select paymenttrandraftid,paymenttrandraftno,DispachedAmt, payoutno,tds,HandlingCharges,TotalEarning, appmstid1,convert(varchar,paymentfromdate,101) as fdate,        
convert(varchar,paymenttodate,101) as tdate,convert(varchar,PaymentFromDate,103) +'-'+ convert(varchar,paymenttodate,103) as paymenttodate,      
convert(varchar,maturitydate,103) as maturitydate,      
    
case when payoutno>=6 and isnull(paid_status,0)=0 and maturitydate<=dateadd(minute,330,getutcdate()) then 'Transfer'       
when  isnull(paid_status,0)=1  then 'Transfered' else '' end as tranText,  
   
case when payoutno>=6 and isnull(paid_status,0)=0 and maturitydate<=dateadd(minute,330,getutcdate()) then 'Withdraw'  
when  isnull(paid_status,0)=2  then 'Withdrawn' else '' end as WithText      
    
from paymenttrandraftROI  where appmstid =@idno          
and paymentdisplay=1 order by payoutno asc                      
end





GO
/****** Object:  StoredProcedure [dbo].[CheckUserId2ROITB]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[CheckUserId2ROITB] (@idno varchar(50)) 
as     
begin   
select paymenttrandraftid,DispachedAmt, payoutno,tds,HandlingCharges, totalearning, appmstid1,convert(varchar,paymentfromdate,101) as fdate,   
convert(varchar,paymenttodate,101) as tdate,convert(varchar,PaymentFromDate,103) +'-'+ convert(varchar,paymenttodate,103) as paymenttodate,
convert(varchar,maturitydate,103) as maturitydate,      
    
case when payoutno>=2 and isnull(paid_status,0)=0 and maturitydate<=dateadd(minute,330,getutcdate()) then 'Transfer'       
when  isnull(paid_status,0)=1  then 'Transfered' else '' end as tranText,  
   
case when payoutno>=2 and isnull(paid_status,0)=0 and maturitydate<=dateadd(minute,330,getutcdate()) then 'Withdraw'  
when  isnull(paid_status,0)=2  then 'Withdrawn' else '' end as WithText      
    
 from paymenttrandraftroitb p inner join appmst a   
on a.appmstid=p.appmstid1 and p.appmstid =@idno 
and paymentdisplay=1   
order by payoutno asc                    
end





GO
/****** Object:  StoredProcedure [dbo].[CheckWithdraw]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE proc  [dbo].[CheckWithdraw] (@regno varchar(50))
 
 
as

begin

declare @appmstid bigint , @CT bigint ,@TD bigint

set @appmstid=(select   appmstid from appmst where appmstregno=@regno)

set @CT =isnull((select  top  1  appmstid from BankMst where appmstid=@appmstid),0)

if @CT=0
begin
set @TD=0
end

else
begin
set @TD=1
end

select   @TD as Mes 
 
end
 

GO
/****** Object:  StoredProcedure [dbo].[cheque]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[cheque](@j int,@c int,@fromdate datetime,@todate datetime)          
as          
          
begin          
          
select a.appmstregno as regno,p.paymenttrandraftno,convert(char(8),chequedate,3) as chequedate  ,a.appmstfname as name,'** '+c244323_tisgroup.NameNum(p.dispachedamt)+' Only **' as dispachedAmtwords,stuff(p.dispachedamt,1,0,'**') as dispachedamt from PaymentTranDraft  p , appmst a where p.appmstid=a.appmstregno and p.paymenttrandraftid>=@j and p.paymenttrandraftid<=@c and CAST(FLOOR(CAST(p.paymentfromdate as float)) as datetime)=@fromdate  and CAST(FLOOR(CAST(p.paymenttodate as float)) as datetime)=@todate  order by  Paymenttrandraftid          
end





GO
/****** Object:  StoredProcedure [dbo].[chequeData]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[chequeData](@j int,@c int,@fromdate datetime,@todate datetime,@type varchar(50))          
as          
          
begin          
          
if(@type='b')    
begin    
select a.appmstregno as regno,p.paymenttrandraftno,convert(char(8),chequedate,3) as chequedate  ,a.appmstfname as name,'** '+C244323_forevernew.NameNum(p.dispachedamt)+' Only **' as dispachedAmtwords,stuff(p.dispachedamt,1,0,'**') as dispachedamt from PaymentTranDraft p , appmst a where p.appmstid=a.appmstregno and p.paymenttrandraftid>=@j and p.paymenttrandraftid<=@c and CAST(FLOOR(CAST(p.paymentfromdate as float)) as datetime)=@fromdate  and CAST(FLOOR(CAST(p.paymenttodate as float)) as datetime)=@todate 

 order    
by    Paymenttrandraftid        
end    
      
if(@type='r')    
begin    
select a.appmstregno as regno,p.paymenttrandraftno,convert(char(8),chequedate,3) as chequedate  ,a.appmstfname as name,'** '+C244323_forevernew.NameNum(p.dispachedamt)+' Only **' as dispachedAmtwords,stuff(p.dispachedamt,1,0,'**') as dispachedamt from PaymentTranDraftroi p , appmst a where p.appmstid=a.appmstregno and p.paymenttrandraftid>=@j and p.paymenttrandraftid<=@c and CAST(FLOOR(CAST(p.paymentfromdate as float)) as datetime)=@fromdate  and CAST(FLOOR(CAST(p.paymenttodate as float)) as datetime)=@todate
  order  by    Paymenttrandraftid        
end    
    
if(@type='rtb')    
begin    
select a.appmstregno as regno,convert(char(8),chequedate,3) as chequedate  ,a.appmstfname as name,'** '+C244323_forevernew.NameNum(p.dispachedamt)+' Only **' as dispachedAmtwords,stuff(p.dispachedamt,1,0,'**') as dispachedamt from PaymentTranDraftROITB p , appmst a where p.appmstid=a.appmstregno and p.paymenttrandraftid>=@j and p.paymenttrandraftid<=@c and CAST(FLOOR(CAST(p.paymentfromdate as float)) as datetime)=@fromdate 
 and CAST(FLOOR(CAST(p.paymenttodate as float)) as datetime)=@todate  order  by    Paymenttrandraftid        
end    
    
end





GO
/****** Object:  StoredProcedure [dbo].[chkforgotpassword]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[chkforgotpassword](@regno varchar(50))        
        
as        
begin 
 if Exists(select appmstpassword,appmsttitle+appmstfname as name,appmstmobile from appmst where appmstregno=@regno)       
select appmstpassword,appmsttitle+appmstfname as name,appmstmobile from appmst where appmstregno=@regno        
end





GO
/****** Object:  StoredProcedure [dbo].[chklogin]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[chklogin](@login varchar(50),@pwdd varchar(50))        
as  
declare @paid int  
SELECT @PAID=AppmstPaid from Appmst Where AppMstregno=@LOGIN  
If @paid=1  
begin  
 SELECT Appmstregno,AppMstFName,appmstactivate from AppMst where AppMstlogin=@login and AppMstPassword=@pwdd  
END  
ELSE  
BEGIN  
SET @PAID=0      
end





GO
/****** Object:  StoredProcedure [dbo].[ChkMobileNoRegistred]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[ChkMobileNoRegistred](@MobileNo varchar(50))
as
begin
select * from RegisterMobileNo where MobileNo=@MobileNo
end





GO
/****** Object:  StoredProcedure [dbo].[chkpwd]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[chkpwd](@regno varchar(50))
as
begin
select AppMstPassword from appmst where AppMstRegNo=@regno
end





GO
/****** Object:  StoredProcedure [dbo].[chkreg]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--[chkreg] 'GBT784997', '123456'
CREATE procedure  [dbo].[chkreg](@userid varchar(50),@pwd varchar(50))                              
  
as                      
  
begin                          
  
 --if(exists (select AppMstRegNo from appmst(nolock) where AppMstRegNo=@userid and AppMstPassword=@pwd and isnull(appmstactivate,1)=1))                           
SELECT sponsorid, AppMstID, AppMstFname,AppMstRegNo,appmstactivate , RetailerTypeid, AppMstMobile, email, AcountNo

, dbo.GetProfileImages(@userid) as imagename             
 from AppMst(nolock) where AppMstRegNo=@userid and AppMstPassword=@pwd   
and len(@pwd)>0 and isnull(appmstactivate,1)=1                             
  
end  
  
 
 
GO
/****** Object:  StoredProcedure [dbo].[chkregforprofile]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[chkregforprofile](@userid varchar(50))      
as      
begin  
 if(exists (select AppMstRegNo from appmst where AppMstRegNo=@userid))   
begin
  select * from AppMst  where AppMstRegNo=@userid
end
end





GO
/****** Object:  StoredProcedure [dbo].[chkregpassword]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

create PROCEDURE  [dbo].[chkregpassword]   (@userid varchar(50)) 
as 
begin
select * from appmst where appmstregno=@userid
end
GO
/****** Object:  StoredProcedure [dbo].[chkwelcomeamt]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[chkwelcomeamt](@regno varchar(50))  
as   
begin  
select amount from sharemst where appmstid in (select appmstid from appmst where appmstregno in (@regno)) and pintype=1
end





GO
/****** Object:  StoredProcedure [dbo].[clearROIPayout]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[clearROIPayout] 
as
begin
truncate table paymenttrandraftroi
delete from causeid where paymentcause='ROI'
truncate table rdate
truncate table payoutdateroi
end





GO
/****** Object:  StoredProcedure [dbo].[companydetails]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[companydetails]          

as            

begin            

select companyname,address,joiningamount,website,phone,CompanyHead, gmailAccount  from paymentmst    

end

GO
/****** Object:  StoredProcedure [dbo].[CPTranDisplayByDate]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[CPTranDisplayByDate](@regno varchar(50),@date datetime,@dateto datetime)                                                    
as                                                    
declare @appmstid int                                              
--declare @date1 datetime                                          
--set @date1 = convert(varchar(12),@date,102)                                                
select @appmstid=AppMstID from AppMst where AppMstRegNo=@regno;                                                    
             
select a.AppmstRegNo as CRegNo,a.Appmsttitle+' '+a.appmstfname as uname,a.appmstid, b.banktranremarks as  Remarks ,                                                  
 convert(varchar(12),b.BankTranDate,103) as dt,b.BankTranAmount as Amt,b.BankTranBalance as blnce, b.Reason,                                                  
 case                                                  
 when  b.BankTranMode=1 then 'Transfer Outgoing'                                                  
 when  b.BankTranMode=2 then 'Transfer Incoming'                                                  
when b.BankTranMode=31 then 'Transfer t'                                                  
 else b.BankTranRemarks end  as Remarks,                
 case when b.BankTranMode in (2,3,100) then b.BankTranAmount else '' end as Incoming,                  
 case when b.BankTranMode in (1,4,11) then b.BankTranAmount else '' end as Outgoing ,b.Payoutno,(case When b.BankTranMode=3 then '1' When b.BankTranMode<>3 then '0' end) as PVisible                                                 
  from CPTran b left join Appmst a                                                    
 on b.paidAppMstID=a.Appmstid  where b.AppMstID=@appmstid and  CAST(FLOOR(CAST(b.BankTranDate as float)) as datetime) between             
CAST(FLOOR(CAST(@date as float)) as datetime) and  CAST(FLOOR(CAST(@dateto as float)) as datetime)             
            
order by b.BankTranDate  desc




GO
/****** Object:  StoredProcedure [dbo].[CPTransferIP]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[CPTransferIP] (@PregNo varchar(50),@Epwd varchar(50),@Amt float,@Reason varchar(max),@Abalance float output,@flag varchar(100) output)                       
as                       
--***************************************CPp to Ip transfer   
declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@count int,@TranRemark varchar(100) ,@CtBalance float ,@BtranId int, @CtranId int       
if(exists(select appmstid from appmst where AppMstRegNo=@PregNo) )                      
begin                                           
		select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo                       
		set @TranRemark='CP-IP TRANSFER'                                                      
		select @AppMstEpwd=ePassword from AppMst where AppMstRegNo=@PregNo  
		set @Bbalance=0                        
		set @Abalance=0                        
		set @CtBalance=0                       
		set @count=0                       
		if @Epwd=@AppMstEpwd and len(@Epwd)>5                                                                                                         
		begin                                                                                                                                                                                                                              
				 select @BtranId=max(BankTranId) from CPTran where AppMstId=@PAppMstId                                                                                                            
				 select @Bbalance=isnull(BanktranBalance,0) from CPTran where appmstid=@PAppMstId and BankTranId=@BtranId                                                                                                            
				 select @CtranId=max(BankTranId) from IPTran where AppMstId=@PAppMstId                                                                                                            
				 select @CtBalance=isnull(BanktranBalance,0) from IPTran where appmstid=@PAppMstId and BankTranId=@CtranId                                                                                                   
				 if(@Amt>0 and @Bbalance>=@Amt)                                                           
				 begin                                                                                             
						  set xact_abort on                                                          
						  begin transaction 
						  set @Abalance=@Bbalance - @Amt                                               
						  insert into CPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Payoutno,Reason)                                               
						  values (@PAppMstId,1,@PAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),@TranRemark,0,@Reason)
						  set @CtBalance = @CtBalance +  @Amt                                                                                  
						  insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,payoutno,Reason)  
						  values (@PAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt,0)),isnull(convert(numeric(18,2),@CtBalance),0),@TranRemark,1,0,'')
						  set @flag='1';                                                     
						  commit transaction                                                                                                             
				 End        
				 else                                              
				  set @flag='Insufficient CP balance.'; --low amount                                                                                           
		End                                                            
		else                                                                 
		 set @flag='Invalid Transaction Password.';  -- E pwd invalid                                           
 end             
 else                                                          
 set @flag='Member not exists.';      





GO
/****** Object:  StoredProcedure [dbo].[CreateAdminBinary]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--[CreateAdminBinary] 'GL667089', '2019-01-19 15:18:49.437', 1000
CREATE procedure  [dbo].[CreateAdminBinary] (@RegnoNo varchar(100) output,@EDate varchar(30), @Amount float)                                                                          
as                               
 Begin     
 
Declare @ROICount int,@jfor float,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId bigint,@Bbalance float,@FastT int,
@Point float,@Types varchar(25),@Days int,@Pspontotal int , @banktranid bigint                         
Declare @RoiDate datetime,@appmstid bigint ,@DOE datetime ,@RAmt float ,@netamt float   , @SrNO bigint , @W bigint

set  @appmstid = (Select appmstid from appmst where appmstregno=@RegnoNo)
select @banktranid=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid      
if @banktranid=0
begin
set @RAmt=0
end
else
begin
select @RAmt= banktranbalance from  VPTran where appmstid=@appmstid  and banktranid=@banktranid
end
set @RAmt=isnull(@RAmt,0)            

				 
				set @Point=@Amount                      
				Set @Types='Payout'  
				declare @Rbalance float
				set @Rbalance =@RAmt+ @Point


    --************************Amount Distribute                    
               
				if(@Point>0 )   ------------ Send  to VP Wallet ----------------                                          
				Begin     
				
				--print   @Point  
				--print @Rbalance                  
							  insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                                     
							  values(@appmstid,3,@appmstid,@EDate,isnull(@Point,0),isnull(@Rbalance,0),@Types,0,0, DATEADD(MM,1, @EDate))    
							                                
				End

 


end
GO
/****** Object:  StoredProcedure [dbo].[CreateOTPRegistraion]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
       
      --[CreateOTPRegistraion] 'saini.sunder158@gmail.com', 'registration'
CREATE proc [dbo].[CreateOTPRegistraion] (            
@email VARCHAR(50), @Type varchar(100) )             
        
as                                            
          
BEGIN                  
  DECLARE @Random varchar(50)          
 set @Random =  substring(REPLACE ( NEWID() ,'-' ,'' ),1,6)            
 Delete from  OPT where  email=@email and Type=@Type     
 insert into OPT(OPTCode, AppMstRegNo, type, email, createdon, expireon )  
 values (@Random ,'New', @Type, @email, getdate(), DATEADD(mi, 2, getdate()))           
 select OPTCode,email from OPT where email=@email   and Type=@Type       
        
END     
    
	 
GO
/****** Object:  StoredProcedure [dbo].[CreateVCode]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc[dbo].[CreateVCode]
(@Regno varchar(50),@VCode varchar(50) out)
as
Begin
Declare @Code varchar(100)
Set @Code=NEWID()
--SELECT SUBSTRING(REPLACE(@Code, '-', ''), 1,5)
update appmst set VCode=SUBSTRING(REPLACE(@Code, '-', ''), 1,5) where appmstRegno=@Regno

End




GO
/****** Object:  StoredProcedure [dbo].[CreditUser]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[CreditUser](@adminUser varchar(50),@cRegNo varchar(50),@Epwd varchar(50),@Amt float,@remark varchar(100),@flag int output)      
as      
declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@Abalance float,                  
@CtBalance float,@tranCharge float,@count int                      
--select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo       
select top 1 @PAppMstId=AdminBankId from PaymentMst 
select @AppMstEpwd=ePassword from ControlMst where username=@adminUser     
select @CAppMstId=AppMstID from AppMst where AppMstRegNo=@cRegNo                                       
set @Bbalance=0      
set @Abalance=0      
set @CtBalance=0      
set @tranCharge=0      
set @count=0                                      
if @Epwd=@AppMstEpwd and len(@Epwd)>5      
begin 
 --as 
 declare @BtranId int, @CtranId int 
 --select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno                                                  
 select @BtranId=max(BankTranId) from banktran where AppMstId=@PAppMstId                                                  
 select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@PAppMstId and BankTranId=@BtranId                                                  
 --  
 select @CtranId=max(BankTranId) from banktran where AppMstId=@CAppMstId                                                  
 select @CtBalance=isnull(BanktranBalance,0) from banktran where appmstid=@CAppMstId and BankTranId=@CtranId                                                
 set @tranCharge=0      
 if(@Bbalance>=@Amt and @Amt>0)      
 begin 
  set @Abalance=@Bbalance - @Amt      
  insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                              
  BankTranRemarks,bankTranStatus,Payoutno,tranCharge)                                              
  values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),@remark,1,0,@tranCharge)                                              
  --set @CtBalance=0;                                          
  set @CtBalance = @CtBalance +  @Amt                        
  insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                              
  BankTranRemarks,bankTranStatus,payoutno)                                              
  values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt,0)),isnull(convert(numeric(18,2),@CtBalance),0),@remark,1,0)                                              
  set @flag=1;    
 end  
 else  
  set @flag=-103; --low amount  
end  
else  
set @flag=-101;  -- E pwd invalid





GO
/****** Object:  StoredProcedure [dbo].[crowdfundLink]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure[dbo].[crowdfundLink](@flag varchar(100) output)
as
begin
declare @cdate datetime
set @cdate=dateadd(minute,330,getutcdate())
if exists(select activedate from admintable where cast(floor(cast(activedate as float)) as datetime)=cast(floor(cast(@cdate as float)) as datetime)and status=1)
begin
set @flag='1'
end
else
begin
set @flag='0'
end
end
--select * from admintable




GO
/****** Object:  StoredProcedure [dbo].[crowdfundtransfer]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  -- sp_help appmst                    
    --WithdrawAotmeticAllID                    
 --select * from bankmst where appmstid=7333                    
 --select * from vptran where appmstregno='GL105537'                    
--[crowdfundtransfer] 'GL105537',2850, ''                    
CREATE procedure[dbo].[crowdfundtransfer](  
@appmstregno varchar(50),  
  
@amt float,  
@BTCAmt  numeric(18,9),  
@BTCAddress  varchar(100),  
 @flag varchar(100) output)                      
as                      
                       
 begin                      
                     
 declare @appmstid bigint,@Bbalance float,@BtranId bigint , @TDS float, @HC float, @dispatch  float ,        
         
 @AppMstEpwd varchar(30)  ,@PayTranId bigint   ,    @AppMstMobile   varchar(50)                
  declare @email varchar(100)                        
  set @flag='no data'                      
           
           
 if @amt<5         
 begin          
 set @flag='WithDraw amount greater than and equal to 5'          
 return          
 end          
           
           
 if not exists(select appmstregno from appmst where appmstregno=@appmstregno and appmstactivate=1 and appmstpaid=1)                      
  begin                      
   set @flag='User ID does not exist !'                      
 return                      
  end                      
     
                      
  set nocount on                                                                
                                            
  set xact_abort on                                                                                                     
 begin transaction                       
 select @appmstid=appmstid from appmst where appmstregno=@appmstregno and appmstactivate=1 and appmstpaid=1                      
 select @BtranId=isnull(max(BankTranId),0) from Vptran where AppMstId=@appmstid                                                                                                     
 select @Bbalance=isnull(BanktranBalance,0) from Vptran where appmstid=@appmstid and BankTranId=@BtranId                      
                      
  if(@amt<=@Bbalance)                      
  begin                      
                      
 declare @Branch varchar(100), @BankName varchar(100), @accno  varchar(50) , @mirc  varchar(50) , @ifsc  varchar(50), @hOLDERNme VARCHAR(50),  @PANnO VARCHAR(50)                  
 select @PANnO=panno , @AppMstMobile=AppMstMobile from  appmst   where appmstid=@appmstid                         
    select    @BankName= BankName,  @Branch=Branch ,   @ifsc=IFS , @mirc=MICR , @hOLDERNme=HolderName from  bankmst where Appmstid=@appmstid                      
  set @Bbalance=@Bbalance-@amt                 
  set @HC = @amt*10/100        
  set @dispatch = @amt - ( @TDS + @HC);                      
  insert into vptran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks)                                    
  values (@appmstid,44,@appmstid,dateadd(minute,330,getdate()),@amt,@Bbalance,'Under progress')                      
  set @PayTranId=@@IDENTITY                      
        
  insert into withdrawmst(BTCAmount, appmstid,doe,amount,tds,handling,dispatch,remarks,[status],chequeno,wamount,bankname,dot,paymentmode,                      
  ispaid,pan, paytranid,tranid,withdrawfrom,withby,withfor,paymentcause,acno,branch,ifsc,email,FranchiseId, BHolderName ,MobileNo, WType)                      
       
  values(@BTCAmt ,@appmstid,dateadd(minute,330,getdate()),@amt,@TDS,@HC,@dispatch,'Under progress',0,0,                      
  @amt,@BankName,dateadd(minute,330,getdate()),'0',0,@PANnO,@paytranid,0,'0','0','0','0',@BTCAddress,@Branch,@ifsc, '0',0, @hOLDERNme, @AppMstMobile, 'Payout')                      
      set @flag='1'                                                                   
     end                      
    else                      
                  
                      
  begin                      
                     
   set @flag='Amount  must <=  '+convert(varchar(50),@Bbalance)                      
   rollback transaction                      
                      
   return                      
 end                        
  if                    
(@flag<>'1')                      
  begin                      
  set @flag='no data'                      
 rollback transaction                      
  return                      
   end                      
   else                      
commit transaction                      
 end 
GO
/****** Object:  StoredProcedure [dbo].[crowdfundtransferUser]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  -- sp_help appmst                            
    --WithdrawAotmeticAllID                            
 --select * from bankmst where appmstid=7333                            
 --select * from vptran where appmstregno='GL105537'                            
--[crowdfundtransfer] 'GL105537',2850, ''                            
CREATE procedure[dbo].[crowdfundtransferUser](          
@appmstregno varchar(50),          
@amt float,       
@OTP varchar(8)  ,         
@BTCAmt  numeric(18,9),          
@BTCAddress  varchar(100),          
 @flag varchar(100) output)                              
as                              
                               
 begin                              
                             
 declare @appmstid bigint,@Bbalance float,@BtranId bigint , @TDS float, @HC float, @dispatch  float ,                
 @AppMstEpwd varchar(30)  ,@PayTranId bigint   ,    @AppMstMobile   varchar(50)                        
  declare @email varchar(100)                                
  set @flag='no data'                              
                   
 declare @Messages varchar(100)  
  
  set @Messages=dbo.CheckOTPTop(@appmstregno, @OTP, 'WithDraw')    
  if @Messages<>'1'  
  begin  
    set @flag=@Messages  
 return   
  end  
  
                    
 if @amt<24                 
 begin                  
 set @flag='WithDraw amount greater than and equal to 25'                  
 return                  
 end                  
                   
       
        
                   
 if not exists(select appmstregno from appmst where appmstregno=@appmstregno and appmstactivate=1 and appmstpaid=1)                              
  begin                              
   set @flag='Unable to withdraw Reason: Account De-activated'                              
 return                              
  end                              
             
                              
  set nocount on                                                                        
                                                    
  set xact_abort on                                                                                                             
 begin transaction                               
 select @appmstid=appmstid from appmst where appmstregno=@appmstregno and appmstactivate=1 and appmstpaid=1                              
 select @BtranId=isnull(max(BankTranId),0) from Vptran where AppMstId=@appmstid                                                                                                             
 select @Bbalance=isnull(BanktranBalance,0) from Vptran where appmstid=@appmstid and BankTranId=@BtranId                              
                              
  if(@amt<=@Bbalance)                              
  begin                              
                              
 declare @Branch varchar(100), @BankName varchar(100), @accno  varchar(50) , @mirc  varchar(50) , @ifsc  varchar(50), @hOLDERNme VARCHAR(50),  @PANnO VARCHAR(50)                          
 select @PANnO=panno , @AppMstMobile=AppMstMobile from  appmst   where appmstid=@appmstid                                 
    select    @BankName= BankName,  @Branch=Branch ,   @ifsc=IFS , @mirc=MICR , @hOLDERNme=HolderName from  bankmst where Appmstid=@appmstid                              
  set @Bbalance=@Bbalance-@amt                         
  set @HC = @amt*10/100                
  set @dispatch = @amt - ( @TDS + @HC);                              
  insert into vptran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks)                                            
  values (@appmstid,44,@appmstid,dateadd(minute,330,getdate()),@amt,@Bbalance,'Under progress')                              
  set @PayTranId=@@IDENTITY                              
                
  insert into withdrawmst(BTCAmount, appmstid,doe,amount,tds,handling,dispatch,remarks,[status],chequeno,wamount,bankname,dot,paymentmode,                              
  ispaid,pan, paytranid,tranid,withdrawfrom,withby,withfor,paymentcause,acno,branch,ifsc,email,FranchiseId, BHolderName ,MobileNo, WType)                              
               
  values(@BTCAmt ,@appmstid,dateadd(minute,330,getdate()),@amt,@TDS,@HC,@dispatch,'Under progress',0,0,                              
  @amt,@BankName,dateadd(minute,330,getdate()),'0',0,@PANnO,@paytranid,0,'0','0','0','0',@BTCAddress,@Branch,@ifsc, '0',0, @hOLDERNme, @AppMstMobile, 'Payout')                              
      set @flag='1'                                                                           
     end                              
 else                              
                          
                              
  begin                              
                             
   set @flag='Amount  must <=  '+convert(varchar(50),@Bbalance)                              
   rollback transaction                              
                              
   return                              
 end                                
  if                            
(@flag<>'1')                              
  begin                              
  set @flag='no data'                              
 rollback transaction                              
  return                              
   end                              
   else                              
commit transaction                              
 end   
GO
/****** Object:  StoredProcedure [dbo].[cursorjoinin]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




 create proc [dbo].[cursorjoinin]
 as
 begin
DECLARE @site_value INT;
SET @site_value = 0;

WHILE @site_value <= 500
BEGIN

	Declare @appmstregno varchar(50)
	Execute RandomRegNo @appmstregno out    
	exec   Insertdata5 '934607', '934607' ,1, 'demo', @appmstregno, 'S@gmail.com','111111','127.1.1.1','',''

  
 
   SET @site_value = @site_value + 1;
END;

 
 end
GO
/****** Object:  StoredProcedure [dbo].[DailyNewROI]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
          --select * from appmst WHERE APPMSTREGNO='GBT879936'                  
    --select *   from VPTran where banktranremarks='ROI' order by banktrandate   desc      
--DailyNewROI '','2020-04-17 10:23:49.920'       
--select       Srno , Appmstid, Amount, ROICount    FROM  Sharemst  where appmstid>0 and amount>0   and CAST(DOE  AS date) <=   CAST('2020-04-17 10:23:49.920'   AS date)  order by srno                                
          
    --[DailyNewROI] '' ,'2020-08-16 11:08:42.537'          
CREATE procedure  [dbo].[DailyNewROI] (@Flag varchar(100) output,@EDate varchar(30))                                                                                                      
as                                                           
 begin                                                    
  Declare  @jfor float ,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId int,@Bbalance float,@FastT int,@Point float,@Types varchar(25),@Days int,@Pspontotal int                                                      
 Declare @RoiDate datetime,@appmstid int ,@DOE datetime ,@RAmt float ,@netamt float   , @SrNO bigint, @ROIAmount bigint, @ROILtmAmount float, @npairrank float, @ROICount bigint                            
       
 declare @Amountrate float , @investment bigint 
 set  @Amountrate =(select CRate from PaymentMst)                            
set @RoiDate=@EDate                                   
                                                   
Set @Days=DATEDIFF(DAY,@EDate,dbo.GetServerDate())                                                     
if(@Days<0)                                                      
Begin                                                              
 Set @Flag='Less than same date.'                                                                                           
 --RollBack Transaction                                                             
 Return                                                                                            
End                                
                            
                            
    declare cur cursor for select      Srno , Appmstid, Amount, ROICount, investment    FROM  Sharemst  where appmstid>0 and amount>0   and CAST(DOE  AS date) <=   CAST(@RoiDate  AS date)  order by srno                                
    open cur   fetch next from cur into  @SrNO, @appmstid, @jfor  , @ROICount , @investment                           
    while @@Fetch_Status=0                                                                                                                                                
    Begin                              
                            
                           
 Declare @CT bigint                             
                            
 set @CT = (select count(*) from vptran where BankTranRemarks='ROI' and AppMstId= @appmstid  and CAST(BankTranDate  AS date) =   CAST(@RoiDate  AS date))                            
   if @CT=0                            
   begin        
                              
       Set @Point=0                                         
       set @RAmt=0                            
      select @BtranId=isnull(max(banktranid),0) from  vptran where appmstid=@appmstid                                
      if @BtranId=0                            
         begin                            
          set @RAmt=0                            
         end                    
      else                  
         begin                                   
          select @RAmt=isnull(sum(BankTranBalance),0) from  vptran where appmstid=@appmstid   and banktranid=@BtranId                                       
          set @RAmt=isnull(@RAmt,0)                                        
         end                  
     if @jfor  in(100 ,500)                        
       begin                            
        set @Point=@jfor*2.5/100                            
       end                    
     if @jfor in( 5000, 1500)                          
       begin                            
      set @Point=@jfor*3/100                             
       end                            
       if @jfor in( 10000, 25000)                          
       begin                            
       set @Point=@jfor*4/100                            
       end   
      
                                
     Set @Types='ROI'                              
         
       
 if @ROICount>0      
 begin      
 set @Point=@Point*2      
 end      
   
               
    DECLARE @NewAmount float                    
    set @NewAmount  =dbo.CheckBlanceTop(@appmstid,@Point)        
     DECLARE @dollarAmount float  
	 set @dollarAmount=@NewAmount
      
                     
                     
              
       
  
  --  print @appmstid      
  --  print @jfor      
  --  print @Point      
  --   print @NewAmount      
  --print '............'      
                      
  if(@NewAmount>0)        
            
     BEGIN                
           if(@NewAmount>0 )   ------------ Send  to VP Wallet ----------------                                
             Begin                 
     if @Amountrate<1      
      begin      
       set  @NewAmount = @NewAmount/@Amountrate      
      end      
      else        
       begin      
       set  @NewAmount = @NewAmount*@Amountrate      
      end      
      declare @Rbalance float                            
      set @Rbalance =@RAmt+ @NewAmount     
            insert into vptran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate,investment, dollar, OutAmount )              
             values(@appmstid,100,@appmstid,@RoiDate,isnull(@NewAmount,0),isnull(@Rbalance,0),@Types,0,0, DATEADD(MM,1, @RoiDate), @investment,@dollarAmount, @Amountrate  )                 
           END                
                
      declare @checkPaid float                  
      set @checkPaid= dbo.CheckBlanceTop(@appmstid,1)                    
      IF @checkPaid =0                  
       BEGIN                  
         UPDATE APPMST SET Appmstpaid=0, VPBal=1 , JoinFor=0, JAmount=0 WHERE APPMSTID=@appmstid              
   update vptran set OutAmount=1 where APPMSTID=@appmstid  and   BankTranRemarks in ('ROI', 'Payout', 'Direct Income')               
              
    END                    
       End                             
   end                                        
                                                      
   Set @Flag='Successful...'                                                     
                                                      
    fetch next  from cur into @SrNO, @appmstid, @jfor    , @ROICount, @investment                                                            
    End ----------end while--                       
   close cur                                                                        
   deallocate cur                                      
End     
    
    
     
  --update VPTran set dollar=0.32*BankTranAmount where BankTranRemarks='ROI'
   
  
GO
/****** Object:  StoredProcedure [dbo].[DailyROI]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[DailyROI] (@Flag varchar(100) output,@EDate date,@EditedPaid numeric(18,2)=0)                                                                                
as  
--[DailyROI] '', '2019-02-07 20:39:00.430'                                       
BEGIN   
   
Declare @ROICount int,@jfor float,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId bigint,@Bbalance float,@FastT int,      
@Point float,@Types varchar(25),@Days int,@Pspontotal int , @banktranid bigint                               
Declare @RoiDate date,@appmstid bigint ,@DOE datetime ,@RAmt float ,@netamt float  -- , @SrNO bigint   
DECLARE @limitRechedRpvCount BIGINT=0 
DECLARE @PerRpvLimit NUMERIC(18,2)=3000 
set nocount on   
set xact_abort on    
Set @Days=DATEDIFF(DAY,@EDate,GETUTCDATE())                         
if(@Days<0)                          
Begin                                  
 Set @Flag='Less than same date.'                                                               
 --RollBack Transaction                                 
 Return                                                                
End     
  
IF EXISTS(SELECT 1 FROM RpvDetail(nolock) where DOE>=@EDate)   
BEGIN   
 SET @Flag='Already calculated for this date.'    
 RETURN;  
END   
  
Begin Transaction    
set  @RoiDate=@EDate       
Declare @InvestAmount float, @TotalMember bigint , @PaidAmount  float      
  
select @TotalMember=sum(joinfor) FROM Sharemst(nolock) where  amount>0 and Joinfor<11  and CAST(DOE  AS date)=CAST(@RoiDate  AS date)      
set @InvestAmount=@TotalMember*600  --total member= total PV(point value) , 1pv=600 configured.  
set @PaidAmount=@InvestAmount*20/100 --@TotalMember   // distributable amt   

DECLARE @tempAmt numeric(18,2)=@PaidAmount 
IF @EditedPaid>0 
SET @PaidAmount=@EditedPaid
  
if(@PaidAmount<=0)  
begin   
print 'no amt to distribute. let user topup 1st.'  
return;  
end   
declare @tblCur table   
(  
 id int identity(1,1),  
 --srno int ,  
 appmstid int,  
 paircount int  
)  
  
--insert into @tblCur   
--select appmstid,dbo.DirectSponsarPair(appmstid) as MM from appmst(nolock) where Appmstpaid=1 and CAST(appPaiddatetime AS date)<=CAST(@RoiDate  AS date)   
--and dbo.DirectSponsarPair(appmstid)>0 order by AppMstID   
  
  
DECLARE @tblSpon TABLE  
(  
 appmstid INT  
)  
insert into @tblSpon  
select distinct SP.AppMstID from Sharemst S(nolock)   
inner join appmst a(nolock) on s.Appmstid=a.AppMstID and CAST(S.DOE AS date)<=@RoiDate and DOE>='2019-02-16' --proj start date 
inner join AppMst SP(nolock) on sp.AppMstRegNo=a.SponsorID   
  
insert into @tblCur   
select a.appmstid,dbo.DirectSponsarPair(a.appmstid,@RoiDate) as MM   
from appmst(nolock) a   
inner join @tblSpon s on s.appmstid=a.AppMstID   
where Appmstpaid=1 and CAST(appPaiddatetime AS date)<=@RoiDate  
and dbo.DirectSponsarPair(a.appmstid,@RoiDate)>0 order by a.AppMstID   
  
 ---01-Apr-2019 
 SELECT @limitRechedRpvCount=COUNT(1) 
 FROM (
 select RD.AppmstId 
 FROM RpvDetail RD(NOLOCK) 
 INNER JOIN @tblCur T2 ON RD.AppmstId=T2.appmstid 
 GROUP BY RD.AppmstId,RD.RpvNo HAVING SUM(rpvValue)>=@PerRpvLimit 
) as n

declare @totalElegible int,@count int   
select @totalElegible=sum(paircount),@count=count(1) from @tblCur   
declare @perRPv numeric(18,2),@memberTotalRpv bigint
--1 rpv= 1 pair of direct sponsor . rpv=reward point value 
SET @totalElegible=@totalElegible-@limitRechedRpvCount --minute the RPv that have reached to limit of 3000, as we do not pay after that limit.
set @perRPv=@PaidAmount/@totalElegible   

INSERT INTO RoiMst
(totalElegibleId,DistributableAmt,PerRpv,ROIDATe,DOE,OriginalAmtValue)
VALUES(@totalElegible,@PaidAmount,@perRPv,@RoiDate,GETDATE(),@tempAmt)


Declare @CMT   bigint      
DECLARE @id int=1  
WHILE @id<=@count   
Begin          
 select   @appmstid=appmstid,@memberTotalRpv=paircount  from @tblCur where id=@id                        
 Set @Point=0    
 set @RAmt=0     
 --set @Point=@memberTotalRpv*@perRPv   
 ---  
 EXECUTE uspAddRpvDetail @appmstid,@perRPv,@memberTotalRpv,@RoiDate,@Point OUT   
  
 SET @CMT=0   
 set @CMT=(select Isnull(count(1),0) from RPTran(nolock) where appmstid=@appmstid and BankTranRemarks='Royalty Distribution'   
  and CAST(BankTranDate AS date)=CAST(@RoiDate AS date))   
 set @RAmt=dbo.getRPbalance(@appmstid)                
 Set @Types='Royalty Distribution'        
 declare @Rbalance float      
 set @Rbalance =@RAmt+ @Point      
                      
 if @CMT= 0      
 begin        
  if(@PaidAmount>0)   ------------ Send  to VP Wallet ----------------                                                
  Begin                                 
   insert into RPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                                           
   values(@appmstid,22,@appmstid,@RoiDate,cast(isnull(@Point,0) as numeric(18,2)),cast(isnull(@Rbalance,0) as numeric(18,2)),@Types,@memberTotalRpv,0, DATEADD(MM,1, @RoiDate))          
   --update Sharemst set ROICount=isnull(ROICount,0)+1 where Srno=@SrNO                                             
  End       
 end                                      
 Set @Flag='Successful...'                               
 set @id=@id+1                        
End ----------end while--                                              
update Sharemst set RestDays=1 where cast( DOE as date)=@RoiDate and Amount>0  
                   
if(@@ERROR <> 0)                                                
Begin                                  
 Set @Flag='Error Try Again'                                                               
 RollBack Transaction                                 
 Return                                                                
End                                                                
Commit Transaction       
END   
GO
/****** Object:  StoredProcedure [dbo].[DailyROINew]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[DailyROI] '','2018-11-21 09:47:46.103'
create procedure  [dbo].[DailyROINew] (@Flag varchar(100) output,@EDate varchar(30))                                                                          
as                               
  begin                           
  Declare @ROICount int,@jfor int,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId int,@Bbalance float,@FastT int,@Point int,@Types varchar(25),@Days int,@Pspontotal int                          
 Declare @RoiDate datetime,@appmstid int ,@DOE datetime ,@RAmt float ,@netamt float   , @SrNO int ,  @NewDate datetime
 select @RoiDate=ROIDate  from paymentmst                           
                    
  set @NewDate = CAST(@EDate  AS datetime)  
	declare @DateROI date, @CT bigint
  
	if CAST(@NewDate  AS date)  >CAST(getdate()  AS date)
	 begin
	 Set @Flag='Less than same date.' 
	 return;
	 end

	Set @DateROI= @NewDate
                            
    declare cur cursor for select Srno, appmstid,isnull(ROICount,0),pintype,DOE,netamt from Sharemst where appmstid>0 and amount>0   and CAST(DOE  AS date) <=   CAST(@DateROI  AS date)  order by srno                                                        
    open cur   fetch next from cur into @SrNO, @appmstid,@ROICount ,@jfor,@DOE,@netamt    
    while @@Fetch_Status=0                                                                                                                    
    Begin       
	
	
		set @CT =(select top 1 Isnull(count(BankTranDate),0) from VPTran where CAST(BankTranDate  AS date)  =   CAST(@DateROI  AS date) and BankTranRemarks='ROI' and appmstid=@appmstid)
                 
 if(@CT=0)  
 
 begin                  
    Set @Point=0             
    set @RAmt=0            
    select @RAmt=isnull(sum(BankTranAmount),0) from  VPTran where appmstid=@appmstid              
    set @RAmt=isnull(@RAmt,0)            
		Declare @appmstregno varchar(50)
		Declare @L bigint , @R bigint, @W bigint 
		set @appmstregno=(select appmstregno  from appmst where appmstid=@appmstid)
	set  @L  =(Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=0 and parentid=@appmstid)
	set @R=  (Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=1 and parentid=@appmstid)

 
	
	

	if @L>@R
	begin
	set @W=@R
	end
	else
	begin
	set @W=@L
	end
set @Point=@W*40                       
Set @Types='ROI'  
declare @Rbalance float
set @Rbalance =@RAmt+ @Point




if @Point<>0
begin
    --************************Amount Distribute                    
                            
     insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                                     
     values(@appmstid,22,@appmstid,getutcdate(),isnull(@Point,0),isnull(@Rbalance,0),@Types,0,0, DATEADD(MM,1, getutcdate()))    
	  update Sharemst set ROICount=isnull(ROICount,0)+1 where Srno=@SrNO                                       
                                   
    Set @Flag='Successful...'  
	
	end                       
      end                    
    fetch next  from cur into @SrNO, @appmstid ,@ROICount ,@jfor,@DOE ,@netamt                                     
    End ----------end while--                                        
   close cur                                            
   deallocate cur          
End                          
 --select * from vptran
 
GO
/****** Object:  StoredProcedure [dbo].[DailyROINewtt]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[DailyROI] '','2018-11-27 09:47:46.103'
 
CREATE procedure  [dbo].[DailyROINewtt] (@Flag varchar(100) output,@EDate varchar(30), @appmst bigint)                                                                          
as                               
  begin                           
  Declare @ROICount int,@jfor int,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId int,@Bbalance float,@FastT int,@Point float,@Types varchar(25),@Days int,@Pspontotal int                          
 Declare @RoiDate datetime,@appmstid int ,@DOE datetime ,@RAmt float ,@netamt float   , @SrNO int ,  @NewDate datetime, @BtranIdR bigint
                         
                    
  set @NewDate = CAST(@EDate  AS datetime)  
	declare @DateROI date, @CT bigint
  
	if CAST(@NewDate  AS date)  >CAST(getdate()  AS date)
	 begin
	 Set @Flag='Less than same date.' 
	 return;
	 end

	Set @DateROI= @NewDate
                            
    declare cur cursor for select Srno, appmstid,isnull(ROICount,0),pintype,DOE,netamt from Sharemst where appmstid>0    and CAST(DOE  AS date) <=   CAST(@DateROI  AS date)  order by srno                                                        


    open cur   fetch next from cur into @SrNO, @appmstid,@ROICount ,@jfor,@DOE,@netamt    
    while @@Fetch_Status=0                                                                                                                    
    Begin       
	
	
		set @CT =(select top 1 Isnull(count(BankTranDate),0) from VPTran where CAST(BankTranDate  AS date)  =   CAST(@DateROI  AS date) and BankTranRemarks='ROI' and appmstid=@appmstid)
                 
 if(@CT=0)  
 
 begin                  
    Set @Point=0             
    set @RAmt=0   
	
	
			select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid   
			if @BtranIdR=0
			begin
			set @RAmt=0
			end  
			else 
			begin                                                                         
			select @RAmt=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR  
			end
			
			         
       
	
	
	      
		Declare @appmstregno varchar(50)
		Declare @L bigint , @R bigint, @W bigint 
		set @appmstregno=(select appmstregno  from appmst where appmstid=@appmstid)
	set  @L  =(Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=0 and parentid=@appmstid)
	set @R=  (Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=1 and parentid=@appmstid)

 
	
	

	if @L>@R
	begin
	set @W=@R
	end
	else
	begin
	set @W=@L
	end
set @Point=@W*40                       
Set @Types='ROI'  
declare @Rbalance float
set @Rbalance =@RAmt+ @Point




if @Point<>0
begin
    --************************Amount Distribute                    
                            
     insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                                     
     values(@appmstid,22,@appmstid,getutcdate(),isnull(@Point,0),isnull(@Rbalance,0),@Types,0,0, DATEADD(MM,1, getutcdate()))    
	  update Sharemst set ROICount=isnull(ROICount,0)+1 where Srno=@SrNO                                       
                                   
    Set @Flag='Successful...'  
	
	end                       
      end                    
    fetch next  from cur into @SrNO, @appmstid ,@ROICount ,@jfor,@DOE ,@netamt                                     
    End ----------end while--                                        
   close cur                                            
   deallocate cur          
End                          
 --select appmstid ,count(*) from vptran   where banktranremarks='ROI' group by appmstid

 select  * from vptran   where appmstid=2335 and  banktranremarks='ROI'  

 select * from sharemst where appmstid=2335
  select * from appmst where appmstid=2335
GO
/****** Object:  StoredProcedure [dbo].[DailyROIramm]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure  [dbo].[DailyROIramm] (@Flag varchar(100) output,@EDate varchar(30), @appmst bigint)                                                                          
as                               
  begin                           
  Declare @ROICount int,@jfor int,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId int,@Bbalance float,@FastT int,@Point float,@Types varchar(25),@Days int,@Pspontotal int                          
 Declare @RoiDate datetime,@appmstid int ,@DOE datetime ,@RAmt float ,@netamt float   , @SrNO int ,  @NewDate datetime, @BtranIdR bigint
                         
                    
  set @NewDate = CAST(@EDate  AS datetime)  
	declare @DateROI date, @CT bigint
  
	if CAST(@NewDate  AS date)  >CAST(getdate()  AS date)
	 begin
	 Set @Flag='Less than same date.' 
	 return;
	 end

	Set @DateROI= @NewDate
                            
    declare cur cursor for select Srno, appmstid,isnull(ROICount,0),pintype,DOE,netamt from Sharemst where appmstid= @appmst    and CAST(DOE  AS date) <=   CAST(@DateROI  AS date)  order by srno                                                        


    open cur   fetch next from cur into @SrNO, @appmstid,@ROICount ,@jfor,@DOE,@netamt    
    while @@Fetch_Status=0                                                                                                                    
    Begin       
	
	
		set @CT =(select top 1 Isnull(count(BankTranDate),0) from VPTran where CAST(BankTranDate  AS date)  =   CAST(@DateROI  AS date) and BankTranRemarks='ROI' and appmstid=@appmstid)
                 
 if(@CT=0)  
 
 begin                  
    Set @Point=0             
    set @RAmt=0   
	
	
			select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid   
			if @BtranIdR=0
			begin
			set @RAmt=0
			end  
			else 
			begin                                                                         
			select @RAmt=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR  
			end
			
			         
       
	
	
	      
		Declare @appmstregno varchar(50)
		Declare @L bigint , @R bigint, @W bigint 
		set @appmstregno=(select appmstregno  from appmst where appmstid=@appmstid)
	set  @L  =(Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=0 and parentid=@appmstid)
	set @R=  (Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=1 and parentid=@appmstid)

 
	
	

	if @L>@R
	begin
	set @W=@R
	end
	else
	begin
	set @W=@L
	end
set @Point=@W*40                       
Set @Types='ROI'  
declare @Rbalance float
set @Rbalance =@RAmt+ @Point




if @Point<>0
begin
    --************************Amount Distribute                    
                            
     insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                                     
     values(@appmstid,22,@appmstid,@DateROI,isnull(@Point,0),isnull(@Rbalance,0),@Types,0,0, DATEADD(MM,1, getutcdate()))    
	  update Sharemst set ROICount=isnull(ROICount,0)+1 where Srno=@SrNO                                       
                                   
    Set @Flag='Successful...'  
	
	end                       
      end                    
    fetch next  from cur into @SrNO, @appmstid ,@ROICount ,@jfor,@DOE ,@netamt                                     
    End ----------end while--                                        
   close cur                                            
   deallocate cur          
End                          
 --select appmstid ,count(*) from vptran   where banktranremarks='ROI' group by appmstid

 --select  * from vptran   where appmstid=2335 and  banktranremarks='ROI'  

 --select * from sharemst where appmstid=2335
 -- select * from appmst where appmstid=2335
GO
/****** Object:  StoredProcedure [dbo].[DailyROIUser]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select *from VPTran where 
--appmstid=13
--appmstregno='GL197594'


--[DailyROIUser] '', '2018-12-07 05:35:48.147', 11801
CREATE procedure  [dbo].[DailyROIUser] (@Flag varchar(100) output,@EDate varchar(30), @appmstid bigint )                                                                          
as                               
 Begin                             
  Declare @ROICount int,@jfor float,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId bigint,@Bbalance float,@FastT int,
  @Point float,@Types varchar(25),@Days int,@Pspontotal int                          
 Declare @RoiDate datetime,@DOE datetime ,@RAmt float ,@netamt float   , @SrNO bigint 
 set @RoiDate=@EDate                        

        Declare @CT   bigint
		set @CT = (Select count(*) from vptran where   CAST(banktrandate  AS date) =   CAST(@RoiDate as Date) and banktranRemarks='ROI')

		if @CT=0
		begin
    select @SrNO=Srno, @appmstid=appmstid from Sharemst where appmstid=@appmstid and amount>0   and CAST(DOE  AS date) <=   CAST(@RoiDate  AS date)                                                        
     Set @Point=0             
    set @RAmt=0            
    select @RAmt=isnull(sum(BankTranAmount),0) from  VPTran where appmstid=@appmstid              
    set @RAmt=isnull(@RAmt,0)            
                       
Declare @appmstregno varchar(50)
Declare @L bigint , @R bigint, @W bigint 
set @appmstregno=(select appmstregno  from appmst where appmstid=@appmstid)
	set  @L  =(Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=0 and parentid=@appmstid)
	set @R=  (Select count(*)  from apptran  where   appmstid in (select appmstid from appmst   where  sponsorid=@appmstregno and appmstpaid=1) and Appmstleftright=1 and parentid=@appmstid)

 
	
	

	if @L>@R
	begin
	set @W=@R
	end
	else
	begin
	set @W=@L
	end
  set @Point=@W*40                       
          Set @Types='ROI'  
		 declare @Rbalance float
		 set @Rbalance =@RAmt+ @Point


    --************************Amount Distribute                    
                   
    if(@Point>0 )   ------------ Send  to VP Wallet ----------------                                          
    Begin                           
     insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                                     
     values(@appmstid,22,@appmstid,@RoiDate,isnull(@Point,0),isnull(@Rbalance,0),@Types,0,0, DATEADD(MM,1, @RoiDate))    
	  update Sharemst set ROICount=isnull(ROICount,0)+1 where Srno=@SrNO                                       
    End                                 
    Set @Flag='Successful...'                         
                          



end
end
GO
/****** Object:  StoredProcedure [dbo].[DaimoundID]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[DaimoundID]       
@Regno varchar(50)   out                
as                      
begin        
 DECLARE @Random int,  @Upper float,@Lower float,@pool varchar(100),@rstring varchar(8),@counter int,@pos int  
  set @pool = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'    
  set @counter = 1      
 --************************Create Random Character   
  while @counter = 1    
  begin    
    set @pos = ceiling(rand()*(len(@pool)))    
    if(@pos <24)  
   Begin  
     set @counter =0    
   End  
  End    
  SET @Lower = 100000 ---- The lowest random number    
  SET @Upper = 999999 ---- The highest random number  
  set @counter = 1      
  while @counter=1       
  Begin          
    SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)    
    set @Regno=  'DIGL'+ cast(@Random as varchar(50))   
   if(not exists(select DiamondID  from DiamondMst(nolock) where DiamondID=@Regno))   
   Begin  
    set @counter = 0  
   End  
  End          
END  

GO
/****** Object:  StoredProcedure [dbo].[DebitUser]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[DebitUser](@adminUser varchar(50),@cRegNo varchar(50),@Epwd varchar(50),@Amt float,@remark varchar(100),@flag int output)    
as      
declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@Abalance float,                  
@CtBalance float,@tranCharge float,@count int                      
select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@cRegNo       
select @AppMstEpwd=ePassword from ControlMst where username=@adminUser 
select top 1 @CAppMstId=AdminBankId from PaymentMst 
--select @CAppMstId=AppMstID from AppMst where AppMstRegNo=@cRegNo                                       
--select @CAppMstId=-111    
set @Bbalance=0    
set @Abalance=0    
set @CtBalance=0    
set @tranCharge=0    
set @count=0    
if @Epwd=@AppMstEpwd and len(@Epwd)>5    
begin    
 --as    
 declare @BtranId int, @CtranId int      
 --select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno                                                  
 select @BtranId=max(BankTranId) from banktran where AppMstId=@PAppMstId                                                  
 select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@PAppMstId and BankTranId=@BtranId                                                  
 --      
 select @CtranId=max(BankTranId) from banktran where AppMstId=@CAppMstId                                                  
 select @CtBalance=isnull(BanktranBalance,0) from banktran where appmstid=@CAppMstId and BankTranId=@CtranId                                                
 set @tranCharge=0      
 if(@Bbalance>=@Amt and @Amt>0)      
 begin      
  set @Abalance=@Bbalance - @Amt      
  insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                              
  BankTranRemarks,bankTranStatus,Payoutno,tranCharge)                                              
  values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),@remark,1,0,@tranCharge)                                              
  --set @CtBalance=0;                                          
  set @CtBalance = @CtBalance +  @Amt                        
  insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                              
  BankTranRemarks,bankTranStatus,payoutno)                                              
  values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt,0)),isnull(convert(numeric(18,2),@CtBalance),0),@remark,1,0)                                              
  set @flag=1;                                              
 end                                              
 else                                              
  set @flag=-103; --low amount                                              
end                                              
else                                              
	set @flag=-101;  -- E pwd invalid





GO
/****** Object:  StoredProcedure [dbo].[deleteadmin]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[deleteadmin](@uid varchar(50))            
            
as            
begin            
 delete from controlmst where username=@uid       
   delete from pagepermissions where userid=@uid             
end





GO
/****** Object:  StoredProcedure [dbo].[deletedata]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[deletedata]    
as     
Truncate Table AppTran    
Truncate Table AppTranSponsor    
Truncate Table causeid     
Truncate Table sharemst    
Update Nextid Set Appmstid=2,appmstregno=10002    
Delete from appmst where appmstid<>1    
Update Appmst Set Appmstsponsortotal=0,appmstpaid=0,AppMstLeftTotal=0,AppmstRighttotal=0,TotalNewLeft=0,TotalNewright=0,Cpl=0,Cpr=0,Pairrank=0,npairrank=0,carryleft=0,carryright=0,bincome=0,joinfor=0,Jamount=0, producttype=0,newsponsortotal=0    
Update Pinmst Set Paidappmstid=0, Pintype=0, Amount=0, allotedto=0, plantype=0, remark=0, regno=0,mode=0,depositedamount=0





GO
/****** Object:  StoredProcedure [dbo].[deleteorder]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[deleteorder](@orderid int, @regno varchar(50) )  

as   

  

begin  

DELETE from cartmst WHERE CartId=@orderid and CustomerId=@regno  

DELETE from OrderMst WHERE CartId=@orderid and CustomerId=@regno  

DELETE from CartProductMst WHERE CartId=@orderid   

 



  

end  

  


GO
/****** Object:  StoredProcedure [dbo].[deleteRequest]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[deleteRequest](@Srno int,@regno varchar(50),@admin varchar(100))                                
as                                
begin                                
                            
set xact_abort on                                
                    
     
begin transaction                                
        
    insert into delRequestMst (requestno,AppmstRegno,Amount,ReceiptDate,RequestDate,ApprovalDate,Status,comment,ReceiptNo,admin) select srno,AppmstRegno,Amount,ReceiptDate,RequestDate,ApprovalDate,Status,comment,ReceiptNo,@admin from  RequestMst where srno=@Srno and AppmstRegno=@regno    
delete from requestmst where srno=@Srno and AppmstRegno=@regno    
commit transaction                     
                          
                           
 end





GO
/****** Object:  StoredProcedure [dbo].[DiamondClubList]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DiamondClubList] '01-Jan-18 12:00:00 AM','01-Dec-18 12:00:00 AM',''  
 CREATE proc [dbo].[DiamondClubList] (@From datetime,@TO datetime, @search varchar(50))  
 as  
 begin  
   
 set @search = '%' + @search + '%'   
select  CAST(DOE  AS date) as DOE, dbo.GetAppmstRegNo(appmstid) as userName, DiamondID,  dbo.GetUserName(appmstid) as Name,   
dbo.GetUserMobileNo(appmstid) as MobileNO,    
  
appmstid   from DiamondMst  where    
  
CAST(DOE  AS date) between   CAST(@From  AS date)    and    CAST(@TO  AS date)      
   
   
   
  And dbo.GetAppmstRegNo(appmstid)  Like @search  order by   DOE DESC
  
  end  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[DiamondCount]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DiamondTree]'DIGL932269'
--select * from DiamondMst
--select * from appmst
create proc  [dbo].[DiamondCount](@appmstregno varchar(50))  
as
begin
 
select * from DiamondMst where appmstregno=@appmstregno
end
GO
/****** Object:  StoredProcedure [dbo].[DiamondDirectINcome]    Script Date: 10/28/2020 2:04:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
CREATE proc  [dbo].[DiamondDirectINcome](@apppmstRegno varchar(50))    
AS  
begin  
 
   exec [DiamondLevelincome]

   return;
--Declare @SP bigint, @SCk bigint, @appmstid bigint, @Pmore bigint, @balanceAmount float,
-- @amount float, @BbalanceR float, @BtranIdR bigint,@Jcount bigint
--set @appmstid= (select appmstid from appmst with (NOLOCK) where appmstRegno=@apppmstRegno)       
--set @SP = (select  DSponsarNew from appmst with (NOLOCK) where appmstid=@appmstid)  
--set @SCk =@SP % 20   
--set @Pmore=  COALESCE(@SP / NULLIF(20,0), 0)

--if @Pmore>0
--		BEGIN
--				set @amount=500*@Pmore
--				select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid     
--				if @BtranIdR=0  
--				begin  
--				set @BbalanceR=0  
--				end    
--				else   
--				begin                                                                           
--				select @BbalanceR=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR    
--				end  
--				set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@amount,0))     
--				insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate, DimoundID, Reason)                       
--				values(@appmstid,3,@appmstid,getutcdate(),isnull(@amount,0),isnull(@balanceAmount,0),'Diamond Bonus',0,0, DATEADD(MM,1, getutcdate()), @appmstid, '')                             
--				update appmst set   DSponsarNew=@SCk where appmstregno= @apppmstRegno                
--		END



  
END 
GO
/****** Object:  StoredProcedure [dbo].[DiamondIncomeTree]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc  [dbo].[DiamondIncomeTree](@DiamondID varchar(50))  
AS
begin
Declare @SRno bigint 
 
set @SRno=isnull((select   srno from DiamondMst where DiamondID=@DiamondID),0)
Declare @PairCount1 bigint, @PairCount2 bigint, @PairCount3 bigint,  @appmstid bigint
 set @appmstid=(select Appmstid from DiamondMst where DiamondID=@DiamondID)
  --1st Level income
			SELECT   @PairCount1=count(*)  
			FROM dbo.AppMst RIGHT OUTER JOIN
			dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
			where dbo.DiamondMst.sponsard=@SRno
				if(@PairCount1=4)
				begin
				exec DiamondIncomeTreeVP @appmstid, 2000 , @DiamondID 
				end	 

		

					 
 --2nd Level income 
			SELECT @PairCount2=count(*)    
			FROM  dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
			where dbo.DiamondMst.sponsard in(SELECT  Srno  FROM dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON 
			dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid where dbo.DiamondMst.sponsard=@SRno)
				if(@PairCount2=16)
				begin
				exec DiamondIncomeTreeVP @appmstid, 8000 , @DiamondID 
				End
						  
						  
			SELECT  @PairCount3=count(*)   
			FROM  dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
			where dbo.DiamondMst.sponsard in(SELECT Srno  FROM  dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
			where dbo.DiamondMst.sponsard in(SELECT  Srno  FROM dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON 
			dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid where dbo.DiamondMst.sponsard=@SRno))
				if(@PairCount3=64)
				begin
				exec DiamondIncomeTreeVP @appmstid, 32000 , @DiamondID 
				End

END
GO
/****** Object:  StoredProcedure [dbo].[DiamondIncomeTreeVP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[finalpayout] '2018-11-03', ''
-- select * from vptran where BankTranRemarks='reward'
--delete from vptran where BankTranRemarks='reward'
--select * from vptran
--truncate table vptran
--[DiamondIncomeTreeVP] 1, 2000, 'DIGL281712'
CREATE   procedure[dbo].[DiamondIncomeTreeVP] (@appmstid varchar(50),@amount float, @DimoundID varchar(50))                       
as                                      
begin                                                                
 --return;
			 
declare @r varchar(50)
declare @level int 
if  @amount=2000
begin
	set @r=  '1st Level'
	set @level=1 
end
if  @amount=8000
begin
	set @r=  '2nd Level'
	set @level=2
end
if  @amount=32000
begin
	set @r=  'Foreign Tour achieved'
	set @amount=0
	set @level=3
end

IF not exists(select 1 from DiamondIncome(nolock) WHERE DiamondID=@DimoundID AND DiamondLevel=@level)
BEGIN 
	declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float  ,   @awarCT bigint, @CT bigint
	set @CT =isnull((select count(BankTranId) from VPTran where   AppMstId=@appmstid and BankTranRemarks= 'Diamond Bonus' 
			and BankTranAmount=@amount and DimoundID=@DimoundID and reason=@r),0)
			 
	IF @CT=0		                    
	begin
		select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid   
		if @BtranIdR=0
		begin
			set @BbalanceR=0
		end  
		else 
		begin                                                                         
			select @BbalanceR=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR  
		end
		--set @balanceAmount   = @BbalanceR+@VPAmount
		set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@amount,0))   
		insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate, DimoundID, Reason)                     
		values(@appmstid,3,@appmstid,getutcdate(),isnull(@amount,0),isnull(@balanceAmount,0),'Diamond Bonus',0,0, DATEADD(MM,1, getutcdate()), @DimoundID, @r)                           
		
		INSERT into DiamondIncome (DiamondID,Amt,DiamondLevel,DOE)
		VALUES(@DimoundID,@amount,@level ,getdate())


		if  @amount=2000
		begin
			update DiamondMst set getLevel=@level where DiamondID=@DimoundID
		end
		else if  @amount=8000
		begin
			update DiamondMst set getLevel=@level where DiamondID=@DimoundID
		end
		else if  @amount=32000
		begin
			update DiamondMst set getLevel=@level where DiamondID=@DimoundID
		end
	end   
END 
end 



GO
/****** Object:  StoredProcedure [dbo].[DiamondLevelincome]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
 CREATE proc [dbo].[DiamondLevelincome]
 as
 begin
 print 'rr'
	--SET NOCOUNT ON 
	--declare @srno bigint , @appmstid bigint ,  @DiamondID varchar(50)
	--declare cur cursor for select srno , appmstid, DiamondID from      DiamondMst where  GetLevel<4 
                                               
 --   open cur   fetch next from cur into @srno   , @appmstid   ,  @DiamondID   
 --   while @@Fetch_Status=0                                                                                                                    
 --   Begin                         
	--	exec [DiamondIncomeTree] @DiamondID
 --   fetch next  from cur into @srno   , @appmstid   ,  @DiamondID                                      
 --   End ----------end while--                                        
	--close cur                                            
	--deallocate cur          
End  
  
  
GO
/****** Object:  StoredProcedure [dbo].[DiamondListIncome]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DiamondListIncome] '01-Jan-18 12:00:00 AM','01-Dec-18 12:00:00 AM',''
 create proc [dbo].[DiamondListIncome] (@From datetime,@TO datetime, @search varchar(50))
 as
 begin
 
 set @search = '%' + @search + '%' 
select  CAST(banktranDate  AS date) as boe, dbo.GetAppmstRegNo(appmstid) as userName, dbo.GetUserName(appmstid) as Name, 
dbo.GetUserMobileNo(appmstid) as MobileNO,  
dbo.GetsponsarName(appmstid) as SponsarName,  
dbo.GetsponsarID(appmstid) as SponsarID , banktranamount as amount,
appmstid   from VPTran  where  

CAST(banktranDate  AS date) between   CAST(@From  AS date)    and    CAST(@TO  AS date)      and banktranremarks ='Diamond Bonus'
 
 
 
  And dbo.GetAppmstRegNo(appmstid)  Like @search  

  end



GO
/****** Object:  StoredProcedure [dbo].[DiamondNew]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from DiamondMst where sponsard in(select     srno from DiamondMst where AppmstRegNo='GL221388')

--select top 1 * from appmst where appmstregno='GL230146'
--[DiamondNew] 'GL230146', '0'
--set @SRno=isnull((select     srno from DiamondMst where AppmstRegNo='GL221388' order by srno ),0)
CREATE proc  [dbo].[DiamondNew](@AppMstRegNo varchar(50), @DiamondID varchar(50))  
AS
begin
Declare @SRno bigint, @regno varchar(20)
if (@DiamondID='0')
begin
set @SRno=isnull((select  top 1  srno from DiamondMst where AppmstRegNo=@AppMstRegNo order by srno),0)
end
else
begin
set @SRno=isnull((select   srno from DiamondMst where DiamondID=@DiamondID),0)
 
end

 if @SRno=0
 begin
 
 SELECT  dbo.DiamondMst.Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName 
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.Srno=@SRno
 SELECT  dbo.DiamondMst.Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName 
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.Srno=@SRno
 SELECT  dbo.DiamondMst.Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName 
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.Srno=@SRno
 SELECT  dbo.DiamondMst.Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName 
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.Srno=@SRno
return;
 end
 

SELECT  dbo.DiamondMst.Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName 
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.Srno=@SRno
	 

SELECT    Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName   
FROM dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
where dbo.DiamondMst.sponsard=@SRno

					 

SELECT Srno,  dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName   
FROM  dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.sponsard in(SELECT  Srno  FROM dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON 
dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid where dbo.DiamondMst.sponsard=@SRno)

						  
						  
SELECT  Srno, dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName  
FROM  dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
where dbo.DiamondMst.sponsard in(SELECT Srno  FROM  dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.sponsard in(SELECT  Srno  FROM dbo.AppMst RIGHT OUTER JOIN dbo.DiamondMst ON 
dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid where dbo.DiamondMst.sponsard=@SRno))

END
GO
/****** Object:  StoredProcedure [dbo].[DiamondProc]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[DiamondProc] 'GL129579'    
    --select * from DiamondMst    
  -- select * from appmst    
CREATE procedure  [dbo].[DiamondProc] ( @appmstregno varchar(50))                                                                              
as                                   
Begin 
	DECLARE @appmstid BIGINT 
	DECLARE @totalSponPair INT=0 
	DECLARE @parentSrno BIGINT 
	DECLARE @DaimoundID varchar(50) ,@rank int   

	SELECT @totalSponPair=dbo.[MyDirectSponsarPair](@appmstregno) 
	if(@totalSponPair>9) 
	BEGIN
		
		SET @rank=@totalSponPair/10 
		select @appmstid=appmstid from appmst(nolock) where AppMstRegNo=@appmstregno 
		IF(@rank>0 AND NOT EXISTS(SELECT 1 FROM DiamondMst(NOLOCK) where appmstid=@appmstid and [rank]=@rank))
		BEGIN 
			EXECUTE [DaimoundID] @DaimoundID out   

			--find parent srno 
			SELECT @parentSrno=ISNULL(MIN(srno),0) FROM DiamondMst a(nolock) 
			left join 
			(SELECT SponsarD,count(1) as cnt from DiamondMst(nolock) group by SponsarD ) as b
			on a.srno=b.SponsarD where isnull(b.cnt,0)<4 

			INSERT INTO DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, [Rank] ,DOE,GetLevel,Jf)    
			VALUES(@appmstid,@appmstregno, @DaimoundID, @parentSrno, @rank,getdate(),0,@totalSponPair) 

		END 
	END 

	

	/*                           
	declare @appmstid bigint    
	set @appmstid= (select appmstid from appmst with (NOLOCK) where appmstRegno=@appmstregno)    
	Declare @SP bigint, @SCk bigint, @TSonsar bigint, @TDiamondCt bigint ,@Pmore bigint   
 
	declare @DaimoundID varchar(50)    
	Execute [DaimoundID] @DaimoundID out    
	set @TSonsar = (select  DSponsarNew from appmst with (NOLOCK) where appmstid=@appmstid)  
	set @SCk =@TSonsar % 20   
	set @Pmore=  COALESCE(@TSonsar / NULLIF(20,0), 0)
	   
	DEclare @FirstCount bigint    
	set @FirstCount =Isnull((select   count(SponsarD) from DiamondMst with (NOLOCK)),0)       
	if @FirstCount=0    
	begin    
		insert into DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, Rank ,DOE)    
		values(@appmstid,@appmstregno, @DaimoundID, 0, 0,getdate())    
		return;    
	end   
    
	declare @SponsarD bigint, @CT bigint    
	set @SponsarD =Isnull((select  top 1  SponsarD from DiamondMst order by srno DESC),0)    
	set @CT=(select    isnull(Count(*),0) from DiamondMst  with (NOLOCK) where SponsarD=@SponsarD)    
    
	if @CT=4    
	begin    
		set @SponsarD= @SponsarD+1    
		insert into DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, Rank ,DOE)    
		values(@appmstid,@appmstregno, @DaimoundID, @SponsarD, 0,getdate())    
	end    
	else    
	begin    
		if @SponsarD=0    
		begin    
			set @SponsarD=1    
		end    
		insert into DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, Rank ,DOE)    
		values(@appmstid,@appmstregno, @DaimoundID, @SponsarD, 0,getdate())    
	end    
	update appmst set   DSponsarNew=@SCk where appmstregno= @appmstregno    
	*/
end    
 
GO
/****** Object:  StoredProcedure [dbo].[DiamondProc_My]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[DiamondProc] 'GL129579'    
    --select * from DiamondMst    
  -- select * from appmst    
CREATE procedure  [dbo].[DiamondProc_My] ( @appmstregno varchar(50))                                                                              
as                                   
Begin 
	DECLARE @appmstid BIGINT 
	DECLARE @totalSponPair INT=0 
	DECLARE @parentSrno BIGINT 
	DECLARE @DaimoundID varchar(50) ,@rank int   

	SELECT @totalSponPair=dbo.[MyDirectSponsarPair](@appmstregno) 
	if(@totalSponPair>9) 
	BEGIN
		
		SET @rank=@totalSponPair/10 

		IF(@rank>0 AND NOT EXISTS(SELECT 1 FROM DiamondMst(NOLOCK) where appmstid=@appmstid and [rank]=@rank))
		BEGIN 
			EXECUTE [DaimoundID] @DaimoundID out   

			--find parent srno 
			SELECT @parentSrno=ISNULL(MIN(srno),0) FROM DiamondMst a(nolock) 
			left join 
			(SELECT SponsarD,count(1) as cnt from DiamondMst(nolock) group by SponsarD ) as b
			on a.srno=b.SponsarD where isnull(b.cnt,0)<4 

			INSERT INTO DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, [Rank] ,DOE,GetLevel,Jf)    
			VALUES(@appmstid,@appmstregno, @DaimoundID, @parentSrno, @rank,getdate(),1,@totalSponPair) 

		END 
	END 

	

	/*                           
	declare @appmstid bigint    
	set @appmstid= (select appmstid from appmst with (NOLOCK) where appmstRegno=@appmstregno)    
	Declare @SP bigint, @SCk bigint, @TSonsar bigint, @TDiamondCt bigint ,@Pmore bigint   
 
	declare @DaimoundID varchar(50)    
	Execute [DaimoundID] @DaimoundID out    
	set @TSonsar = (select  DSponsarNew from appmst with (NOLOCK) where appmstid=@appmstid)  
	set @SCk =@TSonsar % 20   
	set @Pmore=  COALESCE(@TSonsar / NULLIF(20,0), 0)
	   
	DEclare @FirstCount bigint    
	set @FirstCount =Isnull((select   count(SponsarD) from DiamondMst with (NOLOCK)),0)       
	if @FirstCount=0    
	begin    
		insert into DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, Rank ,DOE)    
		values(@appmstid,@appmstregno, @DaimoundID, 0, 0,getdate())    
		return;    
	end   
    
	declare @SponsarD bigint, @CT bigint    
	set @SponsarD =Isnull((select  top 1  SponsarD from DiamondMst order by srno DESC),0)    
	set @CT=(select    isnull(Count(*),0) from DiamondMst  with (NOLOCK) where SponsarD=@SponsarD)    
    
	if @CT=4    
	begin    
		set @SponsarD= @SponsarD+1    
		insert into DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, Rank ,DOE)    
		values(@appmstid,@appmstregno, @DaimoundID, @SponsarD, 0,getdate())    
	end    
	else    
	begin    
		if @SponsarD=0    
		begin    
			set @SponsarD=1    
		end    
		insert into DiamondMst(appmstid, appmstregno,DiamondID, SponsarD, Rank ,DOE)    
		values(@appmstid,@appmstregno, @DaimoundID, @SponsarD, 0,getdate())    
	end    
	update appmst set   DSponsarNew=@SCk where appmstregno= @appmstregno    
	*/
end    
 
GO
/****** Object:  StoredProcedure [dbo].[DiamondTree]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DiamondTree]  '0', 'GA00124979' 
--select * from DiamondMst where srno=131

--select * from DiamondMst where sponsard in(select     srno from DiamondMst where AppmstRegNo='GL846197')
CREATE proc  [dbo].[DiamondTree](@DiamondID varchar(50), @AppMstRegNo varchar(50))  
as
begin

Declare @SRno bigint, @regno varchar(20)

if (@DiamondID='0')
begin
	set @SRno=isnull((select  top 1  srno from DiamondMst where AppmstRegNo=@AppMstRegNo order by srno),0)
end
else
begin
	set @SRno=isnull((select   srno from DiamondMst where DiamondID=@DiamondID),0)
end

if @SRno =0
begin
	SELECT    top 1   * from DiamondMst		where  Srno=0
	SELECT    top 1  * from  DiamondMst 	where  Srno=0
	SELECT    top 1 * from  DiamondMst 		where  Srno=0
	SELECT    top 1  * from DiamondMst 		where  Srno=0
	return
end
----set @SRno=Isnull((select  top 1  srno from DiamondMst) ,0)
--select @SRno=srno from DiamondMst  where DiamondID=@DiamondID

SELECT    top 1 dbo.DiamondMst.Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName 
 FROM dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
where dbo.DiamondMst.Srno=@SRno

SELECT    top 4 Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName  
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
where dbo.DiamondMst.Sponsard=@SRno
 

SELECT    top 16 Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName   
FROM            dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
where dbo.DiamondMst.Sponsard in(SELECT    Srno
			FROM  dbo.AppMst RIGHT OUTER JOIN
			dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
			where dbo.DiamondMst.Sponsard=@SRno)
  


	 
						  
SELECT    top 64 Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName   
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
where dbo.DiamondMst.Sponsard in(SELECT  Srno  
FROM  dbo.AppMst RIGHT OUTER JOIN
dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
where dbo.DiamondMst.Sponsard in(SELECT    Srno
	FROM  dbo.AppMst RIGHT OUTER JOIN
	dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid
	where dbo.DiamondMst.Sponsard=@SRno))
 


end
GO
/****** Object:  StoredProcedure [dbo].[DiamondTreeNew]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DiamondTreeNew]'DIGL419790'
--select * from DiamondMst
CREATE proc  [dbo].[DiamondTreeNew](@DiamondID varchar(50))  
as
begin
Declare @SRno bigint  

select @SRno=srno from DiamondMst  where DiamondID=@DiamondID

SELECT    top 1 dbo.DiamondMst.Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName 
 into temp1st FROM            dbo.AppMst RIGHT OUTER JOIN
                         dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid 
						  where dbo.DiamondMst.Srno=@SRno
	select * from temp1st					 
						  

						 SELECT    top 4 Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName  into temp2nd
FROM            dbo.AppMst RIGHT OUTER JOIN
                         dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid

						 where dbo.DiamondMst.Sponsard=(select srno from temp1st)

					 select * from temp2nd


SELECT    top 16 Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName  into temp3nd
FROM            dbo.AppMst RIGHT OUTER JOIN
                         dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid

						 where dbo.DiamondMst.Sponsard in(select srno from temp2nd)

						  select *  from temp3nd

						  
SELECT    top 64 Srno,   dbo.AppMst.AppMstRegNo, dbo.DiamondMst.DiamondID, dbo.DiamondMst.DOE, dbo.AppMst.AppMstFName  into temp4nd
FROM            dbo.AppMst RIGHT OUTER JOIN
                         dbo.DiamondMst ON dbo.AppMst.AppMstID = dbo.DiamondMst.Appmstid

						 where dbo.DiamondMst.Srno in(select srno from temp3nd)
						 select * from temp4nd
					 drop table temp2nd
					 	 drop table temp1st
							 drop table temp3nd
							  drop table temp4nd
					-- select * from DiamondMst


end
GO
/****** Object:  StoredProcedure [dbo].[DioamountAccher]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  create proc [dbo].[DioamountAccher]
  as
  begin

SELECT      dbo.GetProfilePic(AppMst.AppMstRegNo) as ProfilePic , dbo.AppMst.AppMstFName, dbo.AppMst.AppMstState, dbo.AppMst.AppMstCity
FROM            dbo.VPTran INNER JOIN
                         dbo.AppMst ON dbo.VPTran.AppmstId = dbo.AppMst.AppMstID
						 where VPTran.banktranremarks='Diamond Bonus' and VPTran.BankTranAmount=0

						 end
GO
/****** Object:  StoredProcedure [dbo].[directcheck1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[directcheck1](@AppMstRegNo nvarchar(50),@k varchar(50))                        
as                        
begin            
declare @count int        
declare @regno varchar(50)        
select @regno=AppMstRegNo from AppMst where SponsorID=@AppMstRegNo      
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@regno
  
)                     
select AppMstRegNo,UPPER(AppMstFName) AS AppMstFName,AppMstLeftRight,SponsorID,ParentID,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,appmstpaid,@count as cnt,jamount,convert(varchar(20),appmstdoj,103) as doj from   
AppMst where SponsorID=@AppMstRegNo and  AppMstid>@k     
    
                   
end





GO
/****** Object:  StoredProcedure [dbo].[directcheck4]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[directcheck4](@AppMstRegNo nvarchar(50),@k varchar(50))                        
as                        
begin            
declare @count int        
declare @regno varchar(50)        
select @regno=AppMstRegNo from AppMst where SponsorID=@AppMstRegNo      
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@regno
  
)                     
select AppMstRegNo,UPPER(AppMstFName) AS AppMstFName,AppMstLeftRight,SponsorID,ParentID,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,appmstpaid,@count as cnt,jamount,convert(varchar(20),appmstdoj,103) as doj from AppMst where SponsorID=@AppMstRegNo and  AppMstid>@k     
    
                   
end





GO
/****** Object:  StoredProcedure [dbo].[directcheck6]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[directcheck6](@AppMstRegNo nvarchar(50),@k varchar(50))                        
as                        
begin            
declare @count int        
declare @regno varchar(50)        
select @regno=AppMstRegNo from AppMst where SponsorID=@AppMstRegNo      
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@regno
  
)                     
select AppMstRegNo,UPPER(AppMstFName) AS AppMstFName,AppMstLeftRight,SponsorID,ParentID,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,appmstpaid,@count as cnt,jamount,convert(varchar(20),appmstdoj,103) as doj
 from   
AppMst where SponsorID=@AppMstRegNo and  AppMstid>@k     
    
                   
end





GO
/****** Object:  StoredProcedure [dbo].[directcheck8]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[directcheck8](@AppMstRegNo nvarchar(50),@k varchar(50))                        
as                        
begin            
declare @count int        
declare @regno varchar(50)        
select @regno=AppMstRegNo from AppMst where SponsorID=@AppMstRegNo      
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@regno
  
)                     
select AppMstRegNo,UPPER(AppMstFName) AS AppMstFName,AppMstLeftRight,SponsorID,ParentID,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,appmstpaid,@count as cnt,jamount,convert(varchar(20),appmstdoj,103) as doj
 from   
AppMst where SponsorID=@AppMstRegNo and  AppMstid>@k     
    
                   
end





GO
/****** Object:  StoredProcedure [dbo].[DirectIncome]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
          --SELECT DBO.CheckBlanceTop(3,100)            
   --exec  [DirectIncome] 2,100 , 0.3929      
     
           
CREATE procedure [dbo].[DirectIncome] @AppMstId int ,@amount float , @Amountrate float                      
as                               
begin                               
declare @dincome float,@joinfor int,@perPointFirstTwoDirect float,@perPointAfterTwoDirect float , @cvamount float                            
declare @s nvarchar(50),@directCount int,@isElegible int,@getdate datetime                                  
declare @sCode int                               
declare @paid int ,@ypin int                               
set @dincome=0                             
set @directCount=0                             
set @isElegible=0                             
set @getdate =dbo.GetServerDate()                         
                                           
select @joinfor=joinfor ,@s=sponsorid  from appmst where appmstid=@AppMstId                                                  
select @paid=appmstpaid , @sCode=appmstid from appmst where appmstregno=@s                                           
select @directCount=COUNT(*) from CauseId where userid=@sCode and PaymentCause='L'                                  
set @dincome= @amount*5/100                        
                        
if @paid=1                        
begin                        
if(@dincome>0)                         
begin                   
    
 if @Amountrate<1    
 begin    
 set  @cvamount = @dincome/@Amountrate    
 end    
 else      
 begin    
 set  @cvamount = @dincome*@Amountrate    
 end                
          
     insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible,effectdate)                                            
     values(@sCode,@AppMstId,'M',@dincome,@amount,@isElegible,@getdate)                         
     declare @balance float                        
    select @balance= Isnull(dbo.getVPbalance(@sCode),0)                        
    declare @MainBalance float                        
    set @MainBalance= @balance+@cvamount                        
      
   
 insert into VpTran (appmstid,banktranmode,paidappmstid,BankTranDate,BankTranAmount,BankTranBalance, OutAmount, BankTranRemarks, dollar)                             
    values (@sCode,22,@AppMstId,dbo.GetServerDate(),@cvamount,@cvamount+@balance,@Amountrate,'Direct Income', @dincome)                 
                        
                           
end                              
end                        
                        
end     
   
  
GO
/****** Object:  StoredProcedure [dbo].[DirectIncome_temp]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[DirectIncome_temp] @AppMstId int ,@amount float                                 
as                                  
begin                                 
declare @dincome float                
declare @jf float                
declare @s nvarchar(50)                              
declare @sCode int                              
declare @paid int,@iselegible int,@getdate datetime                   
set @dincome=0                 
set @paid=0     
set @iselegible=1   
set @getdate=dateadd(MINUTE,330,GETUTCDATE()) 
select @jf=joinfor ,@s=sponsorid  from appmst where appmstid=@AppMstId                                  
select @paid=appmstpaid , @sCode=appmstid from appmst where appmstregno=@s                                
--direct income is 2% of topup amt                
set @dincome=@amount*0.02                     
if(@dincome>0 and @sCode is not null)                 
begin                            
 if(exists(select srno from Sharemst where Amount>0 and Appmstid=@sCode))    
  set @iselegible=1    
  else      
  set @iselegible=0     
  insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible,effectdate)                            
  values(@sCode,@AppMstId,'d',@dincome,@amount,@paid,@getdate)                                  
end       
end





GO
/****** Object:  StoredProcedure [dbo].[directTree]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[directTree](@regno varchar(50),@appmstid int)                    
as                    
begin                    
select appMstRegNo,appmstid,AppMstFName,(select count(*) from appmst where sponsorid=@regno and appmstid>@appmstid) as totalsponsor,          
(Select count(*) from apptransponsor where ParentId =(select appmstid FROM appmst WHERE appmstregno=@regno)) as cnt,convert(varchar(20),appmstdoj,103) as doj,jamount,          
(select isnull(sum(s.amount),0) from sharemst s inner join apptransponsor t on s.appmstid=t.appmstid and t.parentid =a.appmstid) as investment,appmstpaid          
 from AppMst a where appMstRegNo=@regno                    
select top 3 AppMstRegNo,appmstid,AppMstFName,AppMstLeftRight,SponsorID,ParentID,(select count(*) from appmst where sponsorid=a.appmstregno and appmstid>@appmstid) as totalsponsor,          
(Select count(*) from apptransponsor where ParentId =a.appmstid) as cnt,convert(varchar(20),appmstdoj,103) as doj,jamount,          
(select isnull(sum(s.amount),0) from sharemst s inner join apptransponsor t on s.appmstid=t.appmstid and t.parentid =a.appmstid) as investment,appmstpaid          
 from AppMst a where SponsorID=@regno and appmstid>@appmstid order by appmstid                   
create table #temp(id int identity(1,1),regno varchar(50))                    
insert into #temp select top 3 appmstregno from AppMst where SponsorID=@regno and appmstid>@appmstid order by appmstid                    
select top 3 AppMstRegNo,appmstid,AppMstFName,AppMstLeftRight,SponsorID,ParentID,(select count(*) from appmst where sponsorid=a.appmstregno) as totalsponsor,          
(Select count(*) from apptransponsor where ParentId =a.appmstid) as cnt,convert(varchar(20),appmstdoj,103) as doj,jamount,          
(select isnull(sum(s.amount),0) from sharemst s inner join apptransponsor t on s.appmstid=t.appmstid and t.parentid =a.appmstid) as investment   ,appmstpaid       
 from AppMst a where SponsorID=(select regno from #temp where id=1) order by              
 appmstid                    
select top 3 AppMstRegNo,appmstid,AppMstFName,AppMstLeftRight,SponsorID,ParentID,(select count(*) from appmst where sponsorid=a.appmstregno ) as totalsponsor,          
(Select count(*) from apptransponsor where ParentId =a.appmstid) as cnt,convert(varchar(20),appmstdoj,103) as doj,jamount,          
(select isnull(sum(s.amount),0) from sharemst s inner join apptransponsor t on s.appmstid=t.appmstid and t.parentid =a.appmstid) as investment ,appmstpaid         
 from AppMst a where SponsorID=(select regno from #temp where id=2) order by              
 appmstid                    
select top 3 AppMstRegNo,appmstid,AppMstFName,AppMstLeftRight,SponsorID,ParentID,(select count(*) from appmst where sponsorid=a.appmstregno) as totalsponsor,          
(Select count(*) from apptransponsor where ParentId =a.appmstid) as cnt,convert(varchar(20),appmstdoj,103) as doj,jamount,          
(select isnull(sum(s.amount),0) from sharemst s inner join apptransponsor t on s.appmstid=t.appmstid and t.parentid =a.appmstid) as investment,appmstpaid          
 from AppMst a where SponsorID=(select regno from #temp where id=3) order by              
 appmstid                    
drop table #temp              
end





GO
/****** Object:  StoredProcedure [dbo].[directTree2]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[directTree2](@regno varchar(50),@appmstid int)                
as                
begin                
select appMstRegNo,appmstid,AppMstFName,(select count(*) from appmst where sponsorid=@regno and appmstid>@appmstid) as totalsponsor,        
(Select count(*) from apptransponsor where ParentId =a.appmstid) as cnt,convert(varchar(20),appmstdoj,103) as doj,jamount,        
(select isnull(sum(s.amount),0) from sharemst s inner join apptransponsor a on s.appmstid=a.appmstid and a.parentid =a.appmstid) as investment,appmstpaid        
 from AppMst a where appMstRegNo=@regno                
select top 3 AppMstRegNo,appmstid,AppMstFName,AppMstLeftRight,SponsorID,ParentID,(select count(*) from appmst where sponsorid=a.appmstregno and appmstid>@appmstid) as totalsponsor,        
(Select count(*) from apptransponsor where ParentId =a.appmstid) as cnt,convert(varchar(20),appmstdoj,103) as doj,jamount,        
(select isnull(sum(s.amount),0) from sharemst s inner join apptransponsor a on s.appmstid=a.appmstid and a.parentid =a.appmstid) as investment,appmstpaid        
 from AppMst a where SponsorID=@regno and appmstid>@appmstid order by appmstid                
end





GO
/****** Object:  StoredProcedure [dbo].[docList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[docList](@regno varchar(50) )  
AS
begin
		select ImageName, CASE status  WHEN 0 THEN 'Not Approved'  ELSE 'Approved' END as status from scanDocs where  userid=@regno  and DocType=1
		select ImageName, CASE status  WHEN 0 THEN 'Not Approved'  ELSE 'Approved' END as status from scanDocs where  userid=@regno  and DocType=2
		select ImageName, CASE status  WHEN 0 THEN 'Not Approved'  ELSE 'Approved' END as status from scanDocs where  userid=@regno  and DocType=3

END
 
GO
/****** Object:  StoredProcedure [dbo].[downlinechque1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[downlinechque1](@from int ,@to int,@payoutno int,@regno varchar(50))        
as        
begin       
create table #temp(regno varchar(50),fname varchar(50),lname varchar(50),amount decimal(18,2),paymenttrandraftid int,paymenttrandraftno int,paymenttodate datetime,pno int)      
insert into #temp select  a.appmstregno,a.appmstfname,a.appmsttitle as name,p.DispachedAmt,p.PaymentTranDraftid,p.paymenttrandraftno,p.paymenttodate,p.payoutno from PaymentTranDraft p , appmst a where p.appmstid=a.appmstregno and    a.appmstregno not in (
  
select regno from downlineprintedcheque where payoutno=@payoutno and parentid=@regno ) and p.payoutno=@payoutno and p.appmstid  in (select a.appmstregno from apptransponsor apt ,appmst a  where a.appmstid=apt.appmstid and apt.ParentId in (SELECT appmstid FROM appmst WHERE appmstregno=@regno)) order by a.appmstid       
--update paymenttrandraft set  downlinechq=1 where paymenttrandraftid>=@from and paymenttrandraftid<=@to and payoutno=@payoutno        
insert into downlineprintedcheque(regno,paymenttodate,name,amount,payoutno,parentid) select regno as regno,paymenttodate,lname+space(2)+fname as name,amount,pno,@regno from #temp where  paymenttrandraftid>=@from and paymenttrandraftid<=@to       
    
select regno as regno,paymenttrandraftno,convert(char(8),paymenttodate,3) as paymenttodate ,fname as name,'** '+C244323_moneybhandar.NameNum(amount)+' Only **'as dispachedAmtwords,stuff(amount,1,0,'**') as dispachedamt from #temp where  paymenttrandraftid>=@from and paymenttrandraftid<=@to       
end





GO
/****** Object:  StoredProcedure [dbo].[DownlineFranchise]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[DownlineFranchise](@regno varchar(50),@search varchar(50)=null)              
as                          
begin                          
--returns list of downline non franchise member of franchise id              
declare @query varchar(max)     
/*     
declare @appid int,@isfranchise bit                
SELECT @appid=appmstid FROM appmst WHERE appmstregno=@regno and IsFranchise=1               
*/     
set @query='Select AppMst.AppMstRegNo,UPPER(AppMst.AppMstFName) as name,appmst.jamount as jamount, convert(char(20),appmst.appmstdoj,103) as AppmstDOJ,     
(select isnull(SUM(DispachedAmt),0) from PayoutMst where appmstid=AppMst.AppMstID) as Payout,'+ schema_name()+'.getbalance(AppMst.AppMstID)  as banktranbalance     
from AppMst inner join franchisemst f on f.franchiseId=appmst.franchiseId Where f.FranchiseCode  ='''+ @regno +''' and AppMst.AppMstRegNo like '''+ @search +''' Order by AppMstId'     
exec(@query)     
     
end





GO
/****** Object:  StoredProcedure [dbo].[DownlineOfUser]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[DownlineOfUser](@mindate datetime,@maxdate datetime,@search varchar(50))               
as               
begin       
                
Select a.Epassword,a.AppmstPassword,a.AppMstID,a.AppMstRegNo,a.appmstprimaryphone,a.appmstmobile,UPPER(a.appmstaddress1) AS appmstaddress1,                 
a.userdob,UPPER(a.nom_name) AS nom_name,UPPER(a.nom_rela) AS nom_rela,UPPER(a.ifc) AS ifc,upper(a.micr) as micr,a.appmstpincode,UPPER(a.distt) AS distt,                        
UPPER(a.acountno) AS acountno,UPPER(a.bankname) AS bankname,UPPER(a.branch) branch,UPPER(a.email) AS email,a.apppaiddatetime,UPPER(a.panno) AS panno,                         
UPPER(a.AppMstregno) AS AppMstregno,a.SponsorID,a.parentid,   
 

                     
UPPER(a.AppmstTitle) +space(1)+UPPER(a.AppmstFName) as name,UPPER(a.AppMstCity) AS AppMstCity,UPPER(a.AppMstState) AS AppMstState,                        
AppMstDOJ=CONVERT(char(20),a.AppMstDOJ,103),Joinfor=a.joinfor, a.Producttype ,                 
sts=case a.appmstactivate when 1 then 'Activated' when 0 then 'De-Activated' end ,
(select roicount from sharemst where Appmstregno=a.Appmstregno and amount>0) as ROI,  
(select case when roicount=0 then 'Active' else 'De-Active' end from sharemst where Appmstregno=a.Appmstregno and amount>0) as ROIStatus
from appmst a where (case when LEN(@search)<=2 and (CAST(FLOOR(CAST(a.appmstdoj as float)) as datetime) between CAST(FLOOR(CAST(@mindate as float)) as datetime) and CAST(FLOOR(CAST(@maxdate as float)) as datetime))                 
 then 1 when LEN(@search)>2 and(a.AppMstRegNo like @search or a.AppMstFName like @search) then 1 else 0 end)=1           
Order by AppMstId                 
                
             
end 




GO
/****** Object:  StoredProcedure [dbo].[DownlineReport]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[DownlineReport](@regno varchar(50),@mindate datetime,@maxdate datetime,@type int,@datetype int,@paid int)                                              
as                                              
begin                              
declare @appid int                                    
--SELECT @appid=appmstid,@isfranchise=IsFranchise FROM appmst WHERE appmstregno=@regno          
SELECT @appid=appmstid FROM appmst WHERE appmstregno=@regno                                                          
                            
--all downline                                 
if(@type=-1 and @datetype=1)                            
begin             
          
select a.appmstid ,a.AppMstMobile ,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,a.appmstdoj as AppmstDOJ,a.SponsorID,(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,          
(select isnull(convert(varchar(50),max(doe),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from     
 AppMst a  where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and       
a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)) and CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between @mindate and @maxdate  order by a.AppMstDOJ                
          
          
                                     
        
end                      
                  
                  
if(@type=-1 and @datetype=2)                            
begin          
          
select a.appmstid, a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,convert(varchar(20),a.appmstdoj,121) as AppmstDOJ,a.SponsorID,          
(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,          
isnull(convert(varchar(50),max(s.doe),121),'No Top Up')  as topupdate,          
 isnull(sum(s.Amount),0) as jAmount           
 from appmst a  inner join Sharemst s on s.Appmstid=a.appmstid           
where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and      a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)) and 
CAST(FLOOR(CAST(s.doe as float)) as datetime) between @mindate and @maxdate           
 group by a.AppMstMobile,a.appmstid,a.AppMstRegNo,a.AppMstFName,a.jamount,a.AppmstDOJ,a.SponsorID order by max(s.doe)                       
end                             
--left downline                             
if(@type=0 and @datetype=1)                            
begin          
          
select a.appmstid,a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,a.appmstdoj as AppmstDOJ,a.SponsorID,(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,          
(select isnull(convert(varchar(50),max(doe),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from      
 AppMst a  where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and      a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)and AppMstLeftRight=0) and         
CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between @mindate and @maxdate  order by a.AppMstDOJ                
end  
if(@type=1 and @datetype=1)                            
begin          
          
select a.appmstid,a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,a.appmstdoj as AppmstDOJ,a.SponsorID,(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,          
(select isnull(convert(varchar(50),max(doe),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from      
 AppMst a  where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and      a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)and AppMstLeftRight=1) and         
CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between @mindate and @maxdate  order by a.AppMstDOJ                
end  

if(@type=0 and @datetype=2)                            
begin          
          
select a.appmstid,a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount, a.appmstdoj  as AppmstDOJ,a.SponsorID,          
(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,         
isnull(convert(varchar(50),max(s.doe),121),'No Top Up')  as topupdate,          
 isnull(sum(s.Amount),0) as jAmount           
 from appmst a  inner join Sharemst s on s.Appmstid=a.appmstid           
where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and      a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)and AppMstLeftRight=0) and CAST(FLOOR(CAST(s.doe as float)

) as datetime) between @mindate and @maxdate           
 group by a.AppMstMobile, a.appmstid,a.AppMstRegNo,a.AppMstFName,a.jamount,a.AppmstDOJ,a.SponsorID order by max(s.doe)          
     
          
end                           
--right downline                             
if(@type=0 and @datetype=1)                            
begin           
          
select a.appmstid,a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,a.appmstdoj as AppmstDOJ,a.SponsorID,(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,          
(select isnull(convert(varchar(50),max(doe),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from      
 AppMst a   where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and      a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)and AppMstLeftRight=1) and         
CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between @mindate and @maxdate  order by a.AppMstDOJ                
end                        
if(@type=1 and @datetype=2)                            
begin          
          
select a.appmstid,a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount, a.appmstdoj  as AppmstDOJ,a.SponsorID,          
(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,          
isnull(convert(varchar(50),max(s.doe),121),'No Top Up')  as topupdate,          
 isnull(sum(s.Amount),0) as jAmount           
 from appmst a  inner join Sharemst s on s.Appmstid=a.appmstid           
where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and      a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)and AppMstLeftRight=1) and CAST(FLOOR(CAST(s.DOE  as float

)) as datetime) between @mindate and @maxdate           
 group by a.AppMstMobile, a.appmstid,a.AppMstRegNo,a.AppMstFName,a.jamount,a.AppmstDOJ,a.SponsorID order by max(s.doe)          
end                    
end





GO
/****** Object:  StoredProcedure [dbo].[DownlineReportNew]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DownlineReportNew] 'global', '12/13/2018 12:00:00 AM', '12/13/2018 12:00:00 AM', -1, 1, 0    
CREATE procedure  [dbo].[DownlineReportNew](@regno varchar(50),@mindate datetime,@maxdate datetime,@type int, @paid int, @jAmount float)                                                    
as                                                    
begin                                    
declare @appid int                                          
--SELECT @appid=appmstid,@isfranchise=IsFranchise FROM appmst WHERE appmstregno=@regno                
SELECT @appid=appmstid FROM appmst WHERE appmstregno=@regno                                                                
                                  
if @jAmount=0 BEGIN Set @jAmount = null END                                  
if @paid=0                                   
begin                   
       
   if @type=-1    
   begin            
select a.appmstid ,a.AppMstMobile ,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,CASE WHEN a.jamount  IN (0) THEN 'Founder PV'   
  ELSE CONVERT(varchar(100), Cast(a.jamount as decimal(38, 0)))  
END as JType   ,a.appmstdoj as AppmstDOJ,a.SponsorID,(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,                
(select isnull(convert(varchar(50),max(doe),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from           
 AppMst a  where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and             
a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno))   and CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between @mindate and @maxdate  order by a.AppMstDOJ                      
    end      
    
 else    
   begin            
select a.appmstid ,a.AppMstMobile ,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,CASE WHEN a.jamount  IN (0) THEN 'Founder PV'   
  ELSE CONVERT(varchar(100), Cast(a.jamount as decimal(38, 0)))  
END as JType   ,a.jamount,a.appmstdoj as AppmstDOJ,a.SponsorID,(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,                
(select isnull(convert(varchar(50),max(doe),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from           
 AppMst a  where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and             
a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)) and AppMstLeftRight in(@type) and CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between @mindate and @maxdate  order by a.AppMstDOJ    
  
                  
    end     
end        
    
else    
    
begin    
        
     
    if @type=-1    
    begin         
select a.appmstid,a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,  
  
a.jamount,  
CASE WHEN a.jamount  IN (0) THEN 'Founder PV'   
  ELSE CONVERT(varchar(100), Cast(a.jamount as decimal(38, 0)))  
END as JType      ,  
  
 a.appmstdoj  as AppmstDOJ,a.SponsorID,                
(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,               
isnull(convert(varchar(50),max(s.doe),121),'No Top Up')  as topupdate,                
 isnull(sum(s.Amount),0) as jAmount                 
 from appmst a  inner join Sharemst s on s.Appmstid=a.appmstid                 
where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and      a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)and AppMstLeftRight in(1,0)) and CAST(FLOOR(CAST(s.doe as 
  
float)    
) as datetime) between @mindate and @maxdate        
    
 And a.jamount = ISNULL(@jAmount, a.jamount)                 
 group by a.AppMstMobile, a.appmstid,a.AppMstRegNo,a.AppMstFName,a.jamount,a.AppmstDOJ,a.SponsorID order by max(s.doe)                
end           
    
else    
begin    
select a.appmstid,a.AppMstMobile,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,  
  
CASE WHEN a.jamount  IN (0) THEN 'Founder PV'   
  ELSE CONVERT(varchar(100), Cast(a.jamount as decimal(38, 0)))  
END as JType   , a.appmstdoj  as AppmstDOJ,a.SponsorID,                
(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,               
isnull(convert(varchar(50),max(s.doe),121),'No Top Up')  as topupdate,                
 isnull(sum(s.Amount),0) as jAmount                 
 from appmst a  inner join Sharemst s on s.Appmstid=a.appmstid                 
where  (case when @paid in(0,1) and a.Appmstpaid=@paid then 1 else 1 end)=1 and       
 a.appmstid in(select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno)and   
 AppMstLeftRight =@type) and CAST(FLOOR(CAST(s.doe as float)    
) as datetime) between @mindate and @maxdate         
    
 And a.jamount = ISNULL(@jAmount, a.jamount)                 
 group by a.AppMstMobile, a.appmstid,a.AppMstRegNo,a.AppMstFName,a.jamount,a.AppmstDOJ,a.SponsorID order by max(s.doe)     
end                 
  end        
 end 
GO
/****** Object:  StoredProcedure [dbo].[downlineturnover]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[downlineturnover] (@appmstregno varchar(50),@min datetime,@max datetime)                                        
as          
begin          
set nocount on                                       
 --sno",appmstregno",Totalamount",turnover                                        
 declare @appmstid int                                        
 select @appmstid=appmstid from appmst where appmstregno=@appmstregno           
select a.appmsttitle+space(1)+a.appmstfname as uname,t.appmstregno,t.totalamount as totalamount,t.turnover as turnover from        
(                                     
(select upper(appmstregno) as appmstregno,isnull(sum(amount),0) as Totalamount,                                        
                     
(select isnull(sum(amount),0)+ isnull(sum(s.amount),0) from sharemst inner join apptransponsor on sharemst.appmstid=apptransponsor.appmstid and (CAST(FLOOR(CAST(sharemst.doe as float)) as datetime) between @min and @max) and                               
  
  apptransponsor.parentid in(select appmstid from appmst where appmstregno=s.appmstregno)) as turnover                                         
 from sharemst s                      
 where appmstid in(select appmstid from apptransponsor where parentid=@appmstid) and  appmstid in(select appmstid from apptransponsor where parentid=@appmstid and sponsorlevel=1) and                                
 CAST(FLOOR(CAST(doe as float)) as datetime) between @min and @max                                                                
 group by appmstregno)                
                
 union                         
                
(select appmstregno,0 as TotalAmount,sum(amount) as turnover                                   
 from sharemst s                        
where CAST(FLOOR(CAST(doe as float)) as datetime) between @min and @max and                      
 appmstid in(select appmstid from apptransponsor where parentid in(select appmstid from apptransponsor where parentid=@appmstid and sponsorlevel=1 and appmstid not in(select appmstid from sharemst)) and sponsorlevel=1)                         
 group by appmstregno)                         
                
union                        
                
(select (select appmstregno from appmst where appmstid=apptransponsor.appmstid) as appmstregno,0 as TotalAmount,0 as turnover from apptransponsor where parentid=@appmstid and sponsorlevel=1 and appmstid not in(select appmstid from sharemst)               
  
    
      
       
and                       
not exists (select appmstid from sharemst where appmstid in (select appmstid from apptransponsor where parentid in (select appmstid from apptransponsor where parentid=@appmstid and sponsorlevel=1 and appmstid not in (select appmstid from sharemst))  
 and   
 sponsorlevel=1)))                  
                     
union                      
                
(select upper(appmstregno) as appmstregno,0 as Totalamount,                                        
 (select isnull(sum(amount),0)+ isnull(sum(0),0) from sharemst inner join apptransponsor on sharemst.appmstid=apptransponsor.appmstid and  (CAST(FLOOR(CAST(sharemst.doe as float)) as datetime) between @min and @max) and                      
  apptransponsor.parentid in(select appmstid from appmst where appmstregno=s.appmstregno)) as turnover                                         
 from sharemst s                      
 where  appmstid in(select appmstid from apptransponsor where parentid=@appmstid  and sponsorlevel=1) and                                
 CAST(FLOOR(CAST(doe as float)) as datetime) not between @min and @max and appmstid not in(select appmstid from sharemst where CAST(FLOOR(CAST(doe as float)) as datetime) between @min and @max )                                                             
  
 group by appmstregno)        
        
  )       t,appmst a where t.appmstregno=a.appmstregno         
end





GO
/****** Object:  StoredProcedure [dbo].[downlineturnovernew]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[downlineturnovernew] (@appmstregno varchar(50),@min datetime,@max datetime)
as  
begin  
declare @appmstid int  
select @appmstid=appmstid from appmst where appmstregno=@appmstregno  
select @appmstregno as id ,sum(amount) as turnover from sharemst where appmstid in (@appmstid)   
union  
select ap.appmstregno,sum(amount) from sharemst s,apptransponsor a ,appmst ap  
where a.parentid in   
(select appmstid from apptransponsor where sponsorid in (@appmstid)) and s.appmstid=a.appmstid and a.parentid=ap.appmstid and CAST(FLOOR(CAST(s.doe as float)) as datetime) between @min and @max 
group by ap.appmstregno   
end





GO
/****** Object:  StoredProcedure [dbo].[duplicateRNO]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[duplicateRNO](@rno int)                                
as                                
begin                                
                            
set xact_abort on                                
                    
     
begin transaction                                
        
   select * from requestmst where receiptno=@rno  
commit transaction                     
                          
                           
 end





GO
/****** Object:  StoredProcedure [dbo].[editBrand]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE procedure [dbo].[editBrand](@BrandId  int,@Brand varchar(50),@flag int output  ,@userid varchar(50))              







as              







begin             







set @flag=0                              







 set nocount on                                                                                                             







 set xact_abort on                  







 begin transaction                      







 if not exists(select * from BrandMst where brand=@brand and userid=@userid  )                  

 
 begin            
 
update  BrandMst set Brand=@Brand, userid=@userid  where srno=@BrandId           







 set @flag=11           







 end         







else        







begin        







select @flag=status from BrandMst where  brand=@brand          







end                   







 if(@flag=11)                                  







 commit transaction                                  







 else                                   







 rollback transaction                                              







                        







end










GO
/****** Object:  StoredProcedure [dbo].[editBrandStatus]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[editBrandStatus](@BrandId int,@status int )            



as            



begin              



 set nocount on                                                                                                         



 set xact_abort on                                                                                                                                           



 begin transaction                 



 update BrandMst set Status=@status where srno=@BrandId                   



 commit transaction                                 



end





GO
/****** Object:  StoredProcedure [dbo].[editCategory]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[editCategory](@CategoryId  varchar(50),@CategoryName varchar(50),@Ptype varchar(50),@flag varchar(100) output)                    



  



as                    



  



begin                



  



set @flag=0           



  



set @flag='1'   



  



if not exists(select catid from CategoryMst where catId=@CategoryId)                          



  



begin  



  



 set @flag='Category not exists.'  



  



 return;   



  



end   



  



if exists(select catid from CategoryMst where catId<>@CategoryId and CatName=@CategoryName )                          



  



begin  



  



 set @flag='Category name already exists.'  



  



 return;   



  



end   



  



          



  



 set nocount on    



  



 set xact_abort on    



  



 begin transaction   



  



begin try         



 



 begin    



  



 update  CategoryMst set CatName=@CategoryName,protype=@Ptype  where CatId=@CategoryId       



  



 end          



  



 set @flag='1'             



  



                                 



  



 commit transaction                                          



  



end try   



  



begin catch  



  



 Rollback transaction   



  



end catch  



  



end 





GO
/****** Object:  StoredProcedure [dbo].[editCategoryStatus]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE procedure [dbo].[editCategoryStatus](@CategoryId int,@status int )                

  

as                

  

begin                  

  

 set nocount on                                                                                                             

  

 set xact_abort on                                                                                                                                               

  

 begin transaction                     

  

 update CategoryMst set Status=@status where CatId=@CategoryId                

  

 update SubCategoryMst set Status=@status where CatId=@CategoryId         

  

 update ShopProductMst set Status=@status where SubCatId in (select SubCatId from SubCategoryMst where CatId=@CategoryId) or Catid in ( select CatId from CategoryMst where CatId=@CategoryId)  

  

 update brandmst set Status=@status where brand =(select CatName from CategoryMst where CatId=@CategoryId )            

  

 commit transaction                                     

  

end  

  
   


GO
/****** Object:  StoredProcedure [dbo].[editchqROI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[editchqROI](@chequedate   datetime,@dispachedamt float,@PaymenttranDraftId int)              
              
as               
begin           
update  paymenttrandraftROI set chequedate=@chequedate,dispachedamt=@dispachedamt where PaymenttranDraftId=@PaymenttranDraftId        
        
end





GO
/****** Object:  StoredProcedure [dbo].[editchqROITB]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[editchqROITB](@chequedate   datetime,@dispachedamt float,@PaymenttranDraftId int)                  
as               
begin           
update  paymenttrandraftROITB set chequedate=@chequedate,dispachedamt=@dispachedamt where PaymenttranDraftId=@PaymenttranDraftId        
end





GO
/****** Object:  StoredProcedure [dbo].[editPackSize]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[editPackSize](@PackSizeId  int,@PackSize varchar(50),@flag int output)                



as                



begin         



set @flag=0        



                



 set nocount on                                                                                                               



 set xact_abort on                    



 begin transaction                        



 if not exists(select * from PackSizeMst where PackSize=@PackSize )                    



 begin              



update  PackSizeMst set PackSize=@PackSize where srno=@PackSizeId                   



 set @flag=11             



 end           



else          



begin          



select @flag=Status from PackSizeMst where  PackSize=@PackSize         



end                     



 if(@flag=11)                                    



 commit transaction                                    



 else                                     



 rollback transaction                                                      



                          



end





GO
/****** Object:  StoredProcedure [dbo].[editPackSizeStatus]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[editPackSizeStatus](@PackSizeId int,@status int )              



as              



begin                



 set nocount on                                                                                                           



 set xact_abort on                                                                                                                                             



 begin transaction                   



 update PackSizeMst set Status=@status where srno=@PackSizeId                     



 commit transaction                                   



end





GO
/****** Object:  StoredProcedure [dbo].[editProduct]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE procedure  [dbo].[editProduct](@offertype int,@ProductId varchar(50),

@Title varchar(50),@ProductName varchar(50),  @PackSize int,@PackSizeUnitId int,

@BrandId int,@Price float,@MRP float, 

@RedeemPoints float,@Quantity int,

@Description varchar(max),
@userid varchar(50),
@flag varchar(100) out )     







as                              















begin 







declare @Discount float 







set @flag='' 















if(exists(Select ProductId from ShopProductMst where productid=@ProductId)) 































begin































set @Discount=0  






























if(@MRP<>0)                 
 begin           
  set @Discount= ((@MRP-@Price) / @MRP )*100     
 end 
 else
 begin
 set @MRP=0
  set @Discount=0
 end



























update  ShopProductMst set OfferType=@offertype,Title=@Title,ProductName=@ProductName,PackSize=@PackSize,





PackSizeUnitId=@PackSizeUnitId,BrandId=@BrandId,Price=@Price,Mrp=@MRP,

RedeemPoints=@RedeemPoints,

Quantity=@Quantity,

[Description]=@Description,Discount=@Discount 
,userid=@userid
where ProductId=@ProductId 































set @flag='1'                  































end































else































	set @flag='The product not exists.'































































































end











GO
/****** Object:  StoredProcedure [dbo].[editProductStatus]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[editProductStatus](@ProductId int,@status int )              







as              







begin                







 set nocount on                                                                                                           







 set xact_abort on                                                                                                                                             







 begin transaction                   







 update ShopProductMst set Status=@status where ProductId=@ProductId                     







 commit transaction                                   







end







GO
/****** Object:  StoredProcedure [dbo].[editRequest]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[editRequest](@Srno int,@regno varchar(50),@status int,@comment varchar(200),@Amount float,@rno varchar(50),@admin varchar(100))                              
as                              
begin                              
                          
set xact_abort on                              
                  
                 
           declare @amt float     
 declare @receiptno float     
 declare @sta int     
 declare @cmt varchar(200)     
begin transaction                              
            select @amt=amount,@sta =status,@cmt=comment,@receiptno=receiptno  from requestmst where srno=@Srno and appmstregno=@regno     
      update requestmst set   amount=@Amount,status =@status,comment=@comment,receiptno=@rno where srno=@Srno and appmstregno=@regno    
    insert into RequestMstModifications (requestNo,AppmstRegno,Amount,Amount1,Status,Status1,comment,comment1,ReceiptNo,ReceiptNo1,admin)values(@Srno,@regno,@amt,@Amount,@sta,@status,@cmt,@comment,@receiptno,@rno,@admin)    
commit transaction                   
                        
                         
 end





GO
/****** Object:  StoredProcedure [dbo].[editSub2Category]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[editSub2Category](@SubCategoryId varchar(50),@Sub2CategoryId varchar(50),@SubCategoryName varchar(50) )            

as            

begin              

update  Sub2CategoryMst set SubCatName=@SubCategoryName where SubCatId=@SubCategoryId and Sub2CatId=@Sub2CategoryId                     

end




GO
/****** Object:  StoredProcedure [dbo].[editSub2CategoryStatus]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure[dbo].[editSub2CategoryStatus](@SubCategoryId int,@status int )            

as            

begin              

 set nocount on                                                                                                         

 set xact_abort on                                                                                                                                           

 begin transaction                 

 update Sub2CategoryMst set Status=@status where Sub2CatId=@SubCategoryId     

 update shopProductMst set Status=@status where Sub2CatId=@SubCategoryId                              

 commit transaction                              

end




GO
/****** Object:  StoredProcedure [dbo].[editSubCategory]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editSubCategory](@SubCategoryId varchar(50),
@ImageName varchar(50),  @SubCategoryName varchar(50) )                



as                



begin                  



update  SubCategoryMst set SubCatName=@SubCategoryName, ImageName=@ImageName where SubCatId=@SubCategoryId                           



end










GO
/****** Object:  StoredProcedure [dbo].[editSubCategoryStatus]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[editSubCategoryStatus](@SubCategoryId int,@status int )            



as            



begin              



 set nocount on                                                                                                         



 set xact_abort on                                                                                                                                           



 begin transaction                 



 update SubCategoryMst set Status=@status where SubCatId=@SubCategoryId     



 update Sub2CategoryMst set Status=@status where SubCatId=@SubCategoryId     



 update ShopProductMst set Status=@status where SubCatId=@SubCategoryId                              



 commit transaction                              



end








GO
/****** Object:  StoredProcedure [dbo].[f_r_login]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[f_r_login](@userid varchar(50),@pwd varchar(50))  
as  
begin  
 SELECT fname,userid from Franchisereg where userID=@userid and password=@pwd    
end





GO
/****** Object:  StoredProcedure [dbo].[FastTrack]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   --*********************************Created  by  :Ajay kr        
   --*********************************Date on  :09-April-2014        
CREATE procedure [dbo].[FastTrack] (@regno varchar(50),@PlanTypeID int )                                                    
as         
 Begin Transaction      
 declare @FastTrackDate datetime,@getdate datetime,@Sappmstid int ,@BtranId int,@Bbalance float,@Abalance float,@Amt int,@Count int,@sponsorid varchar(50),@appmstid int ,@joinfor float     
 --set @getdate =DATEADD(minute,330,getutcdate())       
 set @getdate =getutcdate()          
 set nocount on           
 set xact_abort on          
  select @sponsorid=sponsorid,@appmstid=appmstid,@joinfor=joinfor from appmst where appmstRegNo=@regno      
  select @FastTrackDate=FastTrackDate,@Sappmstid=appmstid from appmst where appmstRegNo=@sponsorid      
  if(@FastTrackDate>=@getdate)      
  Begin       
     
    select @Amt=Points from PlanTypeMst where PlanTypeId =@PlanTypeID      
    if @PlanTypeID=1      
    Begin      
     update appmst set FastT1=isnull(FastT1,0)+1 where appmstRegNo=@sponsorid      
     select @Count=FastT1 from appmst where appmstRegNo=@sponsorid      
     if @Count>=3      
      if @Count %3=0      
       Begin      
			insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible)                                  
			values(@Sappmstid,@appmstid,'F',@Amt,@joinfor,1)    
        
			update appmst set FastTrackDate=DateAdd(day, 7, @getdate) where appmstRegNo=@sponsorid  and appmstpaid=1    
       End      
    End      
    else if @PlanTypeID=2      
  update appmst set FastT2=isnull(FastT2,0)+1,FastTrackDate=DateAdd(day, 7, @getdate) where appmstRegNo=@sponsorid and appmstpaid=1      
    else if @PlanTypeID=3      
  update appmst set FastT3=isnull(FastT3,0)+1,FastTrackDate=DateAdd(day, 7, @getdate) where appmstRegNo=@sponsorid and appmstpaid=1     
 else if @PlanTypeID=4    
  update appmst set FastT4=isnull(FastT4,0)+1,FastTrackDate=DateAdd(day, 7, @getdate) where appmstRegNo=@sponsorid  and appmstpaid=1  
 else if @PlanTypeID=5  
  update appmst set FastT5=isnull(FastT5,0)+1,FastTrackDate=DateAdd(day, 7, @getdate) where appmstRegNo=@sponsorid and appmstpaid=1      
    if @PlanTypeID=2 or @PlanTypeID=3 or @PlanTypeID=4 or @PlanTypeID=5    
	  insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible)                                  
	  values(@Sappmstid,@appmstid,'F',@Amt,@joinfor,1)    
      
  End      
if(@@ERROR <>0)                                    
   Begin                                     
    RollBack Transaction                                    
    Return                                    
   End                                    
Commit Transaction   



GO
/****** Object:  StoredProcedure [dbo].[fetchAdmin]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[fetchAdmin]                                    
as                                    
begin                                    
select srno,username,password,name,
admintype=case admintype when 'a' then 'SUB ADMIN' end,
lock=case lock when '0' then 'UNLOCKED' when '1' then 'LOCKED' end,
img=case lock when '0' then 'openLock.png' when '1' then 'Lock.png' end
 from controlmst where admintype='a'                         
end





GO
/****** Object:  StoredProcedure [dbo].[finallist11]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finallist11] @payoutno int                                  
as                                    
select  distinct(a.appmstid),b.appmstregno,b.appmstmobile,b.appmstaddress1,b.bankname,b.branch,b.ifc,b.micr,b.panno,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1+space(13)+'State:'+b.appmststate+space(13)+'City:'+b.appmstcity+space(13)+'Ph:'+b.appmstmobile as address,a.jumboclub1amt,a.jumboclub2amt ,a.totalearning,a.dispachedamt,a.tds,a.handlingcharges,a.paymenttrandraftno,a.payoutno,a.Paid_Status from paymenttrandraft a,appmst b                                
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno order by a.paymenttrandraftno





GO
/****** Object:  StoredProcedure [dbo].[finallist12]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finallist12] @payoutno int                              
as                                
select  distinct(a.appmstid),b.appmstregno,b.appmstaddress1,b.bankname,b.branch,b.ifc,b.micr,b.panno,b.appmststate,b.appmstcity,b.AppmstFName,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1+space(13)+'State:'+b.appmststate+space(13)+'City:'+b.appmstcity+space(13)+'Ph:'+b.appmstmobile as address,a.jumboclub1amt,a.jumboclub2amt ,    
a.totalearning,a.dispachedamt,a.tds,b.appmstmobile,                                      
a.handlingcharges,a.paymenttrandraftno,a.payoutno,a.Paid_Status from paymenttrandraft a,appmst b                                  
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno order by  b.appmstfname





GO
/****** Object:  StoredProcedure [dbo].[finallist13]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finallist13] @payoutno int                              
as                                
select  distinct(a.appmstid),b.appmstregno,b.appmstmobile,b.appmstaddress1,b.bankname,b.branch,b.ifc,b.micr,b.panno,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1+space(13)+'State:'+b.appmststate+space(13)+'City:'+b.appmstcity+space(13)+'Ph:'+b.appmstmobile as address      
,a.jumboclub1amt,a.jumboclub2amt ,a.totalearning,a.dispachedamt,a.tds,b.appmstaddress1,                                      
a.handlingcharges,a.paymenttrandraftno,a.payoutno,a.Paid_Status from paymenttrandraft a,appmst b                                  
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno order by  a.totalearning





GO
/****** Object:  StoredProcedure [dbo].[finalpayout]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[finalpayout] '2020-08-16 11:08:42.537', ''                                 
   --select * from vptran                              
CREATE procedure[dbo].[finalpayout] (@max1 datetime,@flag varchar(100) out)                                 
as                                 
begin                                 
 declare @min1 datetime                                 
 declare @appmstid bigint,@b float,@direct float ,@franchise float ,@Referral float ,@maxdate datetime , @count int , @tax float,@oc float ,@c bigint,@fid bigint                                 
 declare @regno nvarchar(100),@pno numeric(18,0) ,@totalamt float,@dispatchamt float,@taxamt float, @ocamt float,@CPAmount float,@VPAmount float,@BtranId bigint,@Bbalance float                                 
 set @pno=0                                 
 set @c=0                                 
 set @fid=0                                 
select @maxdate=isnull(max(paytodate),'2015-05-05') from payoutdate                                 
set @min1=@maxdate+1                                 
 set nocount on                                 
 set xact_abort on                                 
 begin transaction                                 
  declare @d as datetime                                 
  select @d=(CAST(FLOOR(CAST(dbo.GetServerDate() as float)) as datetime)+1)                                 
  update paymentmst set startdate=@d                                 
  select @pno=isnull(max(payoutno),0)+1 from PayoutDate                                 
  select @tax=tax,@oc=oc from paymentmst                                 
  declare cur cursor for                                 
  select userid,isnull(b,0) as b,isnull(d,0) as d from                                 
  (select userid,paymentcause,amount from causeid where PaymentCause in('b','d') and iselegible=1 and Ckstatus=0 and CAST(Effectdate AS date) < CAST(@max1 AS date) ) as pivotabler PIVOT                                 
  (                                
 sum(Amount)                                 
 FOR paymentcause IN (b,d)                                 
 ) as PivotedTable order by userid                                 
  open cur                                 
 fetch next from cur into @appmstid,@b,@direct                                 
 while(@@FETCH_STATUS=0)                                 
 begin                                 
 --Binary,Direct and refferal income will be paid if appmstactivate=1                                 
if(exists(select appmstid from AppMst where AppMstID =@appmstid and appmstactivate=1))                                 
begin                                 
--*************************Capping start                                 
Declare @capingamt float,@PType int                                 
Set @capingamt=0                                 
 Set @capingamt=(select sum(JAmount) from appmst where appmstid=@appmstid)                                 
                                
 set @b=case when @b>@capingamt then @capingamt else @b end                                 
select @regno= appmstregno from appmst where appmstid=@appmstid                                 
                                 
 set @totalamt=@b+@direct                                 
  set @taxamt=0;                                 
 set @ocamt=0;                                 
                                
 Set @CPAmount=@totalamt                                 
 Set @VPAmount=@totalamt                               
                             
                               
if (@totalamt>0)                                 
  begin                                 
  insert into paymenttrandraft(payoutno,AppMstRegno ,CFL,CFR,NPL,NPR,TP,TPL,TPR,BFL,BFR,CPL,CPR,paymentfromdate,paymenttodate,chequedate,totalearning,                                 
dispachedamt,chequeamount,tds,handlingcharges,binaryamt,directAmt,jumboclub1amt,JumboClub2Amt,jumboclub3amt,JumboClub4Amt,appmstid,maturitydate,paymentdisplay,paid_status)                               
 values(@pno,@regno,0,0,0,0,0,0,0 ,0,0,0,0,@min1,@max1,@max1,@totalamt,@dispatchamt,@dispatchamt ,@taxamt , @ocamt,@b,@direct,@b*0.0,@b*1,@direct*0,@direct*1,@appmstid,dateadd(day,15,@max1),1,0 )                                 
  set @c=isnull(@c,0)+1                                 
  --select * from paymenttrandraft                                 
                       
------------Start Send to VP Wallet ----------------                              
                            
                
  --if(@dispatchamt>0)                                 
  --begin                                 
   declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float                                 
   select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid                       
   if @BtranIdR =0                                 
    begin                                 
     set @BbalanceR=0                                 
    end                                 
   else                                
    begin                                 
     select @BbalanceR=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR                                 
    end      
     
 declare @Amountrate float  
 
 set  @Amountrate =(select CRate from PaymentMst)   
  
 declare @Amountcv float    
 if @Amountrate<1        
begin        
set  @Amountcv = @totalamt/@Amountrate        
end        
else          
begin        
set  @Amountcv = @totalamt*@Amountrate        
end    
    
                             
 set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@Amountcv,0))                                 
 insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate, outamount, dollar)                                 
 values(@appmstid,22,@appmstid,@max1,isnull(@Amountcv,0),isnull(@balanceAmount,0),'Payout',@pno,0, DATEADD(MM,1, @max1 ),@Amountrate, @totalamt)                            
                             
end                          
                         
Update AppMst Set Cbfl=TotalNewLeft, Cbfr=TotalNewRight                                 
Update AppMst Set TotalNewLeft=0, TotalNewRight=0                                 
end                                 
-- end                                 
                                 
 fetch next from cur into @appmstid,@b,@direct                                 
 end                                 
  close cur                                 
  deallocate cur                                 
  if @c>0                                 
  begin                                 
                                 
 insert into payoutdate(payfromdate,paytodate,payoutno,currentdate)                                 
                                 
 values(@min1,@max1,@pno,@max1)                                 
                                 
 update paymenttranb set appcurrent=0                                 
                                 
 insert into paymenttranb values(@pno,@min1,@max1,1,@pno,0,0,300)                                 
                                 
 update causeid set Ckstatus=1                            
set @flag='1'                                 
end                                 
                                 
 else                                 
  begin                               
 set @flag='No one is elegible for the payout.'                                 
  update causeid set Ckstatus=1                    
  end                                    
commit transaction                                 
                                 
end 
GO
/****** Object:  StoredProcedure [dbo].[finalpayout_2]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   procedure[dbo].[finalpayout_2] (@max1 datetime,@flag varchar(100) out)                                     
as                                      
begin                                                                
declare @min1 datetime                                               
declare @appmstid bigint,@b float,@direct float ,@franchise float ,@Referral float ,@maxdate datetime , @count int , @tax float,@oc float  ,@c bigint,@fid bigint
declare @regno nvarchar(100),@pno numeric(18,0) ,@totalamt float,@dispatchamt float,@taxamt float, @ocamt float,@CPAmount float,@VPAmount float,@BtranId bigint,@Bbalance float                                      
declare @b1 float,@b2 float,@b3 float,@b4 float,@b5 float,@b6 float,@b7 float
declare @pb1 float,@pb2 float,@pb3 float,@pb4 float,@pb5 float,@pb6 float,@pb7 float
set @pno=0                                                        
set @c=0                               
set @fid=0                                                 
select @maxdate=isnull(max(paytodate),'2015-05-05') from payoutdate(NOLOCK)                                               
set @min1=@maxdate+1               
set nocount on                                                    
set xact_abort on                                                 
begin transaction                                         
	declare @d as datetime                                                                                                                                
	select @d=(CAST(FLOOR(CAST(getutcdate() as float)) as datetime)+1)
	update paymentmst set startdate=@d                                                                                                                  
	select @pno=isnull(max(payoutno),0)+1 from PayoutDate                                        
	select @tax=tax,@oc=oc from paymentmst                                                                                                          
	
	declare cur cursor for                                                                     
	select userid,
	isnull(d,0) as d,
	isnull(b,0) as b1,
	isnull(b2,0) as b2,
	isnull(b3,0) as b3,
	isnull(b4,0) as b4,
	isnull(b5,0) as b5,
	isnull(b6,0) as b6,
	isnull(b7,0) as b7
	from 
	(select userid,paymentcause,amount from causeid where PaymentCause in('d','b','b2','b3','b4','b5','b6','b7') and iselegible=1 and Ckstatus=0 and CAST(Effectdate AS date)=CAST(@max1 AS date)) as pivotabler PIVOT        
	(                                                                    
	 sum(Amount)                                                                    
	 FOR paymentcause IN (d,b,b2,b3,b4,b5,b6,b7)                                                                    
	) as PivotedTable order by userid 

	open cur                                                               
	fetch next from cur into @appmstid,@direct,@b1,@b2,@b3,@b4,@b5,@b6,@b7 
	while(@@FETCH_STATUS=0)                                         
	begin                                                                     
		--Binary,Direct and refferal income will be paid if appmstactivate=1       
		if(exists(select 1 from AppMst(NOLOCK) where AppMstID =@appmstid and appmstactivate=1))                         
		begin    
			select @pb1=0,@pb2=0,@pb3=0,@pb4=0,@pb5=0,@pb6=0,@pb7=0
			--*************************Capping start  
			Declare @capingamt float,@PType int 
			Set @capingamt=0  
			--select @capingamt=1000
			--set @b=case when @b>@capingamt then @capingamt  else @b end     
			select @b1=CASE when @b1>DailyCap then DailyCap else @b1 end from StarBinary(NOLOCK) where StarId=1 
			select @b2=CASE when @b2>DailyCap then DailyCap else @b2 end from StarBinary(NOLOCK) where StarId=2 
			select @b3=CASE when @b3>DailyCap then DailyCap else @b3 end from StarBinary(NOLOCK) where StarId=3 
			select @b4=CASE when @b4>DailyCap then DailyCap else @b4 end from StarBinary(NOLOCK) where StarId=4 
			select @b5=CASE when @b5>DailyCap then DailyCap else @b5 end from StarBinary(NOLOCK) where StarId=5 
			select @b6=CASE when @b6>DailyCap then DailyCap else @b6 end from StarBinary(NOLOCK) where StarId=6 
			select @b7=CASE when @b7>DailyCap then DailyCap else @b7 end from StarBinary(NOLOCK) where StarId=7 
			--****************************************************Capping End   
			select 
			@pb1=ISNULL(SUM(jumboclub1amt),0),
			@pb2=ISNULL(SUM(JumboClub2Amt),0),
			@pb3=ISNULL(SUM(jumboclub3amt),0),
			@pb4=ISNULL(SUM(JumboClub4Amt),0),
			@pb5=ISNULL(SUM(JumboClub5Amt),0),
			@pb6=ISNULL(SUM(JumboClub6Amt),0),
			@pb7=ISNULL(SUM(JumboClub7Amt),0) 
			from paymenttrandraft(Nolock) 
			WHERE appmstid=@appmstid 

			select @b1=CASE when @pb1>=ElegibleBinary4NextStart then @b1 when @pb1+(@b1/2.0)<=ElegibleBinary4NextStart then @b1/2.0 else (ElegibleBinary4NextStart-@pb1)+(@b1-((ElegibleBinary4NextStart-@pb1)*2.0)) end from StarBinary(NOLOCK) where StarId=1 
			select @b2=CASE when @pb2>=ElegibleBinary4NextStart then @b2 when @pb2+(@b2/2.0)<=ElegibleBinary4NextStart then @b2/2.0 else (ElegibleBinary4NextStart-@pb1)+(@b2-((ElegibleBinary4NextStart-@pb2)*2.0)) end from StarBinary(NOLOCK) where StarId=2 
			select @b3=CASE when @pb3>=ElegibleBinary4NextStart then @b3 when @pb3+(@b3/2.0)<=ElegibleBinary4NextStart then @b3/2.0 else (ElegibleBinary4NextStart-@pb1)+(@b3-((ElegibleBinary4NextStart-@pb3)*2.0)) end from StarBinary(NOLOCK) where StarId=3 
			select @b4=CASE when @pb4>=ElegibleBinary4NextStart then @b4 when @pb4+(@b4/2.0)<=ElegibleBinary4NextStart then @b4/2.0 else (ElegibleBinary4NextStart-@pb1)+(@b4-((ElegibleBinary4NextStart-@pb4)*2.0)) end from StarBinary(NOLOCK) where StarId=4 
			select @b5=CASE when @pb5>=ElegibleBinary4NextStart then @b5 when @pb5+(@b5/2.0)<=ElegibleBinary4NextStart then @b5/2.0 else (ElegibleBinary4NextStart-@pb1)+(@b5-((ElegibleBinary4NextStart-@pb5)*2.0)) end from StarBinary(NOLOCK) where StarId=5 
			select @b6=CASE when @pb6>=ElegibleBinary4NextStart then @b6 when @pb6+(@b6/2.0)<=ElegibleBinary4NextStart then @b6/2.0 else (ElegibleBinary4NextStart-@pb1)+(@b6-((ElegibleBinary4NextStart-@pb6)*2.0)) end from StarBinary(NOLOCK) where StarId=6 
			select @b7=CASE when @pb7>=ElegibleBinary4NextStart then @b7 when @pb7+(@b7/2.0)<=ElegibleBinary4NextStart then @b7/2.0 else (ElegibleBinary4NextStart-@pb1)+(@b7-((ElegibleBinary4NextStart-@pb7)*2.0)) end from StarBinary(NOLOCK) where StarId=7 

			select @regno= appmstregno from appmst(nolock) where  appmstid=@appmstid          
			set @totalamt=@direct+@b1+@b2+@b3+@b4+@b5+@b6+@b7                               
			set @taxamt=0;     
			set @ocamt=(@oc*@totalamt)/100                           
			set @dispatchamt=@totalamt-(@taxamt+@ocamt)                 
			Set @CPAmount=@totalamt 
  			Set @VPAmount=@totalamt 
			if (@dispatchamt>0) 
			begin 
				insert into paymenttrandraft(payoutno,AppMstRegno ,CFL,CFR,NPL,NPR,TP,TPL,TPR,BFL,BFR,CPL,CPR,paymentfromdate,paymenttodate,chequedate,totalearning,          
				dispachedamt,chequeamount,tds,handlingcharges,binaryamt,directAmt,jumboclub1amt,JumboClub2Amt,jumboclub3amt,JumboClub4Amt,JumboClub5Amt,JumboClub6Amt,JumboClub7Amt,appmstid,maturitydate,paymentdisplay,paid_status)          
				values(@pno,@regno,0,0,0,0,0,0,0 ,0,0,0,0,@min1,@max1,@max1,@totalamt,@dispatchamt,@dispatchamt ,@taxamt , @ocamt,@b,@direct,@b1,@b2,@b3,@b4,@b5,@b6,@b7,@appmstid,dateadd(day,15,@max1),1,0 )          

				set @c=isnull(@c,0)+1           
				--select * from paymenttrandraft           
				Exec binaryLevelIncome  @appmstid, @dispatchamt, @pno, @max1
				------------Start Send  to VP Wallet ----------------                    
				if(@VPAmount>0)                         
				begin    
					declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float
					select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid      
					if @BtranIdR =0
					begin                                                                        
						set @BbalanceR=0
					end
					else
					begin
						select @BbalanceR=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR 
					end
					--set @balanceAmount   = @BbalanceR+@VPAmount
					set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@VPAmount,0))   
					insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                     
					values(@appmstid,3,@appmstid,@max1,isnull(@VPAmount,0),isnull(@balanceAmount,0),'Payout',@pno,0, DATEADD(MM,1, @max1))                           
				end         
				Update AppMst Set Cbfl=TotalNewLeft, Cbfr=TotalNewRight,TotalNewLeft=0, TotalNewRight=0                    
				--Update AppMst Set TotalNewLeft=0, TotalNewRight=0        
			end                                                                                              
		end                  
		fetch next from cur into @appmstid,@direct,@b1,@b2,@b3,@b4,@b5,@b6,@b7 
	end                        
	close cur                                                 
	deallocate cur                                                                                                  
 if @c>0            
 begin                                                                            
	insert into payoutdate(payfromdate,paytodate,payoutno,currentdate)                                                                         
	values(@min1,@max1,@pno,@max1)                                                                                                                            
	update paymenttranb set appcurrent=0                                                                                                 
	insert into paymenttranb values(@pno,@min1,@max1,1,@pno,0,0,300) 
	update causeid set Ckstatus=1 where    CAST(Effectdate  AS date) =   CAST(@max1  AS date)
	--Calculate star level for the member
	EXECUTE uspCalculateStar 
	EXECUTE uspCalculateStarIncome 

	set @flag='1'                  
 end                                           
 else                                           
	set @flag='No one is elegible for the payout.'                                               
commit transaction             
end 
GO
/****** Object:  StoredProcedure [dbo].[finalpayout1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[finalpayout1] (@max1 datetime,@flag varchar(100) out)                                     







as                                      







begin                                                                















declare @min1 datetime                                               







declare @appmstid int,@b float,@direct float ,@franchise float ,@Referral float ,@maxdate datetime , @count int , @tax float,@oc float  ,@c int,@fid int







declare @regno nvarchar(100),@pno numeric(18,0) ,@totalamt float,@dispatchamt float,@taxamt float, @ocamt float,@CPAmount float,@VPAmount float,@BtranId int,@Bbalance float                                      















                                       







set @pno=0                                                        







set @c=0                               







set @fid=0                                                 







select @maxdate=isnull(max(paytodate),'2015-05-05') from payoutdate                                               







set @min1=@maxdate+1               















                                     







set nocount on                                                    







set xact_abort on                                                 







begin transaction                                         







if(@min1>@maxdate and @max1>=@min1 and @max1<=CAST(FLOOR(CAST(getutcdate()  as float)) as datetime))                   







begin                                                                                                          















	declare @d as datetime                                                                                                                                







	select @d=(CAST(FLOOR(CAST(getutcdate() as float)) as datetime)+1)







	update paymentmst set startdate=@d                                                                                                                  







	select @pno=isnull(max(payoutno),0)+1 from PayoutDate                                        







	select @tax=tax,@oc=oc from paymentmst                                                                                                          















	declare cur cursor for                                                                     















	select userid,isnull(b,0) as b,isnull(d,0) as d from                                                                     















	(select userid,paymentcause,amount from causeid where PaymentCause in('b','d') and iselegible=1 and  CAST(FLOOR(CAST(causeid.effectdate as float)) as datetime) between @min1 and @max1 ) as pivotabler PIVOT        















	(                                                                    







	 sum(Amount)                                                                    







	 FOR paymentcause IN (b,d)                                                                    







	) as PivotedTable order by userid                                                                     







	open cur                                                               







	fetch next from cur into @appmstid,@b,@direct                                         















																		







	while(@@FETCH_STATUS=0)                                         







	begin                                                                     















	 --Binary,Direct and refferal income will be paid if appmstactivate=1       















	 















	 if(exists(select appmstid from AppMst where AppMstID =@appmstid and appmstactivate=1))                         















	 begin                              















	 --*************************Capping start  















		Declare @capingamt float,@PType int 















		Set @capingamt=0  















		select @PType=Pintype from Sharemst where Appmstid=@appmstid and amount>0  















		select @capingamt=capping from PlanTypeMst where PlanTypeId =@PType 	  

		

		set @b=case when @b>@capingamt then @capingamt  else @b end     





		









	--****************************************************Capping End   















	  select @regno= appmstregno from  appmst where  appmstid=@appmstid          















	  set @totalamt=@b+@direct                              















	  set @taxamt=0;--(@tax*@totalamt)/100        















	  set @ocamt=(@oc*@totalamt)/100                           















	  set @dispatchamt=@totalamt-(@taxamt+@ocamt)                                                                 















						  















	 --set @b=round(@b,0)                           



	 -- set @direct=round(@direct,0)                                                                             



	 -- set @franchise=round(@franchise,0)                                                   



	 -- set @Referral=round(@Referral,0)                                                                           



	 -- set @totalamt=round(@totalamt,0)          



	  Set @CPAmount=@totalamt *70 /100          



	 Set @VPAmount=@totalamt *30 /100          



	 -- set @taxamt=round(@taxamt,0)                                                                                                



	 -- set @ocamt=round(@ocamt,0)                                           



	 -- set @dispatchamt=round(@dispatchamt,0)                                                                                                          















	  if (@dispatchamt>0)                                                                                                      















	  begin                                                                                                      















	  insert into paymenttrandraft(payoutno,AppMstRegno ,CFL,CFR,NPL,NPR,TP,TPL,TPR,BFL,BFR,CPL,CPR,paymentfromdate,paymenttodate,chequedate,totalearning,          















	  dispachedamt,chequeamount,tds,handlingcharges,binaryamt,directAmt,jumboclub1amt,JumboClub2Amt,jumboclub3amt,JumboClub4Amt,appmstid,maturitydate,paymentdisplay,paid_status)          















	  values(@pno,@regno,0,0,0,0,0,0,0 ,0,0,0,0,@min1,@max1,@max1,@totalamt,@dispatchamt,@dispatchamt ,@taxamt , @ocamt,@b,@direct,@b*0.30,@b*0.70,@direct*0.30,@direct*0.70,@appmstid,dateadd(day,15,@max1),1,0 )          















	  set @c=isnull(@c,0)+1           















	  ------------Start Send  to CP Wallet ----------------                    















		if(@CPAmount>0)                         















		begin               















		  set @BtranId=0          















		  set @Bbalance=0          















		   select @BtranId=isnull(max(BankTranId),0) from CPTran where AppMstId=@appmstid                                                                              















		   select @Bbalance=isnull(BanktranBalance,0) from CPTran where appmstid=@appmstid and BankTranId=@BtranId                                                                         















		   set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@CPAmount,0))                 















		 insert into CPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId)                     















		 values(@appmstid,3,@appmstid,getutcdate(),isnull(@CPAmount,0),isnull(@Bbalance,0),'Payout',@pno,0)                           















		end           















		 ------------Start Send  to VP Wallet ----------------                    















		if(@VPAmount>0)                         















		begin            















				 















		 insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                     















		 values(@appmstid,3,@appmstid,getutcdate(),isnull(@VPAmount,0),isnull(@VPAmount,0),'Payout',@pno,0, DATEADD(MM,1, getutcdate()))                           















		end         















	  Update AppMst Set Cbfl=TotalNewLeft, Cbfr=TotalNewRight            















	   Update AppMst Set TotalNewLeft=0, TotalNewRight=0        















		   















	  end                                                                                              















	 end                  















	 fetch next from cur into @appmstid,@b,@direct                                 















	end                        















	close cur                                                 















	deallocate cur                                                                                                  















 if @c>0            















 begin                                                                            















insert into payoutdate(payfromdate,paytodate,payoutno,currentdate)                                                                         















  values(@min1,@max1,@pno,getutcdate())                                                                                                                            















  update paymenttranb set appcurrent=0                                                                                                 















  insert into paymenttranb values(@pno,@min1,@max1,1,@pno,0,0,300)                                                                                                             















                 















   set @flag='1'                  















          















 end                                           















 else                                           















  set @flag='No one is elegible for the payout.'                                               















end                                           















else                                                        















begin                                                       















 --commit transaction                                         















 set @flag='Invalid payout date entered.'                                           















 --return 1                                         















end             















commit transaction             















end 


































GO
/****** Object:  StoredProcedure [dbo].[finalROIlist11]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finalROIlist11] @payoutno int                                                
as                                                  
select  a.appmstid1,a.appmstid as regno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1,b.appmststate,b.appmstcity,b.appmstmobile as address,a.totalearning,            
a.dispachedamt,a.tds,a.handlingcharges,a.paymenttrandraftno,a.payoutno from paymenttrandraftROI a,appmst b                                              
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno and a.dispachedamt>0 order by a.paymenttrandraftno





GO
/****** Object:  StoredProcedure [dbo].[finalROIlist12]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finalROIlist12] @payoutno int                                                  
as                                                    
select  a.appmstid1,a.appmstid as regno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1,b.appmststate,b.appmstcity,b.appmstmobile as address,a.totalearning,            
              
a.dispachedamt,a.tds,a.handlingcharges,a.paymenttrandraftno,a.payoutno from paymenttrandraftROI a,appmst b                                                
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno and a.dispachedamt>0 order by name





GO
/****** Object:  StoredProcedure [dbo].[finalROIlist13]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finalROIlist13] @payoutno int                                                  
as                                                    
select  a.appmstid1,a.appmstid as regno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1,b.appmststate,b.appmstcity,b.appmstmobile as address,a.totalearning,            
              
a.dispachedamt,a.tds,a.handlingcharges,a.paymenttrandraftno,a.payoutno from paymenttrandraftROI a,appmst b                                                
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno and a.dispachedamt>0 order by  a.totalearning





GO
/****** Object:  StoredProcedure [dbo].[finalROITBlist11]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finalROITBlist11] @payoutno int                                                  
as                                                    
select  a.appmstid1,a.appmstid as regno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1,b.appmststate,b.appmstcity,b.appmstmobile as address,a.totalearning,              
a.dispachedamt,a.tds,a.handlingcharges,a.payoutno from paymenttrandraftROITB a,appmst b                                                
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno and a.dispachedamt>0 order by a.paymenttrandraftid





GO
/****** Object:  StoredProcedure [dbo].[finalROITBlist12]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finalROITBlist12] @payoutno int                                                    
as                                                      
select  a.appmstid1,a.appmstid as regno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1,b.appmststate,b.appmstcity,b.appmstmobile as address,a.totalearning,              
                
a.dispachedamt,a.tds,a.handlingcharges,a.payoutno from paymenttrandraftROITB a,appmst b                                                  
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno and a.dispachedamt>0 order by name





GO
/****** Object:  StoredProcedure [dbo].[finalROITBlist13]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[finalROITBlist13] @payoutno int                                                    
as                                                      
select  a.appmstid1,a.appmstid as regno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName as name,b.appmstaddress1,b.appmststate,b.appmstcity,b.appmstmobile as address,a.totalearning,              
                
a.dispachedamt,a.tds,a.handlingcharges,a.payoutno from paymenttrandraftROITB a,appmst b                                                  
 where a.appmstid=b.appmstRegno and a.payoutno=@payoutno and a.dispachedamt>0 order by  a.totalearning





GO
/****** Object:  StoredProcedure [dbo].[findpinsrno]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[findpinsrno]  @pinsrno int output                

 AS                

begin                

              

select  @pinsrno=max(pinsrno) from pinmst where allotedto!='0'           

if (@pinsrno is null)               

begin               

 select  @pinsrno=min(pinsrno) from pinmst            

end              

else                

begin              

 select  @pinsrno=min(pinsrno) from pinmst where allotedto='0'              

end          

select  @pinsrno          

end


GO
/****** Object:  StoredProcedure [dbo].[FirstIDTransfer]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[FirstIDTransfer] (@PregNo varchar(50),@cRegNo varchar(50),@Epwd varchar(50),@Amt float,@Reason varchar(max),@Type varchar(50)='',    
    
@Abalance float output,@flag varchar(100) output)                         
    
as                         
    
--Ip to Ip transfer           
    
if(exists(select appmstid from appmst where AppMstRegNo=@PregNo) and exists(select appmstid from appmst  where appmst.AppMstRegNo=@cRegNo))                        
    
begin                         
    
    
                  
    
 begin                        
    
    
    
  if(exists(select appmstid from AppMst where AppMstRegNo=@PregNo) and exists(select appmstid from AppMst where AppMstRegNo=@cRegNo))                    
    
  begin --check user exists                          
    
    
    
   declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@count int,@TranRemark varchar(100)                   
    
   select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo                         
    
   set @TranRemark='Transfer'                                                        
    
   select @AppMstEpwd=ePassword from AppMst where AppMstRegNo=@PregNo    
    
   select @CAppMstId=AppMstID from AppMst where AppMstRegNo=@cRegNo                                            
    
   declare @CtBalance float                         
    
   set @Bbalance=0                          
    
   set @Abalance=0                          
    
   set @CtBalance=0                         
    
   set @count=0                         
    
   if @Epwd=@AppMstEpwd and len(@Epwd)>5                                                                                                           
    
   begin                         
    
    
    
     declare @BtranId int, @CtranId int, @Tranid int    
    
     select @BtranId=max(BankTranId) from IPTran where AppMstId=@PAppMstId    
    
     select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@PAppMstId and BankTranId=@BtranId    
    
     select @CtranId=max(BankTranId) from IPTran where AppMstId=@CAppMstId    
    
     select @CtBalance=isnull(BanktranBalance,0) from IPTran where appmstid=@CAppMstId and BankTranId=@CtranId    
    
     if(@Amt>0 and @Bbalance>=@Amt)                                                             
    
     begin                                                          
    
    
    
      --BEGIN TRY --start try block                                         
    
     set xact_abort on                                                            
    
     begin transaction     
    
     --Smart Fund         
    
     if(@Type='SMARTFUND')                                                             
    
     begin                            
    
      --************************************Admin charge        
    
      --insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,    
    
      --bankTranStatus,payoutno,Reason)        
    
      --values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.05,0)),    
    
      --isnull(convert(numeric(18,2),@Abalance),0),'ADMIN-CHARGES',1,0,'')     
    
    
    
      set @Abalance=@Bbalance - @Amt                                                 
    
      insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,    
    
      bankTranStatus,Payoutno,tranCharge,Reason)    
    
      values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt*1,0),isnull(convert(numeric(18,2),@Abalance),0),    
    
      @TranRemark,1,0,0,@Reason)                                                                                  
    
    
    
      --************************************Transfer amount        
    
    
    
      set @CtBalance = @CtBalance + (@Amt*1)       
    
      insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,        
      bankTranStatus,payoutno,Reason)        
    
      values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*1,0)),    
    
      isnull(convert(numeric(18,2),@CtBalance),0),@TranRemark,1,0,'')                                
    
    
    
      set @flag='1';                                                       
    
      commit transaction                                                            
    
     End     
    
     --shopping Fund    
    
     if(@Type='SHOPPING')                                                             
    
     begin         
    
      declare @Balance float     
    
      set @Balance=0    
    
      select @CtranId=max(BankTranId) from loadtran where AppMstId=@CAppMstId    
    
      select @Balance=isnull(BanktranBalance,0) from loadtran where appmstid=@CAppMstId and BankTranId=@CtranId    
    
      set @Balance=isnull(@Balance,0)    
    
      --************************************Transfer amount        
    
    
    
      set @Balance = @Balance + ((@Amt*1) *60)      
    
      insert into loadtran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Reason)        
    
      values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*1,0)*60),    
    
      isnull(convert(numeric(18,2),@Balance),0),@TranRemark,'')       
    
      select @Tranid =IDENT_CURRENT('loadtran')    
    
    
    
      --************************************Admin charge        
    
      --insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,    
    
      --bankTranStatus,payoutno,Reason,Tranid)        
    
      --values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.05,0)),    
    
      --isnull(convert(numeric(18,2),@Abalance),0),'ADMIN-CHARGES',1,0,'',@Tranid)     
    
      set @Abalance=@Bbalance - @Amt                                                 
    
    
    
      insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,    
    
      bankTranStatus,Payoutno,tranCharge,Reason,Tranid)    
    
      values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt*1,0),isnull(convert(numeric(18,2),@Abalance),0),    
    
      @TranRemark,1,0,0,@Reason,@Tranid)                                                                                  
    
    
    
      set @flag='1';                                                       
    
      commit transaction                                                            
    
     End     
    
    end                                                                                             
    
    else                                                
    
    set @flag='Insufficient IP balance.'; --low amount                                                                                             
    
   end                                                                            
    
   else                                                                   
    
   set @flag='Invalid Transaction Password.';  -- E pwd invalid                                            
    
  end               
    
  else                                                            
    
  set @flag='Member not exists.';                                                             
    
 end                                                                                     
    
                                            
    
end                                                            
    
else                                                            
    
set @flag='Invalid User Names.'     

GO
/****** Object:  StoredProcedure [dbo].[fisttree]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--fisttree 'GA00000002'
CREATE proc [dbo].[fisttree](@AppMstRegNo varchar(50))
as
begin


select     AppMstRegNo,AppMstFName,AppMstLeftRight,SponsorID,ParentID,JoinFor,AppMstLeftTotal,AppMstRightTotal,carryleft,carryright,totalnewleft,totalnewright,joinfor,appmstpaid,
            convert(varchar(50),appmstdoj,103) as appmstdoj , isnull(starid,0) as starid  
			, isnull(ST.S2LTotal, 0) as S2LTotal, isnull(ST.S2RTotal,0) as S2RTotal,
isnull(ST.S3LTotal,0)as S3LTotal, isnull(ST.S3RTotal,0)as S3RTotal,
isnull(ST.S4LTotal,0) as S4LTotal,isnull(ST.S4RTotal,0)as S4RTotal,
isnull(ST.S5LTotal,0)as S5LTotal, isnull(ST.S5RTotal,0)as S5RTotal,
isnull(ST.S6LTotal,0)as S6LTotal, isnull(ST.S6RTotal,0) as S6RTotal,
 isnull(ST.S7LTotal,0) as S7LTotal, isnull(ST.S7RTotal,0) as S7RTotal  
			  from AppMst as A(NOLOCK) 
			  left join appmstStarTotal ST(NOLOCK) on a.AppMstID=st.appmstid  
			where appmstregno=@AppMstRegNo order by a.AppMstID

			end
GO
/****** Object:  StoredProcedure [dbo].[forgotuserepwd]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[forgotuserepwd]          
(          
@regno varchar(50)        
)                    
                    
as                    
begin             
 if Exists(select AppMstPassword,AppMstTitle+AppMstFName as membername,AppMstMobile   from appmst where AppMstRegNo=@regno)                   
select ePassword,AppMstTitle+AppMstFName as membername, AppMstMobile, email, AppMstPassword  from appmst where AppMstRegNo=@regno                    
end  
  
  
  

GO
/****** Object:  StoredProcedure [dbo].[FranchiseDashBoardData]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[FranchiseDashBoardData](@fuserid varchar(30))
AS
BEGIN 
DECLARE @Balance NUMERIC(18,2) 
declare @fid int,@isSuper BIT  
select @fid=FranchiseId ,@isSuper=IsSuperFranchise FROM  FranchiseMst (nolock) where UserId=@fuserid 

SELECT  @Balance=[dbo].[getBalanceFranchise](@fid)

select 
@Balance AS FBalance
,CASE WHEN @isSuper=1 THEN 'MAin-Franchise' ELSE 'Sub-Franchise' END AS FranchiseType
,P.SrNo AS ProductId
,P.ProductName
,ISNULL((SELECT BankTranBalance FROM FranchiseProductTran(NOLOCK) WHERE BankTranId=MAX(FP.bankTranId)),0) AS Balance
from 
FranchiseProductTran FP(NOLOCK)
RIGHT JOIN ProductMst P(nolock) on fp.ProductId=P.SrNo and P.isDeleted=0 
GROUP BY P.SrNo,P.ProductName 



END 
GO
/****** Object:  StoredProcedure [dbo].[FundRecharge]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[FundRecharge](@PregNo varchar(50),@mobile varchar(15),@Amt float,@status varchar(max),@circle varchar(100),                                

@optr varchar(100),@realAmt float=0,@recType varchar(50),@loadType int,@flag int output,@bal float output)           

as 

Begin

	declare @PAppMstId int,@CAppMstId int,@Bbalance float,@Abalance float,@AppMstEpwd varchar(50),@tranID int,@commision float ,        

	@LoadUsed varchar(50),@SBal float          

	select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo                                 

			

	-- Value of @loadType is 1 for the service load and 2 for payoutload wallet        

	set @tranID=0           

	set @commision=0           

	 --if recharge is success then deduct the amount, sucess format is 14629,SUCCESS,9.76                                

	if(@status like '%SUCCESS%')                                

	begin                                

	  declare @BtranId int, @CtranId int         

	  if(@loadType=1)        

	  begin        

			set @LoadUsed='SERVICE'                                                                             

			select @BtranId=max(BankTranId) from Loadtran where  AppMstId=@PAppMstId                                                                                        

			select @Bbalance=isnull(BanktranBalance,0) from Loadtran where appmstid=@PAppMstId and BankTranId=@BtranId                                                                                        

			select top 1 @SBal=isnull(combal,0) from Loadtran order by banktranid desc	

			set @SBal=isnull(@SBal,0)

			set @Abalance=@Bbalance - @Amt                                                                                    

			insert into Loadtran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,isretailer,ComBal)                              

			values (@PAppMstId,13,@PAppMstId,dateadd(minute,330,getutcdate()),@Amt,convert(numeric(18,2),@Abalance),'Recharge'+@mobile,0,@SBal-@Amt)                                            

			set @tranID=IDENT_CURRENT('Loadtran')         

	   end        

	   

	   set @bal=isnull(@Abalance,0)                                    

	 end                                

	   insert into rechargemst (appmstregno,mobile,amount,status,doe,circle,operator,BankTranId,ReType,LoadType)                                

	   values(@PregNo,@mobile,@Amt,@status,dateadd(minute,330,getutcdate()),@circle,@optr,@tranID,@recType,@loadtype)                                 

	   set @flag=1;  

	set @bal=isnull(@bal,0)   	   

 end                                                              


GO
/****** Object:  StoredProcedure [dbo].[fundrequeshistory]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst
--[DiamondNew] 'global', '0'
-- fundrequeshistory  'global'
create proc  [dbo].[fundrequeshistory](@regno varchar(50) )  
AS
begin
 select WalletRequestId,AppmstRegNo,Amount,convert(varchar(50),DOE,103) as DOE,CompanyAccNo,CompanyBank,UserAccNo,UserBank,TransactionNo,PaymentType, case status when 0 then 'panding'      when 1 then 'Done'   else  status end  as   status      from WalletRequestMst where AppMstRegNo= @regno


END
GO
/****** Object:  StoredProcedure [dbo].[Fundshopping]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Fundshopping]    

(    

 @Regno varchar(50),        

 @RAmount float,        

 @UseRAmount float,    

 @NetAmount float,    

 @CartId int,        

 @flag int output     

)    

as    

begin transaction    

 set @flag=1    

 declare @Getdate DateTime,@AppMstId int,@Bid int,@Bbalance float,@Abalance float    

 set @GetDate=dateadd(minute,330,getutcdate())    

 if(exists(select appmstid from appmst where AppMstRegno=@Regno))    

 begin    

  select @AppMstId=appmstid from appmst where AppMstRegno=@Regno    

  select @Bid=max(BankTranId) from Loadtran where isRetailer=0 and AppMstId=@AppMstId                          

  select @Bbalance=isnull(BanktranBalance,0) from Loadtran where AppMstId=@AppMstId and BankTranId=@Bid                          

  if(@Bbalance>=@NetAmount)    

  begin    
   set @Abalance=@Bbalance - @NetAmount                                                                                                              
   insert into Loadtran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,isretailer,TranNo,reason)                          
   values (@AppMstId,40,@AppMstId,@GetDate,@NetAmount,convert(numeric(18,2),@Abalance),'Shopping',0,0,@CartId)    

 ----------------------------------update appmst REvoucher column-----------------------------------------------    



   select @Abalance=revoucher from appmst where AppmstId=@AppMstid    
   set @Abalance=@Abalance-@UseRAmount    
   insert ReVoucherMst(AppMstRegNo,AppMstId,RAmount,UseRAmount,REVoucher,CatId,Dot,Remarks) values(@Regno,@AppMstId,@RAmount,@UseRAmount,@Abalance,@CartId,@GetDate,'Shopping')    

 -------------------------------update cartmst orderstatus column----------------------------------------------------          

   update cartmst set orderstatus=2 where cartid=@cartid and orderstatus=1          

    --------------------------------Update CartProductMst isdelete column---------------------------------------------------------          

   update CartProductMst set isdeleted=1 where cartid=@cartid and isdeleted=0   

   update Ordermst set isdeleted=1 where cartid=@cartid and isdeleted=0    

     ---********************************************* Shopping Commision distrubution 

		--Execute ShopingCommision @CartId, @Regno

  end    

  else    

  begin    

   set @flag=2    

    RollBack Transaction      

   return    

  end    

 end    

 else    

 begin    

 set @flag=0                            

     RollBack Transaction                          

     Return    

 end    

 if(@@error<>0)                          

   Begin                          

     set @flag=0                            

     RollBack Transaction                          

     Return                          

   End                          

 set @flag=1                              

 Commit Transaction 


GO
/****** Object:  StoredProcedure [dbo].[FundTransfer]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[FundTransfer] (@PregNo varchar(50),@cRegNo varchar(50),@Epwd varchar(50),@Amt float,@Reason varchar(max),@Type varchar(50)='',
@Abalance float output,@flag varchar(100) output)                     
as                     
--Ip to Ip transfer       
if(exists(select appmstid from appmst where AppMstRegNo=@PregNo) and exists(select appmstid from appmst  where appmst.AppMstRegNo=@cRegNo))                    
begin                     
              
	begin                    
		if(exists(select appmstid from AppMst where AppMstRegNo=@PregNo) and exists(select appmstid from AppMst where AppMstRegNo=@cRegNo))                
		begin --check user exists                      
			declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@count int,@TranRemark varchar(100)               
			select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo                     
			set @TranRemark='Transfer'                                                    
			select @AppMstEpwd=ePassword from AppMst where AppMstRegNo=@PregNo
			select @CAppMstId=AppMstID from AppMst where AppMstRegNo=@cRegNo                                        
			declare @CtBalance float                     
			set @Bbalance=0                      
			set @Abalance=0                      
			set @CtBalance=0                     
			set @count=0                     
			if @Epwd=@AppMstEpwd and len(@Epwd)>5                                                                                                       
			begin                     
				 declare @BtranId int, @CtranId int, @Tranid int
				 select @BtranId=max(BankTranId) from IPTran where AppMstId=@PAppMstId
				 select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@PAppMstId and BankTranId=@BtranId
				 select @CtranId=max(BankTranId) from IPTran where AppMstId=@CAppMstId
				 select @CtBalance=isnull(BanktranBalance,0) from IPTran where appmstid=@CAppMstId and BankTranId=@CtranId
				 if(@Amt>0 and @Bbalance>=@Amt)                                                         
				 begin                                                      
				  --BEGIN TRY --start try block                                     
					set xact_abort on                                                        
					begin transaction 
					--Smart Fund					
					if(@Type='SMARTFUND')                                                         
					begin                        
						----************************************Admin charge    
						--insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,
						--bankTranStatus,payoutno,Reason)    
						--values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.05,0)),
						--isnull(convert(numeric(18,2),@Abalance),0),'ADMIN-CHARGES',1,0,'') 
						 set @Abalance=@Bbalance - @Amt                                             
						
						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,
						bankTranStatus,Payoutno,tranCharge,Reason)
						values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),
						@TranRemark,1,0,0,@Reason)                                                                              
						--************************************Transfer amount    
						set @CtBalance = @CtBalance + (@Amt)   
						
						
						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,
						bankTranStatus,payoutno,Reason)    
						values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt,0)),
						isnull(convert(numeric(18,2),@CtBalance),0),@TranRemark,1,0,'')                            
						set @flag='1';            
						commit transaction                                                        
					End	
					--shopping Fund
					if(@Type='SHOPPING')                                                         
					begin     
						declare @Balance float 
						set @Balance=0
						select @CtranId=max(BankTranId) from loadtran where AppMstId=@CAppMstId
						select @Balance=isnull(BanktranBalance,0) from loadtran where appmstid=@CAppMstId and BankTranId=@CtranId
						set @Balance=isnull(@Balance,0)
						--************************************Transfer amount    
						set @Balance = @Balance + ((@Amt*0.95) *60)  
						insert into loadtran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Reason)    
						values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.95,0)*60),
						isnull(convert(numeric(18,2),@Balance),0),@TranRemark,'')   
						select @Tranid =IDENT_CURRENT('loadtran')
						--************************************Admin charge    
						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,
						bankTranStatus,payoutno,Reason,Tranid)    
						values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt,0)),
						isnull(convert(numeric(18,2),@Abalance),0),'ADMIN-CHARGES',1,0,'',@Tranid) 
						set @Abalance=@Bbalance - @Amt                                             
						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,
						bankTranStatus,Payoutno,tranCharge,Reason,Tranid)
						values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),
						@TranRemark,1,0,0,@Reason,@Tranid)                                                                              
						set @flag='1';                                                   
						commit transaction                                                        
					End	
				end                                                                                         
				else                                            
				set @flag='Insufficient IP balance.'; --low amount                                                                                         
			end                                                                        
			else                                                               
			set @flag='Invalid Transaction Password.';  -- E pwd invalid                                        
		end           
		else                                                        
		set @flag='Member not exists.';                                                         
	end                                                                                 
	                                       
end                                                        
else                                                        
set @flag='Invalid User Names.' 

GO
/****** Object:  StoredProcedure [dbo].[FundTransferCP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[FundTransferCP] (@PregNo varchar(50),@cRegNo varchar(50),@Epwd varchar(50),@Amt float,@Reason varchar(max),@Abalance float output,@flag varchar(100) output)                     
as                     
--CPp to Ip transfer       
if(exists(select appmstid from appmst where AppMstRegNo=@PregNo) and exists(select appmstid from appmst  where appmst.AppMstRegNo=@cRegNo))                    
begin                     
if ltrim(rtrim(@PregNo)) != ltrim(rtrim(@cRegNo))                     
begin                     
if(exists(select appmstid from AppMst where AppMstRegNo=@PregNo) and exists(select appmstid from AppMst where AppMstRegNo=@cRegNo))                
begin --check user exists                      
declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@count int,@TranRemark varchar(100)               
select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo                     
set @TranRemark='CP-IP TRANSFER'                                                    
 select @AppMstEpwd=ePassword from AppMst where AppMstRegNo=@PregNo                                                                                                      
                                                         
select @CAppMstId=AppMstID from AppMst where AppMstRegNo=@cRegNo                                        
                                       
declare @CtBalance float                     
set @Bbalance=0                      
set @Abalance=0                      
set @CtBalance=0                     
set @count=0                     
if @Epwd=@AppMstEpwd and len(@Epwd)>5                                                                                                       
begin                     
 declare @BtranId int, @CtranId int                                                                                                   
 --select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno                                                                                                          
 select @BtranId=max(BankTranId) from CPTran where AppMstId=@PAppMstId                                                                                                          
 select @Bbalance=isnull(BanktranBalance,0) from CPTran where appmstid=@PAppMstId and BankTranId=@BtranId                                                                                                          
 --                     
 select @CtranId=max(BankTranId) from IPTran where AppMstId=@CAppMstId                                                                                                          
 select @CtBalance=isnull(BanktranBalance,0) from IPTran where appmstid=@CAppMstId and BankTranId=@CtranId                                                                           
 --select @count=isnull(count(banktranid),0) from banktran where appmstid=@PAppMstId and banktranmode=1 and datepart(m,banktrandate)=datepart(m,getdate()) and datepart(yy,banktrandate)=datepart(yy,getdate())                                       
 --if(@count<=4)                                                     
                                               
 --else                                                                          
 --set @tranCharge=@Amt * 0.05                                                       
 ----                        
 if(@Amt>0 and @Bbalance>=@Amt)                                                         
 begin                                                      
  --BEGIN TRY --start try block                                     
  set xact_abort on                                                        
  begin transaction                                                       
  set @Abalance=@Bbalance - @Amt                                             
  insert into CPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Payoutno,Reason)                                             
              
         
  values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),@TranRemark,0,@Reason)                                                                              
  --set @CtBalance=0;                                                                                                  
  set @CtBalance = @CtBalance +  @Amt                                                                                
  insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,payoutno,Reason)                                                                                                      
  values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt,0)),isnull(convert(numeric(18,2),@CtBalance),0),@TranRemark,1,0,'')                                                                                      
   
    
      
        
         
      /*          
              
                
                                    
  --send sms start                                         
  declare @From varchar(50),@FromMobileNo varchar(50), @FromMsgText varchar(500),@To varchar(50),@ToMobileNo varchar(50),@ToMsgText varchar(500)                                       
  declare @SMSFlag int                                      
  set @From='0'                                      
  set @FromMobileNo='0'                                      
  set @FromMsgText='0'                                      
  set @To='0'                                      
  set @ToMobileNo='0'                                      
  set @ToMsgText='0'                                      
  select @From=(select AppMstTitle+SPACE(1)+AppMstFName from appmst where AppMstRegNo=@PregNo),@FromMobileNo=(select appmstmobile from appmst where AppMstRegNo=@PregNo) ,@To=(select AppMstTitle+SPACE(1)+AppMstFName from appmst where AppMstRegNo=@cRegNo), 
  
    
      
        
          
            
              
               
  @ToMobileNo=(select appmstmobile from appmst where AppMstRegNo=@cRegNo)                                       
  set @FromMsgText='Dear '+ @From + ' points: '+convert(varchar,cast(@Amt as decimal))+' has been transfered from your A/c to : ' +  @cRegNo +' and now A/c balance is: ' +convert(varchar,cast(@Abalance as decimal))                                     
  set @ToMsgText='Dear '+ @To + ' points: '+convert(varchar,cast(@Amt as decimal))+' has been transfered to your A/c from : ' +  @PregNo +' and your A/c balance is: ' +convert(varchar,cast(@CtBalance as decimal))                                           
  
  set @SMSFlag=0                      
                           
   if(LEN(@FromMobileNo)>9 and LEN(@FromMobileNo)<11)                          
   begin                                   
   execute [HTTP_DB_ALERT] @FromMobileNo,@FromMsgText,'websms',@SMSFlag out                             
   end                                       
   set @SMSFlag=0                            
    if(LEN(@ToMobileNo)>9 and LEN(@ToMobileNo)<11)                          
    begin                                    
    execute [HTTP_DB_ALERT] @ToMobileNo,@ToMsgText,'websms',@SMSFlag out                           
    end                                           
    */                      
--  --send sms end                                      
  set @flag='1';                                                   
  commit transaction                                                        
  --END TRY --end try block                        
  --BEGIN CATCH --start catch                                                        
  --rollback transaction                                                        
  --END CATCH; --end catch                                                        
 end      
 else                                            
  set @flag='Insufficient CP balance.'; --low amount                                                                                         
end                                                          
else                                                               
 set @flag='Invalid Transaction Password.';  -- E pwd invalid                                         
 end           
 else                                                        
 set @flag='Member not exists.';    
end    
else   
 set @flag='Canot transfer to same member'    
end    
else   
 set @flag='Invalid User Names.'





GO
/****** Object:  StoredProcedure [dbo].[FundTransferVP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[FundTransferVP] (@PregNo varchar(50),  @TrasferRegNo varchar(50),@SKey varchar(4)  ,       
@Amt float, @Abalance float output,@flag varchar(100) output)                         
as                         
begin         
if(exists(select appmstid from appmst where AppMstRegNo=@PregNo))                        
begin                         
                   
declare @AppMstEpwd varchar(50),@PAppMstId int, @Bbalance float,@count int,@TranRemark varchar(100) , @RAppMstId BIGINT                  
select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo          
select @RAppMstId=AppMstID from AppMst where AppMstRegNo=@TrasferRegNo                        
set @TranRemark='VP TRANSFER'                                                        
                                      
declare @CtBalance float                         
set @Bbalance=0                          
set @Abalance=0                          
set @CtBalance=0   

 if @amt<24               
 begin                
 set @flag='WithDraw amount greater than and equal to 25'                
 return                
 end    
 
                       
set @count=0                         
    if not exists(select appmstregno from appmst where appmstregno=@PregNo and ePassword=@SKey )                          
  begin                          
   set @flag='Security Key not Match !'                          
 return                          
  end                      
 declare @BtranId int, @CtranId int                                                                                                       
 select @BtranId=max(BankTranId) from VPTran where AppMstId=@PAppMstId                                                                                                              
 select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@PAppMstId and BankTranId=@BtranId      
       
 IF  @BtranId = 0      
 BEGIN      
 SET @Bbalance=0      
 END                                                                                                          
 --                         
 select @CtranId=max(BankTranId) from vPTran where AppMstId=@RAppMstId                                                                                                              
 select @CtBalance=isnull(BanktranBalance,0) from vPTran where appmstid=@RAppMstId and BankTranId=@CtranId                                                                               
         
   IF  @CtranId = 0      
 BEGIN      
 SET @CtBalance=0      
 END                                                                                                          
 --                           
 if(@Amt>0 and @Bbalance>=@Amt)                                                             
 begin                                                          
  --BEGIN TRY --start try block                                         
  set xact_abort on                                                            
  begin transaction                                                           
  set @Abalance=@Bbalance - @Amt           
          
                                 
insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Payoutno)                                                                                                 
values (@PAppMstId,1,@RAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),@TranRemark,0)                 
                                                                                                
  set @CtBalance = @CtBalance +   (@Amt)                                                                                    
  insert into vPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,Reason)                                                                                                          
  values (@RAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull((@Amt) ,0)),isnull(convert(numeric(18,2),@CtBalance),0),@TranRemark,0,'')                                                        
         
                                         
  set @flag='1';                                                       
  commit transaction                                                            
                                                         
 end                                            
 else       
 begin                                             set @flag='Insufficient balance.'; --low amount                                                                                             
end                                                                  
 end               
 else         
 begin                                                         
 set @flag='Member not exists.';                                                             
                                                                                
   end      
   end
GO
/****** Object:  StoredProcedure [dbo].[FundTransferVPToKP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
     
--FundTransferVPToKP 'GA00000002', 'global', 'MYGLOBAL123', 700,'hi' ,'',''    
CREATE proc[dbo].[FundTransferVPToKP] (@TrasferRegNo varchar(20), @PregNo varchar(50), @Epwd varchar(50),      
@Amt float,@Reason varchar(max),@Abalance float output,@flag varchar(100) output)                       
as                       
--Ip to Ip transfer         
if(exists(select appmstid from appmst where AppMstRegNo=@PregNo))                      
begin                       
                      
                    
declare @AppMstEpwd varchar(50),@PAppMstId int, @Bbalance float,@count int,@TranRemark varchar(100) , @TrasferAppMstId bigint    
select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo    
    
select @TrasferAppMstId=AppMstID from AppMst where AppMstRegNo=@TrasferRegNo                        
    
    
set @TranRemark='Working Point Wallet Transfer'                                                      
 select @AppMstEpwd=ePassword from AppMst where AppMstRegNo=@PregNo                                                                                                        
                         
declare @CtBalance float                       
set @Bbalance=0                        
set @Abalance=0                        
set @CtBalance=0                       
set @count=0                       
if @Epwd=@AppMstEpwd and len(@Epwd)>5                                                                                                         
begin                       
 declare @BtranId int, @CtranId int                                                                                                     
 --select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno                                                                                                            
  select @BtranId=max(isnull(BankTranId,0)) from VPTran where AppMstId=@PAppMstId                                                                                                            
  IF @BtranId =0    
   BEGIN    
    SET @Bbalance=0    
   END    
  ELSE    
   BEGIN    
    select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@PAppMstId and BankTranId=@BtranId                                                                                                            
   END                    
  select @CtranId=max(isnull(BankTranId,0)) from KPTran where AppMstId=@TrasferAppMstId        
  if @CtranId=0      
   begin    
    set @CtBalance =0    
   end    
  else    
   begin    
    select @CtBalance=isnull(BanktranBalance,0) from KPTran where appmstid=@TrasferAppMstId and BankTranId=@CtranId                                                                             
   end    
      
 if(@Amt>0 and @Bbalance>=@Amt)                                                           
 begin                                                        
  --BEGIN TRY --start try block                                       
  set xact_abort on                                                          
  begin transaction                                                         
  set @Abalance=@Bbalance - @Amt         
        
                               
insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Payoutno,Reason)                                                                                               
values (@PAppMstId,1,@TrasferAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),@TranRemark,0,@Reason)               
        
        
       
  
set @CtBalance = @CtBalance +   (@Amt*0.90)                                                                                  
insert into KPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,payoutno,Reason)                                                                                                        
values (@TrasferAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull((@Amt*0.90) ,0)),isnull(convert(numeric(18,2),@CtBalance),0),'10% ADMIN-CHARGES '   + cast(@Amt as Varchar),1,0,'')                                        
                                     
        
      
      
                                       
  set @flag='1';                                                     
  commit transaction                                                          
  --END TRY --end try block                          
  --BEGIN CATCH --start catch                                                          
  --rollback transaction                                                          
  --END CATCH; --end catch                                                          
 end                                                                                           
 else                                              
  set @flag='Insufficient VP balance.'; --low amount                                                                                           
end                                                                
else                                                                 
 set @flag='Invalid Transaction Password.';  -- E pwd invalid                                           
 end             
 else                                                          
 set @flag='Member not exists.';                                                           
                                                                              
       
    
GO
/****** Object:  StoredProcedure [dbo].[FundTransferVPToKPUser]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
     
--FundTransferVPToKP 'GA00000002', 'global', 'MYGLOBAL123', 700,'hi' ,'',''    
CREATE proc[dbo].[FundTransferVPToKPUser] (@TrasferRegNo varchar(20), @PregNo varchar(50), @Epwd varchar(50),      
@Amt float,@Reason varchar(max),@Abalance float output,@flag varchar(100) output)                       
as                       
--Ip to Ip transfer         
if(exists(select appmstid from appmst where AppMstRegNo=@PregNo))                      
begin                       
                      
        
 if @TrasferRegNo   =@PregNo    
 begin    
 set @flag='Can not Self Trasfer.'; --low amount        
 return       
 end             
declare @AppMstEpwd varchar(50),@PAppMstId int, @Bbalance float,@count int,@TranRemark varchar(100) , @TrasferAppMstId bigint    
select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo    
    
select @TrasferAppMstId=AppMstID from AppMst where AppMstRegNo=@TrasferRegNo                        
    
    
set @TranRemark='Working Point Wallet Transfer'                                                      
 select @AppMstEpwd=ePassword from AppMst where AppMstRegNo=@PregNo                                                                                                        
                         
declare @CtBalance float                       
set @Bbalance=0                        
set @Abalance=0                        
set @CtBalance=0                       
set @count=0                       
if @Epwd=@AppMstEpwd and len(@Epwd)>5                                                                                                         
begin                       
 declare @BtranId int, @CtranId int                                                                                                     
 --select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno                                                                                                            
  select @BtranId=max(isnull(BankTranId,0)) from KPTran where AppMstId=@PAppMstId                                                                                                            
  IF @BtranId =0    
   BEGIN    
    SET @Bbalance=0    
   END    
  ELSE    
   BEGIN    
    select @Bbalance=isnull(BanktranBalance,0) from KPTran where appmstid=@PAppMstId and BankTranId=@BtranId                                                                                                            
   END                    
  select @CtranId=max(isnull(BankTranId,0)) from KPTran where AppMstId=@TrasferAppMstId        
  if @CtranId=0      
   begin    
    set @CtBalance =0    
   end    
  else    
   begin    
    select @CtBalance=isnull(BanktranBalance,0) from KPTran where appmstid=@TrasferAppMstId and BankTranId=@CtranId                                                                             
   end    
      
 if(@Amt>0 and @Bbalance>=@Amt)                                                           
 begin                                                        
  --BEGIN TRY --start try block                                       
  set xact_abort on                                                          
  begin transaction                                                         
  set @Abalance=@Bbalance - @Amt         
        
                               
insert into KPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Payoutno,Reason)                                                                                               
values (@PAppMstId,1,@TrasferAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),@TranRemark,0,@Reason)               
        
        
    
 set @CtBalance=@CtBalance+@Amt    
                               
insert into KPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,payoutno,Reason)             
values (@TrasferAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull((@Amt) ,0)),isnull(convert(numeric(18,2),@CtBalance),0),@TranRemark,1,0,'')                                                                               
        
      
      
                                       
  set @flag='1';                                                     
  commit transaction                                                          
  --END TRY --end try block                          
  --BEGIN CATCH --start catch                                                          
  --rollback transaction                                                          
  --END CATCH; --end catch                                                          
 end                                                                                           
 else                                              
  set @flag='Insufficient VP balance.'; --low amount                                                                                           
end                                                                
else                                                                 
 set @flag='Invalid Transaction Password.';  -- E pwd invalid                                           
 end             
 else                                                          
 set @flag='Member not exists.';                                                           
                                                                              
       
    
GO
/****** Object:  StoredProcedure [dbo].[FundWithdraw]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[FundWithdraw](@PregNo varchar(50),@Epwd varchar(50),@Amt float,@AC varchar(50),@flag varchar(100) output)                                          
as                                          
declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@Abalance float,@CtBalance float,@fiftyPer float,    
@tranId int,@getdate datetime       
    
set @getdate=dateadd(minute,330,getutcdate())     
select @AppMstEpwd=ePassword,@PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo                              
if  (@Amt<1 and  @Amt>900000)                            
 set @flag=-110     
else                              
begin                              
if @Epwd=@AppMstEpwd                                          
begin                                          
    
declare @BtranId int, @CtranId int   
set xact_abort on  
 begin tran                                                                                   
 select @BtranId=max(BankTranId) from CPTran where AppMstId=@PAppMstId                                              
 select @Bbalance=isnull(BanktranBalance,0) from CPTran where appmstid=@PAppMstId and BankTranId=@BtranId                                              
 ----      
 if(@Bbalance>=@Amt)     
 begin     
  set @Abalance=@Bbalance - @Amt                                          
  insert into CPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                          
   BankTranRemarks)                                          
   values (@PAppMstId,4,@PAppMstId,@getdate,@Amt,@Abalance,'Withdraw')                                          
   ---inserting Withdawmst Amount start                                  
  declare @TDS float,@Handling float,@Dispatch float                                  
  set @TDS=0;                                  
  set @Handling=0;                                  
  set @Dispatch=0;                                  
  --set @TDS=@Amt * 0.1;                                  
  --set @Handling=@Amt * 0.2;          
  set @Dispatch=@Amt                                                     
  --set @Dispatch=@Amt - (@Handling)      
set @tranId=IDENT_CURRENT('BankTran')     
  insert into withdrawmst (AppmstID,DOE,Amount,TDS,Handling,Dispatch,Remarks,ChequeNo,ispaid,FranchiseId,TranId,AcNo,DOT)                                   
   values(@PAppMstId,@getdate,@Amt,@TDS,@Handling,@Dispatch,'','',0,0,@tranId,@AC,'')                                  
    /*                                
 --- insert withdrawmst end        
 --send sms start                     
   declare @Name varchar(50),@MobileNo varchar(50), @MsgText varchar(500)      
   declare @SMSFlag int                  
   set @Name='0'                  
   set @MobileNo='0'                  
   set @MsgText='0'      
   select @Name=(select AppMstTitle+SPACE(1)+AppMstFName from appmst where AppMstRegNo=@PregNo),@MobileNo=(select appmstmobile from appmst where AppMstRegNo=@PregNo)                    
   set @MsgText='Dear '+ @Name + ' Points: '+convert(varchar,cast(@Amt as decimal))+' has been Withdrawn from your A/c now your balance is ' +convert(varchar,cast(@Abalance as decimal))                 
   set @SMSFlag=0           
   if(LEN(@MobileNo)>9 and LEN(@MobileNo)<11)      
   begin             
   execute [HTTP_DB_ALERT] @MobileNo,@MsgText,'websms',@SMSFlag out                      
   end      
 --send sms end                                            
*/                                         
  set @flag='Point Withdraw successfully.';     
 end                                          
 else                                          
  set @flag='Insufficient balance'; --low amount                                          
  commit transaction   
end      
else     
set @flag='Invalid e-password';  -- E pwd invalid      
end  




GO
/****** Object:  StoredProcedure [dbo].[GenerateAdminFund]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst  
   
--[GenerateAdminFund] 'GBT402309', 5000 ,'Admin', 1 
CREATE proc[dbo].[GenerateAdminFund](@Regno varchar(50), @bal float, @session varchar(50), @BakType bigint)       
as      
  
begin      
declare @query varchar(500),@balance float       
set @balance=0       
set xact_abort on       
begin transaction       
  
    declare @appmtid bigint  
 set @appmtid =(select appmstid from appmst where appmstregno=@Regno)  
    
 select @balance= dbo.getbalance(@appmtid)  
 --select @balance       
 insert into VPTran (appmstid,banktranmode,paidappmstid,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks, TranBY, trancharge)       
 values (@appmtid,100,@appmtid,DATEADD(minute,330,getutcdate()),@bal,@bal+@balance,'Self', @session , @BakType)       
 commit transaction       
end  

  
   
GO
/****** Object:  StoredProcedure [dbo].[GenerateAdminWithdraw]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst  
   
--[GenerateAdminFund] 'TESTTEST4', 5000000  
CREATE proc[dbo].[GenerateAdminWithdraw](@Regno varchar(50), @Reason varchar(50), @bal float, @session varchar(50))       
as      
  
begin      
declare @query varchar(500),@balance float       
set @balance=0       
set xact_abort on       
begin transaction       
  
    declare @appmtid bigint  
 set @appmtid =(select appmstid from appmst where appmstregno=@Regno)  
    
 select @balance= dbo.getbalance(@appmtid)  
 --select @balance       
 insert into IPTran (appmstid,banktranmode,paidappmstid,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks, Reason, TranBY)       
 values (@appmtid,12,@appmtid,DATEADD(minute,330,getutcdate()),@bal,@balance-@bal,'by Admin' ,@Reason, @session)       
 commit transaction       
end  
  
   
GO
/****** Object:  StoredProcedure [dbo].[GenerateKPAdminFund]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst  
   
--[GenerateKPAdminFund] 'global', 5500 ,'Admin', 1  
CREATE proc[dbo].[GenerateKPAdminFund](@Regno varchar(50), @bal float, @session varchar(50), @BakType bigint)       
as      
  
begin      
declare @query varchar(500),@balance float       
set @balance=0       
set xact_abort on       
begin transaction       
  
    declare @appmtid bigint  
 set @appmtid =(select appmstid from appmst where appmstregno=@Regno)  
    
 select @balance= dbo.getKPbalance(@appmtid)  
 --select @balance       
 insert into KPTran (appmstid,banktranmode,paidappmstid,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks, TranBY, trancharge)       
 values (@appmtid,100,@appmtid,DATEADD(minute,330,getutcdate()),@bal,@bal+@balance,'Self', @session , @BakType)       
 commit transaction       
end  
  
  
  
   
GO
/****** Object:  StoredProcedure [dbo].[GenerateOPTCode]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
     
    
CREATE proc [dbo].[GenerateOPTCode] (          
@AppMstRegNo VARCHAR(50), @Type varchar(100) )           
      
as                                          
        
BEGIN                
        
  DECLARE @Random varchar(50),  @email varchar(100);       
 set @Random =  substring(REPLACE ( NEWID() ,'-' ,'' ),1,6)          
  if not exists(select OPTCode from OPT where OPTCode=@Random )           
  begin        
    Delete from  OPT where  AppMstRegNo=@AppMstRegNo and Type=@Type   
	select @email=email from appmst where AppMstRegNo=@AppMstRegNo
	insert into OPT(OPTCode, AppMstRegNo, type, email, createdon, expireon )
	values (@Random ,@AppMstRegNo, @Type, @email, getdate(), DATEADD(mi, 2, getdate()))         
	select OPTCode,email from OPT where AppMstRegNo=@AppMstRegNo   and Type=@Type     
         
 end         
 
         
        
END   
  
 
GO
/****** Object:  StoredProcedure [dbo].[GenerateOTP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[GenerateOTP] (  @AppMstRegNo VARCHAR(50) )   
as                             
     begin
	 insert into CodeOPT(AppMstRegNo)Values('rajf')
	  
END     

 

 exec GenerateOTP    'smart'
 
 select * from CodeOPT

GO
/****** Object:  StoredProcedure [dbo].[GeneratePassword]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[GeneratePassword] @secCode varchar(50) output
as          
begin
DECLARE @Random numeric(20);          
DECLARE @Upper numeric(20);          
DECLARE @Lower numeric(20)          
 DECLARE @Random1  int          
DECLARE @Upper1 int;          
DECLARE @Lower1 int    
declare @pinsrno int     
set @pinsrno=10001  
--SET @counter = 1          
---- This will create a random number between 1 and 999          
SET @Lower = 10000000000---- The lowest random number          
SET @Upper = 999 ---- The highest random number          
SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)          
if len(@random)<10          
 set @random=@random+1000000000          
SET @Lower1 = 90000000---- The lowest random number          
SET @Upper1 = 10000000 ---- The highest random number          
SELECT @Random1 = ROUND(((@Upper1 - @Lower1 -1) * RAND() + @Lower1), 0)          
if len(@random1)<8          
set @random1=@random1+98799873  
set @secCode=convert(varchar,@random1)  
if len(@secCode)>8  
 set @secCode=substring(@secCode,1,8)  

end





GO
/****** Object:  StoredProcedure [dbo].[GeneratePin]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[GeneratePin] (@NoOfPins int)                                

as                                

begin                                

DECLARE @counter int                                 

DECLARE @Random varchar(50);                                

declare @pinsrno int               

set @pinsrno=0                        

select @pinsrno=isnull(max(pinsrno),0) from PINMst              

set @pinsrno=@pinsrno+1              

SET @counter = 1                                

WHILE @counter <=@NoOfPins                                

BEGIN                                

                               

SELECT @Random =  substring(REPLACE ( NEWID() ,'-' ,'' ),1,10)                  

if not exists(select pinno from PINMst where PinNo=@Random)          

begin     

insert into pinmst (pinno) values (@Random)            

end                        

set @pinsrno=@pinsrno+1                              

SET NOCOUNT ON                                

SET @counter = @counter +1                                

SET NOCOUNT OFF                                

   END                                

end


GO
/****** Object:  StoredProcedure [dbo].[GenerateRegNo1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[GenerateRegNo1] @secCode varchar(50) output
as
begin
DECLARE @Random numeric(20)
DECLARE @Upper numeric(20)
DECLARE @Lower numeric(20)
DECLARE @Random1  int
DECLARE @Upper1 int
DECLARE @Lower1 int
declare @pinsrno int
set @pinsrno=10001        
--SET @counter = 1                
---- This will create a random number between 1 and 999                
SET @Lower = 10000000000---- The lowest random number                
SET @Upper = 999 ---- The highest random number                
SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)
if len(@random)<10                
set @random=@random+1000000000                
SET @Lower1 = 99999---- The lowest random number                
SET @Upper1 = 10000 ---- The highest random number                
SELECT @Random1 = ROUND(((@Upper1 - @Lower1 -1) * RAND() + @Lower1), 0)                
if len(@random1)<5                
	set @random1=@random1+98799    
set @secCode=convert(varchar,@random1)        
if len(@secCode)>5        
	set @secCode=substring(@secCode,1,5)        
end





GO
/****** Object:  StoredProcedure [dbo].[GenerateRPT]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE proc [dbo].[GenerateRPT] (  
@flag varchar(4) output ,
@AppMstRegNo VARCHAR(50) )   
                                 
as                                  
BEGIN        
  DECLARE @Random varchar(50);
 DELETE FROM OPT  WHERE  AppMstRegNo =@AppMstRegNo
 set @Random =  substring(REPLACE ( NEWID() ,'-' ,'' ),1,4)  
  if not exists(select OPTCode from OPT where OPTCode=@Random )   
  begin
	insert into OPT(OPTCode, AppMstRegNo )values (@Random ,@AppMstRegNo) 
 end 
   
END       
  

GO
/****** Object:  StoredProcedure [dbo].[GenerateUserEpassword]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[GenerateUserEpassword](@regno varchar(50),@mobile varchar(20),@dob datetime,@pincode varchar(10),        
@havesecCode int,@secCode varchar(50),@flag int output)        
as            
begin            
declare @id int,@pwd varchar(20),@scode varchar(10)            
select @id=appmstid from AppMst where AppMstRegNo=@regno            
set xact_abort on            
begin transaction            
set @flag=0            
      
if(exists(select AppMstID from AppMst where AppMstRegNo=@regno))            
begin            
 if(exists(select AppMstID from AppMst where AppMstRegNo=@regno and AppMstPinCode=@pincode and AppMstMobile=@mobile and cast(floor(cast(userdob as float)) as datetime)=cast(floor(cast(@dob as float)) as datetime)))            
 begin            
  if(not exists(select AppMstID from AppMst where AppMstID=@id and len(ePassword)>1))            
  begin            
   if(@havesecCode=1) --user have security code            
   begin            
       
   --execute GeneratePassword @pwd output            
   if(len(@secCode)>0)            
   begin            
    update AppMst set ePassword=@secCode where AppMstID=@id and AppMstRegNo=@regno                  
    --set @code=@pwd            
    set @flag=1        
   end            
   else            
    set @flag=-105 --password not generated            
        
   end            
   --        
  end            
  else            
   set @flag=-109 --You have already provided e password            
  --            
 end            
 else            
  set @flag=-104 --invalid pin code or DOB            
end            
else            
 set @flag=-101 ---user not exists            
if(@flag=1)            
 commit transaction            
else            
 rollback transaction            
end





GO
/****** Object:  StoredProcedure [dbo].[genrateAuto]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 


 CREATE proc [dbo].[genrateAuto]  
as  
begin  
  
declare  @date datetime  
  
set @date=  Dateadd(Day, -1, dbo.GetServerDate())   
exec  [DailyNewROI] '' , @date   
exec  [finalpayout]   @date ,''  
end
GO
/****** Object:  StoredProcedure [dbo].[getAdminLoginList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[getAdminLoginList](@minDate datetime,@maxDate datetime,@UserName varchar(50) =null,@AdminType varchar(50),@type varchar(50))   
as                                 
begin                               
--***Complete Admin Login List                           
if(@type='cl')                          
begin                            
select UserName,Password,[DATE] as LogInDateTime,logouttime as logout,IPAddress,AdminType,Date  from admincontrol where AdminType=@AdminType and  CAST(FLOOR(CAST(Date as float)) as datetime) between @minDate and @maxDate   and IPAddress not in('127.0.0.1'
) order by LogInDateTime desc  
end                            
--***Complete Admin Login List                           
--***Admin Login Search                           
if(@type='s')                          
begin                      
select UserName,Password,[Date] as LogInDateTime,logouttime as logout,IPAddress,AdminType,Date  from admincontrol where UserName=@UserName and 
AdminType=@AdminType and CAST(FLOOR(CAST(Date as float)) as datetime) between @minDate and @maxDate  and IPAddress not in('127.0.0.1'  
)   order by LogInDateTime desc          
end    
--***Admin Login Search                         
end





GO
/****** Object:  StoredProcedure [dbo].[GetAdminMailMst]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[GetAdminMailMst]
as
Select * from AdminMailMst





GO
/****** Object:  StoredProcedure [dbo].[GetAppForSMS]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[GetAppForSMS](@reg varchar(50),@regno varchar(50))  
as  
begin
Select AppMstTitle,AppMstFName,AppMstMobile,(select AppMstMobile from appmst where appmstregno=@reg) as mob from appmst where appmstRegNo=@regno
end





GO
/****** Object:  StoredProcedure [dbo].[getBankDetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getBankDetails](@regno varchar(50))    
as    
begin    
select * from appbank where appmstregno=@regno    
end





GO
/****** Object:  StoredProcedure [dbo].[getBlockedUser]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getBlockedUser]                    
                    
(                      
 @mindate datetime =null ,             
@maxdate datetime =null ,    
@operation Varchar(20)=null,              
@regno varchar(50) =null                    
)                            
as                            
begin                  
    if(@operation='A')                    
begin                 
select a.appmstregno,a.appmsttitle+space(1)+a.appmstfname as uname    ,convert(varchar(20),b.blockdate,103) as blockdate     
  
from appmst a  ,blockedid b where   b.appmstid=a.appmstid and      
CAST(FLOOR(CAST(b.blockdate as float)) as datetime) between @mindate and @maxdate          
  
    end  
  
  
if(@operation='S')                    
begin   
  
  
select a.appmstregno,a.appmsttitle+space(1)+a.appmstfname as uname    ,convert(varchar(20),b.blockdate,103) as blockdate     
  
from appmst a  ,blockedid b where   b.appmstid=a.appmstid and      
 a.appmstid= (select appmstid from appmst where appmstregno=@regno)           
  
                    
         
end                  
                   
                        
     
end





GO
/****** Object:  StoredProcedure [dbo].[getBlogComments]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getBlogComments]  
as  
begin  
SELECT * from blog where status=1  
end





GO
/****** Object:  StoredProcedure [dbo].[getBrandList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












CREATE procedure [dbo].[getBrandList](@Brand varchar(50) =null,@type varchar(50),@status int, @userid varchar(50))                            






as                             















begin                  















                 















--***Complete Brand List                       















if(@type='cl')                      















begin                        















select srno,brand,convert(varchar(20),DOE,103) as doe,Status,sts=case Status when 1 then 'Activated' when 0 then 'De-Activated' end from BrandMst       
 where status=@status 



and  UserID=@userid order by Brand                     















end                        















--***Complete Brand List                       















                      















--***Brand Search                       















if(@type='s')                      















begin                       















select srno,brand,convert(varchar(20),DOE,103) as doe,Status,sts=case Status when 1 then 'Activated' when 0 then 'De-Activated' end from BrandMst       

 where status=@status and userid=@UserID and brand like '%'+@Brand+'%'   















end                        















--***Brand Search                 















          















end


































































































































































GO
/****** Object:  StoredProcedure [dbo].[getCategoryList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE procedure [dbo].[getCategoryList](@Category varchar(50) =null,@status int)                                

  

as                                 

  

begin                                              

  

select CatId,CatName,convert(varchar(20),DOE,103) as d,DOE ,Description,Status,sts=case Status when 1 then 'Activated' 

when 0 then 'De-Activated' end from CategoryMst      where CatName like '%'+@Category+'%'   and (@status=-1 or status=@status)   order by doe  desc      

  

end  













GO
/****** Object:  StoredProcedure [dbo].[getChequeData]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[getChequeData](@payoutno int)       
as       
begin     
select a.appmstregno,p.dispachedamt,a.appmsttitle+space(2)+a.appmstfname as name,p.paymenttrandraftid,convert(varchar(12),chequedate,103) as chequedate from PaymentTranDraft p , appmst a       
where p.appmstregno =a.appmstregno and p.payoutno=@payoutno  
end





GO
/****** Object:  StoredProcedure [dbo].[getChequeDataROI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getChequeDataROI](@fromdate datetime,@todate datetime)          
              
as              
begin              
 select a.appmstregno,p.dispachedamt,a.appmsttitle+space(2)+a.appmstfname as name,p.paymenttrandraftid,datepart(day,chequedate)  as chday,datepart(month,chequedate)  as chmonth,datepart(year,chequedate)  as chyear,p.paymenttodate from PaymentTranDraftroi p ,  
appmst a where p.appmstid=a.appmstregno and CAST(FLOOR(CAST(p.paymentfromdate as float)) as datetime)=@fromdate and CAST(FLOOR(CAST(p.paymenttodate as float)) as datetime)=@todate         
end





GO
/****** Object:  StoredProcedure [dbo].[getChequeDataROITB]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getChequeDataROITB](@fromdate datetime,@todate datetime)          
              
as              
begin              
 select a.appmstregno,p.dispachedamt,a.appmsttitle+space(2)+a.appmstfname as name,p.paymenttrandraftid,datepart(day,chequedate)  as chday,datepart(month,chequedate)  as chmonth,datepart(year,chequedate)  as chyear,p.paymenttodate from PaymentTranDraftroiTB p ,  
appmst a where p.appmstid=a.appmstregno and CAST(FLOOR(CAST(p.paymentfromdate as float)) as datetime)=@fromdate and CAST(FLOOR(CAST(p.paymenttodate as float)) as datetime)=@todate         
end





GO
/****** Object:  StoredProcedure [dbo].[getcode1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[getcode1](@code int output)  
as  
begin  
 set @code=cast(substring(convert(varchar(20),rand()),3,2) as int)  
 if(@code between 65 and 90) or (@code between 97 and 122)  
  return  
 else  
  execute getcode1 @code output  
end





GO
/****** Object:  StoredProcedure [dbo].[GetCustomerDetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[GetCustomerDetails](@CustomerId varchar(50))       
as       
begin       
select AppMstFName,AppMstAddress1,AppMstCity,AppMstState,AppMstPinCode,email,AppMstMobile  from appmst where AppMstRegNo=@CustomerId       
end    

GO
/****** Object:  StoredProcedure [dbo].[getDisapprovedBlogComments]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getDisapprovedBlogComments](@mindate datetime,@maxdate datetime)      
as      
begin      
select srno,appmstregno,Commentby,Comments,convert(varchar(20),doe,103) as doe from blog where status=0 and CAST(FLOOR(CAST(doe as float)) as datetime) between @mindate and @maxdate    
end





GO
/****** Object:  StoredProcedure [dbo].[getDocApprovalRequestList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE procedure[dbo].[getDocApprovalRequestList](  @type varchar(50) ,@search varchar(50))   
as                                 
begin
set @search = '%' + @search + '%'                                  
--***select  * from scanDocs                  
if(@type='cl')                          
begin                            
        select    srno, userid, imagename, 
		status, case docType when 1 then 'ID proof'   When    2 then 'Pan Card'   when 3 then 'Bank Copy/Cancel Cheque'   When    4 then 'Personal Photo' When    5 then 'Adhar card' end  as    docType 
		 from scanDocs  where status= 0 and    userid  Like @search      
end                            
                       
if(@type='s')                          
begin                      
                 select    srno, userid, imagename, 
		status, case docType when 1 then 'ID proff'   When    2 then 'Pan Card' When    3 then 'Bank Copy/Cancel Cheque'    When    4 then 'Personal Photo' When    5 then 'Adhar card' end  as    docType 
		 from scanDocs  where status= 1       and    userid  Like @search  
end   


                     
end


 
  
GO
/****** Object:  StoredProcedure [dbo].[getDownlineMemberCount]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[getDownlineMemberCount](@appmstregno varchar(50))
as
begin
select  count(*) from apptran where parentid=(select appmstid from appmst where appmstregno=@appmstregno)
end





GO
/****** Object:  StoredProcedure [dbo].[geteCPWalletInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[geteCPWalletInfo](@regno varchar(50))                    
as                    
declare @AppMstID int,@BtranId int,@tran int,@paidAppMstID int,@PaidRegNo varchar(50),@noOfTran int                    
select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno          
select @noOfTran=count(*) from CPTran where appmstid=@AppMstID and banktranmode=1                  
select @BtranId=max(BankTranId),@tran=count(*) from CPTran where AppMstId=@AppMstID                
select @PaidRegNo=AppMstRegNo from Appmst where AppMstID=(select paidAppMstId from CPTran where BankTranId=@BtranId)                
select BanktranBalance as balance,@tran as transact,bankTranAmount as amount,convert(varchar,BankTranDate,103)                
 as bdate,BankTranremarks as [description],@PaidRegNo as SourceID,                
 case BankTranMode                
 when 1 then 'Debit'                
 when 2 then 'Credit'                
 when 3 then 'Credit'                
 when 4 then 'Debit'                    
 when 5 then 'Debit'                
 end as PayType,@noOfTran as TranCount                
from CPTran  where appmstid=@AppMstID and BankTranId=@BtranId





GO
/****** Object:  StoredProcedure [dbo].[geteipIPKPWalletInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc[dbo].[geteipIPKPWalletInfo](@regno varchar(50))                                    
as                  
begin   

declare @Exchange float;
select @Exchange=CRate from PaymentMst 
select  cast(round(dbo.getvPbalance(appmstid),8) as numeric(18,8))   as vpbalance  , @Exchange as ERate  from appmst where appmstregno=@regno            
end                
               
GO
/****** Object:  StoredProcedure [dbo].[geteipWalletInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[geteipWalletInfo](@regno varchar(50))                      
as                      
declare @AppMstID int,@BtranId int,@tran int,@paidAppMstID int,@PaidRegNo varchar(50),@noOfTran int                      
select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno            
select @noOfTran=count(*) from ipTran where appmstid=@AppMstID and banktranmode=1                    
select @BtranId=max(BankTranId),@tran=count(*) from ipTran where AppMstId=@AppMstID                  
select @PaidRegNo=AppMstRegNo from Appmst where AppMstID=(select paidAppMstId from ipTran where BankTranId=@BtranId)                  
select BanktranBalance as balance,@tran as transact,bankTranAmount as amount,convert(varchar,BankTranDate,103)                  
 as bdate,BankTranremarks as [description],@PaidRegNo as SourceID,                  
 case BankTranMode                  
 when 1 then 'Debit'                  
 when 2 then 'Credit'                  
 when 3 then 'Credit'                  
 when 4 then 'Debit'                      
 when 5 then 'Debit'                  
 end as PayType,@noOfTran as TranCount   , (select AppmstMobile     from Appmst where   AppMstRegNo=@regno ) as Mobile          
from ipTran  where appmstid=@AppMstID and BankTranId=@BtranId  
  
   
  

GO
/****** Object:  StoredProcedure [dbo].[geteipWalletInfoKP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
   --geteipWalletInfoKP 'GA00000002'  
CREATE proc[dbo].[geteipWalletInfoKP](@regno varchar(50))                              
as                              
declare @AppMstID int,@BtranId int,@tran int,@paidAppMstID int,@PaidRegNo varchar(50),@noOfTran int                              
select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno                    
select @noOfTran=count(*) from KPTran where appmstid=@AppMstID and banktranmode=1                            
select @BtranId=max(BankTranId),@tran=count(*) from KPTran where AppMstId=@AppMstID                          
select @PaidRegNo=AppMstRegNo from Appmst where AppMstID=(select paidAppMstId from KPTran where BankTranId=@BtranId)                          
select BanktranBalance as balance,@tran as transact,bankTranAmount as amount,convert(varchar,BankTranDate,103)                          
 as bdate,BankTranremarks as [description],@PaidRegNo as SourceID,                          
 case BankTranMode                          
 when 1 then 'Debit'                          
 when 2 then 'Credit'                          
 when 3 then 'Credit'                          
 when 4 then 'Debit'                              
 when 5 then 'Debit'                          
 end as PayType,@noOfTran as TranCount   , (select AppmstMobile     from Appmst where   AppMstRegNo=@regno ) as Mobile                  
from KPTran  where appmstid=@AppMstID and BankTranId=@BtranId          
          
       --  select * from appmst
GO
/****** Object:  StoredProcedure [dbo].[geteipWalletInfoVP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[geteipWalletInfoVP](@regno varchar(50))                          
as                          
declare @AppMstID int,@BtranId int,@tran int,@paidAppMstID int,@PaidRegNo varchar(50),@noOfTran int                          
select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno                
select @noOfTran=count(*) from VPTran where appmstid=@AppMstID and banktranmode=1                        
select @BtranId=max(BankTranId),@tran=count(*) from VPTran where AppMstId=@AppMstID                      
select @PaidRegNo=AppMstRegNo from Appmst where AppMstID=(select paidAppMstId from ipTran where BankTranId=@BtranId)                      
select BanktranBalance as balance,@tran as transact,bankTranAmount as amount,convert(varchar,BankTranDate,103)                      
 as bdate,BankTranremarks as [description],@PaidRegNo as SourceID,                      
 case BankTranMode                      
 when 1 then 'Debit'                      
 when 2 then 'Credit'                      
 when 3 then 'Credit'                      
 when 4 then 'Debit'                          
 when 5 then 'Debit'                      
 end as PayType,@noOfTran as TranCount   , (select AppmstMobile     from Appmst where   AppMstRegNo=@regno ) as Mobile              
from VPTran  where appmstid=@AppMstID and BankTranId=@BtranId      
      
       
      
GO
/****** Object:  StoredProcedure [dbo].[geteROIWalletInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
 CREATE proc [dbo].[geteROIWalletInfo](@regno varchar(50))
 as
 begin

 declare @appmstid bigint
 set @appmstid = (select appmstid from appmst where appmstregno=@regno)
 Select Isnull(Sum(bankTranAmount), 0) as balance from  vptran where BankTranRemarks='ROI' and appmstid=@appmstid
 end
GO
/****** Object:  StoredProcedure [dbo].[geteVPWalletInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[geteVPWalletInfo](@regno varchar(50))                        
as                        
declare @AppMstID int,@BtranId int,@tran int,@paidAppMstID int,@PaidRegNo varchar(50),@noOfTran int                        
select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno              
select @noOfTran=count(*) from VPTran where appmstid=@AppMstID                     
select @BtranId=max(BankTranId),@tran=count(*) from VPTran where AppMstId=@AppMstID                    
select @PaidRegNo=AppMstRegNo from Appmst where AppMstID=(select paidAppMstId from VPTran where BankTranId=@BtranId)                    
select BanktranBalance as balance,@tran as transact,bankTranAmount as amount,convert(varchar,BankTranDate,103)                    
 as bdate,BankTranremarks as [description],@PaidRegNo as SourceID,                    
 case BankTranMode                    
 when 1 then 'Debit'                    
 when 2 then 'Credit'                    
 when 3 then 'Credit'                    
 when 4 then 'Debit'                        
 when 5 then 'Debit'                    
 end as PayType,@noOfTran as TranCount                    
from VPTran  where appmstid=@AppMstID and BankTranId=@BtranId  




GO
/****** Object:  StoredProcedure [dbo].[geteWalletInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[geteWalletInfo](@regno varchar(50))                      
as                      
declare @AppMstID int,@BtranId int,@tran int,@paidAppMstID int,@PaidRegNo varchar(50),@noOfTran int                      
select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno            
select @noOfTran=count(*) from CPTran where appmstid=@AppMstID and banktranmode=1                    
select @BtranId=max(BankTranId),@tran=count(*) from CPTran where AppMstId=@AppMstID                  
select @PaidRegNo=AppMstRegNo from Appmst where AppMstID=(select paidAppMstId from CPTran where BankTranId=@BtranId)                  
select BanktranBalance as balance,@tran as transact,bankTranAmount as amount,convert(varchar,BankTranDate,103)                  
 as bdate,BankTranremarks as [description],@PaidRegNo as SourceID,                  
 case BankTranMode                  
 when 1 then 'Debit'                  
 when 2 then 'Credit'                  
 when 3 then 'Credit'                  
 when 4 then 'Debit'                      
 when 5 then 'Debit'                  
 end as PayType,@noOfTran as TranCount   , (select AppmstMobile     from Appmst where   AppMstRegNo=@regno ) as Mobile          
from CPTran  where appmstid=@AppMstID and BankTranId=@BtranId  
  
   
  

GO
/****** Object:  StoredProcedure [dbo].[geteWalletInfoAdmin]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[geteWalletInfoAdmin]    
as                  
declare @AppMstID int,@BtranId int,@tran int,@paidAppMstID int,@PaidRegNo varchar(50),@noOfTran int                  
--select @AppMstID=AppMstID from Appmst where AppMstRegNo=@regno        
select @AppMstID=-111   --companyid 
select @noOfTran=count(*) from banktran where appmstid=@AppMstID and banktranmode=1                
select @BtranId=max(BankTranId),@tran=count(*) from banktran where AppMstId=@AppMstID              
select @PaidRegNo=AppMstRegNo from Appmst where AppMstID=(select paidAppMstId from BankTran where BankTranId=@BtranId)              
select BanktranBalance as balance,@tran as transact,bankTranAmount as amount,convert(varchar,BankTranDate,103)              
 as bdate,BankTranremarks as description,@PaidRegNo as SourceID,              
 case BankTranMode              
 when 1 then 'Debit'              
 when 2 then 'Credit'              
 when 3 then 'Credit'              
 when 4 then 'Debit'                  
 when 5 then 'Debit'              
 end as PayType,@noOfTran as TranCount              
from banktran where appmstid=@AppMstID and BankTranId=@BtranId





GO
/****** Object:  StoredProcedure [dbo].[getEWLoginInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[getEWLoginInfo](@RegNo varchar(50))          
as          
select AppMstRegNo,AppMstfname,convert(varchar,dateadd(minute,330,getutcdate()),103) as Dt from appmst where appmstRegNo=@RegNo    
select b.bankname,b.branch,b.ifscode,b.micrcode,b.acno from appbank b where appmstregno=@RegNo





GO
/****** Object:  StoredProcedure [dbo].[getGiftCardList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
    
CREATE procedure [dbo].[getGiftCardList](@Isactive char(1), @Type varchar(100))  
    
as                                   
    
    
    
begin                        
    
    
select  *,  Status=case IsActive when 1 then 'Activated' when 0 then 'De-Activated' end from GiftCardMst      

where Country=@Type
 order by ProductName                           
     
       
    
    
end                              
    
   
    
GO
/****** Object:  StoredProcedure [dbo].[getGiftCardListDetial]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  
create procedure [dbo].[getGiftCardListDetial](@ProductID bigint)
  
as                                 
  
  
  
begin                      
  
  
select  *   from GiftCardMst   where id=@ProductID;                     
  select  *   from GiftCardAmountAmst where GiftCardID=@ProductID       
     
  
end                            
  
 
  
  
GO
/****** Object:  StoredProcedure [dbo].[getGiftCardorderDetial]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--[getGiftCardorderDetial] 1
CREATE proc  [dbo].[getGiftCardorderDetial](@id bigint)              
as              
begin              
select  g.orderID as id, (a.AppMstRegNo  +' - ' + a.AppMstFName)    as userid, gm.Curency, gm.Country, gm.ProductName, 
 (gm.ProductName +' - ' + CONVERT(VARCHAR, g.Amount))  as ProductAmount,
g.SendGiftCard, g.Status from GiftOrderMst g inner join AppMst a on  a.appmstid= g.UserID  
inner join GiftCardMst gm on gm.id= g.GiftCardId
where g.orderID= @id            
end  
  
 
GO
/****** Object:  StoredProcedure [dbo].[GetHistoryBankDetailUSER]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[GetHistoryBankDetailUSER] 'global'
CREATE proc[dbo].[GetHistoryBankDetailUSER](
@regno varchar(50) )    
as        
begin      
 declare @appmstid int   
 
 select @appmstid=appmstid from AppMst where AppMstRegNo=@regno   
    Select *, dbo.GetAppmstRegNo(appmstid) as appmstregno from HistoryBankMst  where  appmstid=@appmstid order by doe desc
  end 
  
  

   
GO
/****** Object:  StoredProcedure [dbo].[GetIncomeLink]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
     
CREATE proc  [dbo].[GetIncomeLink](@regno varchar(50)    
    
 )     
    
    
    
as    
    
    
    
begin    
    
    
    
 Declare @LinkMonth varchar(20)   
 Declare @Noofday varchar(2)      
    
 Declare @CrateDate varchar(20)      
    
 Declare @TodayDate date      
    
  Declare @NextDate date      
    
    Declare @NROIDate date      
    
  declare @messg varchar(50)      
    
  declare @case varchar(50)      
    
    Declare @FA1 date     
    
  Declare @FA2 date      
    
  Declare @SA1 date     
    
  Declare @SA2 date       
    
  Declare @TA1 date     
    
  Declare @TA2 date       
    
  Declare @FOA1 date     
    
  Declare @FOA2 date      
    
  select @NextDate=ROIDate from appmst where AppMstRegNo=@regno    
    
    
    
 set @TodayDate= CONVERT(VARCHAR(11),GETDATE(),106)      
    
 SELECT  @CrateDate = CONVERT(CHAR(4), getdate(), 100) + CONVERT(CHAR(4), getdate(), 120)     
    
set @FA1 = CONVERT(VARCHAR(11),'01 ' + @CrateDate, 106)     
    
set @FA2 = CONVERT(VARCHAR(11),'07 ' + @CrateDate, 106)     
    
set @SA1 = CONVERT(VARCHAR(11),'08 ' + @CrateDate, 106)     
    
set @SA2 = CONVERT(VARCHAR(11),'14 ' + @CrateDate, 106)     
    
set @TA1 = CONVERT(VARCHAR(11),'15 ' + @CrateDate, 106)     
    
set @TA2 = CONVERT(VARCHAR(11),'23 ' + @CrateDate, 106)    
    
set @FOA1 = CONVERT(VARCHAR(11),'24 ' + @CrateDate, 106)    
  
set @Noofday= DAY(DATEADD(DD,-1,DATEADD(MM,DATEDIFF(MM,-1, Getdate()),0)))  
     
    
set @FOA2 = CONVERT(VARCHAR(11),@Noofday+' ' + @CrateDate, 106)      
    
     
  
   
    
if(@NextDate <= @TodayDate)    
    
begin    
    
if(@TodayDate >= @FA1   and  @TodayDate <= @FA2 )      
    
    
    
begin    
    
 set @messg= '1'    
 set @NROIDate =   '08' + @CrateDate    
    
end    
    
    
    
if(@TodayDate >= @SA1   and  @TodayDate <= @SA2 )      
    
    
    
begin    
    
set @messg= '2'    
    
set @NROIDate =   '16' + @CrateDate    
    
end    
    
    
    
if(@TodayDate >= @TA1   and  @TodayDate <= @TA2 )      
    
    
    
begin    
    
set @messg= '3'    
set @NROIDate =   '24' + @CrateDate    
    
end    
    
    
    
    
    
if(@TodayDate >= @FOA1   and  @TodayDate <= @FOA2 )      
    
    
    
begin    
    
set @messg= '4'    
    
set @NROIDate =   '01' + @CrateDate    
    
set @NROIDate= DATEADD(month, 1, @NROIDate);    
    
end    
    
    
    
end    
    
    
    
else    
    
    
    
begin    
    
set @messg ='You have Already submitted'     
    
end     
    
 select @messg as Mes, @NROIDate as Nextdate     
    
    
    
 end    
   

GO
/****** Object:  StoredProcedure [dbo].[getinvoceDetal]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- getinvoceDetal 'GA00000003'
--select * from InvoiceMst

 -- execute PRC_invoceCulculate  3 ,720  ,  10
CREATE  proc[dbo].[getinvoceDetal](@regno as varchar(50))                       
    
as                        
    
begin                       
    
	
	SELECT   InvoiceMst.id,  InvoiceMst.QT, AppMstFName ,  (AppMst.AppMstAddress1 +' ' + AppMst.AppMstState +' ' +  AppMst.AppMstCity +' ' +    AppMst.AppMstPinCode) as Address, InvoiceMst.Description, InvoiceMst.HSNCode, InvoiceMst.cost, 
	
	(InvoiceMst.CGST*InvoiceMst.QT)as CGST,   (InvoiceMst.SGST*InvoiceMst.QT)as SGST,   
  (InvoiceMst.IGST*InvoiceMst.QT)as IGST,   

InvoiceMst.IDate,
(InvoiceMst.cost*InvoiceMst.QT)as TotalAmount
FROM            dbo.InvoiceMst INNER JOIN
                         dbo.AppMst ON dbo.InvoiceMst.appmstid = dbo.AppMst.appmstid

 where AppMst.AppMstRegNo=@regno                       
    
end      
  

   

   
    
GO
/****** Object:  StoredProcedure [dbo].[GetInvoice]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[GetInvoice](@regno varchar(50))                    
as                    
begin                    
 If Exists(SELECT appmstid,appmstregno from AppMst where AppMstRegNo=@regno  )                     
begin                  
        
        
select Appmsttitle+space(1)+AppmstFname as name,appmstaddress1,appmstCity,appmstpincode,appmststate,appmstid,joinfor,appmstpaid=case appmstpaid when 0 then 'UnPaid' when 1 then 'Paid' end,appmstregno,convert(varchar(20),appmstdoj,103) as doj,appmstregno,appmstmobile  from appmst where appmstregno=@regno          
      
end                   
end





GO
/****** Object:  StoredProcedure [dbo].[GetInvoiceLimit]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[GetInvoiceLimit]    
as    
begin    
select username uid,srno from controlmst where admintype<>'sa' order by srno    
select c.username as uid,c.[name] as fname,i.amount as amt,i.usedamt as uamt,convert(varchar,i.doe,103) as doe from     
controlmst c inner join AdmininvoiceLimit i on c.srno=i.adminsrno    
end





GO
/****** Object:  StoredProcedure [dbo].[getMobileNoRegistrationList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getMobileNoRegistrationList](@minDate datetime,@maxDate datetime,@MobileNo varchar(50) =null,@type varchar(50))              
as               
begin             
--***Complete Mobile No. Registration List         
if(@type='cl')        
begin          
select SrNo,ApplicantName,EMailId,MobileNo,IPAddrss,convert(varchar(20),DOE,103) as DOE  from RegisterMobileNo where   CAST(FLOOR(CAST(DOE as float)) as datetime) between @minDate and @maxDate         
end          
--***Complete Mobile No. Registration List         
        
--***Mobile No. Search         
if(@type='s')        
begin          
select SrNo,ApplicantName,EMailId,MobileNo,IPAddrss,convert(varchar(20),DOE,103) as DOE  from RegisterMobileNo where   MobileNo=@MobileNo and CAST(FLOOR(CAST(DOE as float)) as datetime) between @minDate and @maxDate         
         
end          
--***Mobile No. Search       
end





GO
/****** Object:  StoredProcedure [dbo].[getname]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getname](@regno varchar(50))      
      
as      
begin      
  SELECT AppMstFName + space(1) + AppMstLName as NM,AppMstRegNo from AppMst where AppMstRegNo=@regno  
  
end







GO
/****** Object:  StoredProcedure [dbo].[GetNameBalance]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[GetNameBalance](@regno varchar(50)) 
as 

declare @appmstid int,@balance float,@BtranId int 
set @balance=0 
select @appmstid=appmstid from appmst where appmstregno=@regno  
select @BtranId=max(BankTranId) from banktran where AppMstId=@appmstid            
select @balance=isnull(BanktranBalance,0) from banktran where appmstid=@appmstid and banktranid=@BtranId           
select appmsttitle+space(1)+appmstfname as fname,@balance as balance from appmst where appmstregno=@regno





GO
/****** Object:  StoredProcedure [dbo].[getNEWRewardList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getNEWRewardList](@from int ,@to int,@aname varchar(50))            
as            
begin           
create table #temp(sno int ,regno varchar(50),uname varchar(50),awardname varchar(50))          
insert into #temp select srno ,upper(t.appmstregno) as appmstregno, upper(a.appmsttitle)+space(1)+upper(a.appmstfname) as uname ,upper(t.awardname) as awardname from tblreward t,appmst a where t.appmstregno=a.appmstregno and t.awardname=@aname and srno  >=@from and srno<=@to   order by srno
select * from #temp where  sno  >=@from and sno<=@to   

        
end





GO
/****** Object:  StoredProcedure [dbo].[GetNews]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[GetNews]
as
begin
	SELECT NewsMstValidUpTo as ValidTo,NewsMstDiscription as News from NewsMst where currentRecord=1
end





GO
/****** Object:  StoredProcedure [dbo].[getNodeDetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[getNodeDetails](@AppMstRegNo varchar(50))                    
as                    
begin        
declare @count int    
  declare @amount float 
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@AppMstRegNo)                 
select @amount=isnull(sum(s.amount),0) from sharemst s,appmst a where s.appmstid=a.appmstid and a.appmstid in(Select AppMst.AppMstid from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@AppMstRegNo) )

     select @count as cnt,@amount as investment       
end





GO
/****** Object:  StoredProcedure [dbo].[getOrderList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE procedure [dbo].[getOrderList](@minDate datetime,@maxDate datetime,@CustomerId varchar(50)=null,@OrderId int=null,@status  int, @type varchar(10))           

as           

begin           

--***Complete Order List                                                         

      

    if(@type='c1')        

    begin    

    set @OrderId=null    

    set @CustomerId=null    

 select o.OrderId,c.CartId,AppMst.AppMstRegNo,AppMst.AppMstRegNo,o.courier,o.coTracking,o.Remarks,o.isDeleted,c.[Address]+', City: '+c.City+', State: '+c.[State]+', Pin Code: '+c.PinCode+', <br/> Mobile: '+c.MobileNo+', Email: '+c.EMailId as addr,        
  

 convert(varchar(20),c.DOE,103) as doe,c.Price,c.Quantity,c.NetAmt,sts=case o.isDeleted when 2 then 'Dispatched' when 1 then 'Pending' end from ordermst o           

 inner join CartMst c on o.CartId=c.CartId inner join AppMst on AppMst.AppMstRegNo=c.CustomerId where o.isDeleted=@status and CAST(FLOOR(CAST(o.DOE as float)) as datetime) between           

 cast(floor(cast(@minDate as float))as datetime) and cast(floor(cast(@maxDate as float))as datetime) order by doe           

      

    end      

--***Complete Order List                        

--***Customer Order Search           

          

if(@type='cs')           

begin           

  select o.OrderId,c.CartId,AppMst.AppMstRegNo,o.courier,o.coTracking,o.Remarks,o.isDeleted,          

 AppMst.AppMstRegNo,c.[Address]+', City: '+c.City+', State: '+c.[State]+', Pin Code: '+c.PinCode+', <br/> Mobile: '+c.MobileNo+', Email: '+c.EMailId as addr,          

 convert(varchar(20),c.DOE,103) as doe,c.Price,c.Quantity,c.NetAmt,sts=case o.isDeleted when 2 then 'Dispatched' when 1 then 'Pending' end       

       

       

 from ordermst o           

  join CartMst c on o.CartId=c.CartId join AppMst on AppMst.AppMstRegNo=c.CustomerId       

        

  where AppMst.AppMstRegNo= @CustomerId   and isDeleted=@status and CAST(FLOOR(CAST(o.DOE as float)) as datetime) between           

 cast(floor(cast(@minDate as float))as datetime) and cast(floor(cast(@maxDate as float))as datetime)  order by doe           

 --***Customer Order Search            

end            

--***Order Search             

if(@type='os')           

begin            

select o.OrderId,c.CartId,AppMst.AppMstRegNo,o.courier,o.coTracking,o.Remarks,o.isDeleted,          

 AppMst.AppMstRegNo,c.[Address]+', City: '+c.City+', State: '+c.[State]+', Pin Code: '+c.PinCode+', <br/> Mobile: '+c.MobileNo+', Email: '+c.EMailId as addr,          

 convert(varchar(20),c.DOE,103) as doe,c.Price,c.Quantity,c.NetAmt,sts=case o.isDeleted when 2 then 'Dispatched' when 1 then 'Pending' end       

       

       

 from ordermst o           

  join CartMst c on o.CartId=c.CartId join AppMst on AppMst.AppMstRegNo=c.CustomerId where       

  o.OrderId= @OrderId   and o.isDeleted=@status and CAST(FLOOR(CAST(o.DOE as float)) as datetime) between           

 cast(floor(cast(@minDate as float))as datetime) and cast(floor(cast(@maxDate as float))as datetime)   order by doe           

 --***Order Search                                                    

end           

       

end  





GO
/****** Object:  StoredProcedure [dbo].[GetOrderStatus]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[GetOrderStatus](@Type varchar(50))                
as                
begin                
select  g.orderID as id, (a.AppMstRegNo  +' - ' + a.AppMstFName)    as userid, gm.Curency, gm.Country, gm.ProductName,   
g.SendGiftCard,  case when g.Status=0 then  'Processing' else 'Complete' end Status   from GiftOrderMst g inner join AppMst a on  a.appmstid= g.UserID    
inner join GiftCardMst gm on gm.id= g.GiftCardId  
where g.Status= @Type              
end    
    
GO
/****** Object:  StoredProcedure [dbo].[getPackSizeList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[getPackSizeList](@PackSize varchar(50) =null,@type varchar(50),@status int)                              



as                               



begin                    



                   



--***Complete PackSize List                         



if(@type='cl')                        



begin                          



select srno,PackSize,convert(varchar(20),DOE,103) as doe,Status,sts=case Status when 1 then 'Activated' when 0 then 'De-Activated' end from PackSizeMst     where status=@status   order by PackSize                       



end                          



--***Complete PackSize List                         



                        



--***PackSize Search                         



if(@type='s')                        



begin                         



select srno,PackSize,convert(varchar(20),DOE,103) as doe,Status,sts=case Status when 1 then 'Activated' when 0 then 'De-Activated' end from PackSizeMst          where status=@status and PackSize like '%'+@PackSize+'%'  



end                          



--***PackSize Search                   



            



end





GO
/****** Object:  StoredProcedure [dbo].[getPaidListing]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[getPaidListing](@regno varchar(50))
as
begin
	select appmstLeftTotal,appmstRightTotal,AppMstSponsorTotal from appmst where appmstregno=@regno
end





GO
/****** Object:  StoredProcedure [dbo].[getPaidUserList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[getPaidUserList](@minDate datetime,@maxDate datetime,  @type varchar(50))   
as                                 
begin                               
--***Complete Admin Login List                           
                           
        select * from appmst where Jamount=@type
  and appmstpaid= 1  and

  CAST(FLOOR(CAST(apppaiddatetime as float)) as datetime) between @minDate and @maxDate   
  order by apppaiddatetime desc  
end                            
 
GO
/****** Object:  StoredProcedure [dbo].[getPaymentRequestList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
CREATE procedure[dbo].[getPaymentRequestList](@minDate datetime,@maxDate datetime,  @type varchar(50), @search varchar(50))        
as                                       
begin           
 set @search = '%' + @search + '%'                                 
--***select * from WalletRequestMst                               
if(@type='cl')                                
begin                                  
select srno, FileName, Pappmstregno, Jappmstregno, Pamount, RDate as EDate,  CAmt, Type ,CASE      RequestTyp   
    WHEN 0 THEN 'Request For Active '         
    ELSE 'Request For Active'         
END as RequestTyp 
, Status ,  AddressBTC,  approveDate as ADate from BTCRequestMst  
where status= 0  and     RDate   between @minDate and @maxDate         
And  Pappmstregno  Like @search        
  order by RDate desc       
end                                  
                            
if(@type='s')                                
begin                            
select srno, FileName,Pappmstregno, Jappmstregno, Pamount, RDate as EDate, CAmt, Type,CASE      RequestTyp   
    WHEN 0 THEN 'Request For Active '         
    ELSE 'Request For Active'         
END as RequestTyp , Status,  AddressBTC,  approveDate as ADate from BTCRequestMst  
where status= 1  and     approveDate   between @minDate and @maxDate         
And  Pappmstregno  Like @search   
  order by approveDate desc               
end         
      
      
                            
if(@type='si')                                
begin                            
select  srno, FileName, Pappmstregno, Jappmstregno, Pamount, RDate as EDate, CAmt, Type, Status  ,CASE      RequestTyp   
    WHEN 0 THEN 'Request For Active '         
    ELSE 'Request For Active'         
END as RequestTyp , AddressBTC, approveDate as ADate  from BTCRequestMst  
where status= 2 and     approveDate  between @minDate and @maxDate         
And  Pappmstregno  Like @search   
order by approveDate desc           
end         
                        
end      
      
      
    
      
GO
/****** Object:  StoredProcedure [dbo].[getPayoutDates]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure[dbo].[getPayoutDates]  
      
as      
begin      
  
select appfrompayment ,apptopayment, paymenttranbid from paymenttranb order by paymenttranbid  
  
end





GO
/****** Object:  StoredProcedure [dbo].[getPinAllotedUsers]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[getPinAllotedUsers](@mindate datetime,@maxdate datetime,@UserId varchar(50)=null,@type varchar(50),@ptype int)                  

as                  

begin                  

                

create table #temp (srno int identity (1,1),allotedto int,tranid int,pintype int)                  

create table #newtemp (srno int identity (1,1),AppMstid int,AppMstregno varchar(50),AppMstFName varchar(50),AppMstMobile varchar(50),NoOfPins int,allotmentdate datetime,tranid int,pintype varchar(50))   

  

if(@type ='s')                

begin                

insert into #temp                  

select  allotedto,tranid,min(pintype)   from PINMst  where allotedto=(select appmstid from appmst where appmstregno=@UserId) and CAST(FLOOR(CAST(allotmentdate as float)) as datetime) between @mindate  and @maxdate and (case  when @ptype=0 then 1 when pintype=@ptype then 1 else 0 end)=1  group by allotedto,tranid order by tranid           

        

          

            

end                

if(@type ='cl')                

begin                

insert into #temp                  

select  allotedto,tranid,min(pintype)   from PINMst  where allotedto!=0 and CAST(FLOOR(CAST(allotmentdate as float)) as datetime) between @mindate  and @maxdate and (case  when @ptype=0 then 1 when pintype=@ptype then 1 else 0 end)=1 group by allotedto,tranid order by tranid                  

end                

declare @count int,@i int,@allotedto int,@tranid int,@pincount int,@AppMstregno varchar(50),@AppMstFName varchar(50),@AppMstMobile varchar(50),@allotmentdate datetime,  

@pintype int                  

select @count=COUNT(*) from #temp                      

set @count=@count+1                      

set @i=1                    

while(@i<@count)                      

begin                   

set @allotedto=0                  

set @pincount=0                  

set @tranid=0                  

set @AppMstregno='0'                  

set @AppMstFName='0'                  

set @AppMstMobile='0'                  

set @allotmentdate='01/01/2000'                

select @allotedto=allotedto,@tranid=tranid,@pintype=pintype  from #temp where srno=@i                  

select @AppMstregno=AppMstregno,@AppMstFName=AppMstFName,@AppMstMobile=AppMstMobile from AppMst where AppMstID=@allotedto                  

select @pincount= COUNT(pinsrno),@allotmentdate=MAX(allotmentdate) from pinmst where tranid=@tranid  and    allotedto=@allotedto              

--select @pincount= MAX(pincount),@allotmentdate=MAX(allotmentdate) from pinmst where tranid=@tranid                   

insert into #newtemp (AppMstid ,AppMstregno,AppMstFName ,AppMstMobile ,NoOfPins ,allotmentdate,tranid,pintype  ) values (@allotedto,@AppMstregno,@AppMstFName,@AppMstMobile,@pincount,@allotmentdate,@tranid,case @pintype when 1 then 'Registration' when 2 then 'Upgradation' else '' end)                  

set  @i=@i+1                  

end -- while ends                   

select srno,AppMstid,AppMstregno,AppMstFName,AppMstMobile,NoOfPins,convert(varchar(20),allotmentdate,103) as allotmentdate,tranid,pintype  from #newtemp order by tranid                  

drop table #newtemp                  

drop table #temp                  

end




GO
/****** Object:  StoredProcedure [dbo].[getPinDetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[getPinDetails](@tranid int,@id int)          

as          

begin          

SELECT (select 'Member : '+appmstregno+space(1)+'['+appmstfname+']' from appmst where appmstid=pinmst.allotedto)as allotedto,pinsrno,convert(varchar(20),PinMst.allotmentdate,103) as allotmentdate,  

((select upper(appmstregno) from appmst where appmstid=PinMst.regno)+space(1)+'( '+(select upper(appmstfname) from appmst where appmstid=PinMst.regno)+' )')  as usedby,  

amount,UPPER(mode) AS mode,UPPER(TransferId) AS TransferId,UPPER(chequeno) AS chequeno,UPPER(transactionNo) AS transactionNo,UPPER(bank) AS bank,  

UPPER(branch) AS branch,depositedamount,remark,case pintype when 1 then 'Registration' when 2 then 'Upgradation' else '' end as pintype FROM PinMst WHERE tranid =@tranid    and allotedto=@id      

end




GO
/****** Object:  StoredProcedure [dbo].[getPopUp]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getPopUp]  
as  
begin  
Select srno,popupmsg,convert(varchar(20),date,103) as date from popup  
  
end





GO
/****** Object:  StoredProcedure [dbo].[getPopUpDispaly]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[getPopUpDispaly](@regno varchar(50))
as
begin
select appmstfname,appmstlogin,appmstdoj,SponsorID,appmstlefttotal,appmstrighttotal,appmstlefttotal,
appmstrighttotal,CarryLeft,CarryRight,BFL,BFR,joinfor=case joinfor when .25 then '2750' when .50 then '4750' when .75 then '7550' when 1.00 then '9550' when 1.25 then '11750' when 1.50 then '14750'end,TotalNewLeft,TotalNewRight from appmst where appmstregno=@regno
end





GO
/****** Object:  StoredProcedure [dbo].[getPopUpMsg]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getPopUpMsg]    
as    
begin    
select PopUpMsg from popup  where date= (select max(date) from popup)  
    
end





GO
/****** Object:  StoredProcedure [dbo].[getPopUpMsgById]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getPopUpMsgById](@srno int)  
as  
begin  
Select popupmsg from popup  where srno=@srno
  
end





GO
/****** Object:  StoredProcedure [dbo].[getProduct]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[getProduct](@ProductId  varchar(50))                                          







as                                           







begin                         







select ProductId,ProductName,Title,SubCatId,Price,mrp,Quantity,PackSize,RedeemPoints,
PackSizeUnitId,BrandId,convert(varchar(20),DOE,103) as doe,ImageName,
Description,Status,sts=case Status when 1 then 'Activated' when 0    then 'De-Activated' end,offertype,TitleTag,MetaCharsetTag,MetaLanguageTag,MetaDescriptionTag,MetaKeywordsTag from ShopProductMst where  ProductId=@ProductId 







end




GO
/****** Object:  StoredProcedure [dbo].[getProductAmount]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc  [dbo].[getProductAmount]             
as              
begin              
If Exists(select Amount,srno from PlanTypeMst)            
	--select srno,Amount,productname,joinfor from productmst where isdeleted=0 order by srno        
	select Amount,srno from PlanTypeMst where Active=1 and amount>0  order by amount

end

GO
/****** Object:  StoredProcedure [dbo].[GetProductDetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[GetProductDetails](@ProductId varchar(50), @Regno Varchar(50))                            



as                            



begin        



declare @RType int                



Select @RType=RetailerTypeId from appmst where appmstregno=@Regno



set @RType=isnull(@RType,0)



select p.ProductName,p.Title,p.PID, p.SubCatId, p.RedeemPoints, 



(Case when @RType=1 then  cast(p.retailer1 as varchar) when @RType=2 then  cast(p.retailer2 as varchar) when @RType=3 then  cast(p.retailer3 as varchar)



else  cast(p.Price as varchar) end )as Price,p.mrp,round(p.discount,0) as discount ,(select brand from brandmst where srno=p.brandid) as brand ,imagename=case isnull(p.imagename,'0')

when '0' then 'noImage.jpg' when NULL  then 'noImage.jpg' else imagename end,

p.imagename1,p.imagename2,p.imagename3,p.imagename4,p.imagename6,p.imagename7,isnull((cast(p.PackSize as varchar(20))+Space(1)+(select PackSize from PackSizemst where srno=p.PackSizeUnitId) ),'NA')as pack,offertype=case p.offertype

 when 0 then 'General'  when 1 then 'Hot Deals' when 2 then 'Top Sellers' when 3 then 'Best Deals' end,          

Availability=case when p.Quantity> 0 then 'In Stock' else 'Out Of Stock' end,p.[description] from ShopProductMst p where p.Pid=@ProductId                    

select ProductName,Title,PackSize,Availability,Price,MRP,BuyNow from SettingMst     

       

end





GO
/****** Object:  StoredProcedure [dbo].[getProductImage]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[getProductImage](@productId varchar(50))            







as            







begin   







declare @qty int  







set @qty=0           







select p.ImageName,p.ProductName,(select SubCatName from SubCategoryMst where SubCatId=p.SubCatId) as SubCatName,p.Price,p.Quantity,p.Description,offertype=case    p.offertype when 0 then 'General'  when 1 then 'Hot Deals' when 2 then 'Top Sellers' when 3






 then 'Best Deals' end,case when  p.quantity>0 then 'In Stock' else 'Out Of Stock' end as Availability from  ShopProductMst p where ProductId=@productId             







end




GO
/****** Object:  StoredProcedure [dbo].[getProductImage1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE procedure [dbo].[getProductImage1](@productId varchar(50))                  


as                  



      



begin         



      



declare @qty int        



      



set @qty=0                 



      



select case when P.ImageName is null then 'noImage.jpg' else ImageName end as ImageName,  



 case when P.ImageName1 is null then 'noImage.jpg' else ImageName1 end as ImageName1,  



 case when P.ImageName2 is null then 'noImage.jpg' else ImageName2 end as ImageName2 ,  



 case when P.ImageName3 is null then 'noImage.jpg' else ImageName3 end as ImageName3,   



 case when P.ImageName4 is null then 'noImage.jpg' else ImageName4 end as ImageName4,  



 case when P.ImageName5 is null then 'noImage.jpg' else ImageName5 end as ImageName5,  



 case when P.ImageName6 is null then 'noImage.jpg' else ImageName6 end as ImageName6,  



 case when P.ImageName7 is null then 'noImage.jpg' else ImageName7 end as ImageName7,       



p.ProductName,(select SubCatName from SubCategoryMst where SubCatId=p.SubCatId) as SubCatName,p.Price,p.Quantity,p.Description,offertype=case      



p.offertype when 0 then 'General'  when 1 then 'Hot Deals' when 2 then 'Top Sellers' when 3    



      



 then 'Best Deals' end,case when  p.quantity>0 then 'In Stock' else 'Out Of Stock' end as Availability from  ShopProductMst p where productId=@productId                   



      



end  












GO
/****** Object:  StoredProcedure [dbo].[getProductImage2]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE procedure [dbo].[getProductImage2](@productId varchar(50))                  


as                  



      



begin         



      



declare @qty int        



      



set @qty=0                 



      



select case when P.ImageName is null then 'noImage.jpg' else ImageName end as ImageName,  



 case when P.ImageName1 is null then 'noImage.jpg' else ImageName1 end as ImageName1,  



 case when P.ImageName2 is null then 'noImage.jpg' else ImageName2 end as ImageName2 ,  



 case when P.ImageName3 is null then 'noImage.jpg' else ImageName3 end as ImageName3,   



 case when P.ImageName4 is null then 'noImage.jpg' else ImageName4 end as ImageName4,  



 case when P.ImageName5 is null then 'noImage.jpg' else ImageName5 end as ImageName5,  



 case when P.ImageName6 is null then 'noImage.jpg' else ImageName6 end as ImageName6,  



 case when P.ImageName7 is null then 'noImage.jpg' else ImageName7 end as ImageName7        



  from  ShopProductMst p where pid=@productId                   



      



end  












GO
/****** Object:  StoredProcedure [dbo].[getProductList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[getProductList](@CategoryId int,@SubCategoryId int,
@userid varchar(50),
@Product  varchar(50) =null,@offertype int,@status int)                                                              







as                                                               







begin                                                            







select PID,ProductId,ProductName,Title,SubCatId,Price,mrp,retailer1,retailer2,retailer3,Quantity,PackSize, RedeemPoints, (select packsize from packsizemst where srno=ShopProductMst.PackSizeUnitId) as PackSizeUnit,      convert(varchar(20),DOE,103) as doe,ImageName,Description,Status,sts=case Status 











  







when 1 then 'Activated' when 0    then 'De-Activated' end,offertype=case offertype       when 0 then 'General' when 1 then 'Hot Deals' when 2 then 'Top Seller' when 3 then 'Best Deals' end,displayTop5 from ShopProductMst    







   where 
   userid=@userid and
   productname like '%'+@Product+'%'   and (@status=-1  or status=@status) and (catid=@CategoryId or @CategoryId=0)  and (subcatid=@SubCategoryId or @SubCategoryId=0)    order by displayTop5 desc           







end 












GO
/****** Object:  StoredProcedure [dbo].[getProfileImage]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE procedure  [dbo].[getProfileImage](@UserId varchar(50) )                 
as                
 begin                
     
 select ImageName from  ProfileImageMst    where AppMstregno=@UserId     
              
end
GO
/****** Object:  StoredProcedure [dbo].[getProfileModificationNEW]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getProfileModificationNEW](@regno varchar(50))    
as    
begin    
    
select * from modifyprofile where appmstregno=@regno    
end





GO
/****** Object:  StoredProcedure [dbo].[getProfileModificationsByAdmin]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getProfileModificationsByAdmin](@srno int)  
as  
begin  
  
select * from modifyprofile where sno=@srno  
end





GO
/****** Object:  StoredProcedure [dbo].[getProfileModificationSRNO]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getProfileModificationSRNO](@regno varchar(50))  
as  
begin  
  
select sno from modifyprofile where appmstregno=@regno  
end





GO
/****** Object:  StoredProcedure [dbo].[getQuote]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getQuote]
as
begin
Select srno,quote,convert(varchar(20),doe,103) as doe from cmddesk

end





GO
/****** Object:  StoredProcedure [dbo].[getQuoteByID]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getQuoteByID](@srno int)
as
begin
select * from cmddesk where srno=@srno
end





GO
/****** Object:  StoredProcedure [dbo].[GetRechargeDate]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc[dbo].[GetRechargeDate]
as
declare @getdate datetime 
set @getdate=DATEADD(minute,330,getutcdate()) 
select top 1 ReStartOn as redate,round((select isnull(SUM(amount),0) from Sharemst where CAST(floor(Cast(doe as float)) as datetime) between 
CAST(floor(Cast(w.ReStartOn as float)) as datetime) and CAST(floor(Cast(w.ReEndOn as float)) as datetime))/w.TotalRecharge*100,2) as RePerc  
from WithdrawAmt w where CAST(floor(Cast(w.ReStartOn as float)) as datetime)>=CAST(floor(Cast(@getdate as float)) as datetime) order by srno desc





GO
/****** Object:  StoredProcedure [dbo].[getROI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getROI](@id int,@mindate datetime,@maxdate datetime)                  
as                                  
begin                  
if EXISTS(select appmstregno from appmst where appmstid=@id)                    
begin                   
select a.appmstregno,a.appmsttitle+space(1)+a.appmstfname as name,convert(varchar(20),a.appmstdoj,103) as doj,round(c.amount,2) as amount,c.paymentcause,convert(varchar(20),c.effectdate,103) as effectdate from causeid c,appmst a where c.causeid=a.appmstid   and causeid>0  and c.userid=@id and  paymentcause  in ('ROI') and   CAST(FLOOR(CAST(effectdate as float)) as datetime) between @mindate and @maxdate      
end                                                                                                                                                                                                                                                            
                                                                                                           
end





GO
/****** Object:  StoredProcedure [dbo].[getROIPayoutDates]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getROIPayoutDates]          
              
as              
begin              
          
select payfromdate as appfrompayment ,paytodate as apptopayment, payoutno from payoutdateROI order by payoutno          
          
end





GO
/****** Object:  StoredProcedure [dbo].[getROITBPayoutDates]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getROITBPayoutDates]          
as              
begin                  
select payfromdate as appfrompayment ,paytodate as apptopayment, payoutno from payoutdateROITB order by payoutno                 
end





GO
/****** Object:  StoredProcedure [dbo].[getSAMobile]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getSAMobile]  
as  
begin  
select username,mobileno from controlmst where admintype='sa'  
end





GO
/****** Object:  StoredProcedure [dbo].[getScanDoc]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[getScanDoc](@UserId varchar(20),@type int)            
as            
begin            
select * from scandocs where UserId=@UserId and     doctype=@type    
end





GO
/****** Object:  StoredProcedure [dbo].[getShippingDetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE proc [dbo].[getShippingDetails](@CustomerId varchar(50),  @OrderId varchar(50))
as

begin


 
  select * from cartmst where  CartId = @OrderId and  CustomerId=@CustomerId
  

 end

 


GO
/****** Object:  StoredProcedure [dbo].[getsponsor]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[getsponsor](@regno varchar(50))  
as   
begin  
select appmstfname,appmstlname from appmst where appmstregno in (@regno)  
end





GO
/****** Object:  StoredProcedure [dbo].[getSub2CategoryList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[getSub2CategoryList](@SubCategoryId varchar(50),@Sub2Category varchar(50) =null,@type varchar(50),@status int)                            

as                             

begin                  

                 

--***Complete Sub Category List                       

if(@type='cl')                      

begin                        

select SubCatId,Sub2CatId,SubCatName,convert(varchar(20),DOE,103) as doe,Description,Status,sts=case Status when 1 then 'Activated' when 0 then 'De-Activated' end from    Sub2CategoryMst where status=@status  and SubCatId=@SubCategoryId        

end                        

--***Complete Sub Category List                       

                      

--***Sub Category Search                       

if(@type='s')                                   

select SubCatId,Sub2CatId,SubCatName,convert(varchar(20),DOE,103) as doe,Description,Status,sts=case Status when 1 then 'Activated' when 0 then 'De-Activated' end from    Sub2CategoryMst where status=@status and SubCatId=@SubCategoryId and SubCatName like
 '%'+@Sub2Category+'%'                                        

--***Sub Category Search                 

          

end




GO
/****** Object:  StoredProcedure [dbo].[getSubCategory]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[getSubCategory](@SubCatId int)    



as    



begin    



select (select CatName from  CategoryMst where CatId=SubCategoryMst.CatId ) as CatName,SubCatName , ImageName from SubCategoryMst where SubCatId=@SubCatId    



end


 




GO
/****** Object:  StoredProcedure [dbo].[getSubCategoryList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE procedure [dbo].[getSubCategoryList](@CategoryId varchar(50),@SubCatName varchar(50)=null,@status int)                                     


as                                   


begin                                                  



select SubCatId,CatId,SubCatName,convert(varchar(20),DOE,103) as doe,
Status,sts=case Status when 1 then 'Activated' when 0 then 'De-Activated' end from    SubCategoryMst 
 where CatId=@CategoryId and SubCatName like '%'+@SubCatName+'%'   and (@status=-1 or status=@status) order by DOE Desc                     







end
















GO
/****** Object:  StoredProcedure [dbo].[getTagLine]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[getTagLine](@UserId varchar(20))            
as            
begin            
select * from TagLineMst where UserId=@UserId             
end





GO
/****** Object:  StoredProcedure [dbo].[GetTime]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[GetTime]  
as  
select dateadd(minute,330,getutcdate()) as Wtime





GO
/****** Object:  StoredProcedure [dbo].[getTopUpDetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[getTopUpDetails](@regno varchar(50),@mindate datetime,@maxdate datetime)      
as      
begin      
select a.AppMstID ,a.appmstregno,a.appmstfname, s.Amount,convert(varchar(20),s.doe,103) as doe from appmst a inner join sharemst s on a.appmstid=s.appmstid    where a.appmstid=(select Appmstid from AppMst where appmstregno=@regno) and   CAST(FLOOR(CAST(doe as float)) as datetime) between @mindate and @maxdate   order by s.doe desc     
 
      
end





GO
/****** Object:  StoredProcedure [dbo].[GetTopUpUserByBank]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[GetTopUpUserByBank]  
(  
@userid varchar(80) =null,  
@operation varchar(25)=null,  
@agreementno varchar(80)=null,  
@srno varchar(80)=null  
)  
as   
begin  
if(@operation='Get')  
begin  
--select srno,appmstregno,agreementno,amount,(select appmstfname from appmst where   appmstregno =r.appmstregno)as Name,convert(varchar(80),approvaldate,103)  as approvaldate  from requestmst r  where substring(receiptno,1,1)='M'  and status=1 and agreementno=''  
select n.srno,n.appmstregno,n.agreementno,n.appmstid,n.amount,n.name,n.approvaldate,(select appmstregno from appmst where appmstid=b.appmstid) as tp from 

(select srno,appmstregno,(select appmstid from appmst where appmstregno=r.appmstregno ) as appmstid,agreementno,amount,(select appmstfname from appmst where   appmstregno =r.appmstregno)as Name,convert(varchar(80),approvaldate,103)  as approvaldate  from requestmst r ) n
inner join banktran b on n.appmstid=b.paidappmstid and b.banktranmode=11 order by n.approvaldate
end  
if(@operation='Submit')  
begin----------1  
if exists(select appmstregno from appmst where appmstregno=@userid)  
begin------1.1  
if not exists(select agreementno from requestmst where agreementno=@agreementno)  
begin-------1.2  
update requestmst set agreementno=@agreementno where srno=@srno  
end----1.2  
else   
return 1;  
end---1.1  
end---1  
end--0





GO
/****** Object:  StoredProcedure [dbo].[getuserinfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getuserinfo](@regno varchar(50))    
as    
begin    
select AppMstregno,AppmstFName,AppMstLName,CONVERT(VARCHAR(10), AppMstDOJ, 103) as AppMstDOJ ,AppMstRegNo,AppmstTitle from AppMst where AppMstRegNo in (@regno)    
end





GO
/****** Object:  StoredProcedure [dbo].[getUseriNFORMATION]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
             --  select * from AppMst            
--[getUserMaster]'GBT0000001'                                      
CREATE  proc[dbo].[getUseriNFORMATION] (@regno as varchar(50))                                                           
as                                                            
begin                                                           
 select a.Type, a.appmstpaid,  a.AppMstPassword as AppMstPassword,  a.ePassword as ePassword,  a.appmstpincode, a.distt, a.AcountNo, a.AppMstMobile,    
FORMAT (a.appmstDOJ, 'dd-MMM-yyyy')  as appmstDOJ, a.email, a.AppMstMobile,         
FORMAT (a.appPaiddatetime, 'dd-MMM-yyyy')  as appPaiddatetime,         
a.AppMstRegNo,upper(AppmstFName) as AppmstFName,AppMstLName,   a.appmststate,a.appmstcity,                                
AppmstSponsorTotal,appmstLeftTotal,appmstRightTotal, tempLeftTotal, tempRightTotal, cpl, cpr, isnull(sponsorid,0) as sponsorid,                                                
(select appmstfname from appmst  WITH (NOLOCK)  where appmstregno=a.sponsorid) as sponsorname,newsponsortotal , dbo.GetProfileImages(@regno) as imagename                             
from AppMst a    where a.AppMstRegNo=@regno                                         
end   
GO
/****** Object:  StoredProcedure [dbo].[GetUserInvoice]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[GetUserInvoice](@regno varchar(50))            
as            
begin            
select Appmsttitle+space(1)+AppmstFname as name,
appmstaddress1 as address      
,appmstCity as city,appmstpincode as pincode,
appmststate as state,appmstdoj as date,AppMstMobile as phone,            
appmstid as id from appmst 
where appmstregno=@regno            
end





GO
/****** Object:  StoredProcedure [dbo].[getUserList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[getUserList](@AppMstRegNo varchar(50) =null)                                
as                                 
begin                                              
select AppMstRegNo,AppMstFName,convert(varchar(20),AppMstDOJ,103) as AppMstDOJ ,AppMstMobile,AppMstAddress1,AppMstState,AppMstCity,sts=case appmstactivate when 1 then 'Activated' when 0 then 'De-Activated' end from AppMst      where AppMstRegNo =@AppMstRegNo       
end





GO
/****** Object:  StoredProcedure [dbo].[getUserMaster]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                                    
--[getUserMaster]'GBT128215'                                        
CREATE  proc[dbo].[getUserMaster] (@regno as varchar(50))                                                             
as                                                              
begin                                                             
 select a.appmstpaid,          
 FORMAT (a.appmstDOJ, 'MMM dd yyyy')  as appmstDOJ,           
  FORMAT (a.appPaiddatetime, 'MMM dd yyyy')  as appPaiddatetime,           
           
           
 a.AppMstRegNo,upper(AppmstFName) as AppmstFName,AppMstLName,   a.appmststate,a.appmstcity,                                  
            
 AppmstSponsorTotal,appmstLeftTotal,appmstRightTotal, tempLeftTotal, tempRightTotal, cpl, cpr, isnull(sponsorid,0) as sponsorid,                                                  
                                    
 (select appmstfname from appmst  WITH (NOLOCK)  where appmstregno=a.sponsorid) as sponsorname,newsponsortotal,              
               
               
 jAmount,                                                            
 carryleft,carryright,pairrank as pair,datediff(day,CAST(FLOOR(CAST(AppMstDOJ as float)) as datetime),                                                  
 CAST(FLOOR(CAST((dateadd(minute,(330),dbo.GetServerDate())) as float)) as datetime)) as membersince ,                                                  
 datediff(day,CAST(FLOOR(CAST((dateadd(minute,(330),dbo.GetServerDate())) as float)) as datetime),DATEADD(YEAR ,1,CAST(FLOOR(CAST(AppMstDOJ as float)) as datetime)))+1  as expirydays,                                                                 
(select isnull(count(srno),0) from apptran with (NOLOCK) where ParentId=a.AppMstID  and AppMstLeftRight=0) as LeftMember,                                                             
(select isnull(count(srno),0) from apptran with (NOLOCK) where ParentId=a.AppMstID and AppMstLeftRight=1) as rightMember,                                                           
                                                          
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=0 and Appmstpaid=1 and appmstactivate=1) as leftactivate,                                     
  
    
      
        
          
            
              
                
                  
                    
                      
                        
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=1 and Appmstpaid=1 and appmstactivate=1) as rightactivate,                                    
  
    
      
        
          
            
              
                
                  
                    
                      
                        
                         
                                                          
               
                                                          
(select isnull(count(appmstid),0) from AppMst with (NOLOCK) where SponsorID=a.AppMstRegNo and AppMstLeftRight=0) as leftDirect,                                                            
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=1) as RightDirect,                                                            
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=0 and Appmstpaid =1) as LeftPaidDirect,                                                            
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=1 and Appmstpaid=1) as RightPaidDirect,                                                            
(select isnull(count(appmstid),0) from AppMst with (NOLOCK) where SponsorID=a.AppMstRegNo and AppMstLeftRight=0 and Appmstpaid=0) as DirectleftRgtr,                            
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=1 and Appmstpaid=0) as DirectrightRgtr,                                        
                                     
 (select isnull(Sum(dollar),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='Payout') as TeamSales ,                                        
                       
   dbo.getRPbalance(a.appmstid) as Performance  ,                                        
 (select isnull(Sum(BankTranAmount),0) from RPTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='Royalty Distribution') as TROI  ,                                        
                                         
 (select isnull(Sum(BankTranAmount),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='WithDraw') as TWithDraw  ,                                        
  (select isnull(Sum(BankTranAmount),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='TPending') as TPending  ,                                        
                                                   
 (select isnull(Sum(dollar),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='Direct Income') as DirectINcome  ,                                        
  (select isnull(Sum(dollar),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='ROI') as ROI  ,                                        
                                               
  0 as RightPaidDirect  ,                                        
    (select isnull(Sum(dollar),0) from vpTran with (NOLOCK)  where appmstid=a.appmstid and   banktranremarks not in ('Under progress', 'withdraw', 'VP TRANSFER','Self', 'TOP-UP','Activate Account', 'Account Upgrade')  ) as TeamIncome ,              
                            
                                        
(select imagename from ProfileImageMst WITH (NOLOCK)  where appmstregno=@regno  ) as imagename,                                        
                                  
               
                    
                                    
JAmount as MYpakage                                     
from AppMst a    where a.AppMstRegNo=@regno                                           
end 
GO
/****** Object:  StoredProcedure [dbo].[getUserMaster1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create  proc[dbo].[getUserMaster1](@regno as varchar(50))               
as                
begin               
 select AppMstRegNo,upper(AppmstFName) as AppmstFName,AppMstLName, AppmstSponsorTotal,appmstLeftTotal,appmstRightTotal,  cpl, cpr, isnull(sponsorid,0) as sponsorid,    
 (select appmstfname from appmst where appmstregno=a.sponsorid) as sponsorname,newsponsortotal,              
 carryleft,carryright,pairrank as pair,datediff(day,CAST(FLOOR(CAST(AppMstDOJ as float)) as datetime),    
 CAST(FLOOR(CAST((dateadd(minute,(330),getutcdate())) as float)) as datetime)) as membersince ,    
 datediff(day,CAST(FLOOR(CAST((dateadd(minute,(330),getutcdate())) as float)) as datetime),DATEADD(YEAR ,1,CAST(FLOOR(CAST(AppMstDOJ as float)) as datetime)))+1  as expirydays,                   
(select isnull(count(srno),0) from apptran where ParentId=a.AppMstID  and AppMstLeftRight=0) as LeftMember,               
(select isnull(count(srno),0) from apptran where ParentId=a.AppMstID and AppMstLeftRight=1) as rightMember,             
            
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=0 and Appmstpaid=1 and appmstactivate=1) as leftactivate,               
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=1 and Appmstpaid=1 and appmstactivate=1) as rightactivate,               
            
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=0 and Appmstpaid=0 ) as salelinkedleft,               
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=1 and Appmstpaid=0) as salelinkedright,               
            
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=0 and appmstactivate =0 ) as DisableLeft,               
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=1 and appmstactivate =0) as DisableRight,               
            
            
(select isnull(count(appmstid),0) from AppMst where SponsorID=a.AppMstRegNo and AppMstLeftRight=0) as leftDirect,              
(select isnull(count(appmstid),0) from AppMst where SponsorID=a.AppMstRegNo and AppMstLeftRight=1) as RightDirect,              
(select isnull(count(appmstid),0) from AppMst where SponsorID=a.AppMstRegNo and AppMstLeftRight=0 and Appmstpaid =1) as LeftPaidDirect,              
(select isnull(count(appmstid),0) from AppMst where SponsorID=a.AppMstRegNo and AppMstLeftRight=1 and Appmstpaid=1) as RightPaidDirect,              
(select isnull(count(appmstid),0) from AppMst where SponsorID=a.AppMstRegNo and AppMstLeftRight=0 and Appmstpaid=0) as DirectleftRgtr,              
(select isnull(count(appmstid),0) from AppMst where SponsorID=a.AppMstRegNo and AppMstLeftRight=1 and Appmstpaid=0) as DirectrightRgtr, JAmount as investment    from AppMst a where AppMstRegNo=@regno               
end





GO
/****** Object:  StoredProcedure [dbo].[getUserMastertest]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- [getUserMastertest] 'GBT0000001'      
CREATE  proc[dbo].[getUserMastertest](@regno as varchar(50))                           
as                            
begin                           
    
select     
AppMstRegNo    
,upper(AppmstFName) as AppmstFName    
,AppMstLName    
,appmststate    
,appmstcity    
   
,(select imagename from ProfileImageMst(nolock) where  appmstregno=@regno  ) as imagename,
(select top 1 ROICount   from sharemst  with (NOLOCK) where appmstregno=a.appmstregno order by srno desc ) as ROICountShow ,   
 Isnull((datediff (D, (select top 1 DOE from Sharemst where appmstregno=a.appmstregno order by srno desc ), dbo.GetServerDate())),0) as DAysCount        
          
   
--,--(select sum(pairrank) from CauseID   with (NOLOCK) where CAST(effectdate  AS date) <=   CAST(getdate()  AS date)  ) as CPairRank    
,(select ISNULL(sum(s.JoinFor),0) FROM Sharemst(nolock) s where  amount>0 and s.JoinFor<11 and CAST(DOE  AS date)=cast(getdate() as date))  as CPairRank     
from AppMst a with (NOLOCK) where AppMstRegNo=@regno   --and isnull(appmstactivate,1)=1                        
    
end          
      
       
        
GO
/****** Object:  StoredProcedure [dbo].[getUserSMSInfo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[getUserSMSInfo](@regno varchar(50))   
as    
begin    
select appmsttitle+space(1)+appmstfname as uname,appmstmobile from appmstmst where appmstmstregno=@regno   
end





GO
/****** Object:  StoredProcedure [dbo].[grddtinvoce]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[grddtinvoce] (@Startid  varchar(50),@Endid  varchar(50))          
as          
begin          
declare @i int          
declare @count int          
declare @pintype int          
          
declare @address varchar(500)          
declare @appmstid int          
declare @doj datetime          
declare @date datetime          
declare @title varchar(20)          
declare @name varchar(50)          
declare @msg varchar(50)          
declare @amount float          
          
declare @pinsrno int        
  declare @ssrno int       
declare @id int          
declare @rgno varchar(50)          
          
---page variables          
declare @P1 varchar(50)          
declare @qty1 int          
declare @rate1 float          
declare @amt1 float          
declare @vat float          
declare @amountt float          
declare @amt float          
declare @P1tamt varchar(50)          
declare @Total float          
declare @qtycount int          
declare @discount float          
declare @discountval float        
declare @p2 varchar(50)          
---          
set @i=1          
set @date='10/16/2009'          
          
create table temp#(srno int identity(1,1),pintype int,address varchar(500),appmstid int,regno varchar(50),doj datetime,uname varchar(50),amount float,pinsrno int,ssrno int)          
create table tempg#(sno int identity(1,1),pintype int,address varchar(500),appmstid int,regno varchar(50),doj datetime,uname varchar(50),amount float,pinsrno int,ssrno int,discountval varchar(50),P1 varchar(50),discount float,P1tamt float,qty1 int,p2 varchar(50),rate1 float,amt1 float,vat float  ,amountt float,amt float,Total float )          
          
insert into temp# select distinct pinmst.pintype,appmst.appmstaddress1,appmst.appmstid,appmst.appmstregno,appmst.appmstdoj,appmst.appmsttitle+space(1)+appmst.appmstfname ,sharemst.amount,pinmst.pinsrno,sharemst.srno from appmst,sharemst,pinmst where appmst.appmstid=sharemst.appmstid and appmst.appmstregno=pinmst.regno and sharemst.doe= pinmst.activedate  and sharemst.amount>0 and appmst.appmstregno  between @Startid and @Endid  
        
select @count=count(*) from temp#          
set @count=@count+1          
          
        
--temp#  loop start        
while(@i<@count)          
begin          
select  @pintype=pintype,@address=address,@id=appmstid,@rgno=regno,@doj=doj,@name=uname ,@amount=amount,@pinsrno=pinsrno,@ssrno=ssrno from temp# where srno=@i          
if(@doj <=@date)          
begin          
set @doj='10/16/2009'          
end          
else          
begin          
set @doj=@doj          
end          
          
--for pintype 1          
if (@pintype=1)          
begin          
          
if(@amount<10000)          
begin          
set @msg='Amount Is Too Low To Generate Invoice'          
end          
          
          
          
if(@amount=10000)          
begin          
set @discountval='0'       
set @discount=0         
set @P1='Ratan Set(Moti)'          
set @qty1=1          
set @p2='0'          
set @rate1=@amount          
set @amt1=@amount          
set @vat=(@amount*1.00)/100          
set @amountt=@amount          
set @amt=@amountt+@vat          
set @P1tamt=1000.00-@vat          
set @Total=@amt+@P1tamt          
end          
          
else          
begin          
set @discountval='1'          
set @qtycount=@amount/10000.00          
set @P1='Ratan Set(Moti)'          
set @qty1=@qtycount          
set @p2='0'          
set @rate1=@amount          
set @amt1=@amount          
set @vat=(@amount*1.00)/100          
set @amountt=@amount          
set @amt=@amountt+@vat       
if(@vat=1000)          
begin          
set @P1tamt=10000          
set @discount='1000'          
end          
if(@vat>1000)          
begin          
set @P1tamt=10000          
set @discount=@vat-1000.00          
end          
          
if(@vat<1000)          
begin          
set @P1tamt=1000.00-@vat      
--          
set @discount=0      
end          
          
          
set @Total=@amt+@P1tamt-@discount          
end          
end          
--end of pintype 1          
          
--for pintype 2          
if (@pintype=2)          
begin          
          
if(@amount<10000)          
begin          
set @msg='Amount Is Too Low To Generate Invoice'          
end          
          
          
          
if(@amount=10000)          
begin          
set @discountval='0'          
set @discount=1000      
set @P1tamt='Ratan Set(Moti)'          
set @qty1=1          
set @p2='0'          
set @rate1=@amount          
set @amt1=@amount          
set @vat=(@amount*1.00)/100          
set @amountt=@amount          
set @amt=@amountt+@vat       
set @P1tamt=1000.00-@vat          
set @Total=@amt+@P1tamt-1000.00          
end          
          
else          
begin          
set @discountval='1'        
set @discount=1000        
set @qtycount=@amount/10000.00          
set @P1tamt='Ratan Set(Moti)'          
set @qty1=@qtycount          
set @p2='0'          
set @rate1=@amount          
set @amt1=@amount          
set @vat=(@amount*1.00)/100          
set @amountt=@amount          
set @amt=@amountt+@vat       
if(@vat=1000)          
begin          
set @P1tamt=10000          
set @discount='1000'          
end          
if(@vat>1000)          
begin          
set @P1tamt=10000          
set @discount=@vat-1000.00          
end          
          
if(@vat<1000)          
begin        
set @P1tamt=1000.00-@vat          
--      
set @discount=0      
end          
          
          
set @Total=@amt+@P1tamt-1000.00-@discount          
end          
end          
--end of pintype 2          
insert into tempg#(pintype ,address,appmstid,regno,doj ,uname,amount,pinsrno,ssrno,discountval ,P1,discount,P1tamt ,qty1 ,p2 ,rate1 ,amt1 ,vat ,amountt ,amt ,Total )          
values (@pintype,@address,@id,@rgno,@doj,@name,@amount,@pinsrno,@ssrno,@discountval,@P1,@discount,@P1tamt,@qty1,@p2,@rate1,@amt1,@vat,@amountt,@amt,@Total)          
          
set @i=@i+1          
          
end          
  drop table temp#         
select sno,pintype,appmstid,address,regno,convert(varchar(20),doj,103) as doj,uname,amount,pinsrno,ssrno,discountval,p1,discount,P1,discount,P1tamt,qty1,p2,rate1,amt1,vat,amountt,amt,total from tempg#         
--select * from tempg#          
         
drop table tempg#          
end





GO
/****** Object:  StoredProcedure [dbo].[grdinvoce]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[grdinvoce] (@regno varchar(50))    
as    
begin    
declare @i int    
declare @count int    
declare @pintype int    
    
declare @address varchar(500)    
declare @appmstid int    
declare @doj datetime    
declare @date datetime    
declare @title varchar(20)    
declare @name varchar(50)    
declare @msg varchar(50)    
declare @amount float    
    
declare @pinsrno int  
  declare @ssrno int 
declare @id int    
declare @rgno varchar(50)    
    
---page variables    
declare @P1 varchar(50)    
declare @qty1 int    
declare @rate1 float    
declare @amt1 float    
declare @vat float    
declare @amountt float    
declare @amt float    
declare @P1tamt varchar(50)    
declare @Total float    
declare @qtycount int    
declare @discount float    
declare @discountval float  
declare @p2 varchar(50)    
---    
set @i=1    
set @date='10/16/2009'    
    
create table temp#(srno int identity(1,1),pintype int,address varchar(500),appmstid int,regno varchar(50),doj datetime,uname varchar(50),amount float,pinsrno int,ssrno int)    
create table tempg#(sno int identity(1,1),pintype int,address varchar(500),appmstid int,regno varchar(50),doj datetime,uname varchar(50),amount float,pinsrno int,ssrno int,discountval varchar(50),P1 varchar(50),discount float,P1tamt float,qty1 int,p2 varchar(50),rate1 float,amt1 float,vat float
  
,amountt float,amt float,Total float )    
    
insert into temp# select distinct pinmst.pintype,appmst.appmstaddress1,appmst.appmstid,appmst.appmstregno,appmst.appmstdoj,appmst.appmsttitle+space(1)+appmst.appmstfname ,sharemst.amount,pinmst.pinsrno,sharemst.srno from appmst,sharemst,pinmst where appmst.appmstid=sharemst.appmstid and appmst.appmstregno=pinmst.regno and sharemst.doe= pinmst.activedate and appmst.appmstregno=@regno    
  
select @count=count(*) from temp#    
set @count=@count+1    
    
  
--temp#  loop start  
while(@i<@count)    
begin    
select  @pintype=pintype,@address=address,@id=appmstid,@rgno=regno,@doj=doj,@name=uname ,@amount=amount,@pinsrno=pinsrno,@ssrno=ssrno from temp# where srno=@i    
if(@doj <=@date)    
begin    
set @doj='10/16/2009'    
end    
else    
begin    
set @doj=@doj    
end    
    
--for pintype 1    
if (@pintype=1)    
begin    
    
if(@amount<10000)    
begin    
set @msg='Amount Is Too Low To Generate Invoice'    
end    
    
    
    
if(@amount=10000)    
begin    
set @discountval='0' 
set @discount=0   
set @P1='Ratan Set(Moti)'    
set @qty1=1    
set @p2='0'    
set @rate1=@amount    
set @amt1=@amount    
set @vat=(@amount*1.00)/100    
set @amountt=@amount    
set @amt=@amountt+@vat    
set @P1tamt=1000.00-@vat    
set @Total=@amt+@P1tamt    
end    
    
else    
begin    
set @discountval='1'    
set @qtycount=@amount/10000.00    
set @P1='Ratan Set(Moti)'    
set @qty1=@qtycount    
set @p2='0'    
set @rate1=@amount    
set @amt1=@amount    
set @vat=(@amount*1.00)/100    
set @amountt=@amount    
set @amt=@amountt+@vat 
if(@vat=1000)    
begin    
set @P1tamt=10000    
set @discount='1000'    
end    
if(@vat>1000)    
begin    
set @P1tamt=10000    
set @discount=@vat-1000.00    
end    
    
if(@vat<1000)    
begin    
set @P1tamt=1000.00-@vat
--    
set @discount=0
end    
    
    
set @Total=@amt+@P1tamt-@discount    
end    
end    
--end of pintype 1    
    
--for pintype 2    
if (@pintype=2)    
begin    
    
if(@amount<10000)    
begin    
set @msg='Amount Is Too Low To Generate Invoice'    
end    
    
    
    
if(@amount=10000)    
begin    
set @discountval='0'    
set @discount=1000
set @P1tamt='Ratan Set(Moti)'    
set @qty1=1    
set @p2='0'    
set @rate1=@amount    
set @amt1=@amount    
set @vat=(@amount*1.00)/100    
set @amountt=@amount    
set @amt=@amountt+@vat 
set @P1tamt=1000.00-@vat    
set @Total=@amt+@P1tamt-1000.00    
end    
    
else    
begin    
set @discountval='1'  
set @discount=1000  
set @qtycount=@amount/10000.00    
set @P1tamt='Ratan Set(Moti)'    
set @qty1=@qtycount    
set @p2='0'    
set @rate1=@amount    
set @amt1=@amount    
set @vat=(@amount*1.00)/100    
set @amountt=@amount    
set @amt=@amountt+@vat 
if(@vat=1000)    
begin    
set @P1tamt=10000    
set @discount='1000'    
end    
if(@vat>1000)    
begin    
set @P1tamt=10000    
set @discount=@vat-1000.00    
end    
    
if(@vat<1000)    
begin  
set @P1tamt=1000.00-@vat    
--
set @discount=0
end    
    
    
set @Total=@amt+@P1tamt-1000.00-@discount    
end    
end    
--end of pintype 2    
insert into tempg#(pintype ,address,appmstid,regno,doj ,uname,amount,pinsrno,ssrno,discountval ,P1,discount,P1tamt ,qty1 ,p2 ,rate1 ,amt1 ,vat ,amountt ,amt ,Total )    
values (@pintype,@address,@id,@rgno,@doj,@name,@amount,@pinsrno,@ssrno,@discountval,@P1,@discount,@P1tamt,@qty1,@p2,@rate1,@amt1,@vat,@amountt,@amt,@Total)    
    
set @i=@i+1    
    
end    
  drop table temp#   
select sno,pintype,appmstid,address,regno,convert(varchar(20),doj,103) as doj,uname,amount,pinsrno,ssrno,discountval,p1,discount,P1,discount,P1tamt,qty1,p2,rate1,amt1,vat,amountt,amt,total from tempg#   
--select * from tempg#    
   
drop table tempg#    
end





GO
/****** Object:  StoredProcedure [dbo].[HavePermission]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[HavePermission](@uname varchar(50),@pagename varchar(200))              
as              
begin  
 declare @permission int    
 set @permission=1

 select @permission=permission from pagepermissions where userid=@uname and pagename=@pagename

 if(@permission=1)    
 begin   
 
      If Exists(SELECT username,password from controlMst where username=rtrim(ltrim(@uname)) and admintype<>'sa'  )        
   SELECT username,password from controlMst where username=rtrim(ltrim(@uname))         
 end    
end





GO
/****** Object:  StoredProcedure [dbo].[HavePermissions]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[HavePermissions](@uname varchar(50),@pagename varchar(200))              
as              
begin  
 declare @permission int    
 set @permission=0

 select @permission=permission from pagepermissions where userid=@uname and pagename=@pagename

 if(@permission=1)    
 begin   
 
      If Exists(SELECT username,password from controlMst where username=rtrim(ltrim(@uname)) and admintype<>'sa'  )        
   SELECT username,password from controlMst where username=rtrim(ltrim(@uname))         
 end    
end





GO
/****** Object:  StoredProcedure [dbo].[HTTP_DB_ALERT]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure[dbo].[HTTP_DB_ALERT](@mobile varchar(10),@text varchar(300),@SMSType varchar(50),@flag int out)     
As  
declare @sUrl varchar(2000), @response varchar(8000)               
--The response will set to the variable @response              
Declare @obj int,@hr int,@status int,@msg varchar(255)               
set @flag=0              
begin try 

--make url to call    
  
/*  
if(@SMSType='bulk')          
begin            
select @sUrl=smsurl+'?password='+BulkProfileId+'&password='+BulkPwd+'&sender='+BulkSenderId+'&mobile='+@mobile+'&message='+@text+' from: '+website from paymentmst   where SMSCredit>0                
end          
else   
*/    
  
if(@SMSType in('websms','bulk'))     
begin          
select @sUrl=smsurl+'?username='+profileid+'&password='+pwd+'&sender='+senderid+'&mobile='+@mobile+'&message='+@text+' from: '+website from paymentmst   where SMSCredit>0                
end      
            
exec @hr = sp_OACreate 'MSXML2.ServerXMLHttp', @obj OUT                    
if @hr <> 0             
begin             
 Raiserror('sp_OACreate MSXML2.ServerXMLHttp.3.0failed', 16,1)             
 return             
end              
if(@sUrl is not null)      
begin      
exec @hr = sp_OAMethod @obj, 'open', NULL, 'POST', @sUrl, false                    
if @hr <>0             
begin             
 set @msg = 'sp_OAMethod Open failed'             
 goto eh             
end                    
exec @hr = sp_OAMethod @obj, 'setRequestHeader', NULL, 'Content-Type','application/x-www-form-urlencoded'                    
if @hr <>0             
begin             
 set @msg = 'sp_OAMethod setRequestHeader failed'             
 goto eh             
end                    
exec @hr = sp_OAMethod @obj, send, NULL, ''                    
if @hr <>0             
begin             
 set @msg = 'sp_OAMethod Send failed'             
 goto eh             
end                    
exec @hr = sp_OAGetProperty @obj, 'status', @status OUT                    
if @hr <>0             
begin             
 set @msg = 'sp_OAMethod read status failed'             
 goto eh                    
end                    
if @status <> 200             
begin            
 set @msg = 'sp_OAMethod http status ' + str(@status)             
 goto eh             
end                    
exec @hr = sp_OAGetProperty @obj, 'responseText', @response OUT                    
if @hr <>0             
begin             
 set @msg = 'sp_OAMethod read response failed'             
 goto eh             
end                    
exec @hr = sp_OADestroy @obj                    
--Start Add code here to save the response              
--1490349818,9871435778,Send Successful            
if(@response like '%Send Successful%')             
 update paymentmst set SMSCredit=SMSCredit-1            
insert into SmsMst (Mobile,TextMsg,Response,Doe) values(@mobile,@text,@response,dateadd(minute,330,getutcdate()))             
select @response as response              
--End Add code here to save the response               
set @flag=1              
return                    
eh:                    
exec @hr = sp_OADestroy @obj                    
Raiserror(@msg, 16, 1)              
return           
end  
end try 
begin catch
end catch





GO
/****** Object:  StoredProcedure [dbo].[idCheck]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[idCheck](@userid varchar(50))        
        
as        
begin        
     if EXISTS(select appmstid from appmst where appmstregno=@userid)            
begin     
select appmstid from AppMst where AppMstregno=@userid    
end      
end





GO
/****** Object:  StoredProcedure [dbo].[idsForSMSToAll]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[idsForSMSToAll]
as
begin


select appmsttitle+space(1)+appmstfname as uname,appmstmobile from appmst
end





GO
/****** Object:  StoredProcedure [dbo].[Incomehistoryvpdraw]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst                
--[DiamondNew] 'global', '0'                
--[Incomehistoryvpdraw] 'GBT239907'                
CREATE proc  [dbo].[Incomehistoryvpdraw](@AppMstRegNo varchar(50) )                  
AS                
begin                
 select                 
 v.Payoutno                 
              
               
              
 ,(case When v.BankTranMode in (1,12,44) then 'Debit' else  'credit' end) as PType              
 ,(case When v.BankTranMode=3 then '1' When v.BankTranMode<>3 then '0' end) as PVisible                
 ,V.BankTranId,A.AppMstRegNo                
 ,(A.AppMstTitle+SPACE(1)+A.AppMstFName)as Name ,                
 cast(round(V.BankTranAmount,8) as numeric(18,8)) banktranamount ,
 cast(round(V.BankTranBalance,8) as numeric(18,8)) BankTranBalance , OutAmount, dollar               
 ,case v.BankTranRemarks                 
                
	When  'Payout' then 'Matching Income'                 
	When  'ROI' then 'ROI Income'                 
	When   'Reward' then 'Reward Bonus'                  
	When   'Level' then 'Leadership Bonus'+CONVERT(VARCHAR,v.TranId)                  
	when 'VP TRANSFER' then 'Transfer'                  
	when 'withdraw' then 'withdraw'                  
	when 'Under progress' then 'Under progress'             
	when 'TOP-UP' then 'Activate Account'                         
 else  BankTranRemarks + ' '+ ISNULL( Reason,'') end  as                    
  BankTranRemarks                 
  ,   V.DispDate                
  ,V.IsActive             
  ,            
  (dbo.GetUserName(v.PaidAppmstID) + '(' +dbo.GetAppmstRegNo(v.PaidAppmstID)+ ')') as PName  ,       
  FORMAT (V.BankTranDate, 'MMM dd yyyy')    BankTranDate             
                 
  from VPTran v(nolock) inner join AppMst A(nolock) on V.AppmstId=A.AppMstID and A.AppMstRegNo=@AppMstRegNo                 
  LEFT join PaymentTranDraft P(NOLOCK) ON P.appmstid=v.AppmstId and p.payoutno=v.payoutno                 
  order by V.BankTranId desc                
                
                
                
END                
                
                
--select * from vptran where appmstid=2    
GO
/****** Object:  StoredProcedure [dbo].[IncomehistoryvpdrawAdmin]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst
--[DiamondNew] 'global', '0'
--[Incomehistoryvpdraw] 'GL656658'
CREATE proc  [dbo].[IncomehistoryvpdrawAdmin](@regno varchar(50) ,@MDate datetime, @Type varchar(10) )  
AS
begin
 select v.Payoutno,(case When v.BankTranMode=3 then '1' When v.BankTranMode<>3 then '0' end) as PVisible,
  V.BankTranId,A.AppMstRegNo,(A.AppMstTitle+SPACE(1)+A.AppMstFName)as Name ,V.BankTranAmount, V.BankTranBalance, 


  (dbo.GetAppmstRegNo(V.paidAppmstId) + '('+dbo.GetAppmstRegNo(V.paidAppmstId)+')') as Fromid,  
  case v.BankTranRemarks when 'Payout' then 'Team Sales Bonus'   When  'ROI' then 'Performance Bonus' When   'Reward' then 'Reward Bonus'  When   'Level' then 'Leadership Bonus'  when 'VP TRANSFER' then 'Transfer'   else  BankTranRemarks + ' '+  Reason end  as    
  BankTranRemarks ,   V.DispDate,V.IsActive,V.BankTranDate  from VPTran v,AppMst A where V.AppmstId=A.AppMstID and V.AppMstID=@regno 
  and CAST(banktranDate  AS date)=CAST(@MDate  AS date)    and banktranremarks=@Type
  order by V.BankTranId desc



END
--select * from vptran where BankTranRemarks='Level' and appmstid=40

--select * from appmst where appmstid in(378,
--377)
GO
/****** Object:  StoredProcedure [dbo].[InsertAppBank]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Proc  [dbo].[InsertAppBank](@regno varchar(50),@BankName varchar(100),@Branch varchar(200),@IFSCode varchar(50),@MICRCode varchar(50),@Acno varchar(50),@actype varchar(100))
as
begin
	declare @appmstid int
	if(Exists (select appmstid from appmst where appmstregno=@regno))
	begin
		select @appmstid=appmstid from appmst where appmstregno=@regno
		if(not exists(select srno from appbank where appmstid=@appmstid))
		begin
			insert into appbank (appmstid,appmstregno,BankName,Branch,IFSCode,MICRCode,Acno,actype,doe)
			values(@appmstid,@regno,@BankName,@Branch,@IFSCode,@MICRCode,@Acno,@actype,dateadd(minute,330,getutcdate()))
			return 1;
		end
		else
			return -101 --Already exists
	end
end





GO
/****** Object:  StoredProcedure [dbo].[InsertBankMst]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[InsertBankMst](
@regno varchar(50),
@Bname varchar(100),
@branch varchar(100),
@acno varchar(50),
@actype varchar(50),        
@holder varchar(100),
@ifs varchar(50),
@micr varchar(50),
@panno varchar(50),
@flag varchar(100) output)        
as        
begin   


declare @PanCT bigint

set @PanCT= (select isnull(count(panno),0) from  appmst where panno=@panno ) 

if @PanCT <=21
begin
 declare @appmstid int   
 set @flag=0     
 if(not exists(select appmstid from AppMst where AppMstRegNo=@regno))  
 begin  
 set @flag='User not exists.'  
 return;  
 end     
 select @appmstid=appmstid from AppMst where AppMstRegNo=@regno   
      
  if(exists(select srno from bankmst where appmstid=@appmstid))     
		begin  
		  declare @BankNameold varchar(100) , @BranchNew varchar(100) ,
			@acnonew  varchar(50) ,
			@AcTypeNew varchar(50),
			@HolderNameNew varchar,
			@IFSNew varchar(50) ,
			@PannoNew varchar(50),
			@byupdateNew varchar(50),
			@appmstidNew bigint
			select @BankNameold=BankName ,@BranchNew=Branch, @acnonew=acno ,@AcTypeNew=AcType, @HolderNameNew=HolderName ,@IFSNew=IFS from  BankMst
			where appmstid=@appmstid
			select @PannoNew=Panno
			from  appmst
			where appmstid=@appmstid
			 insert into HistoryBankMst(BankName,Branch,acno,AcType,HolderName,IFS, byupdate, Panno, doe, appmstid)
			 values(@BankNameold,@BranchNew, @acnonew,@AcTypeNew,@HolderNameNew,@IFSNew, @regno ,@PannoNew, getdate(), @appmstid )
		   update bankmst set BankName=@Bname,Branch=@branch,acno=@acno,AcType=@actype,HolderName=@holder,IFS=@ifs,MICR=@micr where appmstid=@appmstid   
		   update appmst set panno=@panno where AppMstRegNo=@regno    
		  end  
  else  
		  begin  
		  insert into bankmst (appmstid,BankName,Branch,acno,AcType,HolderName,IFS,MICR,doe)         
		  values(@appmstid,@Bname,@branch,@acno,@actype,@holder,@ifs,@micr,dateadd(minute,330,getutcdate()))  
		  update appmst set panno=@panno where AppMstRegNo=@regno     
		  end   
	set @flag='1'      
 end        
   
 else
 begin 
 set @flag= 'This' + @panno + 'Pan no Already used'  
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[InsertData5]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select sponsorid , count(*) from appmst  group by sponsorid                                
     --select * from AppMst                        
  --select * from sharemst                         
  --select * from Causeid                       
  --select * from vptran                       
--[InsertData5] 'AGF348395', 'AGF348395',   'Ken', '9210904155', 'S.gmail.com', 'Delhi', 'Delhi',  0, '122.0.1.1','111','','',''                            
--[GenerateAdminFund] 'GBT441230', 5000 ,'Admin', 1                      
--[RechargeUser] 'AGF348395', 'AGF669194' , '761671',2100,'',''                       
--select getdate()                      
--[DailyNewROI] '','2019-04-19 05:41:09.080'                      
--[finalpayout] '2019-04-19 05:41:09.080', ''                      
CREATE PROCEDURE[dbo].[InsertData5]                                            
(@sessionID varchar(50),                                  
@sponserid nvarchar(50),                                  
@AppMstFName  nvarchar(50),                                  
@mobile varchar(50),                                  
@emailid varchar(100),                                 
@AppMstLeftRight float,            
@BTCAddres varchar(100),          
@Pwd varchar(100),         
@key varchar(14),    
@country varchar(100),        
 @OTP varchar(14),                                                           
@IPAddress varchar(50),                            
@regDisplay varchar(50) output,                                  
@flag varchar(100) output ,                                  
@flagpwd varchar(100) output  )                                                         
as                                  
                      
                   
declare @PanCT bigint                    
                    
--set @PanCT= (select isnull(count(panno),0) from  appmst where panno=@panno )                     
                    
--if @PanCT <=5                  
                  
-- begin    
declare @Messages varchar(100)                    
   set @Messages=dbo.CheckOTPemail(@emailid, @OTP, 'registration')      
  if @Messages<>'1'    
  begin    
    set @flag=@Messages    
 return     
  end              
declare @PID  nvarchar(50),@appmstregno varchar(50),@joinfor float,@appmstid int,@prefix varchar(50) ,@parentid varchar(50),@Sappmstid int                                     
declare @Bbalance float,@BtranId int,@getdate datetime,@flags varchar(50),@Amt float, @Abalance float  ,   @DID  bigint,                                  
@AppMstLogin nvarchar(50),                                               
@AppMstPassword nvarchar(50)  ,@AppMstState varchar(100)                                  
set @flag=0                                            
set @flags=0                                                   
set @joinfor=0                                                         
select @appmstid=appmstid from nextid                                                         
set @PID=@sponserid                                                         
set @joinfor=0                                                           
set @getdate=dbo.GetServerDate()                                                                        
                                 
                                   
                                  
                                                                        
if(not exists(select appmstid from AppMst where AppMstRegNo=@sessionID and appmstactivate=1))                                                          
begin                                                          
set @flag='Invalid Session Id.'                                                           
return ;                                                          
end                                                           
                                  
set  @AppMstPassword =@Pwd                                  
Execute RandomUserID @AppMstLogin out                                     
                                   
               
set @appmstregno=@AppMstLogin                                                                    
 if(not exists(select appmstid from appmst where appmstregno=@appmstregno))                                                                                             
 begin                          
 if(not exists(select appmstregno from appmst where appmstlogin=@AppMstLogin and len(@AppMstLogin)>1))                                                           
 begin                                                           
   set xact_abort on                      
  begin transaction                                            
  set nocount on                                           
   begin try                                                   
                            
insert into AppMst(AppMstID,AppMstRegNo,SponsorID,AppMstFName, AppMstPassword,ePassword ,AppMstLogin, AppMstMobile,email,IPAddress,AppMstLeftRight,appmstactivate, AppMstDOJ, AcountNo, distt, Type   )                  
Values(@AppMstID,UPPER(RTRIM(@AppMstregno)),UPPER(RTRIM(@sponserid)),UPPER(RTRIM(@AppMstFName)),@AppMstPassword,@key,@AppMstLogin, @mobile,UPPER(RTRIM(@emailid)), @IPAddress,@AppMstLeftRight,1, @getdate , @BTCAddres , @country , 0    )                
 
    
     
set @PID=@sponserid                                                           
update AppMst set AppMstSponsorTotal=AppMstSponsorTotal+1 where AppMstRegNo =@sponserid                                               
execute UpdateParrentId  @PID,@AppMstLeftRight ,@AppMstRegNo                                                                                                                                
select @Parentid=Parentid from appmst where appmstregno= @AppMstRegNo                                                                                      
execute legcount @Parentid,@AppMstId , @AppMstLeftRight                                                           
update nextid set appmstid=appmstid+1                                                                                            
set @regDisplay=@appmstregno                                     
set @flagpwd    =@AppMstPassword                                                       
                                
  set @flag='1'                                                                                                      
                                  
    end try                                          
                                  
    begin catch                                                           
                                  
    set @regDisplay=''                                                           
                                  
  set @flag=error_message()                                                           
                                  
    end catch                                                           
                                  
  end                                                                        
                                  
  else                                                                                                  
                                  
 set @flag='Invalid username'                                                                    
                                  
 end                                                                                                                         
                                  
 else                                   
                                  
 set @flag='Duplicate UserID Generated.'                                                                                                                                   
                                  
                                                                                                                    
                                  
 --end                                     
                                  
--else                                                                                                                      
                                  
-- set @flag='Insufficient Investment Point.'                  
                                  
                                                          
                                  
if(@flag='1')                                               
                                  
begin                                                                            
                                  
 commit transaction                                                                                             
                                  
end                                                                
                                  
else                                                      
                                  
 rollback transaction                                
                                  
--end                   
               
--end                  
                  
-- else                    
-- begin                     
-- set @flag= 'This' + @panno + 'Pan no Already used'                      
-- end 
GO
/****** Object:  StoredProcedure [dbo].[InsertData5Bulk]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select *from appmst      
      
--[InsertData5]'youthe', 'youthe', 'test', 'testtest1', '9210904155', 'S.gmail.com','111111', 0,'122.0.1.1','',''      
CREATE PROCEDURE[dbo].[InsertData5Bulk]                
(@State varchar(50),     
@City varchar(50),     
@sessionID varchar(50),      
@sponserid nvarchar(50),      
@AppMstFName  nvarchar(50),      
@mobile varchar(50),      
@emailid varchar(100),      
@AppMstLeftRight float,                               
@IPAddress varchar(50),      
@AppMstPassword varchar(100)  ,      
@regDisplay varchar(50) output,      
@flag varchar(100) output ,      
@flagpwd varchar(100) output  )                             
as                                   
       
declare @PID  nvarchar(50),@appmstregno varchar(50),@joinfor float,@appmstid int,@prefix varchar(50) ,@parentid varchar(50),@Sappmstid int         
declare @Bbalance float,@BtranId int,@getdate datetime,@flags varchar(50),@Amt float, @Abalance float  ,   @DID  bigint,      
@AppMstLogin nvarchar(50)                   
       
set @flag=0                
set @flags=0                       
set @joinfor=0                             
select @appmstid=appmstid from nextid   with (NOLOCK)                          
set @PID=@sponserid                             
set @joinfor=0                               
set @getdate=getdate()                                              
       
  if  @sessionID='global'      
    begin      
     set @flag='Invalid Session Id.'                               
    return ;        
  end      
       
      
                                            
if(not exists(select appmstid from AppMst with (NOLOCK) where AppMstRegNo=@sessionID and appmstactivate=1))                              
begin                              
set @flag='Invalid Session Id.'                               
return ;                              
end                               
      
       
Execute RandomUserID @AppMstLogin out         
    
      
set @appmstregno=@AppMstLogin                                        
 if(not exists(select appmstid from appmst with (NOLOCK) where appmstregno=@appmstregno))                                                                 
 begin                               
 if(not exists(select appmstregno from appmst with (NOLOCK)  where appmstlogin=@AppMstLogin and len(@AppMstLogin)>1))                                  
 begin                               
   set xact_abort on                             
  begin transaction                
  set nocount on               
   begin try                         
   
     insert into AppMst(AppMstState, AppMstCity, AppMstID,AppMstRegNo,SponsorID,AppMstFName,      
   AppMstPassword,ePassword ,AppMstLogin, AppMstMobile,email,IPAddress,AppMstLeftRight,appmstactivate, AppMstDOJ)                
      
     Values(@State, @City, @AppMstID,UPPER(RTRIM(@AppMstregno)),UPPER(RTRIM(@sponserid)),UPPER(RTRIM(@AppMstFName)),      
  @AppMstPassword,@AppMstPassword,@AppMstLogin, @mobile,UPPER(RTRIM(@emailid)),      
 @IPAddress,@AppMstLeftRight,1, @getdate   )      
        
     set @PID=@sponserid                               
      
  update AppMst set AppMstSponsorTotal=dbo.GetAppMstSponsorTotal(@sponserid)+1 where AppMstRegNo =@sponserid                   
      
                                               
      
     execute UpdateParrentId  @PID,@AppMstLeftRight ,@AppMstRegNo                                                                                                    
      
     select @Parentid=Parentid from appmst WITH (NOLOCK) where appmstregno= @AppMstRegNo                                                                                                                                                                       
             
      
     execute legcount @Parentid,@AppMstId , @AppMstLeftRight                               
       
  update nextid set appmstid=appmstid+1                                                                   
      
  set @regDisplay=@appmstregno         
  set @flagpwd    =@AppMstPassword                    
 --execute RechargeUser @sessionID,@AppMstLogin,0,@PinNo, ''      
  set @flag='1'                                                                          
      
    end try                    
      
    begin catch                               
      
    set @regDisplay=''                               
      
  set @flag=error_message()                               
      
    end catch                               
      
  end          
      
  else                                                                      
      
 set @flag='Invalid username'                                        
      
 end                                                                                             
      
 else       
      
 set @flag='Duplicate UserID Generated.'                                                                                                       
      
                                                                                        
      
 --end                                                                                           
      
--else                                                                                          
      
-- set @flag='Insufficient Investment Point.'                                                                                                         
      
                              
      
if(@flag='1')                   
      
begin                                                     
      
 commit transaction                                                                 
      
end                                                                                                   
      
else                                                                                                           
      
 rollback transaction                                                                                                            
      
--end           
      
GO
/****** Object:  StoredProcedure [dbo].[InsertDatabulk5]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select *from appmst

--[InsertData5]'youthe', 'youthe', 'test', 'testtest1', '9210904155', 'S.gmail.com','111111', 0,'122.0.1.1','',''
CREATE PROCEDURE[dbo].[InsertDatabulk5]          
(@sessionID varchar(50),
@sponserid nvarchar(50),
@AppMstFName  nvarchar(50),
 @AppMstPassword nvarchar(50) ,               
@mobile varchar(50),
@emailid varchar(100),

@AppMstLeftRight float,   
                     
@IPAddress varchar(50),

@regDisplay varchar(50) output,

@flag varchar(100) output ,
@flagpwd varchar(100) output  )                       
as                             
 
declare @PID  nvarchar(50),@appmstregno varchar(50),@joinfor float,@appmstid int,@prefix varchar(50) ,@parentid varchar(50),@Sappmstid int   
declare @Bbalance float,@BtranId int,@getdate datetime,@flags varchar(50),@Amt float, @Abalance float  ,   @DID  bigint,
@AppMstLogin nvarchar(50)             

set @flag=0          
set @flags=0                 
set @joinfor=0                       
select @appmstid=appmstid from nextid                       
set @PID=@sponserid                       
set @joinfor=0                         
set @getdate=getutcdate()                                        
 
                                      
if(not exists(select appmstid from AppMst where AppMstRegNo=@sessionID and appmstactivate=1))                        
begin                        
set @flag='Invalid Session Id.'                         
return ;                        
end                         
 
Execute RandomRegNo @AppMstLogin out   
 

set @appmstregno=@AppMstLogin                                  
 if(not exists(select appmstid from appmst where appmstregno=@appmstregno))                                                           
 begin                         
 if(not exists(select appmstregno from appmst where appmstlogin=@AppMstLogin and len(@AppMstLogin)>1))                            
 begin                         
   set xact_abort on                       
  begin transaction          
  set nocount on         
   begin try                   

     insert into AppMst(AppMstID,AppMstRegNo,SponsorID,AppMstFName,
	  AppMstPassword,ePassword ,AppMstLogin, AppMstMobile,email,IPAddress,AppMstLeftRight,appmstactivate, AppMstDOJ)          

     Values(@AppMstID,UPPER(RTRIM(@AppMstregno)),UPPER(RTRIM(@sponserid)),UPPER(RTRIM(@AppMstFName)),
	 @AppMstPassword,@AppMstPassword,@AppMstLogin, @mobile,UPPER(RTRIM(@emailid)),
 @IPAddress,@AppMstLeftRight,1, @getdate 	 )
	 
     set @PID=@sponserid                         

	 update AppMst set AppMstSponsorTotal=AppMstSponsorTotal+1 where AppMstRegNo =@sponserid             

                                         

     execute UpdateParrentId  @PID,@AppMstLeftRight ,@AppMstRegNo                                                                                              

     select @Parentid=Parentid from appmst where appmstregno= @AppMstRegNo                                                                                                                                                                              

     execute legcount @Parentid,@AppMstId , @AppMstLeftRight                         
 
  update nextid set appmstid=appmstid+1                                                             

  set @regDisplay=@appmstregno   
  set @flagpwd    =@AppMstPassword                     
 --execute RechargeUser @sessionID,@AppMstLogin,0,@PinNo, ''
  set @flag='1'                                                                    

    end try                         

    begin catch                         

    set @regDisplay=''                         

  set @flag=error_message()                         

    end catch                         

  end                                        

  else                                                                

 set @flag='Invalid username'                                  

 end                                                                                       

 else 

 set @flag='Duplicate UserID Generated.'                                                                                                 

                                                                                  

 --end                                                                                     

--else                                                                                    

-- set @flag='Insufficient Investment Point.'                                                                                                   

                        

if(@flag='1')             

begin                                               

 commit transaction                                                           

end                                                                                             

else                                                                                                     

 rollback transaction                                                                                                      

--end     



GO
/****** Object:  StoredProcedure [dbo].[InsertDataCursonr]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
      
            
CREATE PROCEDURE[dbo].[InsertDataCursonr]                          
(@sessionID varchar(50),                
@sponserid nvarchar(50),       
@AppMstLogin nvarchar(50),                             
@AppMstPassword nvarchar(50)  ,              
@AppMstFName  nvarchar(50),                
@mobile varchar(50),                
@emailid varchar(100),               
@City varchar(50),                
@State varchar(100),               
@AppMstLeftRight float,                                         
@IPAddress varchar(50), @Pan varchar(50))                                       
as                
            
declare @CT  int,@regDisplay varchar(50) , @flag varchar(100)       
            
--set @CT =(select Isnull(Count(*), 0) from AppMst where SponsorID=@sessionID)            
            
--if @CT>22            
            
--begin            
--  set @flag='Sorry! You can not sponsor more than 21 account.'             
--  return ;              
--end            
                 
declare @PID  nvarchar(50),@appmstregno varchar(50),@joinfor float,@appmstid int,@prefix varchar(50) ,@parentid varchar(50),@Sappmstid int                   
declare @Bbalance float,@BtranId int,@getdate datetime,@flags varchar(50),@Amt float, @Abalance float  ,   @DID  bigint                
               
set @flag=0                          
set @flags=0                                 
set @joinfor=0                                       
select @appmstid=appmstid from nextid                                       
set @PID=@sponserid                                       
set @joinfor=0                                         
set @getdate=getdate()                                                        
              
    
    
     
       
set @appmstregno=@AppMstLogin                                                  
                                   
   set xact_abort on                                       
  begin transaction                          
  set nocount on                         
   begin try                                   
           
     insert into AppMst(AppMstID,AppMstRegNo,SponsorID,AppMstFName,                
   AppMstPassword,ePassword ,AppMstLogin, AppMstMobile,email,IPAddress,AppMstLeftRight,appmstactivate, AppMstDOJ, panno)                          
                
     Values(@AppMstID,UPPER(RTRIM(@AppMstregno)),UPPER(RTRIM(@sponserid)),UPPER(RTRIM(@AppMstFName)),                
  @AppMstPassword,@AppMstPassword,@AppMstLogin, @mobile,UPPER(RTRIM(@emailid)),                
 @IPAddress,@AppMstLeftRight,1, @getdate ,@Pan  )                
                  
     set @PID=@sponserid                                         
                
  update AppMst set AppMstSponsorTotal=AppMstSponsorTotal+1 where AppMstRegNo =@sponserid                             
                
                                                         
                
     execute UpdateParrentId  @PID,@AppMstLeftRight ,@AppMstRegNo                                                                                                              
                
     select @Parentid=Parentid from appmst where appmstregno= @AppMstRegNo                                                                    
                
     execute legcount @Parentid,@AppMstId , @AppMstLeftRight                                         
                 
  update nextid set appmstid=appmstid+1                                                                          
                
                  
                 
  set @flag='1'                                                                                    
                
    end try                        
                
    begin catch                                         
                
    set @regDisplay=''         
                
  set @flag=error_message()                                         
                
    end catch                                         
                
                                  
                
                                                                                                 
      
                                                                                                  
                
     
                                        
                
if(@flag='1')                             
                
begin                                                               
                
 commit transaction                                                                           
                
end                                                                                                             
                
else                                                                                                                     
                
 rollback transaction                                                                                                                      
                
--end 
GO
/****** Object:  StoredProcedure [dbo].[InsertFranchiseCity]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[InsertFranchiseCity](@userid varchar(50),@fname varchar(100),@state varchar(100),@city varchar(50),  
@address varchar(200),@pincode varchar(50),@mobile varchar(50),@phone varchar(50),@password varchar(50),  
@sponsor varchar(50),@stype varchar(50),@masterfranchise varchar(50),@regionalfranchise varchar(50),@bname varchar(50),@branch varchar(50),@acno varchar(50),@panno varchar(50),  
@micr varchar(50),@ifs varchar(50),@distt varchar(50),@email varchar(100),@dob datetime,@gtitle varchar(30),@gname varchar(100),  
@amount float,@addition float,@flag int output)  
as  
begin   
set @flag=0  
if(not exists(Select srno from Franchisecity where userid=@userid))  
begin  
 insert into Franchisecity (userid,fname,state,city,address,pincode,mobile,phone,password,sponsorid,  
 sponsortype,masterfranchise,regionalfranchise,bankname,  
 branch,acountno,panno,micr,ifs,distt,email,dob,gtitle,gname,amount,addition)  
 values(@userid,@fname,@state,@city ,@address,@pincode,@mobile,@phone,@password,@sponsor,  
 @stype,@masterfranchise,@regionalfranchise,@bname,  
 @branch,@acno,@panno,@micr,@ifs,@distt,@email,@dob,@gtitle,@gname,@amount,@addition)  
 set @flag=1  
end  
else  
set @flag=-1  
end





GO
/****** Object:  StoredProcedure [dbo].[InsertFranchiseREG]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[InsertFranchiseREG](@userid varchar(50),@fname varchar(100),@state varchar(100),@city varchar(50),  
@address varchar(200),@pincode varchar(50),@mobile varchar(50),@phone varchar(50),@password varchar(50),  
@sponsor varchar(50),@stype varchar(50),@masterfranchise varchar(50),@bname varchar(50),@branch varchar(50),@acno varchar(50),@panno varchar(50),  
@micr varchar(50),@ifs varchar(50),@distt varchar(50),@email varchar(100),@dob datetime,@gtitle varchar(30),@gname varchar(100),  
@amount float,@addition float,@flag int output)  
as  
begin   
set @flag=0  
if(not exists(Select srno from franchiseReg where userid=@userid))  
begin  
 insert into franchiseReg (userid,fname,state,city,address,pincode,mobile,phone,password,sponsorid,  
 sponsortype,masterfranchise,bankname,  
 branch,acountno,panno,micr,ifs,distt,email,dob,gtitle,gname,amount,addition)  
 values(@userid,@fname,@state,@city ,@address,@pincode,@mobile,@phone,@password,@sponsor,  
 @stype,@masterfranchise,@bname,  
 @branch,@acno,@panno,@micr,@ifs,@distt,@email,@dob,@gtitle,@gname,@amount,@addition)  
 set @flag=1  
end  
else  
set @flag=-1  
end





GO
/****** Object:  StoredProcedure [dbo].[insertmodifyprofile]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc[dbo].[insertmodifyprofile](                                                                         
@modifiedby varchar(50),                                          
@appmstregno varchar(50),                 
@title2 nvarchar(50),                                          
@fname2 nvarchar(100),                                          
@Mobile2 varchar(50),                                          
@activate2 int,                                                                           
@reason varchar(200),                                  
@email2 varchar(50),  
@distt2 varchar(50),
@pass2 varchar(50),
@epass2 varchar(50)                                                                              
)                                                                
                                                                    
as                              
begin                                                           
 Declare @status int,@activate1 int                                                          
 Set @status=0                          
Begin Tran     
select @activate1=appmstactivate from AppMst where AppMstRegNo=@appmstregno                                                             
insert into modifyprofile                                                  
(                                                                                 
modifiedby,                                          
appmstregno,                                          
title1,                                          
title2,                                          
fname1,                                 
fname2,                                          
distt1,  
distt2,                                                 
                        
Mobile1,                                          
Mobile2,                         
activate1,                                      
activate2,                                    
                                    
reasontomodify,                           
email1,                          
email2,
            
password1,
password2,
epassword1,
epassword2                                        
)      
select     
@modifiedby,                                          
@appmstregno,                                          
AppMstTitle,                                          
@title2,                                          
AppMstFName,                                          
@fname2,                                          
                                 
distt,                                          
@distt2,                                          
AppMstMobile,                                          
@Mobile2,                                          
appmstactivate,                                      
@activate2,               
@reason,                                  
email,                          
@email2,
appmstpassword,
@pass2,
epassword,
@epass2                                       
  from appmst where AppMstregno=@appmstregno                       
      
update AppMst set distt=@distt2,                                
Appmstmobile=@Mobile2,                                
AppMstTitle=@title2, AppMstFName=@fname2,                                
email=@email2 ,appmstactivate=@activate2,appmstpassword=@pass2,epassword=@epass2                                
 where AppMstregno=@appmstregno                       
if(@activate1!=@activate2)                  
begin                  
 insert into deactiveMst (Regno,[status],doe) values(@appmstregno,@activate2,dateadd(minute,330,getutcdate()))                    
end                                
Set @status=1                          
if(@status=1)                                                 
Commit Tran                            
Else                          
Rollback                                             
end 




GO
/****** Object:  StoredProcedure [dbo].[insertmodifyprofile_New]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc  [dbo].[insertmodifyprofile_New](                                               
  @modifiedby varchar(50),                
@appmstregno varchar(50),                
                                             
                
@title1 nvarchar(50),                
@title2 nvarchar(50),                
@fname1 nvarchar(100),                
@fname2 nvarchar(100),                
@type1 Varchar(100),  
@type2 varchar(100),               
@panno1 varchar(50),                
@panno2  varchar(50),                
@AccountNo1 varchar(50),                
@AccountNo2 varchar(50),                
@bankname1 varchar(50),                
@Bankname2 varchar(50),                
@Branch1 varchar(50),                
@Branch2 varchar(50),                
@ifs1 varchar(50),                
@ifs2 varchar(50),                
@micr1 varchar(50),                
@micr2 varchar(50),                
@Address1 varchar(100),                
@Address2 varchar(100),                
@City1  nvarchar(100),                
@City2  nvarchar(100),                
@State1  nvarchar(200),                
@State2  nvarchar(200),                
@distt1  varchar(50),                
@distt2 varchar(50),                
@PinCode1 nvarchar(100),                
@PinCode2 nvarchar(100),                
@PrimaryPhone1 nvarchar(100),                 
@PrimaryPhone2 nvarchar(100),                
@Mobile1 varchar(50),                
@Mobile2 varchar(50),                
@nomname1 varchar(50),                
@nomname2 varchar(50),                
@nomrela1 varchar(50),                
@nomrela2 varchar(50),                
@userdob1 smalldatetime,                
@userdob2 smalldatetime,                
@password1 nvarchar(100),                
@password2 nvarchar(100),            
@activate1 int,            
@activate2 int,          
@epassword1 varchar(50),          
@epassword2 varchar(50),                           
@reason varchar(200),        
@GName1 varchar(100),        
@GName2 varchar(100),                          
@GTitle1 varchar(50),        
@GTitle2 varchar(50),              
@email1 varchar(50),        
@email2 varchar(50)                                                 
)                                      
                                          
as    
begin                                 
 Declare @status int                               
 Set @status=0
Begin Tran                                   
insert into modifyprofile                        
(                
                
modifiedby,                
appmstregno,                
title1,                
title2,                
fname1,                
fname2,                
        
        
panno1,                
panno2,                
AcountNo1,                
AccountNo2,                
bankname1,                
Bankname2,                
Branch1,                
Branch2,                
ifs1,                
ifs2,                
micr1,                
micr2,                
Address1,                
Address2,                
City1,                
City2,                
State1,                
State2,                
distt1,                
distt2,                
PinCode1,                
PinCode2,                
PrimaryPhone1,                
PrimaryPhone2,                
Mobile1,                
Mobile2,                
nomname1,                
nomname2,                
nomrela1,                
nomrela2,                
userdob1,                
userdob2,                
password1,                
password2,            
activate1,            
activate2,          
epassword1,          
epassword2,          
reasontomodify,        
GName1,        
GName2,        
GTitle1,        
GTitle2,  
type1,  
type2,
email1,
email2      
                
                
)                        
values                 
(                
                
@modifiedby,                
@appmstregno,                
@title1,                
@title2,                
@fname1,                
@fname2,                
       
@panno1,                
@panno2,                
@AccountNo1,                
@AccountNo2,                
@bankname1,                
@Bankname2,                
@Branch1,   
@Branch2,                
@ifs1,                
@ifs2,                
@micr1,                
@micr2,                
@Address1,                
@Address2,                
@City1,                
@City2,                
@State1,                
@State2,                
@distt1,                
@distt2,                
@PinCode1,                
@PinCode2,        
@PrimaryPhone1,                
@PrimaryPhone2,                
@Mobile1,                
@Mobile2,                
@nomname1,                
@nomname2,                
@nomrela1,                
@nomrela2,                
@userdob1,            
@userdob2,                
@password1,                
@password2,            
@activate1,            
@activate2,          
@epassword1,          
@epassword2,          
@reason,        
@GName1,         
@GName2 ,        
@GTitle1,        
@GTitle2,  
@type1,  
@type2,
@email1,
@email2           
 ) 
update AppMst set distt=@distt2, Gtitle=@GTitle2,      
AppmstLname=@GName2,Appmstmobile=@Mobile2,      
AppMstTitle=@title2, AppMstFName=@fname2,      
nom_name=@nomname2,      
nom_rela=@nomrela2,panno=@panno2, AcountNo=@AccountNo2,      
BankName = @Bankname2,Branch=@Branch2, AppMstAddress1=@Address2,      
AppMstPrimaryPhone=@PrimaryPhone2,AppMstCity=@City2,      
email=@email2 ,appmstactivate=@activate2,AppMstPassword=@password2,      
AppMstPinCode=@PinCode2,userdob=@userdob2,      
AppMstState=@State2, ifc=@ifs2,
micr=@micr2,type=@type2 where AppMstregno=@appmstregno           

Set @status=1
if(@status=1)                       
Commit Tran  
Else
Rollback                   
end





GO
/****** Object:  StoredProcedure [dbo].[insertmodifyprofile1]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   proc [dbo].[insertmodifyprofile1](                                                 
  @modifiedby varchar(50),                  
@appmstregno varchar(50),                  
@title1 nvarchar(50),                  
@title2 nvarchar(50),                  
@fname1 nvarchar(100),                  
@fname2 nvarchar(100),                  
@panno1 varchar(50),                  
@panno2  varchar(50),                  
@AccountNo1 varchar(50),                  
@AccountNo2 varchar(50),                  
@bankname1 varchar(50),                  
@Bankname2 varchar(50),                  
@Branch1 varchar(50),                  
@Branch2 varchar(50),                  
@ifs1 varchar(50),                  
@ifs2 varchar(50),                  
@micr1 varchar(50),                  
@micr2 varchar(50),                  
@Address1 varchar(100),                  
@Address2 varchar(100),                  
@City1  nvarchar(100),                  
@City2  nvarchar(100),                  
@State1  nvarchar(200),                  
@State2  nvarchar(200),                  
@distt1  varchar(50),                  
@distt2 varchar(50),                  
@PinCode1 nvarchar(100),                  
@PinCode2 nvarchar(100),                  
@PrimaryPhone1 nvarchar(100),                   
@PrimaryPhone2 nvarchar(100),                  
@Mobile1 varchar(50),                  
@Mobile2 varchar(50),                  
@nomname1 varchar(50),                  
@nomname2 varchar(50),                  
@nomrela1 varchar(50),                  
@nomrela2 varchar(50),                  
@userdob1 smalldatetime,                  
@userdob2 smalldatetime,                  
@password1 nvarchar(100),                  
@password2 nvarchar(100),              
@activate1 int,              
@activate2 int,            
@epassword1 varchar(50),            
@epassword2 varchar(50),                             
@reason varchar(200),          
@GName1 varchar(100),          
@GName2 varchar(100),                            
@GTitle1 varchar(50),          
@GTitle2 varchar(50)                
)                                        
                                            
as                                       
                                      
                                      
begin                                   
                                  
   BEGIN TRANSACTION                                    
insert into modifyprofile1                          
(                  
                  
modifiedby,                  
appmstregno,                  
title1,                  
title2,                  
fname1,                  
fname2,                  
          
          
panno1,                  
panno2,                  
AcountNo1,                  
AccountNo2,                  
bankname1,                  
Bankname2,                  
Branch1,                  
Branch2,                  
ifs1,                  
ifs2,                  
micr1,                  
micr2,                  
Address1,                  
Address2,                  
City1,                  
City2,                  
State1,                  
State2,                  
distt1,                  
distt2,                  
PinCode1,                  
PinCode2,                  
PrimaryPhone1,                  
PrimaryPhone2,                  
Mobile1,                  
Mobile2,                  
nomname1,                  
nomname2,                  
nomrela1,                  
nomrela2,                  
userdob1,                  
userdob2,                  
password1,                  
password2,              
activate1,              
activate2,            
epassword1,            
epassword2,            
reasontomodify,          
GName1,          
GName2,          
GTitle1,          
GTitle2        
                  
                  
)                          
values                   
(                  
                  
@modifiedby,                  
@appmstregno,                  
@title1,                  
@title2,                  
@fname1,                  
@fname2,                  
          
          
@panno1,                  
@panno2,                  
@AccountNo1,                  
@AccountNo2,                  
@bankname1,                 
@Bankname2,                  
@Branch1,                  
@Branch2,                  
@ifs1,                  
@ifs2,                  
@micr1,                  
@micr2,                  
@Address1,                  
@Address2,                  
@City1,                  
@City2,                  
@State1,                  
@State2,                  
@distt1,                  
@distt2,                  
@PinCode1,                  
@PinCode2,                  
@PrimaryPhone1,                  
@PrimaryPhone2,                  
@Mobile1,                  
@Mobile2,                  
@nomname1,                  
@nomname2,                  
@nomrela1,                  
@nomrela2,                  
@userdob1,              
@userdob2,                  
@password1,                  
@password2,              
@activate1,              
@activate2,            
@epassword1,            
@epassword2,            
@reason,          
@GName1,           
@GName2 ,          
@GTitle1,          
@GTitle2           
 )                          
     COMMIT TRANSACTION                          
end





GO
/****** Object:  StoredProcedure [dbo].[insertquery]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[insertquery](@name varchar(50),@regno varchar(50),@mobileno varchar(25),@query text,@Administrator varchar(50),@queryrefid varchar(25) output)    
as     
begin     
declare @refno varchar(25)    
declare @qdate smalldatetime    
set @qdate=(dateadd(minute,(330),getutcdate()))    
insert into querymaster(name,Regno,mobileno,query,querydate,Administrator)values(@name,@regno,@mobileno,@query,@qdate,@Administrator)    
select @refno=max(srno) from querymaster    
set @queryrefid=@refno    
end





GO
/****** Object:  StoredProcedure [dbo].[InsertRequest]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[InsertRequest](@RegNo varchar(50),@Amount float,@DOR datetime,      
@TransactionID varchar(50),@Mode varchar(100),@AcNo varchar(50),@BankName varchar(100),      
@Branch varchar(100),@flag int output)                
as                
begin                
set @flag=0                
set xact_abort on                
begin transaction                
if(exists(select appmstregno from appmst where appmstregno=@RegNo))                
begin                
 if(not exists(Select srno from requestmst where TranID=@TransactionID))          
 begin        
  if(not exists(Select srno from requestmst where Appmstregno=@RegNo and status=0))  
  begin            
   insert into requestMst (Appmstregno,Amount,ReceiptDate,RequestDate,Status,TranMode,AcNo,TranID,Branch,      
   BankName,ReceiptNo)                
   values(@RegNo,@Amount,@DOR,dateadd(minute,330,getutcdate()),0,@Mode,@AcNo,@TransactionID,@Branch,      
   @BankName,'')                
   set @flag=1                
               
  end        
  else        
   set @flag=-112        
 end          
 else          
  set @flag=-111          
end                
else                
 set @flag=-101                
if(@flag=1)  
 commit transaction  
else  
rollback transaction  
end





GO
/****** Object:  StoredProcedure [dbo].[InsertRequest_old]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[InsertRequest_old](@RegNo varchar(50),@Amount float,@DOR datetime,@RecieptNo varchar(50),@flag int output)                
as                
begin                
set @flag=0                
set xact_abort on                
begin transaction  
if(upper(substring(@RecieptNo,1,4))='RCPT')              
 set @flag=-111  
else  
begin  
if(exists(select appmstregno from appmst where appmstregno=@RegNo))                
begin                
 if(not exists(Select srno from requestmst where ReceiptNo=@RecieptNo and status=1))          
 begin        
  if(not exists(Select srno from requestmst where Appmstregno=@RegNo and status=0))        
  begin            
   insert into requestMst (Appmstregno,Amount,ReceiptDate,RequestDate,Status,ReceiptNo)                
   values(@RegNo,@Amount,@DOR,dateadd(minute,330,getutcdate()),0,@RecieptNo)                
   set @flag=1                
  end        
  else        
   set @flag=-112        
 end          
 else          
  set @flag=-111          
end                
else                
 set @flag=-101  
end       
if(@flag=1)      
 commit transaction          
else      
     rollback transaction               
end





GO
/****** Object:  StoredProcedure [dbo].[InsertRequestOld]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[InsertRequestOld](@RegNo varchar(50),@Amount float,@DOR datetime,@RecieptNo varchar(50),@flag int output)                    
as                    
begin                    
set @flag=0                    
set xact_abort on                    
begin transaction      
if(upper(substring(@RecieptNo,1,4))='RCPT')                  
 set @flag=-111      
else      
begin      
if(exists(select appmstregno from appmst where appmstregno=@RegNo))                    
begin                    
 if(not exists(Select srno from requestmst where ReceiptNo=@RecieptNo and status=1))              
 begin            
  if(not exists(Select srno from requestmst where Appmstregno=@RegNo and status=0))            
  begin                
   insert into requestMst (Appmstregno,Amount,ReceiptDate,RequestDate,Status,ReceiptNo)                    
   values(@RegNo,@Amount,@DOR,dateadd(minute,330,getutcdate()),0,@RecieptNo)                    
   set @flag=1                    
  end            
  else            
   set @flag=-112            
 end              
 else              
  set @flag=-111              
end                    
else                    
 set @flag=-101      
end           
if(@flag=1)          
 commit transaction              
else          
     rollback transaction                   
end





GO
/****** Object:  StoredProcedure [dbo].[InsertSurveymst]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[InsertSurveymst](@regno varchar(50),@status int)
as
if(not exists(select srno from surveymst where appmstregno=@regno))
begin
	insert into surveymst (appmstregno,status) values(@regno,@status)
end





GO
/****** Object:  StoredProcedure [dbo].[InterWalletTransfer]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[InterWalletTransfer](@PregNo varchar(50),@Cregno varchar(50),@Epwd varchar(50),@Amt float,@flag int output)  
as  
set xact_abort on  
declare @AppMstEpwd varchar(50),@PAppMstId int,@Bbalance float,@Abalance float,@CtBalance float,  
@CAppMstId int  
set @PAppMstId=0  
set @CAppMstId=0  
select @AppMstEpwd=ePassword,@PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo  
select @CAppMstId=AppMstID from ldev82_coppert.coppert.AppMst where AppMstRegNo=@Cregno  
if(@PAppMstId=0)  
 set @flag=-111 --invalid user  
else if(@CAppMstId=0)  
 set @flag=-112 -- user not exists(whom to transfer)  
else if @Amt<1  
 set @flag=-113 -- Amount must be +ve  
else if (@Amt not between 1000 and  90000000)  
 set @flag=-110    
else if @Epwd=@AppMstEpwd and len(@Epwd)>5  
 begin  
  set @CtBalance=0  
  set @Abalance=0  
  set @Bbalance=0  
  begin transaction  
  declare @BtranId int , @CtranId int  
  select @BtranId=max(BankTranId) from banktran where AppMstId=@PAppMstId  
  select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@PAppMstId and BankTranId=@BtranId  
  select @CtranId=max(BankTranId) from ldev82_coppert.coppert.banktran where AppMstId=@CAppMstId  
  select @CtBalance=isnull(BanktranBalance,0) from ldev82_coppert.coppert.banktran where appmstid=@CAppMstId and BankTranId=@CtranId  
  if(@Bbalance>=@Amt)  
  begin  
   set @Abalance=@Bbalance - @Amt  
   insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,  
   BankTranRemarks,bankTranStatus,Payoutno)  
   values (@PAppMstId,31,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@Abalance),0),'Inter Transfer',1,0)  
   set @CtBalance = @CtBalance +  @Amt  
   insert into ldev82_coppert.coppert.BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,  
   BankTranRemarks,bankTranStatus,payoutno)                                
   values (@CAppMstId,32,@PAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt,0),isnull(convert(numeric(18,2),@CtBalance),0),'Inter Transfer',1,0)                                
   set @flag=1;  
  end  
  else  
   set @flag=-103; --low amount  
  if(@flag=1)  
   commit transaction  
  else  
   rollback transaction  
 end  
 else  
  set @flag=-101;  -- E pwd invalid





GO
/****** Object:  StoredProcedure [dbo].[Invelidran]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
 CREATE proc [dbo].[Invelidran]
 as
 begin

 return
 
	declare @srno bigint , @appmstid bigint  , @amount FLOAT
   declare cur cursor for  select userid , sum(amount) from Causeid where dbo.TO_DATE_DD_MMM_YYYY(effectdate)=dbo.TO_DATE_DD_MMM_YYYY('2019-03-11 17:07:53.283')  group by userid

                                               
    open cur   fetch next from cur into  @appmstid   , @amount 
    while @@Fetch_Status=0                                                                                                                    
    Begin                         
 
			declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float  ,   @awarCT bigint, @CT bigint 
			select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid   
			
			if @BtranIdR=0
			begin
			set @BbalanceR=0
			end  
			else 
			begin                                                                         
			select @BbalanceR=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR  
			end
			 
			set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@amount,0))
			   
		 insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate, DimoundID, Reason)                     
		 values(@appmstid,3,@appmstid,'2019-03-11 17:07:53.283',isnull(@amount,0),isnull(@balanceAmount,0),'Payout',0,0, '2019-03-11 17:07:53.283' , 0, '')                           
		
                             
                          
    fetch next  from cur into @appmstid     ,@amount                               
    End ----------end while--                                        
   close cur                                            
   deallocate cur          
End  
  

  --select * from vptran order by banktranid DESC
GO
/****** Object:  StoredProcedure [dbo].[invoce]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[invoce](@regno varchar(50))
as
begin
--declare @pintype int
--declare @pinsrno int
--declare @address varchar(500)
--declare @appmstid int
--declare @doj datetime
--declare @title varchar(20)
--declare @name varchar(50)
--declare @amount float
--declare @pinsrno int

--select @pintype=pintype,@pinsrno=pinsrno from pinmst where regno=@regno
--select @address=appmstaddress1,@appmstid=appmstid,@doj=appmstdoj,@title=appmsttitle,@name=appmstfname from appmst where apmstregno=@regno
create table temp#(srno int identity(1,1),pintype int,address varchar(500),appmstid int,regno varchar(50),doj datetime,uname varchar(50),amount float,pinsrno int)
insert into temp# select distinct pinmst.pintype,appmst.appmstaddress1,appmst.appmstid,appmst.appmstregno,convert(varchar(20),appmst.appmstdoj,103) as doj,appmst.appmsttitle+space(1)+appmst.appmstfname as uname,sharemst.amount,pinmst.pinsrno from appmst,sharemst,pinmst where appmst.appmstid=sharemst.appmstid and appmst.appmstregno=pinmst.regno and sharemst.doe= pinmst.activedate and appmst.appmstregno=@regno
select * from temp#
end





GO
/****** Object:  StoredProcedure [dbo].[invoice]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[invoice](@regno varchar(50))
as
begin
create table #temp(srno int identity(1,1),id int,regno varchar(50),doj smalldatetime,name varchar(50),pintype int,pinsrno int)
insert into #temp select appmst.appmstid,appmst.appmstregno,convert(varchar(20),appmst.appmstdoj,103) as doj,appmst.appmsttitle+space(1)+appmst.appmstfname as uname,pinmst.pintype,pinmst.pinsrno  from appmst,pinmst where appmst.appmstregno=pinmst.regno and appmst.appmstregno=@regno
select * from #temp

create table #temp1(srno int identity(1,1),address varchar(500),id int,regno varchar(50),doj smalldatetime,uname varchar(50),name varchar(50),pintype int,pinsrno int,amount float)



declare @count int
declare @pinsrno int
declare @i int
set @i=1
select @count=max(srno) from #temp
set @count=@count+1
while(@i<@count)
begin
select @pinsrno=pinsrno from #temp where srno=@i
insert into #temp1 select appmst.appmstaddress1,appmst.appmstregno,convert(varchar(20),appmst.appmstdoj,103) as doj,appmst.appmsttitle+space(1)+appmst.appmstfname as uname,pinmst.pinno,pinmst.pintype,pinmst.amount  from appmst,pinmst where appmst.appmstregno=pinmst.regno and pinmst.pinsrno=@pinsrno and pinmst.regno=@regno
end
select * from #temp1
drop table #temp1
drop table #temp

end





GO
/****** Object:  StoredProcedure [dbo].[IPTranDisplayByDate]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[IPTranDisplayByDate](@regno varchar(50),@date datetime,@dateto datetime)                                                    
as                                                    
declare @appmstid int                                              
--declare @date1 datetime                                          
--set @date1 = convert(varchar(12),@date,102)                                                
select @appmstid=AppMstID from AppMst where AppMstRegNo=@regno;                                                    
             
select a.AppmstRegNo as CRegNo,a.Appmsttitle+' '+a.appmstfname as uname,a.appmstid,b.BankTranRemarks as Remarks,                                                    
 convert(varchar(12),b.BankTranDate,103) as dt,b.BankTranAmount as Amt,b.BankTranBalance as blnce, b.Reason,                                                  
 case                                                  
 when  b.BankTranMode=1 then 'Transfer Outgoing'                                                  
 when  b.BankTranMode=2 then 'Transfer Incoming'                                                  
when b.BankTranMode=31 then 'Transfer t'                                                  
 else b.BankTranRemarks end  as Remarks,                
 case when b.BankTranMode in (2,3,100,22) then b.BankTranAmount else '' end as Incoming,                  
 case when b.BankTranMode in (1,4,11,24,12) then b.BankTranAmount else '' end as Outgoing                                                  
  from IPTran b left join Appmst a                                                    
 on b.paidAppMstID=a.Appmstid  where b.AppMstID=@appmstid and  CAST(FLOOR(CAST(b.BankTranDate as float)) as datetime) between             
CAST(FLOOR(CAST(@date as float)) as datetime) and  CAST(FLOOR(CAST(@dateto as float)) as datetime)             
            
order by b.BankTranid  Desc         
 




GO
/****** Object:  StoredProcedure [dbo].[isBlockedID]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[isBlockedID](@regno varchar(50),@flag int output)  
  
as  
begin  
set @flag=0  
declare @count int  
select @count=count(*) from blockedid  where appmstid=(select appmstid from appmst where appmstregno=@regno)  
if(@count>0)  
begin  
set @flag=1  
end  
  
else  
begin  
set @flag=2  
end  
end





GO
/****** Object:  StoredProcedure [dbo].[IsExistUser]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[IsExistUser] (@RegNo varchar(50))      
as      
SELECT AppMstRegNo from AppMst where  AppMstRegNo=ltrim(rtrim(@RegNo))





GO
/****** Object:  StoredProcedure [dbo].[IsValidExPwd]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[IsValidExPwd] (@RegNo varchar(50),@ExPwd varchar(50))    
as    
select AppMstRegNo,Appmstfname from AppMst where AppMstRegNo=@RegNo and ePassword=@ExPwd and  len(@ExPwd)>5





GO
/****** Object:  StoredProcedure [dbo].[JoiningPin]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[JoiningPin](@regno varchar(50),@Pintype int) 
as 
begin 

	if EXISTS(select * from appmst where appmstregno=@regno) 
	begin 

		Select PinsrNo,Pinno,PinPassword,PaidAppMstId=case PaidAppMstId when 0 then 'UnUsed' when 1 then 'Used' end,pinmst.Joinfor,pinmst.Amount,    

		(select appmstregno from appmst where appmstid=pinmst.RegNo) as usedByID,    

		convert(char(20),allotmentdate,103) as allotmentdate,a.appmstregno as AllotedTo,'Join-pin' as pname from PinMst inner join AppMst a on PINMst.allotedto=a.AppMstID	where AppMstRegNo=@regno and pinmst.pintype=1 and 

		(case when @Pintype=0 and PINMst.RegNo=0 then 1 when @Pintype =1 and PINMst.RegNo>0 then 1 when @Pintype=-1 then 1 else 0 end)=1  order by pinsrno 

	end      

end


GO
/****** Object:  StoredProcedure [dbo].[KPTranDisplayByDate]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[KPTranDisplayByDate](@regno varchar(50),@date datetime,@dateto datetime)                                                      
as                                                      
declare @appmstid int                                                
--declare @date1 datetime                                            
--set @date1 = convert(varchar(12),@date,102)                                                  
select @appmstid=AppMstID from AppMst where AppMstRegNo=@regno;                                                      
               
select a.AppmstRegNo as CRegNo,a.Appmsttitle+' '+a.appmstfname as uname,a.appmstid,b.BankTranRemarks as Remarks,                                                      
 convert(varchar(12),b.BankTranDate,103) as dt,b.BankTranAmount as Amt,b.BankTranBalance as blnce, b.Reason,                                                    
 case                                                    
 when  b.BankTranMode=1 then 'Transfer Outgoing'                                                    
 when  b.BankTranMode=2 then 'Transfer Incoming'                                                    
when b.BankTranMode=31 then 'Transfer t'                                                    
 else b.BankTranRemarks end  as Remarks,                  
 case when b.BankTranMode in (2,3,100,22) then b.BankTranAmount else '' end as Incoming,                    
 case when b.BankTranMode in (1,4,11,24,12) then b.BankTranAmount else '' end as Outgoing                                                    
  from KPTran b left join Appmst a                                                      
 on b.paidAppMstID=a.Appmstid  where b.AppMstID=@appmstid and  CAST(FLOOR(CAST(b.BankTranDate as float)) as datetime) between               
CAST(FLOOR(CAST(@date as float)) as datetime) and  CAST(FLOOR(CAST(@dateto as float)) as datetime)               
              
order by b.BankTranid  Desc           
   
  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[LastIP]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[LastIP](@userid varchar(50),@ip varchar(25))
as
Begin
Declare @lastip varchar(25),@LastLogin varchar(26)
select @lastip=ipaddress,@LastLogin=isnull(CONVERT(VARCHAR(40),LastLogin,113),'First Time Login') from AppMst where AppMstRegNo=@userid
update appmst set lastip=@ip,LastLogin=getutcdate() where AppMstRegNo=@userid
select @lastip as ip,@LastLogin as lastLogin
End




GO
/****** Object:  StoredProcedure [dbo].[LeftNode]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[LeftNode](@regno varchar(50),@mindate datetime,@maxdate datetime)                    
as                    
begin                    
declare @appid int          
--SELECT @appid=appmstid,@isfranchise=IsFranchise FROM appmst WHERE appmstregno=@regno
SELECT @appid=appmstid FROM appmst WHERE appmstregno=@regno           
        
select a.appmstid,a.appmstregno,a.membername,a.jamount,a.sponsorregno,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe from         
(Select AppMst.AppMstId,AppMst.AppMstRegNo,UPPER(AppMst.AppMstFName) as membername,appmst.jamount as jamount, convert(char(20),appmst.appmstdoj,103) as AppmstDOJ,            
AppMstSponsor.AppMstRegNo As SponsorRegNo from AppMst,apptran, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And             
AppMst.AppMstId = apptran.AppMstId and CAST(FLOOR(CAST(appmst.appmstdoj as float)) as datetime) between @mindate and @maxdate And             
apptran.ParentId =@appid  and apptran.appmstleftright=0) a   left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.appmstregno,a.membername,a.jamount,a.sponsorregno order by a.appmstid        
          
end





GO
/****** Object:  StoredProcedure [dbo].[LeftSponsor]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[LeftSponsor](@regno varchar(50),@mindate datetime,@maxdate datetime)        
as        
begin        
 if EXISTS(select appmstid,appmstregno from appmst where appmstregno=@regno)            
begin  
select a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.JAmount,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe from 
(           
select appmstid,UPPER(AppMstRegNo) as UserId,UPPER(AppMstTitle)+space(1)+UPPER(AppMstFName) as membername,UPPER(ParentID) as ParentID,LeftRight=case AppMstLeftRight when 1 then 'RIGHT' when 0 then 'LEFT' end , JAmount    
 from AppMst where SponsorId=@regno and AppMstLeftRight=0 and  CAST(FLOOR(CAST(appmstdoj as float)) as datetime) between CAST(FLOOR(CAST(@mindate as float)) as datetime) and CAST(FLOOR(CAST(@maxdate as float)) as datetime)  
) a left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.jamount

end        
end





GO
/****** Object:  StoredProcedure [dbo].[legal]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[legal](@id varchar(50))
as
declare @idno varchar(50)
declare @title varchar(25)
declare @name varchar(50)
declare @fathersname varchar(50)
declare @address varchar(500)
declare @date datetime
declare @agreementno varchar(50)
begin

select @idno=appmst.appmstid, @title=appmst.appmsttitle,@name=appmst.appmstfname,@fathersname=appmst.appmstlname,@address=appmst.appmstaddress1,@date=agreement.doa,@agreementno=agreement.agreementno from appmst,agreement where appmst.appmstregno=agreement.userid and appmst.appmstregno=@id 
create table temp# (idno varchar(50),title varchar(25),nname varchar(50),fathersname varchar(50),address varchar(500),date datetime,agreementno varchar(50))

Insert into temp#(idno ,title,nname,fathersname,address,date,agreementno) values (@idno,@title,@name,@fathersname,@address,@date,@agreementno) 

select temp#.idno,temp#.title,temp#.nname,temp#.fathersname,temp#.address,temp#.date,temp#.agreementno,sharemst.amount,''+C244323_moneybhandar.NameNum(sharemst.amount)+' Only 'as Amtwords from temp#,sharemst where temp#.idno=sharemst.appmstid
drop table temp#
end





GO
/****** Object:  StoredProcedure [dbo].[legcount]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[legcount]                              
(                              
 @Parentid  nvarchar(30),                               
 @AppMstId  Int,                               
 @LeftRight int              
)                              
AS                              
 Declare                              
   @jf float,                              
   @CAppMstParentId  int,                              
   @CAppMstLevel int,                                
   @CAppMstLeftRight int ,                             
   @paid int,                 
   @ypin int                       
 select @jf =joinfor,@paid=appmstpaid from appmst WITH (NOLOCK) where appmstid=@appmstid                              
 select  @CAppMstParentId  = Appmstid from appmst WITH (NOLOCK) where appmstregno=@Parentid                              
 Insert Into AppTran (ParentId,AppMstId,AppMstLeftRight,AppMstlevel,joinfor)                           
 Values ( @CAppMstParentId ,@AppMstId ,@LeftRight,1,@jf)                              
 Insert Into AppTran (ParentId,AppMstId,AppMstLeftRight,AppMstlevel,joinfor) SELECT ParentId,@AppMstId As AppMstId ,        AppMstLeftRight, AppMstLevel + 1,@jf As AppMstLevel FROM AppTran WITH (NOLOCK) Where Appmstid=  @CAppMstParentId      
  Update AppMst Set tempLeftTotal=tempLeftTotal +1 Where AppMstId In (SELECT ParentId  FROM AppTran WITH (NOLOCK) Where AppMstId = @AppMstId And AppMstLeftRight = 0)                                 
 Update AppMst Set tempRightTotal=tempRightTotal+1 Where AppMstId In (SELECT ParentId  FROM AppTran WITH (NOLOCK)  Where AppMstId = @AppMstId And AppMstLeftRight = 1)    
    
    
    
    
GO
/****** Object:  StoredProcedure [dbo].[LevelIncome_arun]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[LevelIncome_arun] (@appmstid nvarchar(50)  ,@samount float,@noofdays int,@tno int,@todate datetime)                                          
as                                            
begin                                        
declare @income float,@level int,@parentid int,@totalincome float,@paid int                                  
declare sponsorCur cursor for                    
select a.parentid,a.sponsorlevel from apptransponsor a,appmst b                  
where a.appmstid=b.appmstid and a.appmstid=@appmstid  and sponsorlevel<=27                          
open sponsorCur                                  
fetch next from sponsorCur into @parentid,@level                                  
while (@@fetch_status=0)                                  
begin                                   
if @Level= 1                                         
 set @income=@samount*3/100                                  
if @Level= 2                                         
 set @income=@samount*2/100                                  
if @Level= 3                                        
 set @income=@samount*1/100                                  
if @Level= 4                                         
 set @income=@samount*.50/100                                  
if @Level= 5                                         
 set @income=@samount*.50/100                                  
if @Level= 6                                         
 set @income=@samount*.25/100      
if @Level= 7                                         
 set @income=@samount*.25/100      
if @Level= 8                                         
 set @income=@samount*.25/100      
if @Level= 9                                         
 set @income=@samount*.25/100        
if @Level= 10                                         
 set @income=@samount*.25/100            
if @Level= 11                                        
 set @income=@samount*.25/100            
if @Level= 12                                        
 set @income=@samount*.25/100            
if @Level= 13                                        
 set @income=@samount*.25/100            
if @Level= 14                                        
 set @income=@samount*.25/100            
if @Level= 15                                        
 set @income=@samount*.25/100            
if @Level= 16                                         
 set @income=@samount*.25/100            
if @Level= 17                                         
 set @income=@samount*.25/100                                      
if @Level= 18                                         
 set @income=@samount*.20/100      
if @Level= 19                                         
 set @income=@samount*.20/100      
if @Level= 20                                        
 set @income=@samount*.20/100      
if @Level= 21                                         
 set @income=@samount*.20/100      
if @Level= 22                                         
 set @income=@samount*.20/100      
if @Level= 23                                         
 set @income=@samount*.20/100      
if @Level= 24                                         
 set @income=@samount*.20/100      
if @Level= 25                                        
 set @income=@samount*.20/100      
if @Level= 26                                         
 set @income=@samount*.20/100      
if @Level= 27                                         
 set @income=@samount*.20/100      
   set @totalincome=(@income/@tno)*@noofdays      
select @paid=appmstpaid from appmst where appmstid =@parentid                
if(@totalincome>0 and @paid=1)                    
begin                          
insert into CauseId(userid,causeid,PaymentCause,Amount,joinfor,effectdate)                      
values(@parentid,@AppMstId,'ROI TB',@totalincome,0,@todate)                      
end                    
fetch next from sponsorCur into @parentid,@level                                  
end ----end of while-----                                  
close sponsorCur         
deallocate  sponsorCur                                  
end---end procedure--





GO
/****** Object:  StoredProcedure [dbo].[LevelIncome_old]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[LevelIncome_old] (@appmstid nvarchar(50)  ,@samount float,@todate datetime)             
as                                                        
begin        
--franchise income up to  3 level                                                  
declare @income float,@level int,@parentid int,@totalincome float,@paid int,@isActive int 
declare sponsorCur cursor for   
select a.parentid,a.sponsorlevel from AppTranfranchise a,appmst b   
where a.appmstid=b.appmstid and a.appmstid=@appmstid  and sponsorlevel<=3   
open sponsorCur   
fetch next from sponsorCur into @parentid,@level                                              
while (@@fetch_status=0)                                              
begin          
set @income=0      
set @income=case @Level when 1 then @samount*.0070           
when 2 then  @samount*.0020           
when 3 then  @samount*.0010         
else 0 end        
               
select @paid=appmstpaid,@isActive=appmstactivate from appmst where appmstid =@parentid                            
if(@income>0 and @isActive=1)                                
begin                                      
insert into CauseId(userid,causeid,PaymentCause,Amount,joinfor,effectdate,iselegible )                                  
values(@parentid,@AppMstId,'F',@income,0,@todate,@paid)                                  
end                                
fetch next from sponsorCur into @parentid,@level                                              
end ----end of while-----                                              
close sponsorCur                     
deallocate  sponsorCur                                              
end---end procedure--





GO
/****** Object:  StoredProcedure [dbo].[LevelIncomeJuly]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[LevelIncomeJuly] (@appmstid nvarchar(50)  ,@samount float,@noofdays int,@tno int,@todate datetime)     
as                                                
begin                                            
declare @income float,@level int,@parentid int,@totalincome float,@paid int                                      
declare sponsorCur cursor for                        
select a.parentid,a.sponsorlevel from apptransponsor a,appmst b                      
where a.appmstid=b.appmstid and a.appmstid=@appmstid  and sponsorlevel<=15                          
open sponsorCur                                      
fetch next from sponsorCur into @parentid,@level                                      
while (@@fetch_status=0)                                      
begin                                       
if @Level= 1    
 set @income=@samount*3/100                                      
if @Level= 2                                             
 set @income=@samount*2/100                                      
if @Level= 3                                            
 set @income=@samount*1/100                                      
if @Level= 4                                             
 set @income=@samount*.75/100                                      
if @Level= 5                                             
 set @income=@samount*.75/100                                      
if (@Level>=6)                                           
 set @income=@samount*.50/100
if (@Level>=7)                                           
 set @income=@samount*.50/100          
if (@Level>=8 and @level<=15)                                           
 set @income=@samount*.25/100          

 set @totalincome=(@income/@tno)*@noofdays          
select @paid=appmstpaid from appmst where appmstid =@parentid                    
if(@totalincome>0 and @paid=1)                        
begin                              
insert into CauseId(userid,causeid,PaymentCause,Amount,joinfor,effectdate)                          
values(@parentid,@AppMstId,'ROI TB',@totalincome,0,@todate)                          
end                        
fetch next from sponsorCur into @parentid,@level                                      
end ----end of while-----                                      
close sponsorCur             
deallocate  sponsorCur                                      
end---end procedure--





GO
/****** Object:  StoredProcedure [dbo].[LevelIncomePlanC_arun]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure  [dbo].[LevelIncomePlanC_arun] (@appmstid nvarchar(50)  ,@samount float,@noofdays int,@tno int,@todate datetime)                                              
as                                                
begin                                            
declare @income float,@level int,@parentid int,@totalincome float                                      
declare sponsorCur cursor for                        
select a.parentid,a.sponsorlevel from apptransponsor a,appmst b                      
where a.appmstid=b.appmstid and a.appmstid=@appmstid  and sponsorlevel<=27                              
open sponsorCur                                      
fetch next from sponsorCur into @parentid,@level                                      
while (@@fetch_status=0)                                      
begin                                       
if @Level= 1                                             
 set @income=@samount*1.5/100                                      
if @Level= 2                                             
 set @income=@samount*1/100                                      
if @Level= 3                                            
 set @income=@samount*0.5/100                                      
if @Level= 4                                             
 set @income=@samount*.25/100                                      
if @Level= 5                                             
 set @income=@samount*.25/100                                      
if @Level= 6                                             
 set @income=@samount*.125/100         
if @Level= 7                                             
 set @income=@samount*.125/100          
if @Level= 8                                             
 set @income=@samount*.125/100          
if @Level= 9                                             
 set @income=@samount*.25/100            
if @Level= 10                                             
 set @income=@samount*.125/100                
if @Level= 11                                            
 set @income=@samount*.125/100                
if @Level= 12                                            
 set @income=@samount*.125/100                
if @Level= 13                                            
 set @income=@samount*.125/100                
if @Level= 14                                            
 set @income=@samount*.125/100                
if @Level= 15                                            
 set @income=@samount*.125/100                
if @Level= 16                                             
 set @income=@samount*.125/100                
if @Level= 17                                             
 set @income=@samount*.125/100                                          
if @Level= 18                                             
 set @income=@samount*.10/100          
if @Level= 19                                             
 set @income=@samount*.10/100          
if @Level= 20                                            
 set @income=@samount*.10/100          
if @Level= 21                                             
 set @income=@samount*.10/100          
if @Level= 22                                             
 set @income=@samount*.10/100          
if @Level= 23                                             
 set @income=@samount*.10/100          
if @Level= 24                                             
 set @income=@samount*.10/100          
if @Level= 25                                            
 set @income=@samount*.10/100          
if @Level= 26                                             
 set @income=@samount*.10/100          
if @Level= 27                                             
 set @income=@samount*.10/100          
   set @totalincome=(@income/@tno)*@noofdays                         
if(@totalincome>0)                        
begin                              
insert into CauseId(userid,causeid,PaymentCause,Amount,joinfor,effectdate)                          
values(@parentid,@AppMstId,'ROI TB',round(@totalincome,2),0,@todate)                   
end                        
fetch next from sponsorCur into @parentid,@level                                      
end ----end of while-----                                      
close sponsorCur                                      
deallocate  sponsorCur                                      
end---end procedure--





GO
/****** Object:  StoredProcedure [dbo].[LevelReport]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[LevelReport](@regno varchar(50),@level int)        
as        
begin        
 if EXISTS(select * from appmst where appmstregno=@regno)      
begin      
select b.appmstregno,UPPER(b.appmstfname) as fname,cast((s.amount/10000) as int) as amount,S.receiptno,doe=convert(char(10),s.doe,103) ,c.appmstregno as SponsorId from apptransponsor a , sharemst s ,appmst b,appmst c where a.appmstid=s.appmstid and a.appmstid=b.appmstid and  a.parentid
 in(select appmstid from appmst where appmstRegno=@regno) and sponsorlevel=@level  and c.appmstregno=b.sponsorid order by a.appmstid         
end      
end





GO
/****** Object:  StoredProcedure [dbo].[ListtypeIncome]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
       
      
 --[ListtypeIncome] '2018-11-25 16:10:46.333','ROI'      
 CREATE proc [dbo].[ListtypeIncome] (@FDate datetime,  @TDate datetime, @Type varchar(10))      
 as      
 begin      
      
  
 if @Type='ROI'  
 BEGIN  
  select  CAST(banktranDate  AS date) as boe, dbo.GetAppmstRegNo(appmstid) as userName, dbo.GetUserName(appmstid) as Name,       
  dbo.GetUserMobileNo(appmstid) as MobileNO,        
  dbo.GetsponsarName(appmstid) as SponsarName,        
  dbo.GetsponsarID(appmstid) as SponsarID, @Type as IType,      
  appmstid , Sum(BankTranAmount) as Amount from vptran  where    
  CAST(FLOOR(CAST(dbo.vptran.banktranDate as float)) as datetime) between @FDate and @TDate  and     
  banktranremarks='ROI'  group by  appmstid ,CAST(banktranDate  AS date)       
 END   
 ELSE  
 BEGIN  
  select  CAST(banktranDate  AS date) as boe, dbo.GetAppmstRegNo(appmstid) as userName, dbo.GetUserName(appmstid) as Name,       
  dbo.GetUserMobileNo(appmstid) as MobileNO,        
  dbo.GetsponsarName(appmstid) as SponsarName,        
  dbo.GetsponsarID(appmstid) as SponsarID, @Type as IType,      
  appmstid , Sum(BankTranAmount) as Amount from VPTran  where    
  CAST(FLOOR(CAST(dbo.vpTran.banktranDate as float)) as datetime) between @FDate and @TDate  and     
  banktranremarks=@Type  group by  appmstid ,CAST(banktranDate  AS date)       
END     
    END  
  
    
GO
/****** Object:  StoredProcedure [dbo].[ManualRecharge]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ManualRecharge] (@SessionRegNo varchar(50),@RegNo nvarchar(50),@Amt float,@d datetime,@rno varchar(50) output,@flag int output)                                              
as  
begin 
declare @ReDate datetime,@PinMstTotal float,@RechargeAmount float,@PinAmount float,@sno int,                                                                                  
@PMstId int,@PStatus int,@Joinfor float,@Sappmstid  int ,@appmstpaid int                                                                                
declare @ReDate1 datetime,@PinMstTotal1 float,@RechargeAmount1 float                                                                                      
declare @appmstid int ,@TranNo int,@Srno int,@Amount float            
declare @BtranId int,@Bbalance float,@Abalance float,@check int                                                                                
set @Bbalance=0                                              
set @Joinfor=@Amt/10000            
select @appmstid=appmstid from appmst where appmstregno=@RegNo                                                                        
select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                                                                        
set nocount on            
set xact_abort on            
begin transaction            
----            
set @PinMstTotal=0            
set @check=0            
set @Amt=isnull(@Amt,0)
if(@Amt between 10000 and 10000000)            
begin            
 if(exists(select appmstregno from appmst where appmstregno=@regno))                                          
 begin            
  select @BtranId=max(BankTranId) from banktran where AppMstId=@Sappmstid                                                                                                                  
  select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@Sappmstid and BankTranId=@BtranId                                                                                                                  
  if(@Bbalance>=@Amt)                                        
  begin                     
   set @Abalance=@Bbalance - @Amt            
   set @Amount=@Amt            
   ---insert1            
   insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                                                   
   BankTranRemarks,bankTranStatus,pinsrno)                                                                                                              
   values (@Sappmstid,11,@appmstid,dateadd(minute,330,getutcdate()),@Amt,@Abalance,'Recharge',1,'')                 
   set @TranNo=@@identity                                        
   ------            
   select @Srno=isnull(max(srno),0) from requestmst                                              
   set @rno='M'+convert(varchar,@Srno+1)            
               
   insert into RequestMst(appmstregno,Amount,ReceiptDate,RequestDate,ApprovalDate,status,comment,ReceiptNo,                                              
   approvedAmt,adminID,TranId,agreementNo,tranmode,AcNo,BankName,branch,TranBank,TranAcNo,TranIFS)                                              
   values(@regno,@Amount,dateadd(minute,330,getutcdate()),dateadd(minute,330,getutcdate()),dateadd(minute,330,getutcdate()),            
   1,'',@rno,@Amount,'',@TranNo,'','Money Bank','','',                  
   '','','','')                                               
   set @sno=@@identity                                  
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                                                  
   update appmst set jamount=jamount+@Amount where appmstregno=@regno       
   --                                                                    
   if @appmstpaid != 1                                                                                
   begin                                                                      
    update appmst set appmstpaid=1,appPaiddatetime=@d where appmstregno=@regno                                                       
    --update causeid set iselegible=1,effectdate=dateadd(minute,330,getutcdate())  where userid=@appmstid                                                                                  
   end                                                                     
   --                                                                    
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno)                                                                            
   values(@appmstid,@Amount,1,@d,2,@regno,@rno)        
   set @sno=@@identity                                                                
   set @flag=1            
  end            
  else            
   set @flag=-104 --Insufficient Balance            
 end            
 else            
  set @flag=-101                                          
end            
else            
 set @flag=-4 ---Amount limit 10000000            
if(@flag=1)            
 commit transaction            
       
end





GO
/****** Object:  StoredProcedure [dbo].[ManualRechargeBulk]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ManualRechargeBulk](@flag int output)
as
begin
	declare @appmstregno varchar(50),@amt float,@d datetime,@rno varchar(50),@srno int
	
	if exists(select * from manualtopup where regno not in (select appmstregno from appmst))
		set @flag=-101 -- Some User id Not Exists in appmst
	else if(stockindia.getbalance(1)<(select sum(amount) from manualtopup))
		set @flag=-102 -- Insufficient amount into admin account
	else
	begin
	
		declare cur cursor for select srno,regno,amount,topupdate from manualtopup 
		open cur
		fetch next from cur into @srno,@appmstregno,@amt,@d
		while @@fetch_status=0
		begin
			set xact_abort on
			begin transaction
			execute [ManualRecharge] 'SGI111',@appmstregno,@amt,@d,@rno output,@flag output
			if(@flag=1)
			begin
				update manualtopup set receiptno=@rno where srno=@srno
				commit transaction
			end
			else
				rollback transaction
			set @amt=0
			set @appmstregno=''
			fetch next from cur into @srno,@appmstregno,@amt,@d
		end -- end while loop
		close cur
		deallocate cur
	end
end





GO
/****** Object:  StoredProcedure [dbo].[Manualtransfer]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[Manualtransfer] @appmstregno nvarchar(20),@BanktranAmount float                                                                                                        
as                                                                                                        
Begin                                                                                                        
declare @appmstid int,@maxid int,@balanceamount float,@newbalanceamount float                                                                                                        
set Xact_abort on                                                                                                         
begin transaction                                                                                                         
select @appmstid=appmstid from appmst where appmstregno=@appmstregno                                                                                                        
select @maxid =max(Banktranid) from Banktran where appmstid=@appmstid                                                                                                        
select @balanceamount=Banktranbalance from banktran where banktranid=@maxid                                                                              
if (@balanceAmount is null)                                                                              
set @balanceAmount=0                                                                                                        
set @newbalanceamount =@balanceamount+@banktranamount                                                                                                        
Insert into Banktran (Appmstid,Banktranmode,paidappmstid,banktranamount,Banktranbalance,Banktranremarks,Banktranstatus)                                                                                                        
values (@appmstid,2,@appmstid,@banktranAmount,@newbalanceamount,'Transfer',3)                                                                                                        
Commit transaction                                                                                                        
End





GO
/****** Object:  StoredProcedure [dbo].[Manualtransfernew]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[Manualtransfernew] @appmstregno nvarchar(20),@BanktranAmount float                                              
as                                              
Begin                                              
declare @appmstid int,@maxid int,@balanceamount float,@newbalanceamount float                                              
set Xact_abort on                                               
begin transaction                                               
select @appmstid=appmstid from appmst where appmstregno=@appmstregno                                              
select @maxid =max(Banktranid) from Banktran where appmstid=@appmstid                                              
select @balanceamount=Banktranbalance from banktran where banktranid=@maxid                    
if (@balanceAmount is null)                    
set @balanceAmount=0                                              
set @newbalanceamount =@balanceamount+@banktranamount                                              
Insert into Banktran (Appmstid,Banktranmode,paidappmstid,banktranamount,Banktranbalance,Banktranremarks,Banktranstatus)                                              
values (@appmstid,3,0,@banktranAmount,@newbalanceamount,'Lapse Payout',1)                                              
Commit transaction                                              
End





GO
/****** Object:  StoredProcedure [dbo].[maxdateROI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[maxdateROI]     
as 
begin 
 declare @mindate datetime,@Paydate datetime,@Paytodate datetime        
 select @Paydate=DATEADD(DAY,1,isnull(max(ToDate),(select min(appmstdoj) from appmst))) from RDate         
 set @Paytodate=DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(MONTH,1,dateadd(day,-1,@paydate)))+1,0))     
 select CONVERT(varchar(20),max(ToDate ),103) as lastdate,Paydate=convert(varchar(20),@Paydate,103),Paytodate=convert(varchar(20),@Paytodate,103) from RDate         
end





GO
/****** Object:  StoredProcedure [dbo].[maxpayoutdate]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[maxpayoutdate]                                                                            
as                                                                            
begin         
 declare @mindate datetime,@Paydate datetime,@Paytodate datetime    
   
 select @Paydate=DATEADD(DAY,1,isnull(max(PayToDate),(select min(appmstdoj) from appmst))) from payoutdate   
   
 set @Paytodate=case when DATEPART(day,@Paydate)=1 then DATEADD(day,14,@paydate) else DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,@paydate)+1,0)) end   
   
  
 select CONVERT(varchar(20),max(PayToDate),103) as lastdate,Paydate=convert(varchar(20),@Paydate,103),Paytodate=convert(varchar(20),@Paytodate,103) from payoutdate   
                                    
                 
end





GO
/****** Object:  StoredProcedure [dbo].[maxpayoutdateROI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[maxpayoutdateROI] 
as 
begin 
 declare @mindate datetime,@Paydate datetime,@Paytodate datetime    
 select @Paydate=DATEADD(DAY,1,isnull(max(PayToDate),(select min(appmstdoj) from appmst))) from payoutdateRoi   
 set @Paytodate=DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(MONTH,3,dateadd(day,-1,@paydate)))+1,0)) 
 select CONVERT(varchar(20),max(PayToDate),103) as lastdate,Paydate=convert(varchar(20),@Paydate,103),Paytodate=convert(varchar(20),@Paytodate,103) from payoutdateRoi   
end





GO
/****** Object:  StoredProcedure [dbo].[maxpayoutdateroitb]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[maxpayoutdateroitb]   
as   
begin   
 declare @mindate datetime,@Paydate datetime,@Paytodate datetime      
 select @Paydate=DATEADD(DAY,1,isnull(max(PayToDate),(select min(appmstdoj) from appmst))) from PayoutDateROITB      
 set @Paytodate=DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(MONTH,1,dateadd(day,-1,@paydate)))+1,0))   
 select CONVERT(varchar(20),max(PayToDate),103) as lastdate,Paydate=convert(varchar(20),@Paydate,103),Paytodate=convert(varchar(20),@Paytodate,103) from PayoutDateROITB      
end





GO
/****** Object:  StoredProcedure [dbo].[MemberList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DiamondListIncome] '01-Jan-18 12:00:00 AM','01-Dec-18 12:00:00 AM',''  
 CREATE proc [dbo].[MemberList] (@From datetime,@TO datetime, @search varchar(50), @Mobile varchar(50),  @paid bigint )  
 as  
 begin  
   
 set @search = '%' + @search + '%'   
 set @Mobile = '%' + @Mobile + '%'   
 if @paid=2  
 begin  
	select appmstState, AppmstCity,  appmstregno, appmstpassword, appmstfName, sponsorid, appmstDOJ,JAmount AS Joinfor,  appPaiddatetime , Epassword,   
	CASE appmstpaid  
	WHEN 1 THEN Replace(CONVERT(varchar(500), appPaiddatetime, 121),'/','')  
    ELSE ''  
	END   as  PaidDATe  
	from appmst(nolock)  
	where    
	CAST(AppMstDOJ  AS date) between   CAST(@From  AS date)    and    CAST(@TO  AS date)         
    And appmstregno  Like @search    
	And appmstmobile  Like @Mobile    
 end  
 else  if @paid=1
 begin  
	select  appmstState, AppmstCity, appmstregno, appmstpassword, appmstfName, sponsorid, appmstDOJ, JAmount AS Joinfor,  appPaiddatetime , Epassword,   
	CASE appmstpaid  
	WHEN 1 THEN Replace(CONVERT(varchar(500), appPaiddatetime, 121),'/','')  
    ELSE ''  
	END   as  PaidDATe  
	from appmst(nolock)  
	where appmstpaid =@paid and  
	CAST(appPaiddatetime  AS date) between   CAST(@From  AS date)    and    CAST(@TO  AS date)         
   And appmstregno  Like @search   
	And appmstmobile  Like @Mobile
 end  
 else  
 begin  
	select  appmstState, AppmstCity, appmstregno, appmstpassword, appmstfName, sponsorid, appmstDOJ, JAmount AS Joinfor,  appPaiddatetime , Epassword,   
	CASE appmstpaid  
	WHEN 1 THEN Replace(CONVERT(varchar(500), appPaiddatetime, 121),'/','')  
    ELSE ''  
	END   as  PaidDATe  
	from appmst(nolock)  
	where appmstpaid =@paid and  
	CAST(AppMstDOJ  AS date) between   CAST(@From  AS date)    and    CAST(@TO  AS date)         
   And appmstregno  Like @search   
	And appmstmobile  Like @Mobile
 end  
 end

    

   
GO
/****** Object:  StoredProcedure [dbo].[MemberListPaid]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[DiamondListIncome] '01-Jan-18 12:00:00 AM','01-Dec-18 12:00:00 AM',''

   
 CREATE proc [dbo].[MemberListPaid] (@From datetime,@TO datetime, @search varchar(50), @Mobile varchar(50),  @paid bigint )  
 as  
 begin  
   
 set @search = '%' + @search + '%'   
   set @Mobile = '%' + @Mobile + '%'   
  
select appmstState, AppmstCity,  appmstregno, appmstpassword, appmstfName,appmstmobile, sponsorid, appmstDOJ, Joinfor,  appPaiddatetime as PaidDATe , Epassword   
  
from appmst  
 where    
   
CAST(appPaiddatetime  AS date) between   CAST(@From  AS date)    and    CAST(@TO  AS date)         
and appmstpaid=1
   
  And appmstregno  Like @search    
   And appmstmobile  Like @Mobile    
 
   end

    

GO
/****** Object:  StoredProcedure [dbo].[MemberproductRecieveList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc [dbo].[MemberproductRecieveList] (  @search varchar(50), @Mobile varchar(50)  )  
 as  
 begin  
   
 set @search = '%' + @search + '%'   
   set @Mobile = '%' + @Mobile + '%'   
 
 SELECT     dbo.Sharemst.srno,   dbo.Sharemst.Amount,
 

  

 CASE  dbo.Sharemst.selection  
         WHEN 1 THEN 'Product Received'   else   'Not Received'   END  as StrStatus, 
  dbo.Sharemst.appmstregno, dbo.AppMst.AppMstFName, dbo.AppMst.AppMstMobile, dbo.AppMst.SponsorID
FROM            dbo.Sharemst INNER JOIN
                         dbo.AppMst ON dbo.Sharemst.Appmstid = dbo.AppMst.AppMstID
  And dbo.Sharemst.appmstregno  Like @search   
  And dbo.AppMst.AppMstMobile  Like @Mobile
  end  
  
GO
/****** Object:  StoredProcedure [dbo].[membersForAmtReset]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[membersForAmtReset](@regno varchar(50))          
as          
begin          
         
select  appmst.appmstid,appmst.appmstregno,convert(varchar(20),appmst.appmstdoj,103) as appmstdoj ,appmst.appmsttitle+space(1)+appmst.appmstfname as uname ,sharemst.amount,convert(varchar(20),sharemst.doe,103) as doe,pintype=case sharemst.pintype when 2 then 'TopUp' end,sharemst.srno from appmst,sharemst where appmst.appmstid=sharemst.appmstid  and sharemst.amount>0   and  datediff(month,CAST(FLOOR(CAST(sharemst.doe as float)) as datetime),(dateadd(minute,(330),getutcdate()))) >=6   and appmst.appmstregno=@regno  
        
end





GO
/****** Object:  StoredProcedure [dbo].[membertype]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[membertype](@regno varchar(50))  
as   
begin  
select joinfor from appmst where appmstregno in (@regno) 
end





GO
/****** Object:  StoredProcedure [dbo].[MenuSelection]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

CREATE procedure  [dbo].[MenuSelection] @SubCatName Varchar(50)                              
as                              
begin                           

declare @a int                          

set @a=0   

if exists (select subcatid from subcategorymst where ltrim(subcatname)=ltrim(@SubCatName) )                          

begin                           

select @a= subcatid from subcategorymst where ltrim(subcatname)=ltrim(@SubCatName)                          

 select p.ProductId,p.Title,p.ProductName,imagename=case when  p.imagename is null or  p.imagename='' or  p.imagename='0' then 'noImage.jpg' else imagename end,p.subcatid  ,
 
 
 p.Quantity,Availability=case when 

p.Quantity> 0 then 'In Stock' else 'Out Of Stock' end,(select Brand from brandmst where srno=p.brandid) as Brand,(cast(p.PackSize as varchar(20))+Space(1)+(select PackSize from PackSizemst where srno=p.PackSizeUnitId) ) as pack ,p.[Description],  
p.offertype,p.[status] ,p.sub2catid,


('Rs. '+cast(p.Price as varchar) +'/-') as Price,p.Quantity,  
			MRP=case when p.MRP = '0' then ' ' else ('Rs. ' +cast(p.MRP as varchar) +'/-')end,
			discount=case when p.discount = '0' then ' ' else ('<div class=''product-star'' style=''background-color:#ff3366; color:#fff;  padding:10px; top:0px; position:absolute; right:0px;''>' +cast((round(p.discount, 0)) as varchar) +' % </div>')end,
		



p.pid,(select ProductName from settingmst) as ProductNameSetting, (select Title from settingmst) as TitleSetting, (select PackSize from settingmst) as PackSizeSetting,   

(select Availability from settingmst) as AvailabilitySetting, (select Price from settingmst) as PriceSetting, (select MRP from settingmst) as MRPSetting,  

(select BuyNow from settingmst) as BuyNowSetting  from     ShopProductMst   p  where p.subcatid=@a   and   p.[status]=1                             

end                          





		else if exists (select sub2catid from sub2categorymst where ltrim(subcatname)=ltrim(@SubCatName) )                          





			begin                           
			select @a= sub2catid from sub2categorymst where ltrim(subcatname)=ltrim(@SubCatName)                          
			select p.ProductId,p.Title,p.ProductName,imagename=case when  p.imagename is null or  p.imagename='' or  p.imagename='0' then 'noImage.jpg' else imagename end,p.subcatid ,
			p.Quantity,Availability=case when p.Quantity> 0 then 'In Stock' else 'Out Of Stock' end,(select Brand from brandmst where srno=p.brandid) as Brand,  
			(cast(p.PackSize as varchar(20))+Space(1)+(select PackSize from PackSizemst where srno=p.PackSizeUnitId) ) as pack ,p.[Description],p.offertype,  

			p.[status] ,p.sub2catid,
			('Rs. '+cast(p.Price as varchar) +'/-') as Price,p.Quantity,  
			MRP=case when p.MRP = '0' then ' ' else ('Rs. ' +cast(p.MRP as varchar) +'/-')end,
			discount=case when p.discount = '0' then ' ' else ('<div class=''product-star'' style=''background-color:#ff3366; color:#fff;  padding:10px; top:0px; position:absolute; right:0px;''>' +cast((round(p.discount, 0)) as varchar) +' % </div>')end,
			p.PId ,(select ProductName from settingmst) as ProductNameSetting, (select Title from settingmst) as TitleSetting,   
			(select PackSize from settingmst) as PackSizeSetting, (select Availability from settingmst) as AvailabilitySetting, (select Price from settingmst) as PriceSetting,  
			(select MRP from settingmst) as MRPSetting,(select BuyNow from settingmst) as BuyNowSetting       
			from  ShopProductMst   p  where p.[status]=1          and p.sub2Catid=@a                          
			 end                          

else 
if exists (select  catid from categorymst where ltrim(catname)=ltrim(@subCatName) )                          

			begin                           
					select @a=catid from categorymst where ltrim(catname)=ltrim(@subCatName)                          
					select p.ProductId,p.Title,p.ProductName,imagename=case when  p.imagename is null or  p.imagename='' or  p.imagename='0' then 'noImage.jpg' else imagename end,p.subcatid , p.Quantity,  
					Availability=case when p.Quantity> 0 then 'In Stock' else 'Out Of Stock' end,(select Brand from brandmst where srno=p.brandid) as Brand,  
					(cast(p.PackSize as varchar(20))+Space(1)+(select PackSize from PackSizemst where srno=p.PackSizeUnitId) ) as pack ,p.[Description],p.offertype,  
					p.[status] ,p.sub2catid,
					('Rs. '+cast(p.Price as varchar) +'/-') as Price,p.Quantity,  
					MRP=case when p.MRP = '0' then ' ' else ('Rs. ' +cast(p.MRP as varchar) +'/-')end,
					discount=case when p.discount = '0' then ' ' else ('<div class=''product-star'' style=''background-color:#ff3366; color:#fff;  padding:10px; top:0px; position:absolute; right:0px;''>' +cast((round(p.discount, 0)) as varchar) +' % </div>')end,
					p.PId,(select ProductName from settingmst) as ProductNameSetting, (select Title from settingmst) as TitleSetting,   
					(select PackSize from settingmst) as PackSizeSetting, (select Availability from settingmst) as AvailabilitySetting, (select Price from settingmst) as PriceSetting,  
					 (select MRP from settingmst) as MRPSetting,(select BuyNow from settingmst) as BuyNowSetting      
					   from     ShopProductMst   p    where p.[status]=1           and      p.catid=@a                          
 
			end    
else   
				begin   

						set @SubCatName='%'+@SubCatName+'%'  
						select p.ProductId,p.Title,p.ProductName,imagename=case when  p.imagename is null or  p.imagename='' or  p.imagename='0' then 'noImage.jpg' else imagename end,p.subcatid ,

						('Rs. '+cast(p.Price as varchar) +'/-') as Price,p.Quantity,  
						MRP=case when p.MRP = '0' then ' ' else ('Rs. ' +cast(p.MRP as varchar) +'/-')end,
						discount=case when p.discount = '0' then ' ' else ('<div class=''product-star'' style=''background-color:#ff3366; color:#fff;  padding:10px; top:0px; position:absolute; right:0px;''>' +cast((round(p.discount, 0)) as varchar) +' % </div>')end,


						Availability=case when p.Quantity> 0 then 'In Stock' else 'Out Of Stock' end,(select Brand from brandmst where srno=p.brandid) as Brand,(cast(p.PackSize as varchar(20))+Space(1)+(select PackSize from PackSizemst where srno=p.PackSizeUnitId) ) as pack ,  
						p.[Description],p.offertype,p.[status] ,p.sub2catid,
						p.PId,(select ProductName from settingmst) as ProductNameSetting, (select Title from settingmst) as TitleSetting, (select PackSize from settingmst) as PackSizeSetting,   
						(select Availability from settingmst) as AvailabilitySetting, (select Price from settingmst) as PriceSetting, (select MRP from settingmst) as MRPSetting,(select BuyNow from settingmst) as BuyNowSetting  from  ShopProductMst   p   
						where p.[status]=1 and (p.Title like @SubCatName or p.ProductName like @SubCatName or p.[description] like @SubCatName or p.mrp like @SubCatName )  
				end                        
end    


GO
/****** Object:  StoredProcedure [dbo].[MessageEnter]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[MessageEnter](@MName varchar(max),@AppmstID varchar(100),@Subject varchar(max),@Status int, @MDate DATETIME)                
as          
begin      

Declare @APPID bigint
set @AppID= (Select appmstid from appmst where appmstregno=@AppmstID)
	insert into  [MessageMst] (Mbody,AppmstID,Subject,Status,MDate )values
	(@MName ,@AppID ,@Subject  ,@Status , @MDate )      
	 
end  



 


GO
/****** Object:  StoredProcedure [dbo].[MobileNoRegistration]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[MobileNoRegistration](@ApplicantName varchar(50),@EMailId varchar(50),@MobileNo varchar(50),@IPAddrss  varchar(50),@flag int output)
as
begin

set  @flag=0
if not exists (select * from RegisterMobileNo where MobileNo=@MobileNo)
begin
insert into RegisterMobileNo(ApplicantName,EMailId,MobileNo,IPAddrss )values(@ApplicantName ,@EMailId ,@MobileNo,@IPAddrss)
set  @flag=1
end
else
begin
set  @flag=11
end

end





GO
/****** Object:  StoredProcedure [dbo].[ModifyAmount]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ModifyAmount] (@srno int,@id varchar(50),@amount float,@newamount float,@admin varchar(50),@flag int output )              
as              
begin             
set @flag = 0             
declare @appmstid int           
declare @appamount float              
declare @samount float              
select @appamount=jamount from appmst where appmstregno=@id       
set @appamount=@appamount+(@newamount-@amount)            
if((@appamount>=0) and (@amount>=0))            
begin            
  Set @flag = 1              
SET XACT_ABORT ON                          
Begin Transaction             
update appmst set jamount=@appamount where appmstregno=@id              
select @appmstid=appmstid,@samount=amount from sharemst where  appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno               
update sharemst set amount=@newamount where appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno         
insert into ModifyInvestment (appmstregno,Amount,Amount1,admin,ModificationCode)values (@id,@amount,@newamount,@admin,1)    
       
commit transaction              
end            
end





GO
/****** Object:  StoredProcedure [dbo].[ModifyAmountAndRNo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ModifyAmountAndRNo] (@srno int,@id varchar(50),@amount float,@newamount float,@rno varchar(50),@rno1 varchar(50),@admin varchar(50),@flag int output )                
as                
begin               
set @flag = 0               
declare @appmstid int             
declare @appamount float                
declare @samount float                
select @appamount=jamount from appmst where appmstregno=@id         
set @appamount=@appamount+(@newamount-@amount)              
if((@appamount>=0) and (@amount>=0))              
begin              
  Set @flag = 1                
SET XACT_ABORT ON                            
Begin Transaction               
update appmst set jamount=@appamount where appmstregno=@id                
select @appmstid=appmstid,@samount=amount from sharemst where  appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno                 
update sharemst set amount=@newamount,receiptno=@rno1 where appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno           
insert into ModifyInvestment (appmstregno,Amount,Amount1,rno,rno1,admin,ModificationCode)values (@id,@amount,@newamount,@rno,@rno1,@admin,1)      
         
commit transaction                
end              
end





GO
/****** Object:  StoredProcedure [dbo].[ModifyAmountMI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ModifyAmountMI] (@srno int,@id varchar(50),@amount float,@newamount float,@admin varchar(50),@flag int output )                  
as                  
begin                 
set @flag = 0                 
declare @appmstid int               
declare @appamount float                  
declare @samount float                  
select @appamount=jamount from appmst where appmstregno=@id           
set @appamount=@appamount+(@newamount-@amount)                
if((@appamount>=0) and (@amount>=0))                
begin                
  Set @flag = 1                  
SET XACT_ABORT ON                              
Begin Transaction                 
update appmst set jamount=@appamount where appmstregno=@id                  
select @appmstid=appmstid,@samount=amount from sharemst where  appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno                   
update sharemst set amount=@newamount where appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno             
insert into ModifyInvestment (appmstregno,Amount,Amount1,admin,ModificationCode)values (@id,@amount,@newamount,@admin,1)        
           
commit transaction                  
end                
end





GO
/****** Object:  StoredProcedure [dbo].[ModifyAmountt]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ModifyAmountt] (@srno int,@id varchar(50),@amount float,@newamount float,@flag int output )        
as        
begin       
set @flag = 0       
declare @appmstid varchar(50)        
      
declare @appamount varchar(50)        
declare @samount varchar(50)        
select @appamount=jamount from appmst where appmstregno=@id        
set @appamount=@appamount+@newamount        
if((@appamount>=0) and (@amount>=0))      
begin      
  Set @flag = 1        
SET XACT_ABORT ON                    
  Begin Transaction       
update appmst set jamount=@appamount where appmstregno=@id        
select @appmstid=appmstid,@samount=amount from sharemst where  appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno         
--update pinmst set amount=@amount  where regno=(select appmstregno from appmst where appmstid=@appmstid) and activedate=(select  doe from sharemst where  appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno)   and amount=@samount    
  
    
update sharemst set amount=@amount where appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno        
        
commit transaction        
end      
        
      
      
        
        
end





GO
/****** Object:  StoredProcedure [dbo].[ModifyDate]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ModifyDate] (@srno int,@id varchar(50),@date datetime,@date1 datetime ,@admin varchar(50))        
as        
begin     
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@id  )           
begin     
set nocount on                                                                 
set xact_abort on                                                                                  
begin transaction     
declare @appmstid varchar(50)        
      
declare @appamount varchar(50)        
declare @samount varchar(50)        
      
select @appmstid=appmstid,@samount=amount from sharemst where  appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno         
update pinmst set activedate=@date1 where regno=(select appmstregno from appmst where appmstid=@appmstid) and activedate=(select doe from sharemst where  appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno)   and amount=@samount   
   
    
update sharemst set doe=@date1 where appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno        
      insert into ModifyInvestment (appmstregno,DOJ,DOJ1,admin,ModificationCode)values (@id,@date,@date1,@admin,2)    
  
      commit transaction     
  
 end       
end





GO
/****** Object:  StoredProcedure [dbo].[modifyplantype]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[modifyplantype](@id int,@srno int,@plantype float,@plantype1 float,@Multiplier int ,@admin varchar(50))              
as begin              
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstid=@id  )                     
begin               
set nocount on                                                                           
set xact_abort on                                                                                            
begin transaction         
declare @AmtDiff float  ,@regno varchar(50),@oldAmt float      
select @regno=appmstregno from appmst where appmstid=@id      
 declare @ptype int      
   if @plantype1=10000      
  set @ptype=1      
   else if @plantype1=15000      
  set @ptype=2      
   else if @plantype1=25000      
  set @ptype=3      
   else if @plantype1=500000      
  set @ptype=4     
                     
  
update sharemst set amount=@plantype,plantype=@ptype where appmstid=@id   and  srno=@srno        
  
        
insert into ModifyInvestment (appmstregno,plantype,plantype1,Multiplier,admin,ModificationCode)values (@regno,@plantype,@plantype1,@Multiplier,@admin,3)              
commit transaction               
end               
end





GO
/****** Object:  StoredProcedure [dbo].[ModifyReceiptNo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ModifyReceiptNo] (@srno int,@id varchar(50),@rno int,@rno1 int,@admin varchar(50))          
as          
begin       
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@id  )             
begin       
set nocount on                                                                   
set xact_abort on                                                                                    
begin transaction       

      
update sharemst set receiptno=@rno where appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno          
    
    insert into ModifyInvestment (appmstregno,rno,rno1,admin,ModificationCode)values (@id,@rno,@rno1,@admin,4)      

      commit transaction       
    
 end         
end





GO
/****** Object:  StoredProcedure [dbo].[ModifyRNo]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ModifyRNo] (@srno int,@id varchar(50),@rno varchar(50),@rno1 varchar(50),@admin varchar(50),@flag int output )                  
as                  
begin                 
set @flag = 0                 
              
SET XACT_ABORT ON                              
Begin Transaction                 
             
update sharemst set receiptno=@rno1 where appmstid=(select appmstid from appmst where appmstregno=@id) and srno=@srno             
insert into ModifyInvestment (appmstregno,rno,rno1,admin,ModificationCode)values (@id,@rno,@rno1,@admin,1)        
Set @flag = 1             
commit transaction                  
               
end





GO
/****** Object:  StoredProcedure [dbo].[modyfypayROI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[modyfypayROI](@draftid int,@appmstid varchar(20))                                          
as                                          
select appmstid,round(income1,0) as income1,round(income2,0) as income2              
,round(totalearning,0) as totalearning,                                          
round(dispachedamt,0) as dispachedamt,paymentdisplay,paymenttrandraftno,remarks,round(othercharges,0) as othercharges,round(handlingcharges,0) as handlingcharges,round(tds,0) as tds from paymenttrandraftROI                                    
 where paymenttrandraftid=@draftid and appmstid= @appmstid





GO
/****** Object:  StoredProcedure [dbo].[NEWtryleg]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[NEWtryleg](@AppMstRegNo nvarchar(50))                    
as                    
begin       
        declare @count int  
declare @regno varchar(50)  
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=( select AppMstRegNo from AppMst where SponsorID=@AppMstRegNo))   
      
select AppMstRegNo,UPPER(AppMstFName) AS AppMstFName,AppMstLeftRight,SponsorID,ParentID,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,appmstpaid,@count as cnt from AppMst where SponsorID=@AppMstRegNo order by appmstid      
                
end





GO
/****** Object:  StoredProcedure [dbo].[PaidListing]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[PaidListing](@regno varchar(50))
as
begin
 if EXISTS(select * from appmst where appmstregno=@regno)    
begin  
select * from appmst where appmstregno=@regno
end
end





GO
/****** Object:  StoredProcedure [dbo].[PanCardwithMember]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[PanCardwithMember](@panNo varchar(50))
as
begin
select * from appmst where  panno=@panNo and Appmstpaid=1
end
GO
/****** Object:  StoredProcedure [dbo].[PayBillUpdate]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[PayBillUpdate] (@PregNo varchar(50),@cRegNo varchar(50),@Epwd varchar(50),@Amt float,@Reason varchar(max),@Type varchar(50)='',

@Abalance float output,@flag varchar(100) output)                     

as                     

--Ip to Ip transfer       

if(exists(select appmstid from appmst where AppMstRegNo=@PregNo) and exists(select appmstid from appmst  where appmst.AppMstRegNo=@cRegNo))                    

begin                     



	if ltrim(rtrim(@PregNo)) != ltrim(rtrim(@cRegNo))                     

	begin                    



		if(exists(select appmstid from AppMst where AppMstRegNo=@PregNo) and exists(select appmstid from AppMst where AppMstRegNo=@cRegNo))                

		begin --check user exists                      



			declare @AppMstEpwd varchar(50),@PAppMstId int,@CAppMstId int,@Bbalance float,@count int,@TranRemark varchar(100)               

			select @PAppMstId=AppMstID from AppMst where AppMstRegNo=@PregNo                     

			set @TranRemark='Transfer'                                                    

			select @AppMstEpwd=ePassword from AppMst where AppMstRegNo=@PregNo

			select @CAppMstId=AppMstID from AppMst where AppMstRegNo=@cRegNo                                        

			declare @CtBalance float                     

			set @Bbalance=0                      

			set @Abalance=0                      

			set @CtBalance=0                     

			set @count=0                     

			if @Epwd=@AppMstEpwd and len(@Epwd)>5                                                                                                       

			begin                     



				 declare @BtranId int, @CtranId int, @Tranid int

				 select @BtranId=max(BankTranId) from IPTran where AppMstId=@PAppMstId

				 select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@PAppMstId and BankTranId=@BtranId

				 select @CtranId=max(BankTranId) from IPTran where AppMstId=@CAppMstId

				 select @CtBalance=isnull(BanktranBalance,0) from IPTran where appmstid=@CAppMstId and BankTranId=@CtranId

				 if(@Amt>0 and @Bbalance>=@Amt)                                                         

				 begin                                                      



				  --BEGIN TRY --start try block                                     

					set xact_abort on                                                        

					begin transaction 

					--Smart Fund					

					if(@Type='SMARTFUND')                                                         

					begin                        

						--************************************Admin charge    

						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,

						bankTranStatus,payoutno,Reason)    

						values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.05,0)),

						isnull(convert(numeric(18,2),@Abalance),0),'ADMIN-CHARGES',1,0,'') 



						set @Abalance=@Bbalance - @Amt                                             

						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,

						bankTranStatus,Payoutno,tranCharge,Reason)

						values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt*0.95,0),isnull(convert(numeric(18,2),@Abalance),0),

						@TranRemark,1,0,0,@Reason)                                                                              



						--************************************Transfer amount    



						set @CtBalance = @CtBalance + (@Amt*0.95)   

						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,

						bankTranStatus,payoutno,Reason)    

						values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.95,0)),

						isnull(convert(numeric(18,2),@CtBalance),0),@TranRemark,1,0,'')                            



						set @flag='1';                                                   

						commit transaction                                                        

					End	

					--shopping Fund

					if(@Type='SHOPPING')                                                         

					begin     

						declare @Balance float 

						set @Balance=0

						select @CtranId=max(BankTranId) from loadtran where AppMstId=@CAppMstId

						select @Balance=isnull(BanktranBalance,0) from loadtran where appmstid=@CAppMstId and BankTranId=@CtranId

						set @Balance=isnull(@Balance,0)

						--************************************Transfer amount    



						set @Balance = @Balance + ((@Amt*0.95) *60)  

						insert into loadtran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,Reason)    

						values (@CAppMstId,2,@PAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.95,0)*60),

						isnull(convert(numeric(18,2),@Balance),0),@TranRemark,'')   

						select @Tranid =IDENT_CURRENT('loadtran')



						--************************************Admin charge    

						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,

						bankTranStatus,payoutno,Reason,Tranid)    

						values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),convert(numeric(18,2),isnull(@Amt*0.05,0)),

						isnull(convert(numeric(18,2),@Abalance),0),'ADMIN-CHARGES',1,0,'',@Tranid) 

						set @Abalance=@Bbalance - @Amt                                             



						insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,

						bankTranStatus,Payoutno,tranCharge,Reason,Tranid)

						values (@PAppMstId,1,@CAppMstId,dateadd(minute,330,getutcdate()),isnull(@Amt*0.95,0),isnull(convert(numeric(18,2),@Abalance),0),

						@TranRemark,1,0,0,@Reason,@Tranid)                                                                              



						set @flag='1';                                                   

						commit transaction                                                        

					End	

				end                                                                                         

				else                                            

				set @flag='Insufficient IP balance.'; --low amount                                                                                         

			end                                                                        

			else                                                               

			set @flag='Invalid Transaction Password.';  -- E pwd invalid                                        

		end           

		else                                                        

		set @flag='Member not exists.';                                                         

	end                                                                                 

	else                                                                                            

	set @flag='Canot transfer to same member'                                             

end                                                        

else                                                        

set @flag='Invalid User Names.' 


GO
/****** Object:  StoredProcedure [dbo].[PaymentReport]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PaymentReport]      
@FromDate  smalldatetime,        
@ToDate  smalldatetime        
AS        
declare @Tds float        
 Select @Tds = tax from PaymentMst        
select         
 AppMst.APpMstId,        
 AppMst.appmsttitle+space(1)+AppMst.AppMstFName as name,        
 AppMst.AppMstLName,        
 AppMst.AppMstRegNo,        
    AppMst.AppMstLogin,        
 AppMst.AppMstCity,        
 round(Sum(Case when causeid.paymentcause='ROI' Then causeid.Amount Else 0 End),2,0 )as Jumbo1,        
 round(Sum(Case when causeid.paymentcause='ROI TB' Then causeid.Amount Else 0 End),2,0) as Jumbo2        
       
 ,round(Sum(causeid.amount),2,0) as total        
 from  AppMst,causeid         
 where AppMst.AppMstId=causeid.userid         
 and CAST(FLOOR(CAST(causeid.effectdate as float)) as datetime) >= @FromDate and CAST(FLOOR(CAST(causeid.effectdate as float)) as datetime) <= @ToDate        
 group by AppMst.APpMstId,causeid.userid,AppMst.appmsttitle,AppMst.AppMstFName,AppMstLName,AppMst.AppMstRegNo, AppMst.AppMstLogin ,AppMst.AppMstCity  order by AppMst.AppMstId





GO
/****** Object:  StoredProcedure [dbo].[PaymentReportGld]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PaymentReportGld] 
@FromDate  smalldatetime,  
@ToDate  smalldatetime  
AS  
declare @Tds float  
 Select @Tds = tax from PaymentMst  
select   
 AppMst.APpMstId,  
 AppMst.AppMstFName,  
 AppMst.AppMstLName,  
 AppMst.AppMstRegNo,  
    AppMst.AppMstLogin,  
 AppMst.AppMstCity,  
 Sum(Case when causeid.paymentcause='ROI' Then causeid.Amount Else 0 End) as Jumbo1,  
 Sum(Case when causeid.paymentcause='ROITB' Then causeid.Amount Else 0 End) as Jumbo2  
 
 ,Sum(causeid.amount) as total  
 from  AppMst,causeid   
 where AppMst.AppMstId=causeid.userid   
 and causeid.effectdate >= @FromDate and causeid.effectdate <= @ToDate  
 group by AppMst.APpMstId,causeid.userid,AppMst.AppMstFName,AppMstLName,AppMst.AppMstRegNo, AppMst.AppMstLogin ,AppMst.AppMstCity  order by AppMst.AppMstId





GO
/****** Object:  StoredProcedure [dbo].[PaymentTranHideShow]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[PaymentTranHideShow](@payoutno int,@type varchar(20),@flag int output)          
as          
begin          
set @flag=0          
if(@type='Hide')          
begin          
 update payoutmst set paymentDisplay=0 where payoutno=@payoutno and paymentdisplay=1  
 set @flag=1          
end          
else if(@type='Show')          
begin          
 update PayoutMst set paymentDisplay=1 where   payoutno=@payoutno and isnull(paymentdisplay,0)=0        
  set @flag=1          
end          
end





GO
/****** Object:  StoredProcedure [dbo].[PayoutAgainBankIncomemember]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
              
--PayoutAgainBankIncomemember 'Under progress'    , '1/14/2019 12:00:00 AM', '1/15/2019 12:00:00 AM'      
CREATE procedure[dbo].[PayoutAgainBankIncomemember](@type varchar(30), @From date, @TO date)                 
as                                               
begin               
            
select IFSC, BHolderName, Pan , ACNO , count(WAmount) as noofID, SUM(Dispatch)  as Amount  
 from              
WithdrawMst             
where Remarks=@type   and      CAST(FLOOR(CAST(DOE as float)) as datetime) between @From and @TO      
     
group by IFSC, BHolderName, Pan , ACNO            
               
end   

 
GO
/****** Object:  StoredProcedure [dbo].[payoutDetail]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[payoutDetail](@payoutno int,@franchiseid varchar(50),@userid varchar(50))         
as           
begin           
select f.FranchiseCode ,p.payoutno,p.payid,a.appmstid,a.appmstregno as userid,a.appmstfname as fname,BinaryAmt as [binary],directAmt as direct,0 as famt,p.RefferalAmt as ramt,p.ROIAmt,                                   
totalEarning as total,handlingCharges as handling,DispachedAmt as Dispatch,convert(varchar,p.payTodate,103) as payDate,                
case when CAST(FLOOR(CAST(dateadd(minute,(330),getutcdate()) as float)) as datetime) >CAST(FLOOR(CAST(dateadd(day,15,p.paytodate) as float)) as datetime) then 1 else 0 end as isVisible,                                  
case paid_status when 1 then 'Transfered' when 2 then '' when 0 then 'Transfer' else '' end as TranText,                                   
case paid_status when 2 then 'Withdrawn' when 1 then '' when 0 then 'Withdraw' else '' end as WithText                                   
 from PayoutMst  p                                 
inner join appmst a on p.appmstid=a.appmstid inner join FranchiseMst f on f.franchiseId=a.FranchiseID where p.payoutno>=6 and p.appmstid>0 and (case  when @payoutno=0 then 1  when p.payoutno=@payoutno then 1 else 0 end)=1 and                              
         
 (case when @franchiseid is null or len(@franchiseid)=0 then 1 when f.FranchiseCode=@franchiseid then 1 else 0 end)=1         
 and                             
(case when @userid is null or len(@userid)=0 then 1 when a.appmstregno=@userid and a.appmstactivate=1 then 1 else 0 end)=1                                       
 order by a.appmstid                                       
end





GO
/****** Object:  StoredProcedure [dbo].[payoutdetails]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[payoutdetails]( @max datetime)       
as       
begin--1        
declare         
@percent float,@bp float,@dp float,@amount float,@jamt float,@Tpaid int,@totalPaidamt float,      
@totalturnamount float,@totalpayout float,@b float,@d float       
set @bp=0       
set @dp=0                      
set @b=0                        
set @d=0            
set @Tpaid=0               
select @jamt =isnull(joiningamount,0) from paymentmst        
if(@jamt<1)                                                  
 set @jamt=1000        
       
select @Tpaid=count(*) from appmst where  CAST(appmstdoj  AS date)=  CAST(@max  AS date)   
--set @totalPaidamt=@Tpaid*@jamt           
--set @totalturnamount=@totalPaidamt      
select @totalturnamount=SUM(amount) from Sharemst where    CAST(DOE  AS date)=  CAST(@max  AS date)   
--select @b =sum(Amount) from causeid where paymentcause='b' and CAST(FLOOR(CAST(effectdate as float)) as datetime) between @min and @max                           
--select @d =sum(Amount) from causeid where paymentcause='d' and CAST(FLOOR(CAST(effectdate as float)) as datetime) between @min and @max                           
      
select @b=isnull(b,0),@d=isnull(d,0)                       
from                             
(select paymentcause,amount from causeid where PaymentCause in('b','d') and iselegible=1 and   Ckstatus in(1,0) and   CAST(Effectdate  AS date) =   CAST(@max  AS date)) as pivotabler                             
PIVOT                             
(                            
 sum(Amount)                            
 FOR paymentcause IN (b,d)                            
) as PivotedTable      
                         
        
if(@jamt is null)                        
set @jamt=0                    
if(@b is null)                        
set @b=0            
if(@d is null)                        
set @d=0                       
           
                        
set @totalpayout=@b +@d        
if(@totalturnamount>0)                         
begin                         
 set @percent=@totalpayout*100/@totalturnamount                          
 set @bp= (@b*100)/@totalturnamount                        
 set @dp= (@d*100)/@totalturnamount                        
end                        
else                        
begin                        
 set @percent=0                        
 set @bp=0                        
 set @dp=0                        
end                        
select bp=round(@bp,2),dp=round(@dp,2),b=round(@b,2),d=round(@d,2),j1= @jamt,jamt1=@jamt,t1=@tpaid,tpa1=@totalPaidamt,                        
total=round(@totalturnamount,2),ptotal=round(@totalpayout,2),percentage=round(@percent,2)       
end





GO
/****** Object:  StoredProcedure [dbo].[payoutdetailsRoi]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[payoutdetailsRoi](@min datetime ,@max datetime)                    
as                    
begin               
declare @ROI float  , @ROI1 float                                
 set @ROI=0                                             
 set @ROI1=0                       
select @ROI=isnull(sum(Amount),0) from causeid where paymentcause='ROI' and CAST(FLOOR(CAST(effectdate as float)) as datetime) between @min and @max                                       
select  ROI=round(@ROI,2)                          
end





GO
/****** Object:  StoredProcedure [dbo].[payoutdetailsroitb]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[payoutdetailsroitb](@min datetime ,@max datetime)                        
as                        
begin--1                        
declare                         
 @percent float                       
                      
          
,@jamt1 float                     
           
,@amount float                   
                 
, @jamt float                 
,@tpaid1 int               
,@regcount int               
, @regfee float                
,@totalPaidamt1 float                      
                      
,@totalturnamount float                        
,@totalpayout float                        
              
,@f float         
,@fp float         
,@r float      
,@rp float                 
,@count int              
,@countz int                    
                    
        
set @fp=0        
set @rp=0                    
       
set @f=0      
set @r=0           
set @countz=0                   
                    
            
             
            
select @jamt1 =joiningamount from paymentmst                                           
                                       
if(@jamt1<1)                                                
set @jamt1=1000                                                                    
select @tpaid1=count(*)from appmst where  CAST(FLOOR(CAST(appmstdoj as float)) as datetime) between @min and @max                                                                               
--set @totalPaidamt1=@tpaid1*@jamt1                                                   
--set @totalturnamount=@totalPaidamt1                      
select @totalturnamount=ISNULL(sum(amount),0) from Sharemst where  CAST(FLOOR(CAST(DOE  as float)) as datetime) between @min and @max  

select @f=isnull(F,0),@r=isnull(R,0)                           
 from                             
 ( 
 select paymentcause,amount from causeid where PaymentCause in('F','R') and iselegible=1 and  CAST(FLOOR(CAST(causeid.effectdate as float)) as datetime) between @min and @max ) as pivotabler                             
 PIVOT                             
 (                            
 sum(Amount)                            
 FOR paymentcause IN (F,R) 
 ) as PivotedTable 


--select @f =sum(Amount) from causeid where paymentcause='F' and CAST(FLOOR(CAST(effectdate as float)) as datetime) between @min and @max                         
--select @r =sum(Amount) from causeid where paymentcause='R' and CAST(FLOOR(CAST(effectdate as float)) as datetime) between @min and @max                         
      
if(@jamt is null)                      
set @jamt=0                  
                    
if(@f is null)                      
set @f=0                      
if(@r is null)                      
set @r=0           
                      
set @totalpayout=@f+@r                 
if(@totalturnamount>0)                       
begin                       
set @percent=@totalpayout*100/@totalturnamount                        
                                       
set @fp= (@f*100)/@totalturnamount               
set @rp= (@r*100)/@totalturnamount                     
            
end                      
else                      
begin                      
set @percent=0                                       
set @fp=0         
set @rp=0                      
end                      
select                       
                    
       
fp=round(@fp,2),                  
rp=round(@rp,2),                                
        
f=round(@f,2),      
r=round(@r,2),                   
j1= @jamt,          
jamt1=@jamt1,            
                     
t1=@tpaid1,                      
tpa1=@totalPaidamt1,                      
total=round(@totalturnamount,2),ptotal=round(@totalpayout,2),percentage=round(@percent,2)               
            
end





GO
/****** Object:  StoredProcedure [dbo].[payoutidforsms]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[payoutidforsms] (@fromdate datetime,@Todate datetime)                  
as         
begin     
set nocount on  
set xact_abort on  
begin transaction   
  
select a.appmstmobile,a.appmsttitle,a.appmstfname,a.appmstregno,p.paymenttrandraftid,p.dispachedamt,p.sentsms from PaymentTranDraft p , appmst a where p.appmstid=a.appmstregno   and  CAST(FLOOR(CAST(p.paymentfromdate as float)) as datetime)=@fromdate and CAST(FLOOR  (CAST(p.paymenttodate as float)) as datetime) =@Todate order by p.PaymentTranDraftid     
  
commit transaction   
end





GO
/****** Object:  StoredProcedure [dbo].[payoutList]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[payoutList] @payoutno int ,@orderby int                                                              
as                   
begin                      
if(@orderby=1)                      
begin                                                     
select  row_number() over(order by a.appmstid) as sno,a.appmstid,b.appmstregno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName+space(1)+b.AppmstLName as name,b.AppMstFName,b.appmstaddress1,b.appmststate,    
b.appmstcity,a.totalearning,a.dispachedamt,a.tds,        
        
a.handlingcharges,a.paymenttrandraftno,a.payoutno,b.panno,b.AppMstPinCode from paymenttrandraft a,appmst b                                                                
 where a.AppMstregno=b.appmstregno and a.payoutno=@payoutno and b.appmstactivate=1 order by  b.appmstregno                
end                
if(@orderby=2)                       
begin                                                     
select  row_number() over(order by a.appmstid) as sno,a.appmstid,b.appmstregno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName+space(1)+b.AppmstLName as name,b.AppMstFName,b.appmstaddress1,b.appmststate,    
b.appmstcity,a.totalearning,a.dispachedamt,a.tds,a.      
handlingcharges,a.paymenttrandraftno,a.payoutno,b.panno,b.AppMstPinCode from paymenttrandraft a,appmst b                                                                
 where a.AppMstregno=b.appmstregno and a.payoutno=@payoutno and b.appmstactivate=1 order by  b.AppMstLogin                
end                
                
if(@orderby=3)                      
begin                                                     
select  row_number() over(order by a.appmstid) as sno,a.appmstid,b.appmstregno,b.panno,b.appmstmobile,b.appmstaddress1,b.appmststate,b.appmstcity,b.AppmstTitle+space(1)+b.AppmstFName+space(1)+b.AppmstLName as name,b.AppMstFName,b.appmstaddress1,    
b.appmststate,b.appmstcity,a.totalearning,a.dispachedamt,      
a.tds,a.handlingcharges,a.paymenttrandraftno,a.payoutno,b.AppMstPinCode from paymenttrandraft a,appmst b                                                                
 where a.appmstregno =b.appmstregno and a.payoutno=@payoutno and b.appmstactivate=1 order by a.totalearning                
end                
end





GO
/****** Object:  StoredProcedure [dbo].[PayoutToBank]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[PayoutToBank](@payTranId int,@regno varchar(50),@amt float,@tranBy varchar(50),@flag varchar(100) output)     
as     
begin     
declare @dispatch float ,@appmstid int,@Payoutno int    
set xact_abort on     
select @appmstid=appmstid from appmst where appmstregno=@regno    
if(exists(select payid from PayoutMst where appmstregno=@regno and payid=@payTranId and isnull(paid_status,0)=0 and     
paymentdisplay=1 and cast(floor(cast(maturitydate as float))as datetime)<=cast(floor(cast(dateadd(minute,330,getutcdate()) as float))as datetime)))    
begin    
 select @dispatch=DispachedAmt,@Payoutno=payoutno from PayoutMst where payid=@payTranId and isnull(paid_status,0)=0    
 if(@dispatch=@amt)    
 begin    
  begin transaction    
  update PayoutMst set paid_status=1,tranBy=@tranBy where payid=@payTranId and isnull(paid_status,0)=0     
  execute AddToBank @appmstid,@amt,'Payout',@Payoutno,@payTranId    
  set @flag='1'    
  commit transaction    
 end    
 else    
  set @flag='Amount mismatch with your payout.'    
end     
else    
 set @flag='Amount not available to transfer.'    
end





GO
/****** Object:  StoredProcedure [dbo].[PayoutToBankROI]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create proc[dbo].[PayoutToBankROI](@payTranId int,@regno varchar(50),@amt float,@tranBy varchar(50),@flag varchar(100) output)   
as   
begin   
declare @dispatch float ,@appmstid int,@Payoutno int  
set xact_abort on   
select @appmstid=appmstid from appmst where appmstregno=@regno  
if(exists(select paymenttrandraftid from paymenttrandraftROI where appmstid=@regno and paymenttrandraftid=@payTranId and isnull(paid_status,0)=0 and   
paymentdisplay=1 and cast(floor(cast(maturitydate as float))as datetime)<=cast(floor(cast(dateadd(minute,330,getutcdate()) as float))as datetime)))  
begin  
 select @dispatch=DispachedAmt,@Payoutno=payoutno from paymenttrandraftROI where paymenttrandraftid=@payTranId and isnull(paid_status,0)=0  
 if(@dispatch=@amt)  
 begin  
  begin transaction  
  update paymenttrandraftROI set paid_status=1,tranBy=@tranBy where paymenttrandraftid=@payTranId and isnull(paid_status,0)=0   
  execute AddToBank @appmstid,@amt,'PayoutROI',@Payoutno,@payTranId  
  set @flag='1'  
  commit transaction  
 end  
 else  
  set @flag='Amount mismatch with your payout.'  
end   
else  
 set @flag='Amount not available to transfer.'  
end





GO
/****** Object:  StoredProcedure [dbo].[PayoutToBankROITB]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create proc[dbo].[PayoutToBankROITB](@payTranId int,@regno varchar(50),@amt float,@tranBy varchar(50),@flag varchar(100) output)   
as   
begin   
declare @dispatch float ,@appmstid int,@Payoutno int  
set xact_abort on   
select @appmstid=appmstid from appmst where appmstregno=@regno  
if(exists(select paymenttrandraftid from paymenttrandraftroitb where appmstid=@regno and paymenttrandraftid=@payTranId and isnull(paid_status,0)=0 and   
paymentdisplay=1 and cast(floor(cast(maturitydate as float))as datetime)<=cast(floor(cast(dateadd(minute,330,getutcdate()) as float))as datetime)))  
begin  
 select @dispatch=DispachedAmt,@Payoutno=payoutno from paymenttrandraftroitb where paymenttrandraftid=@payTranId and isnull(paid_status,0)=0  
 if(@dispatch=@amt)  
 begin  
  begin transaction  
  update paymenttrandraftroitb set paid_status=1,tranBy=@tranBy where paymenttrandraftid=@payTranId and isnull(paid_status,0)=0   
  execute AddToBank @appmstid,@amt,'PayoutROITB',@Payoutno,@payTranId  
  set @flag='1'  
  commit transaction  
 end  
 else  
  set @flag='Amount mismatch with your payout.'  
end   
else  
 set @flag='Amount not available to transfer.'  
end





GO
/****** Object:  StoredProcedure [dbo].[PerfectMoney]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[PerfectMoney] (@PID varchar(50)=null,@PACCOUNT varchar(50),@PNAME varchar(50),@PAMOUNT float,@PUNITS varchar(50),@SMEMO varchar(50),@Status int,      
@Types varchar(50),@sponsorid varchar(50),@Place int,@Name varchar(50),@email varchar(50),@country varchar(50),@product varchar(50),    
@sPass varchar(50),@UserId varchar(50),@Amount float,@pass varchar(50),@tpass varchar(50),@JoinType varchar(50),@PaymentID varchar(50) output)      
as      
Begin      
  Declare @Remarks varchar(50)      
  if @Status=0      
  Set @Remarks='Pending'    
  if @Status=1      
  Set @Remarks='Successful'    
  if @Status=2      
  Set @Remarks='Canceled'      
  if(@Types='INSERT')      
  Begin      
    Set @PaymentID=0      
    insert into PMoney(RegNo,PaidRegNo,PACCOUNT,PNAME,PAMOUNT,PUNITS,SMEMO,Status,Remarks,    
    sponsorid,Place,Name,email,country,product,sPass,UserId,Amount,pass,tpass,JoinType)    
        
    values('','',@PACCOUNT,@PNAME,@PAMOUNT,@PUNITS,@SMEMO,@Status,@Remarks,    
    @sponsorid,@Place,@Name,@email,@country,@product,@sPass,@UserId,@Amount,@pass,@tpass,@JoinType)      
    select @PaymentID=isnull(max(PID),'101') from  PMoney      
   End      
  if(@Types='UPDATE')      
  Begin      
    Update PMoney set @PaymentID=JoinType,PACCOUNT=@PACCOUNT,PNAME=@PNAME,PAMOUNT=@PAMOUNT,PUNITS=@PUNITS,SMEMO=@SMEMO,Status=@Status,Remarks=@Remarks Where PID=@PID      
	 Set @PaymentID='JOIN' 
  End      
End 




GO
/****** Object:  StoredProcedure [dbo].[PINCheck]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PINCheck]              
(              
 @vPinSrNo int,              
 @vPinNo char(10),              
 @vPinPassword char(4) ,              
 @vJoinFor int,       
 @flag smallint output              
)              
AS              
               
 Declare               
  @vPinNoEntry char(10),               
  @vPinPasswordEntry char(4),              
  @vJoinForEntry int,  
 @pintype int             
                 
 Set @flag = 0              
SET XACT_ABORT  ON              
 Begin Transaction              
 If exists (Select paidAppMstid from PINMst where PinSrNo = @vPinSrNo And  paidAppMstId = 0 And  allotedto!='0' )              
  Begin              
 Select @vPinNoEntry = PinNo, @vPinPasswordEntry = PinPassword,@vJoinForEntry  = JoinFor,@pintype=pintype from PINMst      
         where PinSrNo = @vPinSrNo  And paidAppMstId = 0              
              
   If @vPinNoEntry = @vPinNo And @vJoinForEntry =  @vJoinFor and @pintype=1               
 Begin              
     Set @flag = 1              
    End              
  End              
               
Commit Transaction





GO
/****** Object:  StoredProcedure [dbo].[PINCheck_or]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PINCheck_or]            
(            
 @vPinSrNo int,            
 @vPinNo char(10),            
 @vPinPassword char(4) ,            
 @vJoinFor int,     
 @flag smallint output            
)            
AS            
             
 Declare             
  @vPinNoEntry char(10),             
  @vPinPasswordEntry char(4),            
  @vJoinForEntry int           
               
 Set @flag = 0            
SET XACT_ABORT  ON            
 Begin Transaction            
 If exists (Select paidAppMstid from PINMst where PinSrNo = @vPinSrNo And    
    paidAppMstId = 0 And  allotedto!='0' )            
  Begin            
   Select @vPinNoEntry = PinNo, @vPinPasswordEntry = PinPassword,@vJoinForEntry  = JoinFor from PINMst    
         where PinSrNo = @vPinSrNo  And paidAppMstId = 0            
            
   If @vPinNoEntry = @vPinNo And @vPinPasswordEntry = @vPinPassword And @vJoinForEntry =  @vJoinFor             
           
    Begin            
     Set @flag = 1            
    End            
  End            
             
Commit Transaction





GO
/****** Object:  StoredProcedure [dbo].[pinpurchage]    Script Date: 10/28/2020 2:04:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[pinpurchage]  @PregNo varchar(50),@amount float,@joinfor float,@pintype int,@allotedto varchar(50),@pinsrno int,@NuOfPin int,@Epwd varchar(50),@flag int output                                
as    
begin    
-------------------------    
begin transaction    
set xact_abort on    
----------------------------    
if Exists(select appmstid from appmst where   appmstregno=@PregNo and ePassword = @Epwd and len(@Epwd)>1)    
begin    
 ----------------------    
 declare @appmstid int,@receipt varchar(50)    
    select  @appmstid = appmstid from appmst where   appmstregno=@PregNo and ePassword = @Epwd    
    if @NuOfPin <=10 and @NuOfPin >=1          
    begin  
  ----------------------  
  declare @BtranId int, @CtranId int,@Totalamount int,@Bbalance int                                  
  select @BtranId=max(BankTranId) from banktran where AppMstId=@appmstid                                      
  select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@appmstid and BankTranId=@BtranId       
  set @Totalamount  = @amount * @NuOfPin  
  if(@Bbalance>=@Totalamount)  
  begin    
   ----------------------    
   declare @RBalance float    
   set @RBalance=@Bbalance - @Totalamount    
   if exists(select ltrim(rtrim(allotedto)) from pinmst where pinsrno=@pinsrno and allotedto = 0)    
   begin    
    --------------------  
    declare @srno int,@topins int, @pinstring varchar(500)    
    set @srno=@pinsrno                     
    set @topins=0                    
    set @topins=@srno+@NuOfPin                    
    set @pinstring =''                    
    while @srno < @topins                    
    begin    
     if @pinstring =''                    
      set @pinstring =convert(varchar(12),@srno)                    
     else                    
     set @pinstring =convert(varchar(500),@pinstring ) + ',' + convert(varchar(12),@srno)                    
     set @srno=@srno+1      
    end     
    declare @paidAppMstId int    
    select @paidAppMstId = appmstid from appmst where appmstregno = @allotedto --getting appmstid for to we are alloting     
  
    insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                  
    BankTranRemarks,bankTranStatus,pinsrno)                                  
    values (@AppMstId,5,@paidAppMstId,dateadd(minute,330,getutcdate()),@Totalamount,@RBalance,'Pin Purchase',1,@pinstring)         
    set @receipt='M'+convert(varchar,@@identity)  
      
    update  pinmst set amount=@amount,isactivate=1,remark='Money Bank',ReceiptNo=@receipt,pintype=1,plantype=@pintype,allotmentdate=dateadd(minute,330,getutcdate()),allotedto=@allotedto where pinSrNo>=@pinsrno and PinSrNo<(@pinsrno + @NuOfPin)            
          
                
      
    set @flag=1;    
   end  
   else    
    set @flag=-105;     
    -----------------    
  end    
  else    
   set @flag=-103;--low amount       
   --------------    
 end    
    else    
  set @flag=-107;--  no of pin eror       
 -----------    
end    
else    
 set @flag=-101;-- E pwd invalid     
 if(@flag=1)  
 commit transaction    
else  
 rollback transaction  
----------------------    
end





GO
/****** Object:  StoredProcedure [dbo].[postBlogComments]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[postBlogComments](@userid varchar(50),@Commentby varchar(50),@Comments varchar(max))  
as  
begin 
	if(exists (select AppMstRegNo from appmst where AppMstRegNo=@userid)) 
begin 
insert into blog(appmstregno,Commentby,Comments)values(@userid,@Commentby,@Comments)  
end
end





GO
/****** Object:  StoredProcedure [dbo].[pr_SendSmsSQL]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[pr_SendSmsSQL] 
    @MobileNo varchar(12), 
    @smstext as varchar(300), 
    @sResponse varchar(1000) OUT 
as 
BEGIN 

   Declare @iReq int,@hr int 
   Declare @sUrl as varchar(500) 
   DECLARE @errorSource VARCHAR(8000)
   DECLARE @errorDescription VARCHAR(8000) 

   -- Create Object for XMLHTTP 
   EXEC @hr = sp_OACreate 'Microsoft.XMLHTTP', @iReq OUT 

   print @hr 

   if @hr <> 0 
      Raiserror('sp_OACreate Microsoft.XMLHTTP FAILED!', 16, 1) 
set @sUrl='http://sms4u.sakshaminfosoft.com/pushsms.php?username=demo&api_password=d7e56x0f6hdfqyw3y&sender=WEBSMS&to=9716848030&message=sdfsadf&priority=11'
   --set @sUrl='http://api.clickatell.com/http/sendmsg?user=devendar&password=csx19csx&api_id=3360313&to=#MobNo#&text=#Msg#' 

   set @sUrl=REPLACE(@sUrl,'#MobNo#',@MobileNo) 
   set @sUrl=REPLACE(@sUrl,'#Msg#',@smstext) 

   print @sUrl 

   -- sms code start 
   EXEC @hr = sp_OAMethod @iReq, 'Open', NULL, 'GET', @sUrl, true 
   print @hr 

   if @hr <> 0 
      Raiserror('sp_OAMethod Open FAILED!', 16, 1) 

   EXEC @hr = sp_OAMethod @iReq, 'send' 
   select @iReq
   print @hr 

   if @hr <> 0 
   Begin 
       EXEC sp_OAGetErrorInfo @iReq, @errorSource OUTPUT, @errorDescription OUTPUT

       SELECT [Error Source] = @errorSource, [Description] = @errorDescription

       Raiserror('sp_OAMethod Send FAILED!', 16, 1) 
   end 
else 
Begin
    EXEC @hr = sp_OAGetProperty @iReq,'responseText', @sResponse OUT 
    print @hr

    insert into send_log (Id, mobile, sendtext, response, created, createddate) 
    values(0, @MobileNo, @smstext, @sResponse, 'System', GETDATE())
end
end

GO
/****** Object:  StoredProcedure [dbo].[PRC_30DaysIncome]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 


CREATE PROCEDURE  [dbo].[PRC_30DaysIncome]                                
(                                
 @Appmsid bigint ,                              
 @Amount  float)                                
AS 
begin                               
DECLARE @getdate datetime
set @getdate= dbo.GetServerDate()                                  
Insert Into Level_income (IDate,LevelNo,Appmstid,PaidAppmstid, Amount)
select @getdate, Appmstlevel, ParentId, AppMstId, @Amount from AppTran where AppMstId= @Appmsid and Appmstlevel<3
end
GO
/****** Object:  StoredProcedure [dbo].[PRC_activeandUpgradeHistory]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
--PRC_activeandUpgradeHistory 'GBT777648'  
CREATE proc [dbo].[PRC_activeandUpgradeHistory](@userid varchar(20))  
 as  
 begin  
    
  
CREATE TABLE #activeandUpgradeHistory  
(  
AppmstRegno VARCHAR(50),  
BankTranAmount float,  
BankTranDate datetime,  
BankTranMode VARCHAR (50),  
AmountFor VARCHAR (50)  
  
)  
  
insert into #activeandUpgradeHistory(AppmstRegno, BankTranAmount, BankTranDate, BankTranMode, AmountFor)  
select dbo.GetUserName(PaidAppmstID)  , BankTranAmount, BankTranDate, 'Account Fund' , CASE WHEN BankTranRemarks='Activate Account'  THEN 'Activate' 
WHEN BankTranRemarks='Account Upgrade'  THEN 'Upgrade'   END AS    AmountFor   
from VPTran where dbo.GetAppMstRegNoNew(AppmstId)=@userid    and BankTranRemarks in('Activate Account', 'Account Upgrade')
  
  
insert into #activeandUpgradeHistory(AppmstRegno, BankTranAmount, BankTranDate, BankTranMode, AmountFor)  
select  MemberID , RequestAmount, UpdateDate, currency2 ,     AmountFor  from tbl_CoinpaymentRequest where PaymenytBy=@userid and status in('1', '100', '2')  
  
select * from   #activeandUpgradeHistory  order by  BankTranDate desc
drop table #activeandUpgradeHistory   
  
end
 
GO
/****** Object:  StoredProcedure [dbo].[PRC_BTCAddreAddress]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[PRC_BTCAddreAddress](@Type varchar(50))                                    
as                  
begin            
select  top 1 Address  from BTCAddressAmt where AType=@Type  ORDER BY newid()         
end 
GO
/****** Object:  StoredProcedure [dbo].[PRC_docDetial]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PRC_docDetial]    
 (         
  @SrNo varchar(50)    
       
)    
      
  as     
  begin    
SELECT        dbo.scanDocs.UserId, dbo.scanDocs.ImageName, dbo.scanDocs.docType, dbo.AppMst.AppMstState, dbo.AppMst.AppMstCity, 
dbo.AppMst.AppMstAddress1, dbo.AppMst.AppMstPinCode, dbo.BankMst.BankName, 
                         dbo.BankMst.Branch, dbo.BankMst.acno, dbo.BankMst.HolderName, dbo.BankMst.IFS,dbo.AppMst.panno
FROM            dbo.AppMst INNER JOIN
                         dbo.BankMst ON dbo.AppMst.AppMstID = dbo.BankMst.appmstid INNER JOIN
                         dbo.scanDocs ON dbo.AppMst.AppMstRegNo = dbo.scanDocs.UserId where scanDocs.srno=@SrNo    
    
  end  
  
    
GO
/****** Object:  StoredProcedure [dbo].[PRC_DownlineReport]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- [PRC_DownlineReport]  'GBT205719'         
CREATE procedure  [dbo].[PRC_DownlineReport](@regno varchar(50))                                                              
as                                                              
begin                                              
declare @appid int                                                    
                          
SELECT @appid=appmstid FROM appmst WHERE appmstregno=@regno                                                                          
           
        
        
             
select a.AppMstMobile, a.appmstid,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,  dbo.JoinForAmount(a.appmstid) AS jamount    ,  
  
  
  
FORMAT (a.appmstDOJ, 'dd-MMM-yyyy')  as appmstDOJ,   
  
  
a.SponsorID,          
 CASE a.AppMstLeftRight        
    WHEN 0 THEN 'Left'        
        
    ELSE 'Right'         
END as AppMstLeftRight ,        
        
CASE a.Appmstpaid        
    WHEN 1 THEN 'Active'         
    ELSE 'Inactive'         
END as Appmstpaid         
,        
(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,              
(select     isnull(convert(varchar(50),max(FORMAT (doe, 'dd-MMM-yyyy')),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from              
AppMst a  where  a.AppMstID in (select AppMstId from AppTran where ParentId=(select AppMstId from appmst where AppMstRegNo=@regno))  order by AppMstID            
                
         
        
 end 
GO
/****** Object:  StoredProcedure [dbo].[PRC_FundpanCardInvestment]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[PRC_FundpanCardInvestment]
as
begin
select panno, count(*) as NOofID , sum(Joinfor) as Investment, dbo.getwithdrawPanno(panno) as Withdraw from appmst where appmstpaid=1 group by panno
 
 end
GO
/****** Object:  StoredProcedure [dbo].[PRC_FundTrasferlist]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
        
--[sponsarlist] 'AGF497549'        
CREATE procedure  [dbo].[PRC_FundTrasferlist](@regno varchar(50)  )                                                          
as                                                          
begin            
declare @appmstid bigint                                    
   set @appmstid=(select appmstid FROM appmst WHERE appmstregno=@regno )      
  select FORMAT (banktrandate, 'dd-MMM-yyyy') as banktrandate , BanktranAmount,   'Transfer to - '+ dbo.GetAppmstRegNo(PaidAppmstID) + ' ('+dbo.GetUserName(PaidAppmstID)+')'  as PaidDetail  from VPTran where Appmstid=@appmstid  and BankTranRemarks=
'VP TRANSFER'          
                                                 
 end 
GO
/****** Object:  StoredProcedure [dbo].[PRC_FundUserLIst]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   --[PRC_FundUserLIst] '24-Jan-19 12:00:00 AM','25-jan-19 12:00:00 AM','' , 2
 CREATE proc [dbo].[PRC_FundUserLIst] (@From datetime,@TO datetime, @search varchar(50), @type bigint)    
 as    
 begin    
     
set @search = '%' + @search + '%'   
if @type =2
begin
   
 SELECT        dbo.AppMst.AppMstRegNo, dbo.AppMst.AppMstFName,  dbo.AppMst.appmstMobile, dbo.IPTran.BankTranDate,  dbo.IPTran.TranBY,
  dbo.IPTran.BankTranAmount FROM   dbo.IPTran with (NOLOCK) INNER JOIN                         
 dbo.AppMst ON dbo.IPTran.AppMstId = dbo.AppMst.AppMstID     where IPTran.bankTranRemarks='self'      
  and  CAST(FLOOR(CAST(dbo.IPTran.BankTranDate as float)) as datetime) between @From and @TO       
  And dbo.GetAppmstRegNo(dbo.IPTran.appmstid )  Like @search    
  
  end
  
  else
  begin
   SELECT        dbo.AppMst.AppMstRegNo, dbo.AppMst.AppMstFName,  dbo.AppMst.appmstMobile, dbo.IPTran.BankTranDate,  dbo.IPTran.TranBY,
  dbo.IPTran.BankTranAmount FROM   dbo.IPTran with (NOLOCK) INNER JOIN                         
 dbo.AppMst ON dbo.IPTran.AppMstId = dbo.AppMst.AppMstID     where IPTran.bankTranRemarks='self'      
  and  CAST(FLOOR(CAST(dbo.IPTran.BankTranDate as float)) as datetime) between @From and @TO    
    and    IPTran.trancharge = @type  
  And dbo.GetAppmstRegNo(dbo.IPTran.appmstid )  Like @search   

  
  end  
    
  end 

 
GO
/****** Object:  StoredProcedure [dbo].[PRC_GetGiftCardByID]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	--exec [PRC_GiftOrderbyUser] 'GBT0000001','100','100', 1, '2222','saini.sunder158@gmail.com',''                 
         -- select * from vptran where appmstid=1
		  



		 --select * from GiftOrderMst 
create  proc[dbo].[PRC_GetGiftCardByID](@GiftCardId bigint)                       
as                      
begin     
    select * from      [dbo].[GiftCardMst]   where  id=@GiftCardId 
	 select * from       GiftCardAmountAmst   where  GiftCardID=@GiftCardId       
END  

 
GO
/****** Object:  StoredProcedure [dbo].[PRC_GetGiftCardCode]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --exec [PRC_GiftOrderbyUser] 'GBT421083','100','3.31', 1, '1234','saini.sunder158@gmail.com',''                   
         -- select * from vptran where appmstid=1  
      
   --select * from GiftOrderMst   
 --  PRC_GiftOrderbyUserList 'GBT421083'
CREATE  proc[dbo].[PRC_GetGiftCardCode](@UserID nvarchar(50), @OrderID nvarchar(50), @Skey nvarchar(50),
@flag varchar(max) output, @Code varchar(max) output)                         
as                        
                          
begin  

DECLARE @AppMstID bigint
select @AppMstID=AppMstID from AppMst where AppMstRegNo= @UserID                     
 
if not exists(select appmstregno from appmst where AppMstID=@AppMstID and ePassword=@SKey )                                      
  begin                                      
  set @flag='Security Key not Match !'   
    set @Code=''                                     
  return                                      
  end

set  @Code = (select GiftCode from GiftOrderMst where orderid=@OrderID) 
  set @flag='1'                       
END 
 

 --select * from GiftOrderMst

 --select * from appmst where appmstid=61
GO
/****** Object:  StoredProcedure [dbo].[PRC_GetGiftCardList]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	--exec [PRC_GiftOrderbyUser] 'GBT0000001','100','100', 1, '2222','saini.sunder158@gmail.com',''                 
         -- select * from vptran where appmstid=1
		  



		 --select * from GiftOrderMst 
create  proc[dbo].[PRC_GetGiftCardList](@Country Varchar(100)=null, @CurrencyCode varchar(100)=null)                       
as                      
begin     
    select * from      [dbo].[GiftCardMst]   where  Country=@Country    
END  
GO
/****** Object:  StoredProcedure [dbo].[PRC_getUserMaster]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                                      
--[PRC_getUserMaster]'XSC00001'                                          
CREATE  proc[dbo].[PRC_getUserMaster] (@regno as varchar(50))                                                               
as                                                                
begin                                                               
 select a.appmstpaid,            
 FORMAT (a.appmstDOJ, 'MMM dd yyyy')  as appmstDOJ,             
  FORMAT (a.appPaiddatetime, 'MMM dd yyyy')  as appPaiddatetime,             
             
             
 a.AppMstRegNo,upper(AppmstFName) as AppmstFName,AppMstLName,   a.appmststate,a.appmstcity,                                    
              
 AppmstSponsorTotal,appmstLeftTotal,appmstRightTotal, tempLeftTotal, tempRightTotal, cpl, cpr, isnull(sponsorid,0) as sponsorid,                                                    
                                      
 (select appmstfname from appmst  WITH (NOLOCK)  where appmstregno=a.sponsorid) as sponsorname,newsponsortotal,                
                 
                 
 jAmount,                                                              
 carryleft,carryright,pairrank as pair,datediff(day,CAST(FLOOR(CAST(AppMstDOJ as float)) as datetime),                                                    
 CAST(FLOOR(CAST((dateadd(minute,(330),dbo.GetServerDate())) as float)) as datetime)) as membersince ,                                                    
 datediff(day,CAST(FLOOR(CAST((dateadd(minute,(330),dbo.GetServerDate())) as float)) as datetime),DATEADD(YEAR ,1,CAST(FLOOR(CAST(AppMstDOJ as float)) as datetime)))+1  as expirydays,                                                                   
(select isnull(count(srno),0) from apptran with (NOLOCK) where ParentId=a.AppMstID  and AppMstLeftRight=0) as LeftMember,                                                               
(select isnull(count(srno),0) from apptran with (NOLOCK) where ParentId=a.AppMstID and AppMstLeftRight=1) as rightMember,                                                             
                                                            
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=0 and Appmstpaid=1 and appmstactivate=1) as leftactivate,                                     
  
    
      
        
          
            
              
                
                  
                    
                      
                        
                          
 (select isnull(count(srno),0) from apptran inner join AppMst on AppTran.AppMstId=AppMst.AppMstID where AppTran.ParentId=a.AppMstID  and AppTran.AppMstLeftRight=1 and Appmstpaid=1 and appmstactivate=1) as rightactivate,                                    
              
  (select isnull(ROICount,0) from Sharemst with (NOLOCK) where appmstregno=a.AppMstRegNo) as BoosterType,                                                              
                                                            
(select isnull(count(appmstid),0) from AppMst with (NOLOCK) where SponsorID=a.AppMstRegNo and AppMstLeftRight=0) as leftDirect,                                                              
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=1) as RightDirect,                                                              
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=0 and Appmstpaid =1) as LeftPaidDirect,                                                              
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=1 and Appmstpaid=1) as RightPaidDirect,                                                              
(select isnull(count(appmstid),0) from AppMst with (NOLOCK) where SponsorID=a.AppMstRegNo and AppMstLeftRight=0 and Appmstpaid=0) as DirectleftRgtr,                              
(select isnull(count(appmstid),0) from AppMst  with (NOLOCK)where SponsorID=a.AppMstRegNo and AppMstLeftRight=1 and Appmstpaid=0) as DirectrightRgtr,                                          
                                       
 (select isnull(Sum(dollar),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='Payout') as TeamSales ,                                          
      
 (select isnull(Sum(BankTranAmount),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='WithDraw') as TWithDraw  ,                                          
  (select isnull(Sum(BankTranAmount),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='TPending') as TPending  ,                                          
                                                     
 (select isnull(Sum(dollar),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='Direct Income') as DirectINcome  ,                                          
  (select isnull(Sum(dollar),0) from vpTran  with (NOLOCK) where appmstid=a.appmstid and BankTranRemarks='ROI') as ROI  ,                                          
                                               
    (select isnull(Sum(dollar),0) from vpTran with (NOLOCK)  where appmstid=a.appmstid and   banktranremarks not in ('Under progress', 'withdraw', 'VP TRANSFER','Self', 'TOP-UP','Activate Account', 'Account Upgrade')  ) as TeamIncome ,                
                              
                                          
(select imagename from ProfileImageMst WITH (NOLOCK)  where appmstregno=@regno  ) as imagename,                                          
Isnull((select top 1 ROICount from sharemst with (NOLOCK) where appmstid=a.appmstid order by srno desc ), 0) as ROICountShow ,  
       
Isnull((datediff (D, (select top 1 DOE from Sharemst where Appmstid=a.appmstid order by srno desc ), dbo.GetServerDate())),0) as DAysCount,             
                      
                                      
JAmount as MYpakage                                       
from AppMst a    where a.AppMstRegNo=@regno                                             
end 
  
GO
/****** Object:  StoredProcedure [dbo].[PRC_GiftOrderbyUser]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	--exec [PRC_GiftOrderbyUser] 'GBT0000001','100','100', 1, '2222','saini.sunder158@gmail.com',''                 
         -- select * from vptran where appmstid=1
		  
		 --select * from GiftOrderMst 
CREATE  proc[dbo].[PRC_GiftOrderbyUser](@RegNo nvarchar(50), @giftCardAmount numeric(18,2),
@RequestAmount numeric(18,2),@GiftCardId bigint ,  @SKey varchar(4),@SendID varchar(100),@flag varchar(100) output)                       
as                      
                        
begin                      
declare @getdate datetime ,  @appmstid int ,@TranNo int ,@BtranId int, @Abalance numeric(18,2),@GiftCardName varchar(150)    
set @getdate= dbo.GetServerDate()                      
		                
		select @appmstid=appmstid   from appmst where appmstregno=@RegNo                      
		if not exists(select appmstregno from appmst where AppMstID=@appmstid and ePassword=@SKey )                                    
		begin                                    
		set @flag='Security Key not Match !'                                    
		return                                    
		end    
		
      select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid                                                                                                       
      select @Abalance=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranId                                       
      if(@Abalance<=@RequestAmount)   
	  begin
	   set @flag='Insuficient Balance !' --Insufficient Balance                        
		return     
	  end

		select @GiftCardName=ProductName from GiftCardMst where id=@GiftCardId
         set @Abalance = @Abalance- @RequestAmount;
		 set @GiftCardName = 'Purchase ' +@GiftCardName + ' Gift Card' 
	
   
		insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                                      
		values (@appmstid,12,@appmstid,@getdate,@RequestAmount,@Abalance,@GiftCardName,0)          
      
		set @TranNo =@@IDENTITY
		insert into  GiftOrderMst(GiftCardId, UserID,SendGiftCard,RequestAmount,Amount,OrderDate,BanktranID,Status)
		values(@GiftCardId, @appmstid, @SendID, @giftCardAmount, @RequestAmount, @getdate, @TranNo,0 )
		set @flag='1'                    
     
                    
END  
GO
/****** Object:  StoredProcedure [dbo].[PRC_GiftOrderbyUserList]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --exec [PRC_GiftOrderbyUser] 'GBT421083','100','3.31', 1, '1234','saini.sunder158@gmail.com',''                   
         -- select * from vptran where appmstid=1  
      
   --select * from GiftOrderMst   
 --  PRC_GiftOrderbyUserList 'GBT421083'
CREATE  proc[dbo].[PRC_GiftOrderbyUserList](@UserID nvarchar(50))                         
as                        
                          
begin  

DECLARE @AppMstID bigint
select @AppMstID=AppMstID from AppMst where AppMstRegNo= @UserID                     
select GOM.orderID, GOM.RequestAmount as Amount, GCM.Curency,  GCM.ProductName, GOM.OrderDate, 
CASE WHEN status = 0 THEN 'Processing...'ELSE 'Delivered' END AS status 
from GiftOrderMst as GOM
inner join GiftCardMst as GCM on  GCM.ID=GOM.GiftCardId 
where GOM.UserID=@AppMstID
                      
END 
 

 --select * from GiftOrderMst
GO
/****** Object:  StoredProcedure [dbo].[PRC_IncomeReport]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
--[PRC_IncomeReport] 'XSC160797', 'Direct Income'      
CREATE proc[dbo].[PRC_IncomeReport] (@regno varchar(50), @isType varchar(20) )                            
                          
as                             
                          
begin              
DECLARE @appmstid BIGINT            
SET @appmstid =(select appmstid from appmst where AppMstRegNo=@regno)            
   select       
         
   (dbo.GetUserName(PaidAppmstID) +' (' + dbo.GetAppmstRegNo(PaidAppmstID) + ')') as PName  ,      
 cast(round(banktranamount,8) as numeric(18,8)) banktranamount    , BankTranRemarks,  FORMAT (banktrandate, 'MMM dd yyyy') as banktrandate,  OutAmount, dollar  from Vptran  where BankTranRemarks=@isType and Appmstid=@appmstid     
       
   order by     banktrandate  desc               
                            
                  
end       
      
--select * from appmst  Income 
GO
/****** Object:  StoredProcedure [dbo].[PRC_invoceCulculate]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  --select * from InvoiceMst    
  -- select * from  sharemst    
  --   declare @InvAmt float    
  --set  @InvAmt =@AmountType/@JCount    
    
                                                      
  --  execute PRC_invoceCulculate  2 ,720  ,  10    
     
CREATE procedure  [dbo].[PRC_invoceCulculate]( @appmstid bigint, @Amt float,   @JCount int)                                                                                  
as                                       
 Begin                                
            
    declare @Description varchar(50), @HSNCode varchar(50), @cost float, @CGST numeric(18,2), @SGST numeric(18,2), @IGST numeric(18,2) , @State  varchar(100)    
       
    
   if @Amt =720    
   begin    
   set @HSNCode='7117'    
   set @Description='Pendent'    
   set @cost= 699    
   set @IGST=21    
   set @CGST=  10.5    
   end    
    
   if @Amt =799    
   begin    
   set @HSNCode='6109'    
   set @cost= 761    
   set @IGST=38    
      set @Description='T Shirt'    
   set @CGST=  19    
   end    
    
    
if @Amt =1251    
   begin    
   set @HSNCode='8301'    
   set @Description='Lock'    
   set @cost= 1060    
   set @IGST=191    
   set @CGST=  95.5    
   end    
    
  
  
  if @Amt =2996    
   begin    
   set @HSNCode='2006'    
   set @Description='Globaim Manpower'    
   set @cost= 2675     
   set @IGST=321     
   set @CGST=  160.50   
   set @JCount=1
   end   
    
   select @State=AppMstState from appmst with (NOLOCK) where appmstid=@appmstid        
   if @State='Delhi'    
   begin    
   set @IGST=00    
   end    
   else    
   begin    
   set @CGST=0    
   end    
     
     
   insert into InvoiceMst(appmstid, Description, HSNCode, cost, CGST, SGST, IGST, IDate, QT)values(@appmstid, @Description, @HSNCode, @cost, @CGST, @CGST, @IGST, getdate(), @JCount)    
   End                                                                  
         
GO
/****** Object:  StoredProcedure [dbo].[PRC_jobCheck]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 create proc [dbo].[PRC_jobCheck]
 as
 begin
 insert into testmst(id,Name)values(1,'tesing')
 end
GO
/****** Object:  StoredProcedure [dbo].[PRC_packages]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
       
	  -- PRC_packages  'GBT0000001'
CREATE proc  [dbo].[PRC_packages](@AppMstRegNo   varchar(50) )        
as        
begin      
declare @Amount float  

select top 1  @Amount=amount from Sharemst where appmstregno= @AppMstRegNo   order by doe desc
 
 set @Amount = Isnull(@Amount , 0)
 
CREATE TABLE #PlanTypeMst (srno INT, Pname VARCHAR(100), Amount float , JoinFor float , Points float ,isactive int)  
insert into #PlanTypeMst(srno  ,   Pname  , Amount   , JoinFor   , Points   ,isactive )  
select srno  ,   Pname  , Amount   , JoinFor   , Points   ,0 from PlanTypeMst   where Amount <@Amount  
insert into #PlanTypeMst(srno  ,   Pname  , Amount   , JoinFor   , Points   ,isactive )  
 select srno  ,   Pname  , Amount   , JoinFor   , Points   ,1 from PlanTypeMst   where Amount >=@Amount  
  


 select * from #PlanTypeMst  
end      
      
      
      
GO
/****** Object:  StoredProcedure [dbo].[PRC_PageMasterAddUpdate]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
           



CREATE PROCEDURE  [dbo].[PRC_PageMasterAddUpdate]                



@PageID bigint,                



@PageName varchar(100),        



@PageLink varchar(Max),  



@IsActive char(1),                 



 

@OutMsg varchar(50) Output       



    



AS         



 



               



if @PageID =0    



 BEGIN       



              


	update PromtionMaster set  IsActive='N'
    INSERT INTO PromtionMaster (PageName,PageLink ,    IsActive,LastDate )       
    Values (@PageName, @PageLink , @IsActive,GETDATE() );      



    Set @OutMsg ='Promotioin Link Add Successfully'                 



      



 END                



ELSE                



   BEGIN      



               



  Update  PromtionMaster set PageName=@PageName, PageLink=@PageLink,IsActive=@IsActive,LastDate=GETDATE()  where PageID=@PageID;       



  Set @OutMsg ='Promotioin Link Successfully'       



   



   END      



    


GO
/****** Object:  StoredProcedure [dbo].[PRC_ServerTime]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[PRC_ServerTime]           
as              
begin              
select   dbo.GetServerDate() as ServerTime               
end  
  
  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[PRC_Transaction_create_BTC]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
               
CREATE  proc[dbo].[PRC_Transaction_create_BTC](

	@SessionRegNo					varchar(50),
	@amount							numeric(18, 9) , 
	@USDAmount						bigint,
	@currency2						varchar(50),     
	@address						varchar(5000),     
	@txn_id							varchar(50),     
	@confirms_needed				varchar(2),     
	@timeout						varchar(50),     

	@qrcode_url						varchar(200),    
	@status_url						varchar(200),
	@flag							varchar(100) output
)                 
AS          
 
 BEGIN
INSERT INTO CoinpaymentsMst(UserID,RequestAmount,Currency,amount,address,txn_id,confirms_needed,timeout,status_url,	qrcode_url, CreatedOn)
values (@SessionRegNo,@USDAmount,@currency2, @amount, @address, @txn_id,@confirms_needed, @timeout , @status_url, @qrcode_url,GETDATE()) 
set @flag='Transaction create successfully'       
end                  
      
GO
/****** Object:  StoredProcedure [dbo].[PRC_Transaction_Detial]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
               --[PRC_Transaction_Detial]  'CPED2F1IK4V7YLFFOYCTFCDZWR'  
CREATE  proc[dbo].[PRC_Transaction_Detial](@txID varchar(100), @userid varchar(50))                     
AS              
     
 BEGIN    
  SELECT DATEDIFF(SECOND, GETDATE(), DATEADD(ss, timeout, AddDate)) AS DateDiff     
  , * into #Temp_CoinpaymentsMst  from Tbl_CoinpaymentRequest   where txn_id= @txID   and PaymenytBy= @userid  
  select  CONVERT(varchar, DATEADD(second, DateDiff, 0), 108) AS 'LeftTime', 0 as time_created,  
  * from #Temp_CoinpaymentsMst      
  drop table #Temp_CoinpaymentsMst    
         
end                      
          
    
GO
/****** Object:  StoredProcedure [dbo].[PRC_UpdateGiftOrderbyadmin]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	--exec [PRC_GiftOrderbyUser] 'GBT0000001','100','100', 1, '2222','saini.sunder158@gmail.com',''                 
         -- select * from vptran where appmstid=1
		  



		 --select * from GiftOrderMst 
create  proc[dbo].[PRC_UpdateGiftOrderbyadmin](@OrderID bigint, @Code varchar(100), @ExpireDate datetime,  @flag varchar(100) output, @status char(1))                       
as                      
begin     
	update  GiftOrderMst set  GiftCode =@Code, ExpiryDate=@ExpireDate where orderID=@OrderID
	set @flag='1'                    
     
                    
END  
GO
/****** Object:  StoredProcedure [dbo].[PRC_UpdatePaymentRecepitFile]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  
CREATE Proc [dbo].[PRC_UpdatePaymentRecepitFile]    
(    
@ID bigint,   
@FileName nvarchar(500),    
@OutMsg nvarchar(max) output ,  
@OutID nvarchar(max) output   
     
)    
as    
BEGIN  
    
  update BTCRequestMst set FileName=@FileName  where srno=@ID   
  set @OutMsg='Update Successfully.'    
  set @OutID=1  
   
END  
  
  
GO
/****** Object:  StoredProcedure [dbo].[PRC_UpdateProfilePic]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
    
CREATE Proc [dbo].[PRC_UpdateProfilePic]      
(      
@Regno varchar(20),
@FileName nvarchar(500),      
@OutMsg nvarchar(max) output ,    
@OutID nvarchar(max) output     
       
)      
as      
BEGIN    
   Declare @CT bigint

   set @CT =(select count(*) from ProfileImageMst where AppMstregno=@Regno)
   IF @CT=0
   BEGIN
   INSERT INTO  ProfileImageMst(ImageName ,AppMstregno)VALUES(@FileName,@Regno)
  set @OutMsg='Update Successfully.'      
  set @OutID=1    
   END
   ELSE
   BEGIN
   update ProfileImageMst  set ImageName=@FileName  where AppMstregno=@Regno     
  set @OutMsg='Update Successfully.'      
  set @OutID=1    
   END


  
     
END    
    
GO
/****** Object:  StoredProcedure [dbo].[PRC_UpgradeAccountlist]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
          
--[sponsarlist] 'AGF497549'          
CREATE procedure  [dbo].[PRC_UpgradeAccountlist](@regno varchar(50)  )                                                            
as                                                            
begin              
declare @appmstid bigint                                      
   set @appmstid=(select appmstid FROM appmst WHERE appmstregno=@regno )        
  select FORMAT (banktrandate, 'dd-MMM-yyyy') as banktrandate , BanktranAmount,   'Upgrade Account - '+ dbo.GetAppmstRegNo(PaidAppmstID) + ' ('+dbo.GetUserName(PaidAppmstID)+')'  as PaidDetail  from VPTran where Appmstid=@appmstid  and BankTranRemarks=
'TOP-UP'            
                                                   
 end 
GO
/****** Object:  StoredProcedure [dbo].[PRC_UserDocREquestCancel]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PRC_UserDocREquestCancel]
 (     
		@SrNo varchar(50) ,
		 @Type varchar(50)   
)
  
  as 
  begin
  IF @Type=1
  BEGIN
  delete from  scanDocs where srno=  @SrNo
  END
  ELSE
  BEGIN
  UPDATE scanDocs SET STATUS=1 WHERE SRNO=@SrNo
  END
  end
GO
/****** Object:  StoredProcedure [dbo].[PRC_UserLoginWeb]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--SELECT EMAIL, LOGINID, PWD,* FROM tbl_User        
-- PRC_UserLoginWeb 'S10A003', 'bbisdw123'       
CREATE PROCEDURE  [dbo].[PRC_UserLoginWeb]           
@userid varchar(50),@pwd varchar(50)      
AS          
BEGIN          
SET NOCOUNT ON        
DECLARE @TokenNo VARCHAR(50);         
        
		SELECT sponsorid, AppMstID, AppMstFname,AppMstRegNo,appmstactivate , RetailerTypeid, AppMstMobile, email, AcountNo  
, dbo.GetProfileImages(@userid) as imagename   into   #TempUserMaster           
 from AppMst(nolock) where AppMstRegNo=@userid and AppMstPassword=@pwd     
and len(@pwd)>0 and isnull(appmstactivate,1)=1            
        
        
 IF EXISTS( SELECT 1 FROM #TempUserMaster)          
 BEGIN          
  SELECT @TokenNo = NewID()            
           
         
    INSERT           
  INTO tbl_AccessToken(Id,AuthToken, UserId,IsActive, IssuedOn, ExpiresOn)            
  SELECT  NewID()  , @TokenNo ,   AppMstID, 1, GETDATE(), DATEADD(hh, 1, GETDATE())           
  FROM #TempUserMaster;           
        
        
   SELECT *, lower(@TokenNo) as AccessToken FROM #TempUserMaster;--Data Set 1          
END        
END  
  
 --select * from AppMst

 --select * from tbl_AccessToken
GO
/****** Object:  StoredProcedure [dbo].[PRC_UserREquestConfirm]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PRC_UserREquestConfirm]        
(             
@SrNo varchar(50) ,        
@Type varchar(50)  ,      
@Resson varchar(max)            
)        
          
as         
begin        
    
declare @SessionRegNo varchar(50),@RegNo nvarchar(50) , @AmountType float    , @Tpe int   ,@ModePayment varchar(20)   
        
select @SessionRegNo  =Pappmstregno, @RegNo=Jappmstregno, @AmountType = Pamount , @Tpe=RequestTyp, @ModePayment =Type from BTCRequestMst where srno=@SrNo and status=0    
IF @Type =1    
		begin    
				update BTCRequestMst set status=@Type , approveDate=dbo.GetServerDate()  , Remarks=@Resson where srno=@SrNo   
				IF @Tpe=0  
					BEGIN       
						execute RechargeUserActivateAdmin @SessionRegNo  ,@RegNo , @AmountType,'','' , @ModePayment 
					END  
				ELSE  
					BEGIN  
						execute RechargeUserAmdin @SessionRegNo  ,@RegNo , @AmountType,'',''   ,@ModePayment 
					END   
end    
else    
begin    
update BTCRequestMst set status=@Type , approveDate=dbo.GetServerDate()  , Remarks=@Resson where srno=@SrNo    
end    
end 
GO
/****** Object:  StoredProcedure [dbo].[PRC_UserREquestDetaila]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[PRC_UserREquestDetaila]      
 (           
  @SrNo varchar(50)      
         
)      
        
  as       
  begin      
  select srno, FileName, Pappmstregno, Jappmstregno, Pamount, RDate , CAmt, Type ,CASE      RequestTyp   
    WHEN 0 THEN 'Request For Active '         
    ELSE 'Request For Active'         
END as RequestTyp 
, Status ,  AddressBTC,  approveDate   from  BTCRequestMst  where srno=@SrNo      
      
  end    
    
GO
/****** Object:  StoredProcedure [dbo].[PRC_ValidateToken]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
        --[PRC_ValidateToken] '5f25f748-c98b-444f-ae46-1bdd639e8931' ,''
CREATE PROCEDURE  [dbo].[PRC_ValidateToken]           
@tokenId uniqueidentifier ,
@flag varchar(10) output 
AS          
BEGIN          
SET NOCOUNT ON        
DECLARE @TokenNo VARCHAR(50);         
     if(exists(Select * from tbl_AccessToken WHERE AuthToken =@tokenId and ExpiresOn>GETDATE() and IsActive=1 )) 
	 begin
	 update tbl_AccessToken set ExpiresOn=DATEADD(HH, 1,ExpiresOn) where  AuthToken =@tokenId 
	 set @flag ='1';
	 print 'vali'
	 end     
	 else
	 begin
	  set @flag ='0';
	   print 'novali'
	 end        

   
END  
 
 
GO
/****** Object:  StoredProcedure [dbo].[PRC_WithdrawFundUserLIst]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
 CREATE proc [dbo].[PRC_WithdrawFundUserLIst] (@From datetime,@TO datetime, @search varchar(50))    
 as    
 begin    
     
 set @search = '%' + @search + '%'     
 SELECT        dbo.AppMst.AppMstRegNo, dbo.AppMst.AppMstFName,  dbo.AppMst.appmstMobile, dbo.IPTran.BankTranDate, dbo.IPTran.TranBY,
  dbo.IPTran.BankTranAmount FROM   dbo.IPTran with (NOLOCK) INNER JOIN                         
 dbo.AppMst ON dbo.IPTran.AppMstId = dbo.AppMst.AppMstID     where IPTran.bankTranRemarks='by Admin'      
  and  CAST(FLOOR(CAST(dbo.IPTran.BankTranDate as float)) as datetime) between @From and @TO       
  And dbo.GetAppmstRegNo(dbo.IPTran.appmstid )  Like @search      
    
  end 

GO
/****** Object:  StoredProcedure [dbo].[PRC_WithDrawlist]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
--[sponsarlist] 'AGF497549'      
CREATE procedure  [dbo].[PRC_WithDrawlist](@regno varchar(50)  )                                                        
as                                                        
begin          
declare @appmstid bigint                                  
     set @appmstid=(select appmstid FROM appmst WHERE appmstregno=@regno )    
  select FORMAT (Banktrandate, 'dd-MMM-yyyy') as Banktrandate, BanktranAmount,      
      
  CASE  BankTranRemarks    
    WHEN 'Under progress' THEN 'Pending'     
    ELSE 'Approved'     
END as BankTranRemarks     
    
     from VPTran where Appmstid=@appmstid  and banktranmode=44
 end     
GO
/****** Object:  StoredProcedure [dbo].[PrintTopupInvoice]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[PrintTopupInvoice]   
(@srno int)      
as      
select r.ReceiptNo,AgreementNo,convert(varchar,ReceiptDate,103) as     
TopUpDate,a.appmsttitle+space(1)+a.appmstfname as fname,a.appmstaddress1+space(1)+(a.appmstcity)     
+space(1)+(a.appmststate)+space(1)+'-'+(a.appmstpincode)as     
address,a.appmstmobile,a.appmstregno,  
convert(varchar,dateadd(month,6,r.approvalDate),103) as todate,    
stockindia.namenum(r.approvedamt)+space(1)+'Only'+'**' as wamt, tranid, 
r.tranmode as paymentmode,convert(varchar,approvalDate,103)     
as approvalDate,r.Bankname as drawnOn,convert(varchar(800), r.approvedamt )+'.00'as amt from requestmst r inner join appmst     
a on r.appmstregno=a.appmstregno and r.srno=@srno    
--select * from requestmst where approvedamt>100000  
--select stockindia.namenum(100000)





GO
/****** Object:  StoredProcedure [dbo].[Proc_AddEditCoinpaymentRequest]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
     
       
      
      
CREATE Proc [dbo].[Proc_AddEditCoinpaymentRequest]      
(      
@action Nvarchar(100),      
@ID int,      
@MemberID Nvarchar(100),      
@txn_id Nvarchar(1000),      
@amount Nvarchar(100),   
    
@Toaddress Nvarchar(500),      
@confirms_needed int,      
@status_url Nvarchar(max),      
@qrcode_url   Nvarchar(max),      
@currency1 Nvarchar(100),      
@currency2 Nvarchar(100),      
@status Nvarchar(150),      
@status_text Nvarchar(1000),      
@FullRequest Nvarchar(max),      
@AmountFor Nvarchar(500),  
@RequestAmount numeric(18,2),    
@timeout int  ,
@PaymenytBy Nvarchar(100)       
)      
as      
begin      
 if(@action='Insert')      
 begin      
   insert into Tbl_CoinpaymentRequest(MemberID,txn_id,amount,Toaddress,confirms_needed,status_url,qrcode_url,currency1,currency2,AddDate,UpdateDate,status,status_text,FullRequest,AmountFor, RequestAmount ,  timeout, PaymenytBy)      
   values(@MemberID,@txn_id,@amount,@Toaddress,@confirms_needed,@status_url,@qrcode_url,@currency1,@currency2,GETUTCDATE(),GETUTCDATE (),@status,@status_text,@FullRequest,@AmountFor,@RequestAmount , @timeout , @PaymenytBy    )      
   Select scope_identity() as ID      
 end      
 else if(@action='Update')      
 begin      
  update Tbl_CoinpaymentRequest set confirms_needed=@confirms_needed,UpdateDate=GETUTCDATE (),status=@status,status_text=@status_text where txn_id=@txn_id      
  Select ID from Tbl_CoinpaymentRequest where txn_id=@txn_id       
 end      
      
end 

 
GO
/****** Object:  StoredProcedure [dbo].[Proc_AddEditCoinpaymentResponce]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  
CREATE Proc [dbo].[Proc_AddEditCoinpaymentResponce]  
(  
@action Nvarchar(100),  
@ID int,  
@txn_id Nvarchar(1000),  
@ipn_id Nvarchar(100),  
@amount1 decimal(12,8),  
@amount2 decimal(12,8),  
@received_amount decimal(12,8),  
@status Nvarchar(150),  
@status_text Nvarchar(1000),  
@FullResponce Nvarchar(Max)  
)  
as  
begin  
 if(@action='Insert')  
 begin  
   insert into tbl_CoinpaymentResponce(txn_id,ipn_id,amount1,amount2,received_amount,status,status_text,FullResponce,Add_Date,ISActive,IsDelete)  
   values(@txn_id,@ipn_id,@amount1,@amount2,@received_amount,@status,@status_text,@FullResponce,GETUTCDATE(),1,0)  
   Select scope_identity() as ID  
 end  
   
  
end  
GO
/****** Object:  StoredProcedure [dbo].[proc_CoinPaymentConfrim]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[proc_CoinPaymentConfrim]  
@Tnx_ID Nvarchar(max)  
as  
begin  
    Declare @memberid Nvarchar(100),@paymentnid int,@transdate Datetime=getdate(),@doller_amount Numeric(18,2),@PaymentType Nvarchar(100),@status Nvarchar(10)  
 Select top 1  @memberid=b.MemberID,@paymentnid=a.ID,@doller_amount=a.Amount1,@PaymentType=AmountFor,@status=b.status from tbl_CoinpaymentRequest b,tbl_CoinpaymentResponce a where a.txn_id=b.txn_id and b.txn_id=@Tnx_ID and a.status='100'  
 Select @memberid,@paymentnid,@doller_amount,@PaymentType,@status  
 if(@status='100')  
 begin  
  if(@PaymentType='Account Activation')  
  begin 
  
  print 'test' 
    --update tblmember set status='active',Payoutstatus='Green' where memberID=@memberid  
  end  
  else if((@PaymentType='Investment'))  
  begin  
    print 'test' 
   --exec [sp_inserttopuprequest] @memberid,'0',@paymentnid,'',@transdate,'bitcoin',@doller_amount,@memberid  
  end  
 end  
end  
  
GO
/****** Object:  StoredProcedure [dbo].[PromtionROI]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[PromtionROI] (@AppMstRegNo varchar(50), @ROINextDate datetime, @flag varchar(50) output, @PPoint varchar(50) output)                                                                               
as                                         
Begin                       
Declare @ROICount int,@jfor int,@limitAmt float,@CPAmount float,@VPAmount float,@BtranId int,@Bbalance float,@FastT int,@Point int,@Types varchar(25),@Days int,@Pspontotal int                  
Declare @RoiDate datetime,@appmstid int ,@DOE datetime ,@RAmt float ,@netamt float , @TopupTime int            
select @appmstid = AppMstid from AppMst where AppMstRegNo=@AppMstRegNo      
select top 1  @ROICount=isnull(ROICount,0),@jfor=pintype,@DOE=DOE,@netamt=netamt, @TopupTime=Topuptime from Sharemst where appmstid=@appmstid and amount>0 and ROICount=0    order by Topuptime      DESC  
Begin                
		select @limitAmt=roi from PlanTypeMst where PlanTypeId =@jfor           
		Set @Point=0                   
		set @RAmt=0                     
		select @PSponTotal=newsponsortotal from appmst where appmstid=@appmstid                             
		select @RAmt=isnull(sum(BankTranAmount),0) from  VPTran where appmstid=@appmstid and  banktranmode=22 and BankTranRemarks in ('CF-Bonus','RF-Bonus')   and    UpDateTime=@TopupTime
		set @RAmt=isnull(@RAmt,0)                  
		set @netamt=isnull(@netamt,0)    
		if(@RAmt= @limitAmt)                                                 
			begin      
				UPDATE APPMST set appmstpaid=0 where AppMstRegNo=@AppMstRegNo                                               
				set @flag='2'        
				return ;                                             
			end             
		--********************** Set Referral Bonus          
		if @jfor=6 and @RAmt< (@limitAmt+@netamt) --Silver                                       
			Begin                        
				if @pspontotal<3                                 
					Begin 
						set @Point=0                            
						Set @Types='CF-Bonus'                                        
					End                                      
				if @PSpontotal>=3 and @pspontotal<6         ------------()@FastT>=3 and @FastT<6                                      
					Begin                       
						set @Point=1                                        
						Set @Types='RF-Bonus'                                       
					End                                     
				if @PSpontotal>=6 and @PSpontotal<12        ----------------------@FastT>=6 and @FastT<12                    
					begin         
						set @Point=2  
						Set @Types='RF-Bonus'   
					end                      
				if @pspontotal>=12      
					begin              
						set @Point=4 
						Set @Types='RF-Bonus'   
					end      
			End                     
		else     
		if @jfor=1 and @RAmt< (@limitAmt+@netamt) --Silver                                   
			Begin                        
				if @pspontotal<3                            
					Begin                                             
						set @Point=5                      
						Set @Types='CF-Bonus'                                   
					End                                    
				if @PSpontotal>=3 and @pspontotal<6         ------------()@FastT>=3 and @FastT<6                       
					Begin                 
						set @Point=10                                      
						Set @Types='RF-Bonus'                                   
					End                                    
				if @PSpontotal>=6 and @PSpontotal<12        ----------------------@FastT>=6 and @FastT<12                              
					begin         
						set @Point=15     
						Set @Types='RF-Bonus'   
					end     
				if @pspontotal>=12      
					begin  
						set @Point=25          
						Set @Types='RF-Bonus'   
					end      
			End      
		Else if @jfor=2 and @RAmt< (@limitAmt+@netamt) --Gold                                    
			Begin                                    
				if @pspontotal<12                      
					Begin         
						set @Point=25                                   
						Set @Types='CF-Bonus'                                     
					End                               
				if @PSponTotal>=12 and @PSpontotal<24  --------------------------@FastT>=12 and @FastT<24             
					Begin                                    
						set @Point=100       
						Set @Types='RF-Bonus'                                    
					End                                     
				if @PSponTotal>=24    -------------------------------------------------@FastT>=24               
					begin         
						set @Point=150               
						Set @Types='RF-Bonus'        
					end                      
			End                                     
		Else if @jfor=3 and @RAmt< (@limitAmt+@netamt) --Diamond                                   
			Begin                                    
				set @Point=250                                     
				Set @Types='RF-Bonus'                                   
			End                           
		if(@Point>0)   ------------ Send  to VP Wallet ----------------                         
		Begin                                   
		insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate, UpDateTime)                                             
		values(@appmstid,22,@appmstid,getutcdate(),isnull(@Point,0),isnull(@Point,0),@Types,0,0, DATEADD(MM,1, getutcdate()), @TopupTime)         
		update appmst set ROIDate=@ROINextDate where  AppMstRegNo=@AppMstRegNo         
		set @flag=  ' '   
		set @PPoint= @Point                                                  
		End                
		else     
		begin     
		set @flag=  '1'        
		end                                                                
		End                    
end

GO
/****** Object:  StoredProcedure [dbo].[quote]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[quote] 
as begin
SELECT * from cmddesk
end





GO
/****** Object:  StoredProcedure [dbo].[RandomPassword]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Proc [dbo].[RandomPassword]         
@Regno varchar(50)   out                  
as                        
begin          
 DECLARE @Random int,  @Upper float,@Lower float,@pool varchar(100),@rstring varchar(8),@counter int,@pos int    
  set @pool = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'      
  set @counter = 1        
 --************************Create Random Character     
  while @counter = 1      
  begin      
    set @pos = ceiling(rand()*(len(@pool)))      
    if(@pos <24)    
   Begin    
     set @counter =0      
   End    
  End      
  SET @Lower = 100000 ---- The lowest random number      
  SET @Upper = 999999 ---- The highest random number    
  set @counter = 1        
  while @counter=1         
  Begin            
    SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)      
    set @Regno=  cast(@Random as varchar(50))     
      
    set @counter = 0    
     
  End            
END    
  
GO
/****** Object:  StoredProcedure [dbo].[RandomRegNo]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[RandomRegNo]         
@Regno varchar(50)   out                  
as                        
begin          
 DECLARE @Random int,  @Upper float,@Lower float,@pool varchar(100),@rstring varchar(8),@counter int,@pos int    
  set @pool = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'      
  set @counter = 1        
 --************************Create Random Character     
  while @counter = 1      
  begin      
    set @pos = ceiling(rand()*(len(@pool)))      
    if(@pos <24)    
   Begin    
     set @counter =0      
   End    
  End      
  SET @Lower = 100000 ---- The lowest random number      
  SET @Upper = 999999 ---- The highest random number    
  set @counter = 1        
  while @counter=1         
  Begin            
    SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)      
    set @Regno=  'GL'+ cast(@Random as varchar(50))     
   if(not exists(select AppmstRegNo  from Appmst with (NOLOCK) where AppmstRegNo=@Regno))     
   Begin    
    set @counter = 0    
   End    
  End            
END    
  
GO
/****** Object:  StoredProcedure [dbo].[RandomUserID]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
CREATE Proc [dbo].[RandomUserID]             
@Regno varchar(50)   out                      
as                            
begin              
 DECLARE @Random int,  @Upper float,@Lower float,@pool varchar(100),@rstring varchar(8),@counter int,@pos int        
  set @pool = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'          
  set @counter = 1            
 --************************Create Random Character         
  while @counter = 1          
  begin          
    set @pos = ceiling(rand()*(len(@pool)))          
    if(@pos <24)        
   Begin        
     set @counter =0          
   End        
  End          
  SET @Lower = 100000 ---- The lowest random number          
  SET @Upper = 999999 ---- The highest random number        
  set @counter = 1            
  while @counter=1             
  Begin                
    SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)          
    set @Regno= 'XSC'+cast(@Random as varchar(50))         
   if(not exists(select AppmstRegNo  from Appmst where AppmstRegNo=@Regno))         
   Begin        
    set @counter = 0        
   End        
  End                
END        
      
      
      
GO
/****** Object:  StoredProcedure [dbo].[RechargeCheckUpgradeValidation]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
             
--[RechargeCheckUpgradeValidation] 'GBT109766', 'GBT455701', '1234' ,200, ''
--select srno, Amount from Sharemst where appmstregno='GBT455701' AND Amount>=200
  --select  Appmstpaid,appmstregno, JAmount,ePassword ,* from appmst where AppMstRegNo='GBT879936'
CREATE  proc[dbo].[RechargeCheckUpgradeValidation] (@SessionRegNo varchar(50),@RegNo nvarchar(50) ,        
 @SKey varchar(4)  ,     
 @AmountType float, @flag varchar(100) output)                 
as                
                  
begin                
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                   
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                 
  set @getdate= dbo.GetServerDate()                
	Declare @CheckAmount bigint               
      
	if not exists(select appmstregno from appmst where appmstregno=@RegNo   )                                
	  begin                                
		set @flag='User Not Exit !'   
		print @flag    
		return                                
	  end         
      
	DECLARE @CheckType int      
	SET @CheckType =(SELECT Appmstpaid FROM AppMst  WHERE AppMstRegNo=@RegNo)      
	IF @CheckType=0      
		BEGIN      
			set @flag='Account Not Active'    
				print @flag   
			return ;                 
		END   
	 if(exists(select srno from Sharemst where appmstregno=@RegNo AND Amount>=@AmountType))                  
	 begin                  
	 set @flag='The user is already TOP-UP.'            
     	print @flag           
	 return ;                 
	 end   
         
		if not exists(select appmstregno from appmst where appmstregno=@SessionRegNo and ePassword=@SKey )                                
		begin                                
			set @flag='Security Key not Match !'   
			print @flag    
			return                                
		end         
      
      
			set  @CheckAmount= dbo.AcountCheck(@AmountType)            
			if @CheckAmount=0            
				begin            
					set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'            
					print @flag           
					return ;             
			end            
                
  if(@AmountType is null or @AmountType<=0)                  
  begin                  
	  set @flag='Amount must be greater than zero.' print @flag                 
	  return ;                 
  end                  
                  
                 
  else                 
                   
  begin                
  set nocount on                 
  set xact_abort on                  
  begin transaction                  
                  
  if(exists(select appmstregno from appmst where appmstregno=@regno))                  
 Begin                
  Begin try                 
                   
             
  set @flag='1'   print @flag                    
                 
  end try                
  begin catch                  
set @flag=ERROR_MESSAGE()                
                  
  end catch                
  end                  
  else                  
 set @flag='Invalid User ID !'                
  if(@flag='1')                  
                  
commit transaction                  
                  
  else                  
                  
rollback transaction                
end                
end                  
      
GO
/****** Object:  StoredProcedure [dbo].[RechargeCheckValidation]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
             
--[RechargeCheckValidation] 'GBT879936', 'GBT816601', '1234' ,100, ''

  --select * from appmst where AppMstRegNo='GBT879936'
CREATE  proc[dbo].[RechargeCheckValidation] (@SessionRegNo varchar(50),@RegNo nvarchar(50) ,        
 @SKey varchar(4)  ,     
 @AmountType float, @flag varchar(100) output)                 
as                
                  
begin                
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                   
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                 
  set @getdate= dbo.GetServerDate()                
Declare @CheckAmount bigint               
      
    if not exists(select appmstregno from appmst where appmstregno=@RegNo   )                                
  begin                                
   set @flag='User Not Exit !'   
   print @flag    
 return                                
  end         
      
         
    if not exists(select appmstregno from appmst where appmstregno=@SessionRegNo and ePassword=@SKey )                                
  begin                                
   set @flag='Security Key not Match !'   
   print @flag    
 return                                
  end         
      
      
set  @CheckAmount= dbo.AcountCheck(@AmountType)            
if @CheckAmount=0            
begin            
 set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'            
         print @flag           
 return ;             
end            
         
   
 if(exists(select srno from Sharemst where appmstregno=@RegNo ))                  
 begin                  
 set @flag='The user is already Active.'      print @flag           
 return ;                 
 end                  
                
  if(@AmountType is null or @AmountType<=0)                  
  begin                  
  set @flag='Amount must be greater than zero.' print @flag                 
            
  return ;                 
  end                  
                  
                 
  else                 
                   
  begin                
  set nocount on                 
  set xact_abort on                  
  begin transaction                  
                  
  if(exists(select appmstregno from appmst where appmstregno=@regno))                  
 Begin                
  Begin try                 
                   
             
  set @flag='1'   print @flag                    
                 
  end try                
  begin catch                  
set @flag=ERROR_MESSAGE()                
                  
  end catch                
  end                  
  else                  
 set @flag='Invalid User ID !'                
  if(@flag='1')                  
                  
commit transaction                  
                  
  else                  
                  
rollback transaction                
end                
end                  
      
GO
/****** Object:  StoredProcedure [dbo].[RechargePowerLag]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[RechargeUser]'youthe', 'testtest4'     
 --select * from sharemst    
  --select * from appmst order by appmstid desc    
  --select * from iptran    
CREATE  proc[dbo].[RechargePowerLag] (  
   
@RegNo nvarchar(50) ,  @AmountType bigint,    
@bal varchar(100) output,    
@flag varchar(100) output)     
as    
      
begin  
  
  
 declare @SCk  int     
       
      set @SCk =@AmountType % 600   
 if  @SCk<>0   
     begin      
 set @flag='Please Enter multiple of 500'    
 return ;     
 end      
    
       
  
declare @SessionRegNo varchar(50)   
set @SessionRegNo=@RegNo  
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float       
  declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float     
  set @Bbalance=0    
       
     
    
  set @rechargedAmt=0    
  set @estimateReAmt=0     
  set @getdate= getdate()    
      
  set @Amount=@AmountType    
  set @jf=@Amount    
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo    
      
  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo     
      
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc    
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)      
     
     
 if(exists(select srno from Sharemst where Appmstid=@appmstid))      
      
  begin      
 set @flag='The user is already TOP-UP.'    
 return ;     
 end      
    
     
    
  if(@Amount is null or @Amount<=0)      
  begin      
  set @flag='Amount must be greater than zero.'      
  return ;     
  end      
      
     
  else     
       
  begin    
  set nocount on     
  set xact_abort on      
  begin transaction      
      
  if(exists(select appmstregno from appmst where appmstregno=@regno))      
 Begin    
  Begin try     
       
     select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                     
    
  if @BtranId=0    
  begin    
  set @Bbalance=0    
  end    
  else    
  begin    
      select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId       
   end    
             
    if(@Bbalance>=@AmountType)                           
    
   begin                                                                                           
        
   set @Abalance=@Bbalance - @AmountType                                                       
    
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                                                                                        
         
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                    
   values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'TOP-UP',1,@sharemstid+1)                                                   
    
         set @bal= @Abalance               
    
   End                                          
    
     Else                                     
    
     Begin          
    
       set @flag='Insuficient Balance !' --Insufficient Balance            
    
        Rollback Transaction            
    
        Return          
    
     End          
    
         
   set @TranNo=ident_current('BankTran')     
   select @Srno=ident_current('requestmst')      
      
       
       
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)    
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0)      
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno      
      
   update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@AmountType, ROIDate=getdate() where appmstregno=@regno      
    
     
---*************      
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf/600,TotalnewLeft=TotalNewLeft+@jf/600      
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)      
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf/600,TotalNewRight=TotalNewRight+@jf/600    
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)    
        
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******    
  if @appmstpaid != 1      
  begin     
   select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid      
     
   begin      
   update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid      
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno     
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0      
   end      
       
   execute DiamondProc @sponsorid    
   execute BinaryIncome  @regno ,@AmountType     
        
         
   set @flag='1'      
  end    
  end try    
  begin catch      
set @flag=ERROR_MESSAGE()    
      
  end catch    
  end      
  else      
set @flag='Invalid User ID !'    
  if(@flag='1')      
      
commit transaction      
      
  else      
      
rollback transaction    
end    
end      
    
    
    
GO
/****** Object:  StoredProcedure [dbo].[RechargePowerLagNew]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[RechargeUser]'youthe', 'testtest4'               
 --select * from InvoiceMst              
  --select * from appmst order by appmstid desc              
  --select * from DiamondMst            
  --declare @flag varchar(500)          
  --[RechargePowerLagNew] 'global' ,'GA00000007' ,7200 ,'',''          
    --[RechargeUser]'youthe', 'testtest4'               
 --select * from appmst              
  --select * from appmst order by appmstid desc              
  --select * from iptran              
CREATE  proc[dbo].[RechargePowerLagNew] (            
           
   @RegNo nvarchar(50) ,          
     @SessionRegNo varchar(50)  ,          
    @AmountType bigint,           
   @epassword varchar(50),          
             
@bal varchar(100) output,              
@flag varchar(100) output)               
as              
                
begin            
            
            
  Declare @Doc bigint          
          
 set @Doc=5          
          
 if @Doc=5          
 begin          
  declare @JCount int          
          
  if  @AmountType=7200          
  begin          
  set @JCount=10          
  end          
   if  @AmountType=3600          
  begin          
  set @JCount=5          
  end          
          
   if  @AmountType=7990          
  begin          
  set @JCount=10          
  end          
          
          
   if  @AmountType=3995          
  begin          
  set @JCount=5          
  end          
          
   if  @AmountType=12510          
  begin          
  set @JCount=10          
  end          
          
   if  @AmountType=6255          
  begin          
  set @JCount=5          
  end  
  
  
    if  @AmountType=2996          
  begin          
  set @JCount=2         
  end          
          
          
          
           
                 
            
             
            
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                 
declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@kAbalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float               
set @Bbalance=0              
                 
               
              
  set @rechargedAmt=0              
  set @estimateReAmt=0               
  set @getdate= getdate()              
                
  set @Amount=@AmountType              
  set @jf=@JCount   
  
  if @AmountType = 2996
  begin
  set @jf=2 
  end         
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo              
                
  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo               
                
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc              
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                
               
               
 if(exists(select srno from Sharemst where Appmstid=@appmstid))                
                
  begin                
 set @flag='The user is already TOP-UP.'              
 return ;               
 end                
              
        if(not exists(select appmstid from AppMst with (NOLOCK) where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)                      
  begin                     
 set @flag='Invalid Transaction-Password.!'--invalid e-password                    
 return;                      
  end                    

              
  if(@Amount is null or @Amount<=0)                
  begin                
  set @flag='Amount must be greater than zero.'                
  return ;               
  end                
                
               
  else               
                 
  begin              
  set nocount on               
  set xact_abort on                
  begin transaction                
                
  if(exists(select appmstregno from appmst where appmstregno=@regno))                
 Begin              
  Begin try               
        declare @kptranId bigint , @KPbalance float , @KPuseBalance float, @IPuseBalance float , @BOTHBALLANCE FLOAT          
  select @kptranId=isnull(max(BankTranId),0) from KPTran where AppMstId=@Sappmstid           
  if @kptranId=0                        
  begin                        
  set @KPbalance=0                        
  end                        
  else                        
  begin                        
      select @KPbalance=isnull(BanktranBalance,0) from KPTran  with (NOLOCK) where appmstid=@Sappmstid and BankTranId=@kptranId                           
   end          
           
           
 set @KPuseBalance=  @AmountType*60/100          
 set @IPuseBalance=  @AmountType*40/100          
               
  IF  @KPbalance>=@KPuseBalance          
   BEGIN          
   SET @KPuseBalance=@KPuseBalance     END          
   ELSE          
   BEGIN           
   SET @KPuseBalance=  @KPbalance          
   END          
          
          
     select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                               
              
  if @BtranId=0              
  begin              
  set @Bbalance=0              
  end              
  else              
  begin              
      select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId                 
   end              
              
           
   if @Bbalance >=@IPuseBalance        
   begin        
            
                     
   SET @IPuseBalance=  @AmountType-@KPuseBalance          
   SET @BOTHBALLANCE= @KPbalance+@Bbalance              
   if(@BOTHBALLANCE>=@AmountType)                                       
   begin                                                                                                     
                  
   set @Abalance=@Bbalance - @IPuseBalance                                                                 
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                                              
   declare @InvAmt float    
         
		 if @AmountType = 2996
  begin
 set  @InvAmt =2996
  end  

  else
   begin 
   set  @InvAmt =@AmountType/@JCount 
   end

   
            
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                              
   values (@Sappmstid,12,@appmstid,@getdate,@IPuseBalance,@Abalance,'TOP-UP',1,@sharemstid+1)             
   set @kAbalance=@KPbalance - @KPuseBalance                               
   insert into kPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                                        
   values (@Sappmstid,12,@appmstid,@getdate,@KPuseBalance,@kAbalance,'TOP-UP',1,@sharemstid+1)                                                           
   execute PRC_invoceCulculate  @appmstid ,@InvAmt  ,  @JCount          
   set @bal= @Abalance                         
              
   End                                                    
     Else                                               
     Begin                    
       set @flag='Insuficient Balance !' --Insufficient Balance                      
        Rollback Transaction                      
        Return                    
     End                    
end         
else        
begin        
        set @flag='Insuficient Balance ! in Main Account'          
   Rollback Transaction                      
        Return         
   end        
                
   set @TranNo=ident_current('BankTran')               
   select @Srno=ident_current('requestmst')                
                
                 
                 
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint,joinfor)              
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0,@Jf)                
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                
                
   update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@Jf, ROIDate=getdate() where appmstregno=@regno                
              
               
---*************              
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf              
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)              
                  
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******              
  if @appmstpaid != 1                
  begin               
   select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                
               
   begin                
   update appmst set newsponsortotal= newsponsortotal+ 1, DSponsarTotal=DSponsarTotal + @JCount,  DSponsarNew=DSponsarNew + @JCount where appmstregno= @sponsorid                
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno               
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                
   end                
                 
   execute DiamondProc @sponsorid              
   execute BinaryIncome  @regno ,@jf               
                  
                   
   set @flag='1'                
  end              
  end try              
  begin catch                
set @flag=ERROR_MESSAGE()              
                
  end catch              
  end                
  else                
set @flag='Invalid User ID !'              
  if(@flag='1')                
                
commit transaction                
                
  else                
                
rollback transaction              
end              
end                
else           
begin          
set @flag='upload all KYC'           
end           
              
              
end
GO
/****** Object:  StoredProcedure [dbo].[RechargePowerLagNew_yest]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[RechargeUser]'youthe', 'testtest4'               
 --select * from InvoiceMst              
  --select * from appmst order by appmstid desc              
  --select * from DiamondMst            
  --declare @flag varchar(500)          
  --[RechargePowerLagNew] 'global' ,'GA00000007' ,7200 ,'',''          
    --[RechargeUser]'youthe', 'testtest4'               
 --select * from appmst              
  --select * from appmst order by appmstid desc              
  --select * from iptran              
CREATE  proc[dbo].[RechargePowerLagNew_yest] (            
           
   @RegNo nvarchar(50) ,          
     @SessionRegNo varchar(50)  ,          
    @AmountType bigint,           
   @epassword varchar(50),          
             
@bal varchar(100) output,              
@flag varchar(100) output)               
as              
                
begin            
            
            
  Declare @Doc bigint          
          
 set @Doc=5          
          
 if @Doc=5          
 begin          
  declare @JCount int          
          
  if  @AmountType=7200          
  begin          
  set @JCount=10          
  end          
   if  @AmountType=3600          
  begin          
  set @JCount=5          
  end          
          
   if  @AmountType=7990          
  begin          
  set @JCount=10          
  end          
          
          
   if  @AmountType=3995          
  begin          
  set @JCount=5          
  end          
          
   if  @AmountType=12510          
  begin          
  set @JCount=10          
  end          
          
   if  @AmountType=6255          
  begin          
  set @JCount=5          
  end          
          
          
          
           
                 
            
             
            
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                 
declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@kAbalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float               
set @Bbalance=0              
                 
               
              
  set @rechargedAmt=0              
  set @estimateReAmt=0               
  set @getdate= getdate()              
                
  set @Amount=@AmountType              
  set @jf=@JCount             
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo              
                
  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo               
                
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc              
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                
               
               
 if(exists(select srno from Sharemst where Appmstid=@appmstid))                
                
  begin                
 set @flag='The user is already TOP-UP.'              
 return ;               
 end                
              
        if(not exists(select appmstid from AppMst with (NOLOCK) where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)                      
  begin                     
 set @flag='Invalid Transaction-Password.!'--invalid e-password                    
 return;                      
  end                    
                  
              
  if(@Amount is null or @Amount<=0)                
  begin                
  set @flag='Amount must be greater than zero.'                
  return ;               
  end                
                
               
  else               
                 
  begin              
  set nocount on               
  set xact_abort on                
  begin transaction                
                
  if(exists(select appmstregno from appmst where appmstregno=@regno))                
 Begin              
  Begin try               
        declare @kptranId bigint , @KPbalance float , @KPuseBalance float, @IPuseBalance float , @BOTHBALLANCE FLOAT          
  select @kptranId=isnull(max(BankTranId),0) from KPTran where AppMstId=@Sappmstid           
  if @kptranId=0                        
  begin                        
  set @KPbalance=0                        
  end                        
  else                        
  begin                        
      select @KPbalance=isnull(BanktranBalance,0) from KPTran  with (NOLOCK) where appmstid=@Sappmstid and BankTranId=@kptranId                           
   end          
           
           
 set @KPuseBalance=  @AmountType*60/100          
 set @IPuseBalance=  @AmountType*40/100          
               
  IF  @KPbalance>=@KPuseBalance          
   BEGIN          
   SET @KPuseBalance=@KPuseBalance     END          
   ELSE          
   BEGIN           
   SET @KPuseBalance=  @KPbalance          
   END          
          
          
     select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                               
              
  if @BtranId=0              
  begin              
  set @Bbalance=0              
  end              
  else              
  begin              
      select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId                 
   end              
              
           
   if @Bbalance >=@IPuseBalance        
   begin        
            
                     
   SET @IPuseBalance=  @AmountType-@KPuseBalance          
   SET @BOTHBALLANCE= @KPbalance+@Bbalance              
   if(@BOTHBALLANCE>=@AmountType)                                       
   begin                                                                                                     
                  
   set @Abalance=@Bbalance - @IPuseBalance                                                                 
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                                              
   declare @InvAmt float          
   set  @InvAmt =@AmountType/@JCount          
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                              
   values (@Sappmstid,12,@appmstid,@getdate,@IPuseBalance,@Abalance,'TOP-UP',1,@sharemstid+1)             
   set @kAbalance=@KPbalance - @KPuseBalance                               
   insert into kPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                                        
   values (@Sappmstid,12,@appmstid,@getdate,@KPuseBalance,@kAbalance,'TOP-UP',1,@sharemstid+1)                                                           
   execute PRC_invoceCulculate  @appmstid ,@InvAmt  ,  @JCount          
   set @bal= @Abalance                         
              
   End                                                    
     Else                                               
     Begin                    
       set @flag='Insuficient Balance !' --Insufficient Balance                      
        Rollback Transaction                      
        Return                    
     End                    
end         
else        
begin        
        set @flag='Insuficient Balance ! in Main Account'          
   Rollback Transaction                      
        Return         
   end        
                
   set @TranNo=ident_current('BankTran')               
   select @Srno=ident_current('requestmst')                
                
                 
                 
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint,joinfor)              
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0,@Jf)                
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                
                
   update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@Jf, ROIDate=getdate() where appmstregno=@regno                
              
               
---*************              
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf              
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)              
                  
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******              
  if @appmstpaid != 1                
  begin               
   select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                
               
   begin                
   update appmst set newsponsortotal= newsponsortotal+ 1, DSponsarTotal=DSponsarTotal + @JCount,  DSponsarNew=DSponsarNew + @JCount where appmstregno= @sponsorid                
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno               
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                
   end                
                 
   execute DiamondProc @sponsorid              
   execute BinaryIncome  @regno ,@jf               
                  
                   
   set @flag='1'                
  end              
  end try              
  begin catch                
set @flag=ERROR_MESSAGE()              
                
  end catch              
  end                
  else                
set @flag='Invalid User ID !'              
  if(@flag='1')                
                
commit transaction                
                
  else                
                
rollback transaction              
end              
end                
else           
begin          
set @flag='upload all KYC'           
end           
              
              
end
GO
/****** Object:  StoredProcedure [dbo].[RechargeUser]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  --exec [RechargeUser] 'GBT784997','GBT424273','1234',500,'',''                   
--select * from CasueID WHERE appmstid=1            
  --select * from appmst WHERE APPMSTREGNO='GBT128215'    
      
  --[GenerateAdminFund] 'GBT741640', 5000 ,'Admin', 1            
CREATE  proc[dbo].[RechargeUser] (@RegNo nvarchar(50) , @OTP varchar(8)  ,   
@Amountcv float,    
@Amountrate float,  
@AmountType float ,@flag varchar(100) output)                     
as                    
                      
begin                    
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                       
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float ,@SessionRegNo varchar(50)                     
 set @SessionRegNo= @RegNo    
 set @Bbalance=0                    
  set @rechargedAmt=0                    
  set @estimateReAmt=0                     
  set @getdate= dbo.GetServerDate()                    
                      
   set @Amount=@AmountType                    
  set @jf=@Amount     
      
  declare @Messages varchar(100)    
    
  set @Messages=dbo.CheckOTPTop(@RegNo, @OTP, 'Active')      
  if @Messages<>'1'    
  begin    
    set @flag=@Messages    
 return     
  end    
                     
select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                    
select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                     
              
          
              
                
                
 if(exists(select srno from Sharemst where Appmstid=@appmstid AND Amount>@AmountType))                      
 begin                      
 set @flag='The user is already TOP-UP.'             
                   
 return ;                     
 end                      
                   
  if(@Amount is null or @Amount<=0)                      
  begin                      
  set @flag='Amount must be greater than zero.'              
                    
  return ;                     
  end                      
                      
                   
  else                     
                       
  begin                 
          
    
    
if @Amountrate<1  
begin  
set  @Amountcv = @AmountType/@Amountrate  
end  
else    
begin  
set  @Amountcv = @AmountType*@Amountrate  
end            
  set nocount on                     
  set xact_abort on                      
  begin transaction                      
                      
  if(exists(select appmstregno from appmst where appmstregno=@regno))                      
 Begin                    
 Begin try                     
		select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                                     
		select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                                     
			if(@Bbalance>=@Amountcv)                                           
				begin             
						declare   @trID    bigint                         
						set @trID =   convert(numeric(10,0),rand() * 8999999999  ) + 1000000000                                                                                                           
						set @Abalance=@Bbalance - @Amountcv                                                                       
						insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate, outamount,  BankTranAmount,BankTranBalance,BankTranRemarks,tranid, investment)                                    
						values (@Sappmstid,12,@appmstid,@getdate,@Amountrate, @Amountcv,@Abalance,'TOP-UP',@sharemstid+1, @trID)                                                         
				 end                                            
				Else                                                    
					Begin                          
					set @flag='Insuficient Balance !' --Insufficient Balance                   
					print @flag                     
					Rollback Transaction                            
				   Return                          
				End               
                 
		insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint, investment)                    
		values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0, @trID)                  
              
		set @sharemstid=IDENT_CURRENT('sharemst')                     
		select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                      
		update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@AmountType, ROIDate=getdate() where appmstregno=@regno                      
                    
		---*************                      
		Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                     
		Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                      
		Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                    
		Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                    
                
		select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                      
		--update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                      
		update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                     
		update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                      
		execute [DirectIncome] @AppMstId , @AmountType, @Amountrate                    
		execute BinaryIncome  @regno ,@AmountType          
		execute [BosterIncome]   @AppMstId                     
		set @flag='1'                  
       
                 
 end try                    
 begin catch                      
set @flag=ERROR_MESSAGE()                    
                      
  end catch                    
  end                      
  else                      
set @flag='Invalid User ID !'             
                 
 if(@flag='1')                      
                      
commit transaction                      
                      
 else                      
                      
rollback transaction                    
end                    
end        
  
GO
/****** Object:  StoredProcedure [dbo].[RechargeUser_old]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[RechargeUser_old] (@SessionRegNo varchar(50),@RegNo nvarchar(50),@Amt float,@PlanType int,@epassword varchar(50),@flag int output,@bal decimal output)    
as                                                                                                   
begin                                                                                                  
declare @ReDate datetime,@PinMstTotal float,@RechargeAmount float,@PinAmount float,                                                                                                              
@PMstId int,@PStatus int,@Jf float,@Sappmstid  int ,@appmstpaid int           
     
declare @ReDate1 datetime,@PinMstTotal1 float,@RechargeAmount1 float                                                                                                                  
declare @appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                                        
declare @BtranId int,@Bbalance float,@Abalance float,@check int,@sponsorid varchar(50)                                                                                                            
set @Bbalance=0           
set @Jf=@Amt     
set @bal=0     
select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                                                                                                    
select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                                                                                                    
if((@PlanType=1 and @Amt<100000) or(@PlanType=2 and @Amt<10000) or @PlanType not in(1,2))    
begin    
 set @flag=-106 --invalid plan type and amount    
 return;    
end    
if(not exists(select appmstid from AppMst where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)    
begin    
 set @flag=-105 --invalid e-password    
 return;    
end    
else    
begin    
set nocount on                                        
set xact_abort on                                        
begin transaction                                        
set @PinMstTotal=0                                        
set @check=0                                        
set @Amt=isnull(@Amt,0)                                        
if(@Amt between 10000 and 10000000)                                        
begin                                        
 if(exists(select appmstregno from appmst where appmstregno=@regno))                                                                      
 begin                                        
  select @BtranId=isnull(max(BankTranId),0) from banktran where AppMstId=@Sappmstid                                                                                                                                              
  select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@Sappmstid and BankTranId=@BtranId                                                                                                                                              
  if(@Bbalance>=@Amt)                                                                    
  begin                                                 
   set @Abalance=@Bbalance - @Amt                                        
   set @Amount=@Amt                                        
   ---insert1                                        
   insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                                                                               
   BankTranRemarks,bankTranStatus,pinsrno)                                                                                                                                          
   values (@Sappmstid,11,@appmstid,dateadd(minute,330,getutcdate()),@Amt,@Abalance,'Recharge',1,'')                                 
   set @bal= @Abalance                       
   set @TranNo=@@identity                            
   ------                                        
   select @Srno=isnull(max(srno),0) from requestmst                                                                          
   set @rno='M'+convert(varchar,@Srno+1)                                        
                                           
   insert into RequestMst(appmstregno,Amount,ReceiptDate,RequestDate,ApprovalDate,status,comment,ReceiptNo,                                                                          
   approvedAmt,adminID,TranId,agreementNo,tranmode,AcNo,BankName,branch,TranBank,TranAcNo,TranIFS)                                                             
   values(@regno,@Amount,dateadd(minute,330,getutcdate()),dateadd(minute,330,getutcdate()),dateadd(minute,330,getutcdate()),                                        
   1,'',@rno,@Amount,'',@TranNo,'','Money Bank','','',                                              
   '','','','')            
          
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno)values(@appmstid,@Amount,1,dateadd(minute,330,getutcdate()),@PlanType,@regno,@rno)                                                                      
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                                                             
   update appmst set jamount=jamount+@Amount,JoinFor=JoinFor+@jf where appmstregno=@regno                        
   ---*************                      
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                                               
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                                               
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                                               
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                                              
   ----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******                 
   if @appmstpaid != 1                                                                                                       
   begin                
    update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                                                                                             
    update appmst set appmstpaid=1,appPaiddatetime=dateadd(minute,330,getutcdate()) where appmstregno=@regno                                                                                   
    update causeid set iselegible=1,effectdate=dateadd(minute,330,getutcdate())  where userid=@appmstid  and iselegible=0                         
   end        
   execute BinaryIncome  @regno ,@jf                                             
   execute directincome @AppMstId ,@AMT          
   execute FranchiseIncome @AppMstId ,@AMT         
   --   end          
   -----***********                      
   set @flag=1                                        
  end                                        
  else                                        
   set @flag=-104 --Insufficient Balance                                        
 end                                        
 else                                        
  set @flag=-101                                                                      
end                                        
else                                        
 set @flag=-4 ---Amount limit 10000000                                        
if(@flag=1)                                        
 commit transaction                                        
else                                        
 rollback transaction                                        
 end    
end





GO
/****** Object:  StoredProcedure [dbo].[RechargeUser_temp]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[RechargeUser_temp] (@RegNo nvarchar(50),@Amt float,@sno int output,@flag int output,@d datetime)                                          
as                                                                   
begin                                                                  
declare @ReDate datetime,@PinMstTotal float,@RechargeAmount float,@PinAmount float,                                                                              
@PMstId int,@PStatus int,@Joinfor float,@Sappmstid  int ,@appmstpaid int                                                                            
declare @ReDate1 datetime,@PinMstTotal1 float,@RechargeAmount1 float                                                                                  
declare @appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float        
declare @BtranId int,@Bbalance float,@Abalance float,@check int                                                                            
set @Bbalance=0                                          
set @Joinfor=@Amt/10000        
select @appmstid=appmstid from appmst where appmstregno=@RegNo                                                                    
                                                                  
set nocount on        
set xact_abort on        
begin transaction        
----        
set @PinMstTotal=0        
set @check=0        
set @Amt=isnull(@Amt,0)        
if(@Amt between 10000 and 10000000)        
begin        
 if(exists(select appmstregno from appmst where appmstregno=@regno))                                      
 begin        
     set @Amount=@amt 
           
   insert into RequestMst(appmstregno,Amount,ReceiptDate,RequestDate,ApprovalDate,status,comment,ReceiptNo,                                          
   approvedAmt,adminID,TranId,agreementNo,tranmode,AcNo,BankName,branch,TranBank,TranAcNo,TranIFS)                                          
   values(@regno,@Amount,dateadd(minute,330,getutcdate()),dateadd(minute,330,getutcdate()),dateadd(minute,330,getutcdate()),        
   1,'',@rno,@Amount,'',@TranNo,'','Money Bank','','',              
   '','','','')                                           
   set @sno=@@identity                              
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                                              
   update appmst set jamount=jamount+@Amount where appmstregno=@regno                                                                       
   --                                                                
   if @appmstpaid != 1                                                                            
   begin                                                                  
    update appmst set appmstpaid=1,appPaiddatetime=@d where appmstregno=@regno                                                   
    --update causeid set iselegible=1,effectdate=dateadd(minute,330,getutcdate())  where userid=@appmstid                                                                              
   end                                                                 
   --                                                                
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno)                                                                        
   values(@appmstid,@Amount,1,@d,2,@regno,@rno)    
               set @sno=@@identity                                                            
   set @flag=1        
      
 end        
 else        
  set @flag=-101                                      
end        
else        
 set @flag=-4 ---Amount limit 10000000        
if(@flag=1)        
 commit transaction        
else        
 rollback transaction        
end





GO
/****** Object:  StoredProcedure [dbo].[RechargeUserActivate]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
               
CREATE  proc[dbo].[RechargeUserActivate] (@SessionRegNo varchar(50),@RegNo nvarchar(50)         
 ,     @SKey varchar(4)  ,         
 @AmountType float,              
@bal varchar(100) output,              
@flag varchar(100) output)               
as              
                
begin              
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                 
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float               
set @Bbalance=0              
set @rechargedAmt=0              
set @estimateReAmt=0               
set @getdate= dbo.GetServerDate()              
                
set @Amount=@AmountType              
set @jf=@Amount              
               
select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo              
select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo               
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc              
select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                
         
  if not exists(select appmstregno from appmst where appmstregno=@SessionRegNo and ePassword=@SKey )                          
  begin                          
   set @flag='Security Key not Match !'                          
 return                          
  end   
  
   
Declare @CheckAmount bigint             
set  @CheckAmount= dbo.AcountCheck(@AmountType)          
if @CheckAmount=0          
 begin          
  set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'              
  return ;           
 end          
if(@Amount is null or @Amount<=0)                
 begin                
  set @flag='Amount must be greater than zero.'                
  return ;               
 end                
                
         
declare @VPBal bigint        
set @VPBal=(select VPBal  from appmst where appmstid=@appmstid)        
IF @VPBal=1        
 BEGIN        
   select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                               
   select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                               
   if(@Bbalance>=@AmountType)                                     
     begin                                                                                                     
      set @Abalance=@Bbalance - @AmountType                                                                 
      set @sharemstid=IDENT_CURRENT('sharemst')                                                                                                                                                  
      insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                              
      values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'Account Active',@sharemstid+1)                                                             
      set @bal= @Abalance          
      set @flag='Account Active'       
  UPDATE APPMST SET Appmstpaid=0, VPBal=1 WHERE APPMSTID=@appmstid    
     
     End                                                 
   Else                                               
     Begin                    
      set @flag='Insuficient Balance !' --Insufficient Balance           
     end        
     return;        
         
 END        
                
           
        
          
      
 if(exists(select srno from Sharemst where Appmstid=@appmstid))                
 begin                
 set @flag='The user is already TOP-UP.'              
 return ;               
 end                
              
  if(@Amount is null or @Amount<=0)                
  begin                
  set @flag='Amount must be greater than zero.'                
  return ;               
  end                
                
               
  else     
                 
  begin              
  set nocount on               
  set xact_abort on                
  begin transaction                
                
  if(exists(select appmstregno from appmst where appmstregno=@regno))                
 Begin              
  Begin try               
                 
select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                            
select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                               
if(@Bbalance>=@AmountType)                                     
begin                                                                                                     
set @Abalance=@Bbalance - @AmountType                                                                 
set @sharemstid=IDENT_CURRENT('sharemst')                                                                                                                                                  
insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                              
values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'TOP-UP',@sharemstid+1)                                                             
set @bal= @Abalance                         
End                                                 
     Else                                               
     Begin                    
  set @flag='Insuficient Balance !' --Insufficient Balance                      
  Rollback Transaction                      
  Return                    
     End                    
  set @TranNo=ident_current('BankTran')               
  select @Srno=ident_current('requestmst')                
  insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)              
  values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0)                
  select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                
  update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@AmountType, ROIDate=getdate() where appmstregno=@regno                
              
---*************                
  Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf               
  Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                
  Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf              
  Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)              
                  
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******              
  if @appmstpaid != 1                
  begin               
  select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                
  update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                
  update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno               
  update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                
  execute [DirectIncome] @AppMstId , @AmountType              
  execute BinaryIncome  @regno ,@AmountType 
 execute [BosterIncome]   @AppMstId           
   set @flag='1'                
  end              
  end try              
  begin catch                
set @flag=ERROR_MESSAGE()        
                
  end catch              
  end                
  else                
set @flag='Invalid User ID !'              
  if(@flag='1')                
                
commit transaction                
                
  else                
                
rollback transaction              
end              
end   
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserActivateAdmin]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  --exec [RechargeUser] 'GBT784997','GBT424273','1234',500,'',''                     
--select * from CasueID WHERE appmstid=1              
  --select * from sharemst WHERE APPMSTREGNO='GBT128215'              
CREATE  proc[dbo].[RechargeUserActivateAdmin](@SessionRegNo varchar(50),@RegNo nvarchar(50) ,                    
 @AmountType float,                      
@bal varchar(100) output,                      
@flag varchar(100) output , @ModePayment varchar(50))                       
as                      
                        
begin                      
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                         
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                       
set @Bbalance=0                      
set @rechargedAmt=0                      
set @estimateReAmt=0                       
set @getdate= dbo.GetServerDate()                      
set @Amount=@AmountType                      
set @jf=@Amount                      
declare @RemarksTypes varchar(20)  
set  @RemarksTypes ='Account Upgrade-'+@ModePayment  
 if(@Amount is null or @Amount<=0)                        
 begin                        
	 set @flag='Amount must be greater than zero.'                
	 return ;                       
 end                   
select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                      
select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                       
		DECLARE @CheckType int    
		SET @CheckType =(SELECT Appmstpaid FROM AppMst  WHERE AppMstID=@appmstid)    
		IF @CheckType=0    
		BEGIN    
				set @flag='Account Allready Active'       
				set @bal= @Abalance  
				RETURN;                 
		END      
   DECLARE @CheckTypeNew int        
   SET @CheckTypeNew =(SELECT Isnull(count(appmstid),0) FROM sharemst  WHERE AppMstID=@appmstid)        
   IF @CheckTypeNew<>0        
    BEGIN        
				select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                                       
				select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                                       
				set @Abalance=@Bbalance - 0                                                                         
				insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                                      
				values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,@RemarksTypes,@sharemstid+1)        
				insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                      
				values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)        
				UPDATE APPMST SET Appmstpaid=1, VPBal=0 WHERE APPMSTID=@appmstid                
				set @flag='1'           
				set @bal= @Abalance               
    END        
 ELSE    
    BEGIN        
        
set nocount on                       
set xact_abort on                        
begin transaction                        
Begin try                    
   if(exists(select appmstregno from appmst where appmstregno=@regno))                        
    Begin                      
			select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                                       
			select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                                       
			set @Abalance=@Bbalance - 0                                                                         
			insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                                      
			values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,@RemarksTypes,@sharemstid+1)                                                           
			set @bal= @Abalance                  
			insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                      
			values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)                    
			set @sharemstid=IDENT_CURRENT('sharemst')                       
			select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                        
			update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@AmountType, ROIDate=getdate() where appmstregno=@regno                        
			Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                       
			Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                        
			Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                      
			Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                      
			select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                        
			update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                        
			update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                       
			update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                        
			execute [DirectIncome] @AppMstId , @AmountType                      
			execute BinaryIncome  @regno ,@AmountType                       
       set @flag='1'                    
    END            
   ELSE        
   BEGIN        
    set @flag='Invalid User ID !'         
   END            
  END TRY                      
  begin catch                        
    set @flag=ERROR_MESSAGE()                      
  end catch                      
 if(@flag='1')                        
 commit transaction                        
 else                        
 rollback transaction         
 END        
                    
END
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserActivateBTC]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
         
create  proc[dbo].[RechargeUserActivateBTC] (@SessionRegNo varchar(50),@RegNo nvarchar(50) ,   @modeType char(10),  
@AmountType float,@ConverAmt float,        
@PayMentID varchar(100) output,        
@flag varchar(100) output)         
as        
          
begin        
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float           
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float         
  set @getdate= dbo.GetServerDate()        
Declare @CheckAmount bigint       
set  @CheckAmount= dbo.AcountCheck(@AmountType)    
if @CheckAmount=0    
begin    
 set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'    
  set @PayMentID=0       
 return ;     
end    
   
   
declare @VPBal bigint
set @VPBal=(select VPBal  from appmst where appmstid=@appmstid)
 
if @VPBal<>1
  begin  
 if(exists(select srno from Sharemst where Appmstid=@appmstid ))          
 begin          
 set @flag='The user is already TOP-UP.'    
  set @PayMentID=0       
 return ;         
 end 
 end         
        
  if(@AmountType is null or @AmountType<=0)          
  begin          
  set @flag='Amount must be greater than zero.'     
  set @PayMentID=0       
  return ;         
  end          
          
         
  else         
           
  begin        
  set nocount on         
  set xact_abort on          
  begin transaction          
          
  if(exists(select appmstregno from appmst where appmstregno=@regno))          
 Begin        
  Begin try         
insert into BTCRequestMst (PAppMstRegno,JAppMstRegno,PAmount,RDate,CAmt ,Remarks, Type, RequestTyp)  
values(@SessionRegNo,@RegNo, @AmountType, @getdate,@ConverAmt , 'Request BTC Approval',@modeType , @VPBal)  
set @PayMentID=ident_current('BTCRequestMst')    
  set @flag='1'          
         
  end try        
  begin catch          
set @flag=ERROR_MESSAGE()        
          
  end catch        
  end          
  else          
set @flag='Invalid User ID !'        
  if(@flag='1')          
          
commit transaction          
          
  else          
          
rollback transaction        
end        
end          
        
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserAmdin]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  --exec [RechargeUser] 'GBT784997','GBT424273','1234',500,'',''               
--select * from BTCRequestMst WHERE appmstid=1      
         
CREATE  proc[dbo].[RechargeUserAmdin](@SessionRegNo varchar(50),@RegNo nvarchar(50) ,        
 @AmountType float,                
@bal varchar(100) output,                
@flag varchar(100) output , @ModePayment varchar(50))                 
as                
                  
begin                
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                   
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                 
set @Bbalance=0                
set @rechargedAmt=0                
set @estimateReAmt=0                 
set @getdate= dbo.GetServerDate()                
set @Amount=@AmountType                
set @jf=@Amount                
       
	   declare @RemarksTypes varchar(20)

	   set  @RemarksTypes ='Account Upgrade-'+@ModePayment
 if(@Amount is null or @Amount<=0)                  
 begin                  
 set @flag='Amount must be greater than zero.'          
 return ;                 
 end             
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                
  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                 
   
    DECLARE @CheckType int  
   SET @CheckType =(SELECT Appmstpaid FROM AppMst  WHERE AppMstID=@appmstid)  
   IF @CheckType=0  
    BEGIN  
     set @flag='Account Not Active'     
     set @bal= @Abalance     
	  return ;             
    END 

 Declare @CheckAmount bigint               
 set  @CheckAmount= dbo.AcountCheck(@AmountType)            
 if @CheckAmount=0            
  begin            
   set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'         
   return ;             
 end   
  
   
  
   
 ELSE  
    BEGIN  
  
set nocount on                 
set xact_abort on                  
begin transaction                  
  Begin try              
   if(exists(select appmstregno from appmst where appmstregno=@regno))                  
    Begin                
      select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                                 
      select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                                 
       if(@Bbalance>=@AmountType)                                       
        begin         
         set @Abalance=@Bbalance - 0                                                                   
         insert into VPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,tranid)                                
         values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,@RemarksTypes,@sharemstid+1)                                                     
         set @bal= @Abalance            
        End         
       Else                                                 
        Begin                      
         set @flag='Insuficient Balance !' --Insufficient Balance               
         print @flag                 
         Rollback Transaction                        
         Return                      
        End           
           
       insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                
       values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)              
          
       set @sharemstid=IDENT_CURRENT('sharemst')                 
       select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                  
       update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@AmountType, ROIDate=getdate() where appmstregno=@regno                  
                
      ---*************                  
       Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                 
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                  
       Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                
       select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                  
       update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                  
       update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                 
       update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                  
       execute [DirectIncome] @AppMstId , @AmountType                
       execute BinaryIncome  @regno ,@AmountType                 
       set @flag='1'              
    END      
   ELSE  
   BEGIN  
    set @flag='Invalid User ID !'   
   END      
  END TRY                
  begin catch                  
    set @flag=ERROR_MESSAGE()                
  end catch                
                  
                
         
             
 if(@flag='1')                  
 commit transaction                  
 else                  
 rollback transaction   
 END  
              
END
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserBTC]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
             
CREATE  proc[dbo].[RechargeUserBTC] (@SessionRegNo varchar(50),@RegNo nvarchar(50) ,      
 @modeType char(10), @SKey varchar(4)  ,  @BTCAddress varchar(100), @RType char(1),    
 @AmountType float,@ConverAmt float,              
@PayMentID varchar(100) output,              
@flag varchar(100) output)               
as              
                
begin              
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                 
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float               
  set @getdate= dbo.GetServerDate()              
Declare @CheckAmount bigint             
    
       
    if not exists(select appmstregno from appmst where appmstregno=@SessionRegNo and ePassword=@SKey )                              
  begin                              
   set @flag='Security Key not Match !'     
    set @PayMentID=0                              
 return                              
  end       
    
    
set  @CheckAmount= dbo.AcountCheck(@AmountType)          
if @CheckAmount=0          
begin          
 set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'          
  set @PayMentID=0             
 return ;           
end          
       
 IF @RType=1
 BEGIN   
		DECLARE @CheckType int    
		SET @CheckType =(SELECT Appmstpaid FROM AppMst  WHERE AppMstRegNo=@RegNo)    
		IF @CheckType=0    
		BEGIN    
			set @flag='Account Not Active'   
			set @PayMentID=0         
			return ;               
		END
 END 
 if(exists(select srno from Sharemst where Appmstid=@appmstid AND Amount>@AmountType))                
 begin                
 set @flag='The user is already TOP-UP.'          
  set @PayMentID=0             
 return ;               
 end                
              
  if(@AmountType is null or @AmountType<=0)                
  begin                
  set @flag='Amount must be greater than zero.'           
  set @PayMentID=0             
  return ;               
  end                
                
               
  else               
                 
  begin              
  set nocount on               
  set xact_abort on                
  begin transaction                
                
  if(exists(select appmstregno from appmst where appmstregno=@regno))                
 Begin              
  Begin try               
                 
     insert into BTCRequestMst (PAppMstRegno,JAppMstRegno,PAmount,RDate,CAmt ,Remarks, Type, AddressBTC, RequestTyp)        
  values(@SessionRegNo,@RegNo, @AmountType, @getdate,@ConverAmt , 'Request BTC Approval',@modeType, @BTCAddress, @RType )        
        set @PayMentID=ident_current('BTCRequestMst')          
  set @flag='1'                
               
  end try              
  begin catch                
set @flag=ERROR_MESSAGE()              
                
  end catch              
  end                
  else                
	set @flag='Invalid User ID !'              
  if(@flag='1')                
                
commit transaction                
                
  else                
                
rollback transaction              
end              
end                
    
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserBulk]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[RechargeUser]'youthe', 'testtest4'         
 --select * from sharemst        
  --select * from appmst        
  --select * from iptran        
CREATE  proc[dbo].[RechargeUserBulk] (@SessionRegNo varchar(50),@RegNo nvarchar(50) , @AmountType float)         
as        
          
begin        
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float   , @flag varchar(50)        
  declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float         
  set @Bbalance=0        
           
         
        
  set @rechargedAmt=0        
  set @estimateReAmt=0         
  set @getdate= getdate()        
          
  set @Amount=600       
  set @jf=@Amount        
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst with (NOLOCK) where appmstregno=@RegNo        
          
  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo         
          
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt with (NOLOCK) where @getdate between ReStartOn and ReEndOn order by srno desc        
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)          
         
         
 if(exists(select srno from Sharemst with (NOLOCK) where Appmstid=@appmstid))          
          
  begin          
 set @flag='The user is already TOP-UP.'        
 return ;         
 end          
        
          
          
  if(@Amount is null or @Amount<=0)          
  begin          
  set @flag='Amount must be greater than zero.'          
  return ;         
  end          
          
         
  else         
           
  begin        
  set nocount on         
  set xact_abort on          
  begin transaction          
          
  if(exists(select appmstregno from appmst with (NOLOCK) where appmstregno=@regno))          
 Begin        
  Begin try         
           
     select @BtranId=isnull(max(BankTranId),0) from IPTran with (NOLOCK) where AppMstId=@Sappmstid                                                                                         
        
      select @Bbalance=isnull(BanktranBalance,0) from IPTran with (NOLOCK) where appmstid=@Sappmstid and BankTranId=@BtranId                         
    if(@Bbalance>=@AmountType)                               
        
   begin                                                                                               
            
   set @Abalance=@Bbalance - @AmountType                                                           
        
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                                                                                            
             
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                        
   values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'TOP-UP',1,@sharemstid+1)                                                       
        
        --set @bal= @Abalance                   
        
   End                                              
        
     Else                                         
        
     Begin              
        
       set @flag='Insuficient Balance !' --Insufficient Balance                
        
        Rollback Transaction                
        
        Return              
        
     End              
        
             
   set @TranNo=ident_current('BankTran')         
   select @Srno=ident_current('requestmst')          
          
           
           
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)        
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0)          
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst with (NOLOCK) where appmstregno=@regno          
     execute     [PRC_invoceCulculate] @appmstid, @AmountType,  1
   update appmst set jamount=@AmountType,  JoinFor=@AmountType, Revoucher=@AmountType, ROIDate=@getdate where appmstregno=@regno          
        
         
---*************          
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf/600,TotalnewLeft=TotalNewLeft+@jf/600         
   Where AppMstId In (SELECT ParentId  FROM AppTran with (NOLOCK) Where AppMstId = @AppMstId And AppMstLeftRight = 0)          
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf/600,TotalNewRight=TotalNewRight+@jf/600       
   Where AppMstId In (SELECT ParentId  FROM AppTran with (NOLOCK) Where AppMstId = @AppMstId And AppMstLeftRight = 1)        
            
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******        
  if @appmstpaid != 1          
  begin         
   select @JoinForAmt=pintype from Sharemst  with (NOLOCK) where Appmstid=@Sappmstid          
         
   begin          
   update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid          
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno         
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0          
        
            
   end          
   execute DiamondProc @sponsorid        
            
          
            
             
   set @flag='1'          
  end        
  end try        
  begin catch          
set @flag=ERROR_MESSAGE()        
          
  end catch        
  end          
  else          
set @flag='Invalid User ID !'        
  if(@flag='1')          
          
commit transaction          
          
  else          
          
rollback transaction        
end        
end          
        
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserNew]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[RechargeUser]'youthe', 'testtest4'                         
 --select * from CASUEID                        
  --select * from appmst order by appmstid desc                        
  --select * from iptran             
  --select * from Kptran               
            
  --[RechargeUserNew]  'global' , 'GA00000008'  ,'434041', 1251,'',''           
CREATE  proc[dbo].[RechargeUserNew] (@SessionRegNo varchar(50),@RegNo nvarchar(50) , @epassword varchar(50),@AmountType float,                        
@bal varchar(100) output,                        
@flag varchar(100) output)              
as                        
                          
begin               
              
               
 --set @flag='maintenace work going on'                  
 --return;            
                        
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                           
  declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,  @kAbalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                         
  set @Bbalance=0                        
  set @rechargedAmt=0                        
  set @estimateReAmt=0                         
  set @getdate= getdate()                        
                          
  set @Amount=600                       
  set @jf=cast(@Amount/600 as int)              
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst with (NOLOCK) where appmstregno=@RegNo                        
  select @Sappmstid=appmstid from appmst with (NOLOCK) where appmstregno=@SessionRegNo                         
                          
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt with (NOLOCK) where @getdate between ReStartOn and ReEndOn order by srno desc                        
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst(nolock) where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                          
                         
                         
 if(exists(select srno from Sharemst with (NOLOCK) where Appmstid=@appmstid))                          
                          
  begin                          
 set @flag='The user is already TOP-UP.'                        
 return ;                         
 end                          
                        
                          
   if(not exists(select appmstid from AppMst with (NOLOCK) where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)                          
  begin                         
 set @flag='Invalid Transaction-Password.!'--invalid e-password                        
 return;                          
  end                        
                        
                        
  if(@Amount is null or @Amount<=0)                          
  begin                          
  set @flag='Amount must be greater than zero.'                          
  return ;                         
  end                          
                          
                         
  else                         
                           
  begin                        
  set nocount on                         
  set xact_abort on                          
  begin transaction                          
                          
  if(exists(select appmstregno from appmst with (NOLOCK) where appmstregno=@regno and isnull(appmstactivate,1)=1))                          
 Begin                        
  Begin try                         
             
  declare @kptranId bigint , @KPbalance float , @KPuseBalance float, @IPuseBalance float , @BOTHBALLANCE FLOAT          
  select @kptranId=isnull(max(BankTranId),0) from KPTran where AppMstId=@Sappmstid                                                                                        
  if @kptranId=0                        
  begin                   
  set @KPbalance=0                        
  end                        
  else                        
  begin                        
      select @KPbalance=isnull(BanktranBalance,0) from KPTran  with (NOLOCK) where appmstid=@Sappmstid and BankTranId=@kptranId                           
   end          
         
           
 set @KPuseBalance=  @AmountType*60/100          
 set @IPuseBalance=  @AmountType*40/100          
               
  IF  @KPbalance>=@KPuseBalance          
   BEGIN          
   SET @KPuseBalance=@KPuseBalance          
   END          
   ELSE          
   BEGIN           
   SET @KPuseBalance=  @KPbalance          
   END          
          
          
          
              
              
                         
  select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                                         
  if @BtranId=0                        
  begin                        
  set @Bbalance=0                        
  end                        
  else                        
  begin                        
      select @Bbalance=isnull(BanktranBalance,0) from IPTran  with (NOLOCK) where appmstid=@Sappmstid and BankTranId=@BtranId                           
   end           
             
               
   if @Bbalance >=@IPuseBalance        
   begin        
            
   SET @IPuseBalance=  @AmountType-@KPuseBalance          
              
             
   SET @BOTHBALLANCE= @KPbalance+@Bbalance               
                           
if(@BOTHBALLANCE>=@AmountType)                                               
                        
   begin                                                                                                               
                            
   set @Abalance=@Bbalance - @IPuseBalance                                                                           
                     
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                               
                             
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                                        
   values (@Sappmstid,12,@appmstid,@getdate,@IPuseBalance,@Abalance,'TOP-UP',1,@sharemstid+1)                          
                  
            
 set @kAbalance=@KPbalance - @KPuseBalance                               
   insert into kPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                                        
   values (@Sappmstid,12,@appmstid,@getdate,@KPuseBalance,@kAbalance,'TOP-UP',1,@sharemstid+1)                          
                   
  set @bal= @Abalance                                   
                        
   End                                                              
                        
     Else                                  
                  
     Begin                              
                        
       set @flag='Insuficient Balance !' --Insufficient Balance                                
                        
        Rollback Transaction                                
                    
        Return                              
                        
     End                              
         end         
else        
begin        
        set @flag='Insuficient Balance ! in Main Account'          
   Rollback Transaction                      
        Return         
   end        
                       
                             
   set @TranNo=ident_current('BankTran')                         
   select @Srno=ident_current('requestmst')                          
                          
                           
                           
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint,joinfor)                        
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0,@jf)                          
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                          
                         
 execute PRC_invoceCulculate  @appmstid ,@AmountType   , 1               
   update appmst set jamount=isnull(jamount,0)+@AmountType,  Revoucher=isnull(Revoucher,0)+@AmountType, JoinFor=isnull(JoinFor,0)+@Jf, ROIDate=getdate() where appmstregno=@regno                         
                        
                         
---*************                          
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                   
   FROM  AppTran (nolock) WHERE APPMST.appmstid=AppTran.ParentId and AppTran.AppMstId=@appmstid and AppTran.AppMstLeftRight=0               
   --Where AppMstId In (SELECT ParentId  FROM AppTran with (NOLOCK) Where AppMstId = @AppMstId And AppMstLeftRight = 0)                          
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                
   FROM  AppTran (nolock) WHERE APPMST.appmstid=AppTran.ParentId and AppTran.AppMstId=@appmstid and AppTran.AppMstLeftRight=1                      
   --Where AppMstId In (SELECT ParentId  FROM AppTran with (NOLOCK) Where AppMstId = @AppMstId And AppMstLeftRight = 1)                        
                            
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******                        
  if @appmstpaid != 1                          
  begin                         
   --select @JoinForAmt=pintype from Sharemst  with (NOLOCK) where Appmstid=@Sappmstid                          
                         
   --begin                          
   update appmst set newsponsortotal= newsponsortotal+ 1, DSponsarTotal=DSponsarTotal +1, DSponsarNew=DSponsarNew+1 where appmstregno= @sponsorid                          
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                         
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                          
   --end                          
                           
   execute DiamondProc @sponsorid                        
   execute BinaryIncome  @regno ,@Jf 
   --applied from 01-Apr-2019                         
   EXECUTE [dbo].[uspCalculateFranchiseIncome] @appmstid,@jf 
                             
   set @flag='1'                          
  end                        
  end try                        
  begin catch                          
set @flag=ERROR_MESSAGE()                        
                          
  end catch                        
  end                          
  else                          
set @flag='Invalid User ID !'                        
  if(@flag='1')                          
                          
commit transaction                          
                          
  else                          
                          
rollback transaction                        
end                       
              
              
                   
end 
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserNewSURENDER]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[RechargeUser]'youthe', 'testtest4'               
 --select * from CASUEID              
  --select * from appmst order by appmstid desc              
  --select * from iptran   
  --select * from Kptran     
  
  --[RechargeUserNew]  'global' , 'GA00000009'  ,'MYGLOBAL123', 1251,'','' 
CREATE  proc[dbo].[RechargeUserNewSURENDER] (@SessionRegNo varchar(50),@RegNo nvarchar(50) , @epassword varchar(50),@AmountType float,              
@bal varchar(100) output,              
@flag varchar(100) output)    
as              
                
begin     
    
     
 --set @flag='maintenace work going on'        
 --return;  
              
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                 
  declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,  @kAbalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float               
  set @Bbalance=0              
  set @rechargedAmt=0              
  set @estimateReAmt=0               
  set @getdate= getdate()              
                
  set @Amount=600             
  set @jf=cast(@Amount/600 as int)    
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst with (NOLOCK) where appmstregno=@RegNo              
  select @Sappmstid=appmstid from appmst with (NOLOCK) where appmstregno=@SessionRegNo               
                
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt with (NOLOCK) where @getdate between ReStartOn and ReEndOn order by srno desc              
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst(nolock) where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                
               
               
 if(exists(select srno from Sharemst with (NOLOCK) where Appmstid=@appmstid))                
                
  begin                
 set @flag='The user is already TOP-UP.'              
 return ;               
 end                
              
                
   if(not exists(select appmstid from AppMst with (NOLOCK) where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)                
  begin               
 set @flag='Invalid Transaction-Password.!'--invalid e-password              
 return;                
  end              
              
              
  if(@Amount is null or @Amount<=0)                
  begin                
  set @flag='Amount must be greater than zero.'                
  return ;               
  end                
                
               
  else               
                 
  begin              
  set nocount on               
  set xact_abort on                
  begin transaction                
                
  if(exists(select appmstregno from appmst with (NOLOCK) where appmstregno=@regno and isnull(appmstactivate,1)=1))                
 Begin              
  Begin try               
   
  declare @kptranId bigint , @KPbalance float , @KPuseBalance float, @IPuseBalance float , @BOTHBALLANCE FLOAT
  select @kptranId=isnull(max(BankTranId),0) from KPTran where AppMstId=@Sappmstid                                                                                               
  if @kptranId=0              
  begin              
  set @KPbalance=0              
  end              
  else              
  begin              
      select @KPbalance=isnull(BanktranBalance,0) from KPTran  with (NOLOCK) where appmstid=@Sappmstid and BankTranId=@kptranId                 
   end
	
	
	set @KPuseBalance=  @AmountType*60/100
	set @IPuseBalance=  @AmountType*40/100
     
	 IF  @KPbalance>=@KPuseBalance
	  BEGIN
	  SET @KPuseBalance=@KPuseBalance
	  END
	  ELSE
	  BEGIN 
	  SET @KPuseBalance=  @KPbalance
	  END



	   
	   
	              
  select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                               
  if @BtranId=0              
  begin              
  set @Bbalance=0              
  end              
  else              
  begin              
      select @Bbalance=isnull(BanktranBalance,0) from IPTran  with (NOLOCK) where appmstid=@Sappmstid and BankTranId=@BtranId                 
   end 
   
    
	  SET @IPuseBalance=  @AmountType-@KPuseBalance
	   
   
   SET @BOTHBALLANCE= @KPbalance+@Bbalance     
	PRINT @KPuseBalance 
	PRINT @IPuseBalance  
	PRINT @KPbalance                  
if(@BOTHBALLANCE>=@AmountType)                                     
              
   begin                                                                                                     
                  
   set @Abalance=@Bbalance - @IPuseBalance                                                                 
           
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                     
                   
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                              
   values (@Sappmstid,12,@appmstid,@getdate,@IPuseBalance,@Abalance,'TOP-UP',1,@sharemstid+1)                
        
		
	set @kAbalance=@KPbalance - @KPuseBalance   	                 
   insert into kPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                              
   values (@Sappmstid,12,@appmstid,@getdate,@KPuseBalance,@kAbalance,'TOP-UP',1,@sharemstid+1)                
         
  set @bal= @Abalance                         
              
   End                                                    
              
     Else                        
        
     Begin                    
              
       set @flag='Insuficient Balance !' --Insufficient Balance                      
              
        Rollback Transaction                      
          
        Return                    
              
     End                    
              
                   
   set @TranNo=ident_current('BankTran')               
   select @Srno=ident_current('requestmst')                
                
                 
                 
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint,joinfor)              
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0,@jf)                
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                
               
 execute PRC_invoceCulculate  @appmstid ,@AmountType   , 1     
   update appmst set jamount=isnull(jamount,0)+@AmountType,  Revoucher=isnull(Revoucher,0)+@AmountType, JoinFor=isnull(JoinFor,0)+@Jf, ROIDate=getdate() where appmstregno=@regno                
              
               
---*************                
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf         
   FROM  AppTran (nolock) WHERE APPMST.appmstid=AppTran.ParentId and AppTran.AppMstId=@appmstid and AppTran.AppMstLeftRight=0     
   --Where AppMstId In (SELECT ParentId  FROM AppTran with (NOLOCK) Where AppMstId = @AppMstId And AppMstLeftRight = 0)                
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf      
   FROM  AppTran (nolock) WHERE APPMST.appmstid=AppTran.ParentId and AppTran.AppMstId=@appmstid and AppTran.AppMstLeftRight=1            
   --Where AppMstId In (SELECT ParentId  FROM AppTran with (NOLOCK) Where AppMstId = @AppMstId And AppMstLeftRight = 1)              
                  
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******              
  if @appmstpaid != 1                
  begin               
   --select @JoinForAmt=pintype from Sharemst  with (NOLOCK) where Appmstid=@Sappmstid                
               
   --begin                
   update appmst set newsponsortotal= newsponsortotal+ 1, DSponsarTotal=DSponsarTotal +1 where appmstregno= @sponsorid                
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno               
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                
   --end                
                 
   execute DiamondProc @sponsorid              
   execute BinaryIncome  @regno ,@Jf                
                  
                   
   set @flag='1'                
  end              
  end try              
  begin catch                
set @flag=ERROR_MESSAGE()              
                
  end catch              
  end                
  else                
set @flag='Invalid User ID !'              
  if(@flag='1')                
                
commit transaction                
                
  else                
                
rollback transaction              
end             
    
    
         
end 
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserPower]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   --  select * from appmst where appmstpaid=0
   --select * from appmst where appmstregno='AGF342540'
   
--	exec [RechargeUserPower] 'AGF342540', 100, '',''
CREATE  proc[dbo].[RechargeUserPower] (@RegNo nvarchar(50)  ,@AmountType float,    
@bal varchar(100) output,    
@flag varchar(100) output)     
as    
      
begin    
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float       
declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float     
set @Bbalance=0    
  set @rechargedAmt=0    
  set @estimateReAmt=0     
  set @getdate= dbo.GetServerDate()    
      
   set @Amount=@AmountType    
  set @jf=@Amount    
     
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo    
  select @Sappmstid=appmstid from appmst where appmstregno='applegro'     
      
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc    
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)      
     
 if(exists(select srno from Sharemst where Appmstid=@appmstid))      
      
  begin      
 set @flag='The user is already TOP-UP.'    
 return ;     
 end      
    
   
    
    
  if(@Amount is null or @Amount<=0)      
  begin      
  set @flag='Amount must be greater than zero.'      
  return ;     
  end      
      
     
  else     
       
  begin    
  set nocount on     
  set xact_abort on      
  begin transaction      
      
  if(exists(select appmstregno from appmst where appmstregno=@regno))      
 Begin    
  Begin try     
       
     select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                     
      select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId                     
    if(@Bbalance>=@AmountType)                           
   begin                                                                                           
   set @Abalance=@Bbalance - @AmountType                                                       
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                                                                                        
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                    
   values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'TOP-UP',1,@sharemstid+1)                                                   
    
         set @bal= @Abalance               
    
   End                                          
    
     Else                                     
    
     Begin          
    
       set @flag='Insuficient Balance !' --Insufficient Balance            
    
        Rollback Transaction            
    
        Return          
    
     End          
    
         
   set @TranNo=ident_current('BankTran')     
   select @Srno=ident_current('requestmst')      
      
       
       
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)    
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0)      
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno      
   update appmst set jamount=@AmountType,  Revoucher=@AmountType, JoinFor=@AmountType, ROIDate=getdate() where appmstregno=@regno      
---*************      
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf     
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)      
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf    
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)    
        
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******    
  if @appmstpaid != 1      
  begin     
   
      
   update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid      
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno     
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0      
       
    --execute [DirectIncome] @AppMstId , @AmountType    
  execute BinaryIncome  @regno ,@AmountType     
  execute BosterIncome @regno    
        
   set @flag='1'      
  end    
  end try    
  begin catch      
set @flag=ERROR_MESSAGE()    
      
  end catch    
  end      
  else      
set @flag='Invalid User ID !'    
  if(@flag='1')      
      
commit transaction      
      
  else      
      
rollback transaction    
end    
end      
    
    
    
GO
/****** Object:  StoredProcedure [dbo].[RechargeUserSunder]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[RechargeUserSunder] (@SessionRegNo varchar(50),@RegNo nvarchar(50),@PlanTypeID int,@PinNo varchar(50)='',@epassword varchar(50),@flag varchar(100) output,@bal decimal output)            







as                                           







begin                                           















  declare @getdate datetime ,@Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float ,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float







  declare @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                                















  set @Bbalance=0                                                                                                                   







  set @bal=0                                                                                    







  set @flag=''                               







  set @rechargedAmt=0                               







  set @estimateReAmt=0                                            







  set @getdate= getutcdate()                                                                                                          







  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                      







  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                                                                    







  select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc                               















  select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                              















  if(exists(select srno from Sharemst where Appmstid=@appmstid))                                       







  begin                                       







	set @flag='The user is already TOP-UP.'                               







	return ;                                   







  end                                          







  







  set @PlanTypeID=0







  select @PlanTypeID=productid from PINMst where allotedto>0  and RegNo=0 and paidAppMstId=0 and PinNo=@PinNo







  set @PlanTypeID=isnull(@PlanTypeID,0)







   If(@PlanTypeID<1)                       







  begin                               







	set @flag='Invalid pin. Try Another.'                               







	return ;                                   







  end  







  select @Amount=Amount,@Jf=JoinFor from PlanTypeMst where PlanTypeId =@PlanTypeID   







  set @Amount=isnull(@Amount,0)   







  if(@Amount is null or @Amount<=0)                              







  begin                              







	set @flag='Amount must be greater than zero.'      







	return ;                                   







  end   







  







  if(not exists(select appmstid from AppMst where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)







  begin                                                  







	set @flag='Invalid Transaction-Password.!'--invalid e-password                                                                                           







	return;                                        







  end                                                                      







  else                                                         







  begin                                                                         







  set nocount on                                                                          







  set xact_abort on                                                      







  begin transaction               







       







  if(exists(select appmstregno from appmst where appmstregno=@regno))               







  Begin             















	   Begin try              







	   --if( @PTypes='CF')            







	   --Begin            















		 -- select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid







		 -- select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId                         







		  --if(@Bbalance>=@Amt)                             







		  -- begin                                              







				--set @Abalance=@Bbalance - @Amt                                                         







				--set @Amount=@Amt                                                                                                        







				--set @sharemstid=IDENT_CURRENT('sharemst')







				--insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)







				--values (@Sappmstid,11,@appmstid,@getdate,@Amt,@Abalance,'TOP-UP',1,@sharemstid+1)                                                     







				--set @bal= @Abalance                 







			--End                                            







			--Else                                       







			--Begin            







				--set @flag='Insuficient Balance !' --Insufficient Balance              







				--Rollback Transaction              







				--Return            







			--End            







		--End            















	   set @TranNo=ident_current('BankTran')                                               







	   select @Srno=ident_current('requestmst')                                                      







	   if @PlanTypeID=1              







		set @Amount=100        







   







		insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                                           







		values(@appmstid,@Amount,1,@getdate,@PlanTypeID,@regno,@srno,@TranNo,0)







		







		 select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                            







		 update appmst set jamount=@jf,JoinFor=@jf,FastTrackDate=DateAdd(day, 7, @getdate) where appmstregno=@regno                                                                                                                                







		 ---*************                                                                                                                              







		 Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf







		 Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)







		 







		 Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                      







		 Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                      







		 ----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******                                                                            















		 if @appmstpaid != 1                                                                                                                        







		 begin                                                                                     



		 --  update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid   



			update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                 







			update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0







		 end       







		 







		                                           







		--execute FastTrack @regno,@PlanTypeID                      







		update PINMst set PaidAppMstId=1,RegNo=@AppMstId,ActiveDate=@getdate where PinNo =@pinno and allotedto>0 and paidAppMstId=0







		







		







		execute BinaryIncome  @regno ,@jf  







		execute DirectIncome  @AppMstId







		set @flag='1'                                           















		end try                               







		begin catch                              







			set @flag=ERROR_MESSAGE()    







		end catch                               







  end                                 







  else                                           







   set @flag='Invalid User ID !'                                                                                     















  if(@flag='1')                                       







   commit transaction                                       







  else                                       







   rollback transaction                                                                                                                               







   end                                       







end   


















GO
/****** Object:  StoredProcedure [dbo].[RechargeUsersunder1]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc[dbo].[RechargeUsersunder1] (@SessionRegNo varchar(50),@RegNo nvarchar(50),@PlanTypeID int,@PinNo varchar(50)='',@epassword varchar(50),@flag varchar(100) output,@bal decimal output)            

as                                           







begin                                           


declare @getdate datetime ,@Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float ,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float
  declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                                



  set @Bbalance=0                                                                                                                   


  set @bal=0                                                                                    


  set @flag=''                               
  set @rechargedAmt=0                               
  set @estimateReAmt=0                                            
  set @getdate= getutcdate()                                                                                                          

  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                      

  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                                                                    

  select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc                               
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                              

 if(exists(select srno from Sharemst where Appmstid=@appmstid))                                       

  begin                                       
	set @flag='The user is already TOP-UP.'                               
	return ;                                   
 end   
 
  set @PlanTypeID=0
  select @PlanTypeID=productid from PINMst where allotedto>0  and RegNo=0 and paidAppMstId=0 and PinNo=@PinNo
  set @PlanTypeID=isnull(@PlanTypeID,0)
  
 select   @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid
  
  if(@JoinForAmt <> @PlanTypeID and @PlanTypeID=6 )                                       
  begin                                       

	--set @flag='This Sponsor Note paid to starter Plan'  
	set @flag='Invalid pin. Try Another.'                                 

	return ;                                  

 end  

 -- If(@PlanTypeID>1)       

 --begin                               
	--set @flag='Invalid pin. Try Another.'                               
	--return ;                                   
 -- end  
  select @Amount=Amount,@Jf=JoinFor from PlanTypeMst where PlanTypeId =@PlanTypeID   
  set @Amount=isnull(@Amount,0)   
  if(@Amount is null or @Amount<=0)                              
  begin                              
	set @flag='Amount must be greater than zero.'      
	return ;                                   
  end   
  if(not exists(select appmstid from AppMst where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)
  begin                                                  
	set @flag='Invalid Transaction-Password.!'--invalid e-password                                                                                           
	return;                                        
  end                                                                      

  else                                                         
  begin                                                                         
  set nocount on                                                                          
  set xact_abort on                                                                                       
  begin transaction               

  if(exists(select appmstregno from appmst where appmstregno=@regno))               
 Begin             
	 Begin try              
   set @TranNo=ident_current('BankTran')                                               
  select @Srno=ident_current('requestmst')                                                      

	   if @PlanTypeID=1              
		set @Amount=100        
		insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                                           
		values(@appmstid,@Amount,1,@getdate,@PlanTypeID,@regno,@srno,@TranNo,0)
		select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                            
		 update appmst set jamount=@jf,JoinFor=@jf,FastTrackDate=DateAdd(day, 7, @getdate) where appmstregno=@regno                                                                                                                                
		 ---*************                                                                                                                              
		 Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf
		 Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)
		 Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                      
		 Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                      
		 ----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******                                                                            
		 if @appmstpaid != 1                                                                                                                        
		 begin                                                                                     
		   update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid   
		update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                 
			update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0
		 end       

		--execute FastTrack @regno,@PlanTypeID                      
		update PINMst set PaidAppMstId=1,RegNo=@AppMstId,ActiveDate=@getdate where PinNo =@pinno and allotedto>0 and paidAppMstId=0
		execute BinaryIncome  @regno ,@jf  
		execute DirectIncome  @AppMstId
		set @flag='1'                                           
		end try                               
		begin catch                              
			set @flag=ERROR_MESSAGE()    

		end catch                               
  end                                 
  else                                           
   set @flag='Invalid User ID !'                                                                                     
  if(@flag='1')                                       

   commit transaction                                       


  else                                       

   rollback transaction                                                                                                                               
   end                                       
end   


GO
/****** Object:  StoredProcedure [dbo].[RechargeWithoutDimound]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      --[RechargeWithoutDimound] 'global' ,'GA00000004' ,6000000 ,'',''
CREATE  proc[dbo].[RechargeWithoutDimound] (    
@SessionRegNo varchar(50)  ,
@RegNo nvarchar(50) ,   
@AmountType bigint,      
@bal varchar(100) output,      
@flag varchar(100) output)       
as      
        
begin    

  declare @JCount int  
declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float         
declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float       
set @Bbalance=0   
  set @rechargedAmt=0      
  set @estimateReAmt=0       
  set @getdate= getdate()      
  set @Amount=@AmountType     
  set @JCount = @AmountType/600
  set @jf=@JCount  --600*@JCount     
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo      
        
  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo       
        
select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc      
 select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)        
       
       
 if(exists(select srno from Sharemst where Appmstid=@appmstid))        
        
  begin        
 set @flag='The user is already TOP-UP.'      
 return ;       
 end        
      
     
          
      
  if(@Amount is null or @Amount<=0)        
  begin        
  set @flag='Amount must be greater than zero.'        
  return ;       
  end        
        
       
  else       
         
  begin      
  set nocount on       
  set xact_abort on        
  begin transaction        
        
  if(exists(select appmstregno from appmst where appmstregno=@regno))        
 Begin      
  Begin try       
         
     select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                       
      
  if @BtranId=0      
  begin      
  set @Bbalance=0      
  end      
  else      
  begin      
      select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId         
   end      
               
    if(@Bbalance>=@AmountType)                             
      
   begin                                                                                             
          
   set @Abalance=@Bbalance - @AmountType                                                         
      
   set @sharemstid=IDENT_CURRENT('sharemst')                                                                                                                                     
           
   declare @InvAmt float  
  set  @InvAmt =@AmountType/@JCount  
  
   insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                      
   values (@Sappmstid,12,@appmstid,@getdate,@AmountType,@Abalance,'TOP-UP',1,@sharemstid+1)                                                     
    execute PRC_invoceCulculate  @appmstid ,@InvAmt  ,  @JCount  
         set @bal= @Abalance                 
      
   End                                            
      
     Else                                       
      
     Begin            
      
       set @flag='Insuficient Balance !' --Insufficient Balance              
      
        Rollback Transaction              
      
        Return            
      
     End            
      
           
   set @TranNo=ident_current('BankTran')       
   select @Srno=ident_current('requestmst')        
        
         
         
   insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint,joinfor)      
   values(@appmstid,@AmountType,1,@getdate,1,@regno,@srno,@TranNo,0,@jf)        
   select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno        
        
   update appmst set jamount=ISNULL(JAmount,0)+@AmountType,  Revoucher=isnull(Revoucher,0)+@AmountType, JoinFor=ISNULL(Joinfor,0)+ @Jf, ROIDate=getdate() where appmstregno=@regno        
      
       
---*************        
   Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf        
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)        
   Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf      
   Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)      
          
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******      
  if @appmstpaid != 1        
  begin       
   select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid        
       
   begin        
   update appmst set newsponsortotal= newsponsortotal+ 1, DSponsarTotal=DSponsarTotal + @JCount where appmstregno= @sponsorid        
   update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno       
   update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0        
   end        
         
   execute DiamondProc @sponsorid      
   execute BinaryIncome  @regno ,@jf       
          
           
   set @flag='1'        
  end      
  end try      
  begin catch        
set @flag=ERROR_MESSAGE()      
        
  end catch      
  end        
  else        
set @flag='Invalid User ID !'      
  if(@flag='1')        
        
commit transaction        
        
  else        
        
rollback transaction      
end      
  
      
end
GO
/****** Object:  StoredProcedure [dbo].[ReferalIncome]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ReferalIncome] @AppMstId int ,@amount float,@todate datetime,@TranId int                               
as                                
begin                               
declare @dincome float,@isActive int              
declare @jf float              
declare @s nvarchar(50)                            
declare @sCode int                            
declare @paid int               
set @dincome=0 
set @paid=0  
select @jf=joinfor ,@s=sponsorid  from appmst where appmstid=@AppMstId                                
select @paid=appmstpaid , @sCode=appmstid,@isActive=appmstactivate from appmst where appmstregno=@s                              
--10% of roi amount to sponsor              
set @dincome=@amount*0.1                   
if(@dincome>0 and @isActive=1 and exists(select srno from Sharemst where Amount>0 and Appmstid=@sCode )) 
begin 
  insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible,effectdate )          
  values(@sCode,@AppMstId,'R',@dincome,@TranId,@paid,@todate)         
end         
end





GO
/****** Object:  StoredProcedure [dbo].[ReferalIncome_temp]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ReferalIncome_temp] @AppMstId int ,@amount float,@todate datetime,@TranId int                               
as                                
begin                               
declare @dincome float,@isActive int              
declare @jf float              
declare @s nvarchar(50)                            
declare @sCode int                            
declare @paid int               
set @dincome=0               
set @paid=0                          
select @jf=joinfor ,@s=sponsorid  from appmst where appmstid=@AppMstId                                
select @paid=appmstpaid , @sCode=appmstid,@isActive=appmstactivate from appmst where appmstregno=@s                              
--10% of roi amount to sponsor              
set @dincome=@amount*0.1                   
if(@dincome>0 and @isActive=1)               
begin   
	update CauseId set Amount=@dincome where paymentcause='R' and userid=@sCode and causeid=@AppMstId and joinfor=@TranId and 
	cast(floor(cast(effectdate as float))as datetime)=cast(floor(cast(@todate as float))as datetime) 
	
/*
  insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible,effectdate )          
  values(@sCode,@AppMstId,'R',@dincome,@TranId,@paid,@todate)         
  */
end         
end





GO
/****** Object:  StoredProcedure [dbo].[RefundReqInsert]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[RefundReqInsert](@regno varchar(50),@amt float,@fid varchar(50)=null,@flag varchar(100) out)     
as    
begin       
 declare @TotalInv float,@appid int   
 set @TotalInv=0       
 select @appid=appmstid from appmst where AppMstRegNo=@regno     
 select @TotalInv=ISNULL(sum(amount),0) from Sharemst where Appmstid =@appid    
 if exists(select srno from RefundMst where appmstid=@appid and [status]=0)    
 begin    
 set @flag='You have already a pending request.'    
 return;    
 end    
 if(@amt>0 and @amt<=@TotalInv)       
 begin   
    if(@fid is null or LEN(@fid)=0)  
    begin  
  insert into refundmst (appmstid,amount,doe,[status],Remark,reqBY,ReqById) values(@appid,@amt,DATEADD(MINUTE,330,GETUTCDATE()),0,'','Self',@regno)     
  set @flag='1'       
 end  
 else  
 begin  
  insert into refundmst (appmstid,amount,doe,[status],Remark,reqBY,ReqById) values(@appid,@amt,DATEADD(MINUTE,330,GETUTCDATE()),0,'','Franchise',@fid)     
  set @flag='1'       
 end   
 end       
 else       
  set @flag='Amount must be less than your total invested amount.'   
end





GO
/****** Object:  StoredProcedure [dbo].[ReGenerateScode]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[ReGenerateScode](@regno varchar(50),@mobile varchar(20),@dob datetime,@pincode varchar(10),    
@havesecCode int,@secCode varchar(50),@code varchar(50) output,@flag int output)    
as  
begin  
declare @appmstid int,@pwd varchar(20),@scode varchar(10)        
select @appmstid=appmstid from appmst where appmstregno=@regno        
set xact_abort on        
begin transaction        
set @flag=0        
set @code=''        
if(exists(select appmstid from appmst where appmstregno=@regno))        
begin        
 if(exists(select appmstid from appmst where appmstregno=@regno and appmstpincode=@pincode and appmstmobile=@mobile and cast(floor(cast(userdob as float)) as datetime)=cast(floor(cast(@dob as float)) as datetime)))        
 begin    
  if(not exists(select appmstid from appmst where appmstid=@appmstid and len(epassword)>1))        
  begin    
   if(@havesecCode=0) --user have to get security code        
   begin        
         
     if(not exists(Select srno from appcode where appmstregno=@regno))        
     begin        
      execute GenerateCode @scode output        
      if(len(@scode)>0)        
      begin        
       insert into appcode (appmstregno,code,doe) values(@regno,@scode,dateadd(minute,330,getutcdate()))               
       set @code=@scode        
       set @flag=1        
      end        
      else        
       set @flag=-108 --security code not generated        
     end        
     else --user has already security code get the already generated code  
     begin        
      select @code=code from appcode where appmstregno=@regno  
      set @flag=1  
     end  
         
   end        
  end        
  else        
   set @flag=-109 --You have already provided e password        
  --        
 end        
 else        
  set @flag=-104 --invalid pin code or DOB        
 end        
 else        
 set @flag=-101 ---user not exists        
if(@flag=1)        
 commit transaction        
else        
rollback transaction        
end





GO
/****** Object:  StoredProcedure [dbo].[replyquery]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[replyquery](@query text,@queryrefid varchar(25),@status bit output,@name varchar(50) output,@mobile varchar(25) output,@refno int output)      
as       
begin       
   
declare @s bit    
  
declare @rdate smalldatetime     
set @rdate=(dateadd(minute,(330),getutcdate()))      
update querymaster set reply=@query,replydate=@rdate,status=1 where srno=@queryrefid    
select @s=status,@mobile=mobileno,@name=name,@refno=srno from querymaster  where srno=@queryrefid    
set @status=@s    
end





GO
/****** Object:  StoredProcedure [dbo].[ReRechargeUser]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc[dbo].[ReRechargeUser] (@SessionRegNo varchar(50),@RegNo nvarchar(50),@PlanTypeID int,@PTypes varchar(50)=null,@epassword varchar(50),@flag varchar(100) output,@bal decimal output)      

as                                     

begin                                     

  declare @getdate datetime ,@Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float ,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                

  declare @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                          

  set @Bbalance=0                                                                                                             

  set @bal=0                                                                              

  set @flag=''                         

  set @rechargedAmt=0                         

  set @estimateReAmt=0                                      

  set @getdate= getutcdate()                                                                                                    

                       

  select @appmstid=appmstid ,@sponsorid=sponsorid,@appmstpaid=appmstpaid from appmst where appmstregno=@RegNo   
  if(@appmstpaid=0)              
  begin                         

	set @flag='The user is not allowed for upgrade.'                         
	return ;                             

  end    

  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                                                              

                      

  select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc                         

  select @rechargedAmt=ISNULL(sum(amount),0) from Sharemst where CAST(floor(cast(DOE  as float)) as datetime) between CAST(floor(CAST(@startDate as float)) AS datetime) and CAST(floor(cast(@EndDate as float)) as datetime)                                  


                      

  if(@PlanTypeID<2)---change              

  begin                         

  set @flag='Invalid Plan Type Selection.'                         

   return ;                             

  end                         

  select @Amt=Amount,@Jf=JoinFor from PlanTypeMst where PlanTypeId =@PlanTypeID   

if(exists(select srno from Sharemst where Appmstid=@appmstid and Amount=@Amt)) ---checkcondion                                

  begin                                 

   set @flag='The user is already TOP-UP same Amount.'                         

   return ;                             

  end      

  if(@Amt is null or @Amt<=0)                        

  begin                        

  set @flag='Amount must be greater than zero.'                         

  return ;                             

  end                         

                  

  if(not exists(select appmstid from AppMst where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)                                           

  begin                                            

   set @flag='Invalid Transaction-Password.!'--invalid e-password                                                                                     

   return;                                  

  end                                                                

  else                                                   

  begin                                                                   

  set nocount on                                                                    

  set xact_abort on                                                                                 

  begin transaction                                                                                                                                

  set @Amt=isnull(@Amt,0)                                                                               

  if(exists(select appmstregno from appmst where appmstregno=@regno))                                

  Begin       

   Begin try        

   if( @PTypes='CF')      

   Begin      

     select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid                                                                                 

      select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId                  if(@Bbalance>=@Amt)                       

     begin                                                                                       

        set @Abalance=@Bbalance - @Amt                                                   

        set @Amount=@Amt                                                                                                  

        set @sharemstid=IDENT_CURRENT('sharemst')                                                                                                                                    

        insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                

        values (@Sappmstid,12,@appmstid,@getdate,@Amt,@Abalance,'RETOP-UP',1,@sharemstid+1)                                               

        set @bal= @Abalance           

     End                                      

     Else                                 

     Begin      

       set @flag='Insuficient Balance !' --Insufficient Balance        

        Rollback Transaction        

        Return      

     End      

   End      

   set @TranNo=ident_current('BankTran')                                         

   select @Srno=ident_current('requestmst')                                                

     

if (@PlanTypeID=2)        

    set @Amount=500   

else if (@PlanTypeID=3)        

    set @Amount=5000    

    --Update previous Amount of the sharemst  

  update sharemst set  EndAmount=Amount where  appmstid=@Appmstid   

  update sharemst set  Amount=0 where  appmstid=@Appmstid  

 --endupdation   

    insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                                     

    values(@appmstid,@Amount,1,@getdate,@PlanTypeID,@regno,@srno,@TranNo,0)                                                                                               

                               

     select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                      

     ---Remove fast track ,FastTrackDate=DateAdd(day, 7, @getdate)

	 update appmst set jamount=@jf,JoinFor=@jf where appmstregno=@regno                                                                                                                          

     ---*************                                                                                                                        

     Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                                                                                 

     Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                                                                                                                                                 

     Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                

     Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                

     ----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******                                                                      

    -- if @appmstpaid = 1                                                                                                                  

     --begin                                                                               

    --update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                                                                                          

    --update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                                                                                     

    --update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                                                                                                                           

     --end      

    execute BinaryIncome  @regno ,@jf                                       

    --execute FastTrack @regno,@PlanTypeID                

     set @flag='1'                                     

     end try                         

   begin catch                        

    set @flag=ERROR_MESSAGE()                         

   end catch                         

                                            

  end                           

  else                                     

   set @flag='Invalid User ID !'                                                                               

                    

  if(@flag='1')                                 

   commit transaction                                 

  else                                 

   rollback transaction                                                                                                                                          

   end                                 

end 






GO
/****** Object:  StoredProcedure [dbo].[ResetRecharge]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[ResetRecharge](@regno varchar(50),@amt float,@remark varchar(200),@admin varchar(50),@flag varchar(100) output)     
as      
begin     
declare @TotalInv float,@appid int,@Invest float,@ShareMstsrno int,@tempAmt float,@reqId int      
set @TotalInv=0   
set @flag=''                         
if(not exists(select appmstid from AppMst where AppMstRegNo=@regno))  
begin  
 set @flag ='User not exists'  
 return ;  
end   
select @appid =appmstid from appmst where appmstregno=@regno      
select @TotalInv=isnull(SUM(amount),0) from Sharemst where appmstid=@appid and Amount>0     
  
set @tempAmt=@amt                     
if(@amt>0 and @TotalInv>0 and @amt<=@TotalInv)    
begin        
     
 set xact_abort on     
 begin transaction     
 insert into RefundMst (appmstid,Amount,doe,[status],Remark,adminid) values(@appid,@amt,dateadd(minute,330,getutcdate()),1,@remark,@admin)                 
 set @reqId=@@IDENTITY    
 while @tempAmt>0      
 begin      
  select top 1 @ShareMstsrno=srno,@Invest=amount from sharemst where appmstid=@appid and Amount>0 order by DOE                    
  if(@Invest>@tempAmt)                
  set @Invest=@tempAmt                
  if(@Invest>0 and @tempAmt>0)                
   update sharemst set EndAmount=@Invest,amount=Amount-@Invest,reqid=case when len(reqid)=0 then ReqId else reqid+','+convert(varchar,@reqId) end where amount>0 and Appmstid =@appid and srno=@ShareMstsrno                
  set @tempAmt=@tempAmt-@Invest                   
 end     
 update appmst set jamount=jamount-@amt,joinfor=joinfor-@amt where AppMstID=@appid and JAmount>0                     
 update appmst set appmstpaid=0 where jamount<=0 and appmstid=@appid                     
 --update RefundMst set [status]=1,statusDate=dateadd(minute,330,getutcdate()),AdminId=@admin where appmstid = @appid and [status]=0 and srno=@reqId    
 set @flag='1'   
 commit transaction     
end     
else     
 set @flag='Invalid amount. Must be non negative and less than the invested amount.'   
end





GO
/****** Object:  StoredProcedure [dbo].[ResetUserRecharge]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ResetUserRecharge](@srno int)              
as              
begin           
declare @id int      
declare @flag int      
declare @eAmt numeric      
declare @jAmt float      
declare @OldjAmt float      
      
set @id=0        
set @eAmt=0      
set @OldjAmt=0     
set @jAmt=0    
set @flag=0              
 set xact_abort on              
 begin transaction              
               
 select @id=appmstid from sharemst where srno=@srno      
 --update sharemst set EndAmount=amount,amount=0 where  appmstid=@id and srno=@srno      
 select @eAmt=EndAmount from sharemst where  appmstid=@id and srno=@srno       
     
 select @OldjAmt=jamount from appmst where  appmstid=@id      
    
 if(@eAmt<@OldjAmt)    
  begin    
  update appmst set jamount=jamount-@eAmt where  appmstid=@id      
  end    
 else    
  begin    
  update appmst set jamount=0 where  appmstid=@id      
  end    
    
 select @jAmt=jamount from appmst where  appmstid=@id      
 if(@jAmt=0)      
 begin      
  update appmst set appmstpaid=0 where  jamount=0 and  appmstid=@id      
 end      
 set @flag=1              
 if(@flag=1)              
  commit transaction              
 else              
  rollback transaction              
end





GO
/****** Object:  StoredProcedure [dbo].[result]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[result](@regno varchar(50) ,@payoutno int)           
as           
select TP, CPL,CPR,CFL,CFR,           
jumboclub1amt,        
TotalEarning,TDS,handlingCharges,dispachedamt,TPL,TPR,NPL,NPR,BFL,BFR,binaryamt,directAmt ,jumboclub1amt,jumboclub2amt,jumboclub3amt,jumboclub4amt         
from PaymentTranDraft a with(nolock) where a.appmstregno =@regno   and a.payoutno=@payoutno and a.paymentdisplay=1  







GO
/****** Object:  StoredProcedure [dbo].[result1]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[result1](@appmstid int,@payoutno int)   
as   
select p.TP, p.CPL,p.CPR,p.CFL,p.CFR,   
a.FranchiseAmt as jumboclub1amt,a.RefferalAmt as jumboclub2amt,   
a.TotalEarning,a.TDS,a.handlingCharges,a.dispachedamt,p.TPL,p.TPR,p.NPL,p.NPR,p.BFL,p.BFR,a.binaryamt,a.directAmt,a.ROIAmt    
from payoutMst a left outer join PaymentTranDraft p with(nolock) on a.appmstid=p.appmstid1 where a.appmstid=@appmstid  and a.payoutno=@payoutno





GO
/****** Object:  StoredProcedure [dbo].[result1roi]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[result1roi](@appmstid varchar(20),@payoutno int)                                                                      
as                                                                      
                                                                      
 select                                                                  
 income1,income2 ,totalearning,TDS,handlingCharges,dispachedamt,paymenttrandraftno,othercharges,            
TPL,TPR,NPL,NPR,BFL,BFR,CFL,CFR,CPL,CPR,TP                                                                   
 from paymenttrandraftroi with(nolock) where appmstid=@appmstid  and payoutno=@payoutno





GO
/****** Object:  StoredProcedure [dbo].[result1roitb]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[result1roitb](@appmstid varchar(20),@payoutno int)                                    
as                                    
 select                             
jumboclub1amt,       JumboClub2Amt,                     
totalearning,TDS,handlingCharges,dispachedamt                                  
                                     
 from paymenttrandraftROITB with(nolock) where appmstid=@appmstid  and payoutno=@payoutno





GO
/****** Object:  StoredProcedure [dbo].[resultROI]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[resultROI](@appmstid varchar(20),@payoutno int)                                          
as                                          
                                          
 select TP, CPL,CPR,CFL,CFR,                                      
round(income1,2) as income1,  round(income2,2) as income2,                                
totalearning,TDS,handlingCharges,dispachedamt,TPL,TPR,NPL,NPR,BFL,BFR,paymenttrandraftno                                          
                                           
 from paymenttrandraftroi with(nolock) where appmstid=@appmstid  and payoutno=@payoutno  and paymentdisplay=1





GO
/****** Object:  StoredProcedure [dbo].[resultROITB]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[resultROITB](@appmstid varchar(20),@payoutno int)   
as    
select round(jumboclub2Amt,2) as income1,  round(jumboclub1Amt,2) as income2,                                    
totalearning,TDS,handlingCharges,dispachedamt  
from paymenttrandraftroitb with(nolock) where appmstid=@appmstid  and payoutno=@payoutno  and paymentdisplay=1





GO
/****** Object:  StoredProcedure [dbo].[ReTopUser]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[ReTopUser] (@SessionRegNo varchar(50),@RegNo nvarchar(50),@PlanTypeID int,@PinNo varchar(50)='',  

@epassword varchar(50),@flag varchar(100) output,@bal decimal output)                

as                                               

begin                                               

declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float    
declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                                    
set @Bbalance=0                                                                                                                       
set @bal=0                                                                                        
set @flag=''                                   

set @rechargedAmt=0                                   

set @estimateReAmt=0                                                

set @getdate= getutcdate()                                                                                                              

select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                          

select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                                                                        

select top 1 @startDate=ReStartOn,@EndDate=ReEndOn,@estimateReAmt=TotalRecharge from WithdrawAmt where @getdate between ReStartOn and ReEndOn order by srno desc                                   

set @PlanTypeID=0    

select @PlanTypeID=productid from PINMst where allotedto>0  and RegNo=0 and paidAppMstId=0 and PinNo=@PinNo    

set @PlanTypeID=isnull(@PlanTypeID,0)    

select @Amount=Amount, @RevocherAmt=Amount, @Jf=JoinFor from PlanTypeMst where PlanTypeId =@PlanTypeID       

set @Amount=isnull(@Amount,0)       

if(@Amount is null or @Amount<=0)                                  

begin                                  

set @flag='Amount must be greater than zero.'          

return ;                                       

end       

if(not exists(select appmstid from AppMst where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)    

begin                                                      

set @flag='Invalid Transaction-Password.!'--invalid e-password                                                                                               

return;                                           

end                                                                          

else                      

begin                                                                             

set nocount on                                                                              

set xact_abort on                                                                                           

begin transaction                   

if(exists(select appmstregno from appmst where appmstregno=@regno))                   

Begin                 

Begin try                  

set @TranNo=ident_current('BankTran')                                                   

select @Srno=ident_current('requestmst')                                                          

if @PlanTypeID=1                  

set @Amount=@Amount            

insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint, TopupTime)                                               
values(@appmstid,@Amount,1,@getdate,@PlanTypeID,@regno,@srno,@TranNo,0, 1)    
select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                                

declare @ddate int 

declare @dddd date 

declare @CrateDate varchar(50)

set @ddate= DATEPART(dd,Getdate() ) 

SELECT  @CrateDate = CONVERT(CHAR(4), getdate(), 100) + CONVERT(CHAR(4), getdate(), 120)  

if(@ddate < 31 and @ddate > 24)

begin

set @dddd = CONVERT(VARCHAR(11),'01 ' + @CrateDate, 106)   

set @dddd= DATEADD(month, 1, @dddd); 

end

else if(@ddate <= 7 and @ddate >= 1)

begin

set @dddd = CONVERT(VARCHAR(11),'08 ' + @CrateDate, 106)   

end

else if(@ddate <= 14 and @ddate >= 08)

begin

set @dddd = CONVERT(VARCHAR(11),'15 ' + @CrateDate, 106)   

end

else if  (@ddate <= 23 and @ddate >= 15)

begin

set @dddd = CONVERT(VARCHAR(11),'24 ' + @CrateDate, 106)   

end

update appmst set jamount=@jf, Revoucher=@RevocherAmt*60, JoinFor=@jf,FastTrackDate=DateAdd(day, 7, @getdate),   ROIDate=@dddd where appmstregno=@regno                     
--*************                                                                                                                                  
--Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf    
--Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)    
--Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                          
--Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                          
----- ****** ( One Time Top Up Then Uncomment this Tag)----- ******                                                                                

--if @appmstpaid != 1                                                                                                                            
--begin         
--select   @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid    
------if(@JoinForAmt <> @PlanTypeID and @PlanTypeID=6 )                                           
------begin           
--------update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                     
--------update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0    
------end     
------else    
------begin                                                                
--------update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid       
--------update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                     
--------update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0    
------end    
--end           
update PINMst set PaidAppMstId=1,RegNo=@AppMstId,ActiveDate=@getdate where PinNo =@pinno and allotedto>0 and paidAppMstId=0    
--execute BinaryIncome  @regno ,@jf      
--execute DirectIncome  @AppMstId    
set @flag='1'    
set @bal=@Amount;            
end try                                   
begin catch                                  
set @flag=ERROR_MESSAGE()        
end catch                                   
end                                     
else                
set @flag='Invalid User ID !'                                                                                         
if(@flag='1')                                           
commit transaction                                           
else                                           
rollback transaction                                                                                                                                   
end                          
end 

GO
/****** Object:  StoredProcedure [dbo].[ReverseBinaryIncome]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[ReverseBinaryIncome] @downid nvarchar(50),@jf int,@ReDate datetime 
as  
BEGIN 
--1:1 plan 
declare @pair float ,@AppmstId int,@nbincome float,@regno nvarchar(50),@srno int 
,@pairRank float ,@parentid int ,@bincome float,@paid int 
declare @npair int 
select @appmstid=appmstid from appmst where appmstregno=@downid 
------leg count  
declare binarycur cursor for select parentid from apptran where appmstid=@appmstid  
open binarycur 
fetch next from binarycur into @parentid 
while @@Fetch_Status=0 
begin  
	select @regno=AppMstRegNo,@bincome=bincome,@paid=appmstpaid from AppMst where AppMstID =@parentid  
	set @nbincome=0  
	set @npair=0     
	set @pair=0      
	set @pairRank=0 
	set @srno=0 
	select @pairRank=pairRank  from appmst where appmstregno=@regno   
	select @pair=pairrank,@nbincome=amount,@srno=Sno  from causeid where userid=@parentid and PaymentCause='b' and causeid=@AppMstID and JoinFor=@jf and abs(DATEDIFF(second,effectdate,@ReDate))<=5
	if(@pairrank>=@pair and @pairRank>0) 
	begin  
		set @nPair=@pairrank-@pair 
		update appmst set pairrank=@nPair,npairrank=npairrank-@pair  where appmstregno=@regno 
		update appmst set cpl=npairrank,cpr=npairrank  where  appmstregno=@regno 
		update appmst set  bincome= bincome-@nbincome where appmstregno=@regno  
		update causeid set endAmount=Amount,Amount=0,iselegible=case when iselegible=1 then 0 else 0 end where sno=@srno 
	end         
	update appmst set carryleft=appmstlefttotal-pairrank,carryright=appmstrighttotal-pairrank  where AppMstRegNo=@regno                         
	fetch next  from binarycur into @parentid                                                                            
end           
---------------end while----------------------------------   
close binarycur                                                                  
deallocate binarycur  
end





GO
/****** Object:  StoredProcedure [dbo].[ReverseDirectIncome]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ReverseDirectIncome] @AppMstId int,@amount float,@ReDate datetime 
as                          
begin                         
declare @dincome float,@jf float,@srno int 
declare @s nvarchar(50) 
declare @sCode int 
declare @paid int  
set @dincome=0     
set @paid=0   
select @jf=joinfor ,@s=sponsorid  from appmst where appmstid=@AppMstId                          
select @paid=appmstpaid , @sCode=appmstid from appmst where appmstregno=@s                        
--direct income is 2% of topup amt        
select @dincome=amount,@srno=Sno  from causeid where userid=@sCode and PaymentCause='d' and causeid=@AppMstID and JoinFor=@jf and abs(DATEDIFF(second,effectdate,@ReDate))<=5  
if(@dincome>0) 
begin
  update causeid set endAmount=Amount,Amount=0,iselegible=case when iselegible=1 then 0 else 0 end where sno=@srno   
  --insert into CauseId (userid,causeid,PaymentCause,Amount,joinfor,iselegible) 
  --values(@sCode,@AppMstId,'d',@dincome,@amount,@paid)  
end  
end





GO
/****** Object:  StoredProcedure [dbo].[ReverseRecharge]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[ReverseRecharge](@regno varchar(50),@srno int,@admin varchar(50),@remark varchar(100),@flag varchar(100) out) 
as 
Declare @lastPayDate datetime,@amt float,@appid int,@sharemstID int,@adminID int,@ReDate datetime ,@jf float,@appmstpaid int,@sponsorid varchar(50),
@receiptNo varchar(50),@TranID int  
--Wallet variable declaration 
declare @BtranId int,@Bbalance float,@Abalance float,@check int,@Sappmstid int 
set @flag=''  
select @lastPayDate=isnull(PayToDate,Dateadd(MINUTE,330,GETUTCDATE())) from payoutdate  
if(not exists(select appmstid from appmst where AppMstRegNo=@regno))  
begin  
	set @flag='User not exists'  
	return;  
end 
else if(not exists(select srno from Sharemst where srno=@srno and Amount>0 and CAST(floor(Cast(doe as float)) as datetime)>CAST(floor(Cast(@lastPayDate as float)) as datetime)))  
begin  
	set @flag='Investment not exists after the last payout date.' 
	return; 
end  
else 
begin  
	set nocount on  
	set xact_abort on  
	begin transaction 
	begin try  
	select @appid=appmstid from appmst where AppMstRegNo =@regno  
	select @adminID=srno from ControlMst where username=@admin  
	select @amt =amount,@ReDate =DOE,@receiptNo=receiptno from Sharemst where srno=@srno
	set @jf=@amt 
	--execute [ReverseBinaryIncome] @regno,@amt,@ReDate 
	--execute [ReverseDirectIncome] @appid,@amt,@ReDate 
	Update AppMst Set AppMstLeftTotal = AppMstLeftTotal - @jf,TotalnewLeft=TotalNewLeft-@jf                                                                   
    Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @appid And AppMstLeftRight = 0)                                                                   
    Update AppMst Set AppMstRightTotal = AppMstRightTotal - @jf,TotalNewRight=TotalNewRight-@jf                                                                   
    Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @appid And AppMstLeftRight = 1)  
	
	-----------------------------  
	
	update sharemst set EndAmount=@amt,amount=Amount-@amt where srno=@srno and Amount=@amt and Amount>0 and  CAST(floor(Cast(doe as float)) as datetime)>CAST(floor(Cast(@lastPayDate as float)) as datetime) 
	set @sharemstID=@@IDENTITY   
	update appmst set jamount=jamount-@amt,joinfor=joinfor-@amt where AppMstID=@appid and JAmount>0    
	update appmst set appmstpaid=0 where jamount<=0 and appmstid=@appid  
	select @appmstpaid=appmstpaid,@sponsorid=SponsorID from appmst where AppMstID=@appid 
	if @appmstpaid =0                                                                                                                            
	begin                                    
		update appmst set newsponsortotal= newsponsortotal- 1 where appmstregno= @sponsorid                                                                                                                 
		--update appmst set appmstpaid=1,appPaiddatetime=dateadd(minute,330,getutcdate()) where appmstregno=@regno                                                                       
		update causeid set iselegible=0  where userid=@appid and iselegible=1 and CAST(floor(Cast(effectdate as float)) as datetime)>CAST(floor(Cast(@lastPayDate as float)) as datetime) 
	end   
	--Start wallet reverse
	select @TranID=TranID from RequestMst where srno=convert(int,replace(@receiptNo,'M','')) 
	select @Sappmstid=AppMstId from BankTran where BankTranId =@TranID 
	select @BtranId=isnull(max(BankTranId),0) from banktran where AppMstId=@Sappmstid   
	select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@Sappmstid and BankTranId=@BtranId                                                                
	if(@Amt>0)                                                                                        
	begin                                                                     
		set @Abalance=@Bbalance + @Amt  
		---insert1    
		insert into BankTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                  
		BankTranRemarks,bankTranStatus,pinsrno)                                            
		values (@Sappmstid,11,@appid,dateadd(minute,330,getutcdate()),@Amt,@Abalance,'Recharge Returned for the user'+@regno+' dated'+convert(varchar,@ReDate,103),1,'')                                                     
	end
	--End wallet reverse
		insert into ReverseMst (appmstid,Amount,doe,ShareMstID,AdminId,Remark) values(@appid,@amt,DATEADD(MINUTE,330,GETUTCDATE()),@sharemstID,@adminID,@remark)   
	commit transaction  
end try  
begin catch  
	rollback transaction  
end catch   
end





GO
/****** Object:  StoredProcedure [dbo].[RewardbyAutometic]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[RewardbyAutometic]   
AS  
BEGIN  
  
declare @appmstregno varchar(20) ,@parir bigint
declare binarycur cursor for select appmstregno, pairRank from appmst where  pairRank>=25                                                                                
open binarycur                                                                              
fetch next from binarycur into @appmstregno  ,@parir                                                                                   
while @@Fetch_Status=0                                                                                              
begin                                         
Exec CalculateReward  @appmstregno    
fetch next  from binarycur into @appmstregno ,@parir                   
end ----------end while--                  
close binarycur                      
deallocate binarycur                    
END  
GO
/****** Object:  StoredProcedure [dbo].[rewardlist]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[rewardlist](@mindate datetime,@maxdate datetime,@isGiven bit,@regno varchar(50))  
as   
declare @minPoint float  
if(exists(select srno from tblreward where CAST(FLOOR(cast(minDate as float))as datetime)=CAST(FLOOR(cast(@mindate as float))as datetime)))  
begin   
select t.srno ,t.appmstregno,a.appmstfname,t.pairrank,t.awardname,t.awardrank,convert (varchar(20),t.mindate,103) as minDate,  
convert (varchar(20),t.maxdate,103) as maxDate,convert(varchar(20),t.AwardAchivedDate,103) as AwardAchivedDate,t.comment from   
tblreward t,AppMst a  where t.AppMstregNo=a.appmstregno and  CAST(FLOOR(CAST(t.minDate as float)) as datetime) >=@minDate and     
CAST(FLOOR(CAST(t.maxDate as float)) as datetime) <=@maxDate and t.isGiven=@isGiven and a.AppMstRegNo like @regno   order by  t.awardrank  
end   
else   
begin  
select @minPoint=ISNULL(min(minPoint),0) from rewardMst   
select 0 as srno,c.AppMstRegNo,  
(select appmstfname from appmst where appmstregno=c.appmstregno) as appmstfname,  
c.TotalPair as pairrank,       
(select  isnull(min(name),'') from rewardMst where c.TotalPair between minPoint and maxPoint) as awardname,               
(select  isnull(min(rewardRank),'') from rewardMst where c.TotalPair between minPoint and maxPoint) as awardrank,                
convert(varchar,@minDate,103) as minDate,convert(varchar,@maxDate,103) as maxDate,'' as AwardAchivedDate,'' as comment,c.leftTotal,c.rightTotal  from               
(select appmstid,appmstregno,appmstdoj,leftTotal,rightTotal,case when leftTotal<=rightTotal then leftTotal else rightTotal end as TotalPair from           
(select appmstid,appmstregno,convert(varchar,appmstdoj,103) as appmstdoj,          
(select isnull(SUM(amount),0) from Sharemst where Appmstid in (select AppMstID from AppTran where ParentId=AppMst.AppMstID and AppMstLeftRight=0) and CAST(FLOOR(cast(doe as float))as datetime) between @mindate and @maxdate) as leftTotal,          
(select isnull(SUM(amount),0) from Sharemst where Appmstid in (select AppMstID from AppTran where ParentId=AppMst.AppMstID and AppMstLeftRight=1) and CAST(FLOOR(cast(doe as float))as datetime) between @mindate and @maxdate) as rightTotal          
from appmst where AppMstRegNo like @regno ) n where leftTotal>=@minPoint and rightTotal>=@minPoint) as c    
order by awardrank   
end





GO
/****** Object:  StoredProcedure [dbo].[RewardsAcc]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   CREATE proc [dbo].[RewardsAcc]
  as
  begin

SELECT      dbo.GetProfilePic(AppMst.AppMstRegNo) as ProfilePic , dbo.AppMst.AppMstFName, dbo.AppMst.AppMstState, dbo.AppMst.AppMstCity
FROM            dbo.VPTran INNER JOIN
                         dbo.AppMst ON dbo.VPTran.AppmstId = dbo.AppMst.AppMstID
						 where VPTran.banktranremarks='Reward' and VPTran.payoutno>4

						 end
GO
/****** Object:  StoredProcedure [dbo].[RewardStatus]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[RewardStatus](@regno varchar(50),@mindate datetime,@maxdate datetime) 
as 
declare @minPoint float,@tempPair float,@RewardRank int,@isInTable int 
select @minPoint=ISNULL(min(minPoint),0) from rewardMst where mindate=@mindate 
set @isInTable=case when exists(select srno from tblreward where minDate=@mindate) then 1 else 0 end 
-- query to get temporary (futur dated) pair
select @tempPair=c.TotalPair,
@RewardRank=(select  isnull(min(rewardRank),'') from rewardMst where c.TotalPair between minPoint and maxPoint)            
  from         
(select appmstid,appmstregno,appmstdoj,leftTotal,rightTotal,case when leftTotal<=rightTotal then leftTotal else rightTotal end as TotalPair from     
(select appmstid,appmstregno,convert(varchar,appmstdoj,103) as appmstdoj,    
(select isnull(SUM(amount),0) from Sharemst where Appmstid in (select AppMstID from AppTran where ParentId=AppMst.AppMstID and AppMstLeftRight=0) and CAST(FLOOR(cast(doe as float))as datetime) between @mindate and @maxdate) as leftTotal,  
(select isnull(SUM(amount),0) from Sharemst where Appmstid in (select AppMstID from AppTran where ParentId=AppMst.AppMstID and AppMstLeftRight=1) and CAST(FLOOR(cast(doe as float))as datetime) between @mindate and @maxdate) as rightTotal  
from appmst where AppMstRegNo=@regno) n where leftTotal>=@minPoint and rightTotal>=@minPoint) as c      
--
--query to get result to show on page
select srno,rewardrank,name,minpoint,imgurl,
case 
when (@isInTable=1 and  (select COUNT(*) from tblreward where AwardRank=rewardpostedMst.rewardrank and AppMstRegNo=@regno and minDate=@mindate and maxDate=@maxdate)>0) 
OR (@isInTable=0 and  rewardpostedMst.rewardrank=@RewardRank)
then '<span style=''color:red''>Achieved</span>' else '-' end as sts, 
case when (select COUNT(*) from tblreward where AwardRank=rewardpostedMst.rewardrank and AppMstRegNo=@regno and minDate=@mindate and maxDate=@maxdate and isnull(isGiven,0)=1)>0 then 'Given' else 'Not Given' end as given  
from rewardpostedMst  where CAST(FLOOR(CAST(rewardpostedMst.mindate as float)) as datetime) = @minDate and CAST(FLOOR(CAST(rewardpostedMst.maxdate as float)) as datetime) = @maxDate order by srno





GO
/****** Object:  StoredProcedure [dbo].[RewardTime]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[RewardTime] @regno varchar(50) ='YouthMate'     

as                             

begin                             

  declare @days int,@rank int,@D int,@RId int, @appPaiddatetime datetime,@minPoint int,@LPoint int,@RPoint int ,@Point varchar(50)           

  set @days=0                              

  set @rank=0           

  Set @RId=0      

  Set @D=0      

  Set @minPoint=0      

   select @appPaiddatetime=appPaiddatetime from appmst where appmstregno=@regno      

   Set @D=cast(DateDiff(dd,@appPaiddatetime,getutcdate()) as int)       

   select @days=DaysLimit,@rank=rewardRank from rewardmst where rewardrank=1                                                  

  --  1nd  Reward level      

   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno) and @D <=@days)      

   begin                                              

		Set @RId=1    

		Set @LPoint=0  

		Set @RPoint=0  

		Set @minPoint=0         

		Set @appPaiddatetime= CAST(FLOOR(cast(dateadd(day,@days,@appPaiddatetime) as float))as datetime)      

		select @minPoint=(minPoint*100) from rewardmst where rewardrank =1    

		select @LPoint=AppmstLeftTotal,@RPoint=AppmstRightTotal from appmst where appmstregno=@regno   

		if(@minPoint > @LPoint)  

		Set @LPoint=@minPoint - @LPoint  

		else  

		Set @LPoint=0  

		if(@minPoint > @RPoint)  

		Set @RPoint=@minPoint - @RPoint  

		else  

		Set @RPoint=0  

		Set @Point ='Left point :'+convert(varchar(50),@LPoint)+ '<br/> Right point :'+convert(varchar(50),@RPoint)  

   end                                                           

--  2nd  Reward level      

   select @days=DaysLimit,@rank=rewardRank from rewardmst where rewardrank=2                                                  

   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno) and @D <=@days and @RId=0)      

   begin                                              

		Set @RId=2     

		Set @minPoint=0   

		Set @LPoint=0  

		Set @RPoint=0      

		Set @appPaiddatetime= CAST(FLOOR(cast(dateadd(day,@days,@appPaiddatetime) as float))as datetime)    

		select @minPoint=(sum(minPoint)*100) from rewardmst where rewardrank in (1,2)      

		select @LPoint=AppmstLeftTotal,@RPoint=AppmstRightTotal from appmst where appmstregno=@regno   

		if(@minPoint > @LPoint)  

			Set @LPoint=@minPoint - @LPoint  

		else  

			Set @LPoint=0  

		if(@minPoint > @RPoint)  

			Set @RPoint=@minPoint - @RPoint  

		else  

			Set @RPoint=0  

		Set @Point ='Left point :'+convert(varchar(50),@LPoint)+ ' <br/>Right point :'+convert(varchar(50),@RPoint)    

   end        

   

   --  3rd  Reward level      

   select @days=DaysLimit,@rank=rewardRank from rewardmst where rewardrank=3                                                 

   if(not exists(select AppMstRegNo   from tblreward where awardrank=@rank and appmstregno=@regno) and @D <=@days and @RId=0)      

   begin                                              

		Set @RId=3     

		Set @minPoint=0   

		Set @LPoint=0  

		Set @RPoint=0      

		Set @appPaiddatetime= CAST(FLOOR(cast(dateadd(day,@days,@appPaiddatetime) as float))as datetime)    

		select @minPoint=(sum(minPoint)*100) from rewardmst where rewardrank in (1,2,3)      

		select @LPoint=AppmstLeftTotal,@RPoint=AppmstRightTotal from appmst where appmstregno=@regno   

		if(@minPoint > @LPoint)  

			Set @LPoint=@minPoint - @LPoint  

		else  

			Set @LPoint=0  

		if(@minPoint > @RPoint)  

			Set @RPoint=@minPoint - @RPoint  

		else  

			Set @RPoint=0  

		Set @Point ='Left point :'+convert(varchar(50),@LPoint)+ ' <br/>Right point :'+convert(varchar(50),@RPoint)    

   end        

   Select  @RId as RId,@appPaiddatetime as DTime,@Point as Point      

end 








GO
/****** Object:  StoredProcedure [dbo].[RewareINcomeVP]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[finalpayout] '2018-11-03', ''
-- select * from vptran where BankTranRemarks='reward' order by banktranid desc
--delete from vptran where BankTranRemarks='reward'
--select * from tblreward

--[RewareINcomeVP] 'GL218433',5000,4
 
CREATE   procedure[dbo].[RewareINcomeVP] (@regno varchar(50),@amount float, @reward bigint)                       
as                                      
begin                                                                
 

 
			declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float  , @appmstid bigint, @awarCT bigint, @CT bigint
			 set @awarCT =isnull((select count(awardrank) from tblreward where awardrank=@reward and appmstregno=@regno),0)    
			 
			 if   @awarCT=1                      
		begin
			set @appmstid=(select appmstid     from appmst where appmstregno=@regno)
		   select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid   
		   
		   if @BtranIdR =0
		   begin
		   set @BbalanceR=0
		   end
		   else
		   begin
		   select @BbalanceR=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR  
		   end
		   
		  set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@amount,0))   

		   set @CT =isnull((select count(payoutno) from VPTran where payoutno=@reward and AppMstId=@appmstid and BankTranRemarks= 'Reward'),0)
		   
		   if @CT=0
		   begin  
		 insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                     
		 values(@appmstid,3,@appmstid,getutcdate(),isnull(@amount,0),isnull(@balanceAmount,0),'Reward',@reward,0, DATEADD(MM,1, getutcdate()))                           
		  end   
		  end        
end 




GO
/****** Object:  StoredProcedure [dbo].[RewareINcomeVPNew]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 --[finalpayout] '2018-11-03', ''
-- select * from vptran where BankTranRemarks='reward' order by banktranid desc
--delete from vptran where BankTranRemarks='reward'
--select * from tblreward

--[RewareINcomeVPNew] 'GL218433',5000,4
 
CREATE   procedure[dbo].[RewareINcomeVPNew] (@regno varchar(50),@amount float, @reward bigint)                       
as                                      
begin                                                                
 

 
			declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float  , @appmstid bigint, @awarCT bigint, @CT bigint
			 set @awarCT =isnull((select count(awardrank) from tblreward where awardrank=@reward and appmstregno=@regno),0)    
			                     
		 
			set @appmstid=(select appmstid     from appmst where appmstregno=@regno)
		   select @BtranIdR=isnull(max(BankTranId),0) from VPTran where AppMstId=@appmstid   
		   
		   if @BtranIdR =0
		   begin
		   set @BbalanceR=0
		   end
		   else
		   begin
		   select @BbalanceR=isnull(BanktranBalance,0) from VPTran where appmstid=@appmstid and BankTranId=@BtranIdR  
		   end
		   
		  set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@amount,0))   

		   set @CT =isnull((select count(payoutno) from VPTran where payoutno=@reward and AppMstId=@appmstid and BankTranRemarks= 'Reward'),0)
		   
		   if @CT=0
		   begin  
		 insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                     
		 values(@appmstid,3,@appmstid,getutcdate(),isnull(@amount,0),isnull(@balanceAmount,0),'Reward',@reward,0, DATEADD(MM,1, getutcdate()))                           
		  end   
		  end        
 



GO
/****** Object:  StoredProcedure [dbo].[RightNode]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[RightNode](@regno varchar(50),@mindate datetime,@maxdate datetime)                    
as                    
begin                    
declare @appid int         
SELECT @appid=appmstid FROM appmst WHERE appmstregno=@regno          
        
select a.appmstid,a.appmstregno,a.membername,a.jamount,a.sponsorregno,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe from         
(Select AppMst.AppMstId,AppMst.AppMstRegNo,UPPER(AppMst.AppMstFName) as membername,appmst.jamount as jamount, convert(char(20),appmst.appmstdoj,103) as AppmstDOJ,            
AppMstSponsor.AppMstRegNo As SponsorRegNo from AppMst,apptran, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And             
AppMst.AppMstId = apptran.AppMstId and CAST(FLOOR(CAST(appmst.appmstdoj as float)) as datetime) between @mindate and @maxdate And             
apptran.ParentId =@appid  and apptran.appmstleftright=1 ) a   left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.appmstregno,a.membername,a.jamount,a.sponsorregno order by a.appmstid        
          
end





GO
/****** Object:  StoredProcedure [dbo].[RightSponsor]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[RightSponsor](@regno varchar(50),@mindate datetime,@maxdate datetime)        
as        
begin        
 if EXISTS(select appmstid,appmstregno from appmst where appmstregno=@regno)            
begin  
select a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.JAmount,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe from 
(           
select appmstid,UPPER(AppMstRegNo) as UserId,UPPER(AppMstTitle)+space(1)+UPPER(AppMstFName) as membername,UPPER(ParentID) as ParentID,LeftRight=case AppMstLeftRight when 1 then 'RIGHT' when 0 then 'LEFT' end , JAmount    
 from AppMst where SponsorId=@regno and AppMstLeftRight=1 and  CAST(FLOOR(CAST(appmstdoj as float)) as datetime) between CAST(FLOOR(CAST(@mindate as float)) as datetime) and CAST(FLOOR(CAST(@maxdate as float)) as datetime)  
) a left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.jamount

end        
end





GO
/****** Object:  StoredProcedure [dbo].[ROI_calculateincome]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[ROI_calculateincome](@todate datetime,@flag varchar(100) out)             
as             
begin             
                    
--plan changes on 7-jan 2013, now plan 1,2 and 3 roi given up to 2 yrs(24 months)                     
-- a new plan 4 is added having roi 2.5%  for 1 yrs(Month)                     
            
--Franchise income changed on 25-feb 2013, earlier franchise income distributed for the complete monthe of the recharged date,            
--Now franchise income will be distributed for the days calculated as  ROI income,            
--Hence the franchise before this date will not get rest days franchise income at the time of maturity, bcse already got              
      
--//Plan Type 5 is added on 23-March-2013 , Refferal and franchise will go monthly and ROI will go fixed 2.63 % after 1 Yr       
--//Plan 5 is like plan 3 except % 2.63 instead of 3% and ROI date  after 1 Yr instead of 2 Yrs .      
--//Plan 6(new plan added on 24-aug-2013) is like plan 3 roi 3% and ROI date  after 3 Yr instead of 2 Yrs .      
--//Plan 7(new plan added on 5-sep-2013) is like plan 7 roi 3% and ROI for 3 Yr but distribution Of ROI is Quaterly 
      
      
declare @fromdate datetime             
set @flag=0              
declare  @appmstid int,@Samount int,@srno int,@doe datetime,@ptype int,@planpercent                                                                          
float,@monthlyamount float,@ROIamount float,@NOofDays int,@TNo int,@planChangeOn datetime                                                                                  
declare @maxRDate datetime,@planType int,@IsElegiblePlanType3 int,@restDays int,@DayWiseAmt float,@ROIforRefferal float       
select @maxRDate= isnull(max(ToDate),'12/31/2010') from rdate                 
set @restDays=0                   
set @fromdate=@maxRDate+1                          
set @planChangeOn='2012-12-31'                            
--set @todate=CAST(FLOOR(CAST(DATEADD(minute, 330, getutcdate())  as float)) as datetime)                                  
set @planType=0             
            
set @IsElegiblePlanType3=0                                 
if(@fromdate>@maxRDate and @todate>=@fromdate)                                                             
begin         
 declare   ROI_CUR  cursor for select srno,appmstid,amount,doe,pintype from sharemst                                                                           
 where CAST(FLOOR(CAST(doe as float)) as datetime) <=@todate  and  appmstid in (select appmstid from appmst where appmstpaid=1)  and amount>0 and                     
 (case   
   
 when pintype in(4,5) and CAST(floor(Cast(DATEADD(YEAR,1,DOE) AS float)) AS datetime) > CAST(floor(cast(@todate as float)) AS datetime) then 1                         
 when pintype IN (1,2,3) and CAST(floor(Cast(DOE AS float)) AS datetime)<=cast(floor(cast(@planChangeOn as float)) AS datetime) and  CAST(floor(Cast(DATEADD(YEAR,1,DOE) AS float)) AS datetime) > CAST(floor(cast(@todate as float)) AS datetime) then 1      
  
 when pintype IN (1,2,3) and CAST(floor(Cast(DATEADD(YEAR,2,DOE) AS float)) AS datetime) > CAST(floor(cast(@todate as float)) AS datetime) then 1                       
 when pintype in(6,7) and CAST(floor(Cast(DATEADD(YEAR,3,DOE) AS float)) AS datetime) > CAST(floor(cast(@todate as float)) AS datetime) then 1   
 else 0 end )=1 order by srno                                                                                  
                     
 set nocount on                                                                                  
 set xact_abort on                                                                                  
 begin transaction                                                                                  
 open ROI_cur                                                                                  
 fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe,@planType                                                                                   
 while (@@fetch_status=0)   
 begin        
  if (@samount>0)        
  begin       
   set @monthlyamount=0       
   set @ROIamount=0       
   set @NOofDays=0       
   set @DayWiseAmt=0       
   set @ROIforRefferal=0       
   select @ptype=producttype from appmst where appmstid=@appmstid                                                        
   set @TNo=(DATEDIFF(day, @fromdate, @todate))+1                                              
   --select @planType=plantype from sharemst where srno=  @srno                                                           
   --if (@planType=1)                  
   -- set @monthlyamount=(@Samount*0.2)/(@Tno)                                                         
   --  else if (@planType=2)                                                         
   -- set @monthlyamount=(@Samount/15000)*2639                                                        
   -- else if (@planType=3)                
   -- set @monthlyamount=(@Samount/15000)*5438                                                        
   --else if (@planType=4)                             
   set @monthlyamount=(@Samount*0.03)/(@Tno)    
                                                             
   -- set @monthlyamount=(@Samount*@planpercent)/(@Tno)                                                                                                                                                  
   if (@doe<@fromdate)                                                                                  
   begin                                                                                   
    set  @NOofDays=(DATEDIFF(day, @fromdate, @todate))+1                                                                                 
    set @restDays=0                   
   end                                                                                  
   else                                                                                   
   begin                  
    set  @NOofDays=(DATEDIFF(day, @doe, @todate))                    
    set @restDays=DATEPART(day,@doe)                    
 end         
 --start set calculate topup amout day wise        
 if(@TNo=@NOofDays)          
 set @DayWiseAmt=@samount          
 else if(@TNo>0)          
    set @DayWiseAmt=@samount/@TNo*@NOofDays             
 else           
  set @DayWiseAmt=0          
 --End set calculate topup amout day wise        
                  
   if(@planType in(3,6))      
   begin                 
    set @ROIamount=@Samount*3/100                       
    set @ROIforRefferal=@DayWiseAmt*3/100       
    end      
    else if(@planType=4)                                
    set @ROIamount=@DayWiseAmt*2.63/100 
    else if(@planType=7) --Roi will be given quaterly 
		set @ROIamount=@DayWiseAmt*3/100      
    else if(@planType=5)       
    begin                
    set @ROIamount=@Samount*2.63/100                                    
    set @ROIforRefferal=@DayWiseAmt*2.63/100       
    end      
   else                                 
    set @ROIamount=@monthlyamount*(@NOofDays)       
          
    set @ROIforRefferal=case when @planType in(3,5,6) then  @ROIforRefferal else @ROIamount end         
   --select @plantype=producttype from appmst where appmstid=@appmstid                                                                            
                                   
   if ((select COUNT(*) from (select CONVERT(varchar(20),effectdate,103) as dte from CauseId where paymentcause='R' and @planType in(3,5,6) and joinfor=@srno group by CONVERT(varchar(20),effectdate,103)) as n )<12)                                
    set @IsElegiblePlanType3=1                                 
   else                                 
    set @IsElegiblePlanType3=0                       
                                   
   if(@ROIamount>0)                                  
   begin                                 
    if(@planType in(1,2,4,7) or(@planType in(3,5,6) and not exists(select sno from causeid where PaymentCause='ROI' and userid=@appmstid and JoinFor=@srno)))                                
    begin     
     --when plan type is 3 effectdate is 1 year later , and income will be roi amount + maturity amount                                 
                         
     update sharemst set netamt=@ROIamount,RestDays=case when @restDays>0 then @restDays else restdays end where srno=@srno                                       
     insert into causeid (userid,causeid,paymentcause,joinfor,amount,effectdate,iselegible,pairrank )                                                                          
     values (@appmstid,@appmstid,'ROI',@srno,case when @planType=3 then @Samount+(@ROIamount*24)   
     when @planType=5 then @Samount+(@ROIamount*12) when @planType=6 then @Samount+(@ROIamount*36) else @ROIamount end,  
     case when @planType=3 then DATEADD(year,2,@doe) when @planType=5 then DATEADD(year,1,@doe) when @planType=6 then DATEADD(year,3,@doe)  
 else @todate end,1,@planType)                                
    end        
                                 
    if(@ROIforRefferal>0 and (@planType in(1,2,4,7)) or (@planType in (3,5,6) and @IsElegiblePlanType3=1))                                  
     execute ReferalIncome @appmstid,@ROIforRefferal,@todate,@srno                                   
    --referral and franchise income will be distributed 12 times (12 months only)                                     
               
    --100000/28.0*3,2            
     if @DayWiseAmt>0 and  ((@planType in(1,2,4,7)) or (@planType in(3,5,6) and @IsElegiblePlanType3=1))                                
   execute LevelIncome @appmstid,@DayWiseAmt,@todate,@srno   --franchise income         
   end         
  end --if (@samount>0)         
  fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe,@planType              
 end ---endWhile                                           
 close ROI_CUR                                                                                  
 deallocate ROI_CUR                                                            
 insert into rdate  (FromDate,ToDate) values(@fromdate,@todate)                                                                     
 commit transaction                                                           
 set @flag='1'              
end              
else             
begin             
 set @flag='Invalid ROI date.'   
end   
end





GO
/****** Object:  StoredProcedure [dbo].[ROI_calculateincome_temp]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE  [dbo].[ROI_calculateincome_temp](@flag int)           
as           
begin           
declare @fromdate datetime,@todate datetime           
set @flag=0                                                       
declare  @appmstid int,@Samount int,@srno int,@doe datetime,@ptype int,@planpercent                                                  
float,@monthlyamount float,@ROIamount float,@NOofDays int,@TNo int                                                         
declare @maxRDate datetime,@planType int,@IsElegiblePlanType3 int                                      
select @maxRDate= isnull(max(effectdate),'12/31/2010') from causeid where paymentcause='ROI' and pairrank in(1,2)   
          
set @fromdate=@maxRDate+1          
set @todate='11-30-2012'
--CAST(FLOOR(CAST(DATEADD(minute, 330, getutcdate())  as float)) as datetime)          
set @planType=0         
set @IsElegiblePlanType3=0         
if(@fromdate>@maxRDate and @todate>=@fromdate)                                     
begin                                    
 declare   ROI_CUR  cursor for select srno,appmstid,amount,doe,pintype from sharemst                                                   
 where CAST(FLOOR(CAST(doe as float)) as datetime) <=@todate  and  appmstid in (select appmstid from appmst where appmstpaid=1)  and amount>0                                              
 order by srno                                                          
 set nocount on                                                          
 set xact_abort on                                                          
 begin transaction                                                          
 open ROI_cur                                                          
 fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe,@planType                                                           
 while (@@fetch_status=0)                                                          
 begin                 
  if (@samount>0)   
  begin                                                         
   set @monthlyamount=0                                              
   set @ROIamount=0                                              
   set @NOofDays=0                                              
   select @ptype=producttype from appmst where appmstid=@appmstid                                 
   set @TNo=(DATEDIFF(day, @fromdate, @todate))+1                                       
   --select @planType=plantype from sharemst where srno=  @srno                                                   
   --if (@planType=1)                                
   -- set @monthlyamount=(@Samount*0.2)/(@Tno)                                 
   --  else if (@planType=2)                                 
   -- set @monthlyamount=(@Samount/15000)*2639                                
   -- else if (@planType=3)                                 
   -- set @monthlyamount=(@Samount/15000)*5438                                
   --else if (@planType=4)                                 
   set @monthlyamount=(@Samount*0.03)/(@Tno)                                                
                                                        
   -- set @monthlyamount=(@Samount*@planpercent)/(@Tno)                                                                                                                          
   if (@doe<@fromdate)                                                          
   begin                                                           
    set  @NOofDays=(DATEDIFF(day, @fromdate, @todate))+1                                                         
   end                                                          
   else                                                           
    set  @NOofDays=(DATEDIFF(day, @doe, @todate))   
   if(@planType=3)        
    set @ROIamount=@Samount*3/100        
   else         
    set @ROIamount=@monthlyamount*(@NOofDays)                                                          
   --select @plantype=producttype from appmst where appmstid=@appmstid                                                    
           
   if ((select COUNT(*) from (select CONVERT(varchar(20),effectdate,103) as dte from CauseId where paymentcause='R' and @planType=3 and joinfor=@srno group by CONVERT(varchar(20),effectdate,103)) as n )<12)        
    set @IsElegiblePlanType3=1         
   else         
    set @IsElegiblePlanType3=0        
           
   if(@ROIamount>0)          
   begin         
    if(@planType in(1,2) or(@planType=3 and not exists(select sno from causeid where PaymentCause='ROI' and userid=@appmstid and JoinFor=@srno)))        
    begin        
     --when plan type is 3 effectdate is 1 year later , and income will be roi amount + maturity amount         
     update sharemst set netamt=@ROIamount where srno=@srno                                                    
     insert into causeid (userid,causeid,paymentcause,joinfor,amount,effectdate,iselegible,pairrank )                                                  
     values (@appmstid,@appmstid,'ROI',@srno,case when @planType=3 then @Samount+(@ROIamount*12) else @ROIamount end,case when @planType=3 then DATEADD(year,1,@doe) else @todate end,1,@planType)        
    end   
         
    if(@ROIamount>0 and (@planType in(1,2)) or (@planType=3 and @IsElegiblePlanType3=1))          
     execute ReferalIncome @appmstid,@ROIamount,@todate,@srno           
    --referral and franchise income will be distributed 12 times (12 months only)             
    if(@samount>0 and (@planType in(1,2)) or (@planType=3 and @IsElegiblePlanType3=1))          
     execute LevelIncome @appmstid,@samount,@todate,@srno   --franchise income                                                          
   end                                            
                               
  end --if (@samount>0)                               
  fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe,@planType                                                           
 end ---endWhile                   
 close ROI_CUR                                                          
 deallocate ROI_CUR                                    
 insert into rdate  (FromDate,ToDate) values(@fromdate,@todate)                                             
 commit transaction                                   
 set  @flag=1                       
end                       
else                       
begin                       
 set  @flag=11                        
end                         
end





GO
/****** Object:  StoredProcedure [dbo].[ROI_calculateincomejuly]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE   [dbo].[ROI_calculateincomejuly](@fromdate datetime,@todate datetime,@flag int output)                            
as                            
begin        
set  @flag=0                         
declare  @appmstid int,@Samount int,@srno int,@doe datetime,@ptype int,@planpercent                    
float,@monthlyamount float,@ROIamount float,@NOofDays int,@TNo int,@plantype int                            
declare @maxRDate datetime      
select @maxRDate= isnull(max(effectdate),'12/31/2010') from causeid where paymentcause='ROI'      
      
if(@fromdate>@maxRDate)       
begin      
      
declare   ROI_CUR  cursor for select srno,appmstid,amount,doe from sharemst                     
where CAST(FLOOR(CAST(doe as float)) as datetime) <=@todate  and  appmstid in (select appmstid from appmst where appmstpaid=1)  and amount>0                
order by srno                            
set nocount on                            
set xact_abort on                            
begin transaction                            
open ROI_cur                            
fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe                            
while (@@fetch_status=0)                            
begin                     
 if (@samount>0)                
 begin                           
  set @monthlyamount=0                
  set @ROIamount=0                
  set @NOofDays=0                
  select @ptype=producttype from appmst where appmstid=@appmstid   
    
set @TNo=(DATEDIFF(day, @fromdate, @todate))+1         
select @planType=plantype from sharemst where srno=  @srno                     
  if (@planType=1)  
 set @monthlyamount=(@Samount*0.2)/(@Tno)   
--  else if (@planType=2)   
-- set @monthlyamount=(@Samount/15000)*2639  
-- else if (@planType=3)   
-- set @monthlyamount=(@Samount/15000)*5438  
 else if (@planType=4)   
 set @monthlyamount=(@Samount*0.08)/(@Tno)                  
                         
 -- set @monthlyamount=(@Samount*@planpercent)/(@Tno)                                                                                            
  if (@doe<@fromdate)                            
  begin                             
   set  @NOofDays=(DATEDIFF(day, @fromdate, @todate))+1                           
  end                            
  else                             
   set  @NOofDays=(DATEDIFF(day, @doe, @todate))              
  set @ROIamount=@monthlyamount*(@NOofDays)                            
  --select @plantype=producttype from appmst where appmstid=@appmstid                      
  if(@ROIamount>0)                       
  begin                     
  update sharemst set netamt=@ROIamount where srno=@srno                      
  insert into causeid (userid,causeid,paymentcause,joinfor,amount,effectdate)                    
  values (@appmstid,@appmstid,'ROI',0,@ROIamount,@todate)         
  end              
if(@samount>0)  

if( CAST(FLOOR(CAST(@doe as float)) as datetime) >'07/31/2011')
  execute LevelIncome @appmstid,@samount,@noofdays,@tno,@todate  
else 
  execute LevelIncomeJuly @appmstid,@samount,@noofdays,@tno,@todate            
 end --if (@samount>0) 
                   
 fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe                            
end ---endWhile                            
close ROI_CUR                            
deallocate ROI_CUR      
insert into rdate  (FromDate,ToDate) values(@fromdate,@todate)               
commit transaction     
set  @flag=1                    
end      
else      
begin      
set  @flag=11       
end      
end





GO
/****** Object:  StoredProcedure [dbo].[ROI_calculateincomeOnMaturity]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE[dbo].[ROI_calculateincomeOnMaturity](@todate datetime,@flag varchar(100) out)                       
as                       
begin                       
--This proc created on 02-feb-2013,                       
--calculated all previous maturity completed amount and send to causeid as current date                       
--Franchise income changed on 25-feb 2013, earlier franchise income distributed for the complete monthe of the recharged date,                
--Now franchise income will be distributed for the days calculated as  ROI income,                
--Hence the franchise before this date will not get rest days franchise income at the time of maturity, bcse already got                  
                
declare @fromdate datetime                       
set @flag=0                        
declare  @appmstid int,@Samount int,@srno int,@doe datetime,@ptype int,@planpercent                       
float,@monthlyamount float,@ROIamount float,@NOofDays int,@TNo int,@planChangeOn datetime                        
declare @maxRDate datetime,@planType int,@IsElegiblePlanType3 int,@countToday int,@DayWiseAmt float,@FIncomeChangeOn datetime,        
@plan3ReferalChange datetime                          
--select @maxRDate= isnull(max(effectdate),'12/31/2010') from causeid where paymentcause='ROI' and pairrank in(1,2)                       
                            
--set @fromdate=@maxRDate+1                              
--set @planChangeOn='2012-12-31'                                
--set @todate=CAST(FLOOR(CAST(DATEADD(minute, 330, getutcdate())  as float)) as datetime)                         
select @maxRDate=max(effectdate) from CauseId where PaymentCause='ROI' group by userid having COUNT(Sno)>=13       
                      
set @planType=0                       
set @IsElegiblePlanType3=0                         
set @FIncomeChangeOn='2013-01-01'          
set @plan3ReferalChange='2013-03-01'         
--if(@maxRDate is null or cast(floor(cast(dateadd(MINUTE,330,GETUTCDATE()) as float))as datetime)>cast(floor(cast(@todate as float))as datetime)) changes on 2-1pr-2013                       
if(@maxRDate is null or cast(floor(cast(dateadd(MINUTE,330,GETUTCDATE()) as float))as datetime)>cast(floor(cast(@maxRDate as float))as datetime))                       
begin                        
 --We are calculatting ROI from 01-jan-2012 , so condition applied on topup after this date                   
 declare ROI_PART  cursor for select srno,s.appmstid,m.amount,s.doe,s.pintype,s.RestDays from sharemst s inner join maturitymst m on s.srno=m.sharemstid                       
 and s.appmstid=m.appmstid and s.pintype in(1,2,3,4,5,6,7) and isnull(s.RestDays,0)>0  and CAST(floor(Cast(s.DOE AS float)) AS datetime)>='2012-01-01' and       
 CAST(floor(Cast(m.DOE AS float)) AS datetime)=cast(floor(cast(@todate as float))as datetime) order by srno           
      
 set nocount on                       
 set xact_abort on                       
 begin transaction                       
 open ROI_PART                        
 fetch next from ROI_PART into @srno,@appmstid,@Samount,@doe,@planType,@NOofDays                       
 while (@@fetch_status=0)                       
 begin                
 set @DayWiseAmt=0                    
 if (@samount>0)                   
 begin                   
  set @monthlyamount=0                    
  set @ROIamount=0                    
  --set @NOofDays=0                   
  --select @ptype=producttype from appmst where appmstid=@appmstid                           
  set @TNo=0                        
  select @TNo=DATEDIFF(day, FromDate, ToDate)+1 from Rdate where cast(floor(cast(@doe as float)) as datetime) between fromdate and todate     
  --set @TNo=(DATEDIFF(day, @fromdate, @todate))+1     
  if(@TNo=0)           
   goto ReCont                                                      
  set @monthlyamount=(@Samount*0.03)/(@Tno)                        
                    
  --start set calculate topup amout day wise          
  if(@TNo=@NOofDays)            
   set @DayWiseAmt=@samount            
  else if(@TNo>0)            
   set @DayWiseAmt=@samount/@TNo*@NOofDays               
  else             
   set @DayWiseAmt=0            
  --End set calculate topup amout day wise          
          
                         
  if(@planType in(1,2))                   
   set @ROIamount=@monthlyamount*(@NOofDays)                                                          
  else if(@planType=4)                                  
   set @ROIamount=@DayWiseAmt*2.63/100 
   else if(@planType=7) 
   set @ROIamount=@DayWiseAmt*3/100             
  else if(@planType in(3,6))                                  
   set @ROIamount=@DayWiseAmt*3/100         
  else if(@planType=5)                                  
   set @ROIamount=@DayWiseAmt*2.63/100                 
  else                       
   set @ROIamount=0       
  --select @plantype=producttype from appmst where appmstid=@appmstid                                                                                
  if ((select COUNT(*) from (select CONVERT(varchar(20),effectdate,103) as dte from CauseId where paymentcause='R' and @planType in(3,5,6) and joinfor=@srno group by CONVERT(varchar(20),effectdate,103)) as n )<=12)                                    
   set @IsElegiblePlanType3=1                                     
  else                                     
   set @IsElegiblePlanType3=0                       
  if(@ROIamount>0 )                   
  begin                     
   --when plan type is 3 effectdate is 1 year later , and income will be roi amount + maturity amount                                     
   update sharemst set netamt=@ROIamount,RestDays=0 where srno=@srno                     
   if(@planType in(1,2,4,7))        
   begin        
    insert into causeid (userid,causeid,paymentcause,joinfor,amount,effectdate,iselegible,pairrank,endamount)                       
    values (@appmstid,@appmstid,'ROI',@srno,@ROIamount,@todate,1,@planType,@Tno)                     
   end           
   if(@planType in(1,2,4,5,6,7) or(@planType=3 and CAST(floor(cast(@doe as float)) as datetime)>=@plan3ReferalChange))                          
    execute ReferalIncome @appmstid,@ROIamount,@todate,@srno                                       
                  
   --referral and franchise income will be distributed 12 times (12 months only)                        
   if(@TNo=@NOofDays)               
    set @DayWiseAmt=@samount              
   else if(@TNo>0)              
    set @DayWiseAmt=@samount/@TNo*@NOofDays                 
  else               
   set @DayWiseAmt=0                  
   --100000/28.0*3,2                
  if(cast(floor(cast(@FIncomeChangeOn as float)) as datetime)<=CAST(floor(cast(@doe as float)) as datetime) and @DayWiseAmt>0 and ((@planType in(1,2,4,7)) or (@planType in(3,5,6) and @IsElegiblePlanType3=1)))                                      
   execute LevelIncome @appmstid,@DayWiseAmt,@todate,@srno   --franchise income                  
 end               
end --if (@samount>0)                   
ReCont:                        
fetch next from ROI_PART into @srno,@appmstid,@Samount,@doe,@planType,@NOofDays                                                                                       
end ---endWhile                                               
close ROI_PART                                                                                      
deallocate ROI_PART                                                                
commit transaction                        
 set  @flag='1'                                                   
end                        
else                                                   
begin                                                   
 set  @flag='Invalid ROI date.'                                                  
end                                                     
end





GO
/****** Object:  StoredProcedure [dbo].[ROIDetail]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from appmst  
--[DiamondNew] 'global', '0'  
--[Incomehistoryvpdraw] 'GL518347'  
CREATE proc  [dbo].[ROIDetail](@regno varchar(50) )    
AS  
begin  
 select   
 v.Payoutno  
 ,(case When v.BankTranMode=3 then '1' When v.BankTranMode<>3 then '0' end) as PVisible  
 ,V.BankTranId,A.AppMstRegNo  
 ,(A.AppMstTitle+SPACE(1)+A.AppMstFName)as Name   
 ,V.BankTranAmount  
 , V.BankTranBalance  
 ,case v.BankTranRemarks   
  
  When  'Payout' then 'Matching Income'   
   When  'ROI' then 'Performance Bonus'   
 When   'Reward' then 'Reward Bonus'    
 When   'Level' then 'Leadership Bonus'+CONVERT(VARCHAR,v.TranId)    
 when 'VP TRANSFER' then 'Transfer'    
 when 'withdraw' then 'withdraw'    
 when 'Under progress' then 'Under progress'     
 else  BankTranRemarks + ' '+ ISNULL( Reason,'') end  as      
  BankTranRemarks   
  ,   V.DispDate  
  ,V.IsActive  
  ,V.BankTranDate    
  from RPTran v(nolock) inner join AppMst A(nolock) on V.AppmstId=A.AppMstID and A.AppMstRegNo=@regno   
  LEFT join PaymentTranDraft P(NOLOCK) ON P.appmstid=v.AppmstId and p.payoutno=v.payoutno   
  order by V.BankTranId desc  
  
  
  
END  
  
  
--select * from appmst
GO
/****** Object:  StoredProcedure [dbo].[ROIfundtransfer]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  -- sp_help appmst      
    --WithdrawAotmeticAllID      
 --select * from bankmst where appmstid=7333      
 --select * from appmst where appmstregno='GL105537'      
--[crowdfundtransfer] 'GL105537',2850, ''      
CREATE procedure[dbo].[ROIfundtransfer](@appmstregno varchar(50),@amt float,   @flag varchar(100) output)        
as        
         
 begin        
       
 declare @appmstid bigint,@Bbalance float,@BtranId bigint , @TDS float, @HC float, @dispatch     
float ,@PayTranId bigint   ,    @AppMstMobile   varchar(50)  
  declare @email varchar(100)          
  set @flag='no data'        
 if not exists(select appmstregno from appmst where appmstregno=@appmstregno and appmstactivate=1 and appmstpaid=1)        
  begin        
   set @flag='User ID does not exist !'        
 return        
  end        
       
       
        
  set nocount on                                                  
                              
  set xact_abort on                                                                                       
 begin transaction         
 select @appmstid=appmstid from appmst where appmstregno=@appmstregno and appmstactivate=1 and appmstpaid=1        
 select @BtranId=isnull(max(BankTranId),0) from Rptran where AppMstId=@appmstid                                                                                       
 select @Bbalance=isnull(BanktranBalance,0) from Rptran where appmstid=@appmstid and BankTranId=@BtranId        
        
  if(@amt<=@Bbalance)        
  begin        
        
    declare @Branch varchar(100), @BankName varchar(100), @accno  varchar(50) , @mirc  varchar(50) , @ifsc  varchar(50), @hOLDERNme VARCHAR(50),  @PANnO VARCHAR(50)    
    
  select @PANnO=panno , @AppMstMobile=AppMstMobile from  appmst   where appmstid=@appmstid           
      
    select    @BankName= BankName, @accno = acno , @Branch=Branch ,   @ifsc=IFS , @mirc=MICR , @hOLDERNme=HolderName from  bankmst where Appmstid=@appmstid        
     set @Bbalance=@Bbalance-@amt        
     Declare @PanL int   
	 set @PanL=Len(@PANnO)
	 if @PanL=10
	 begin
	 set @TDS= @amt*5/100
	 end
	 else
	 begin
	 set @TDS= @amt*20/100
	 end     
     set @HC = @amt*10/100         
    set @dispatch = @amt - ( @TDS + @HC);        
  insert into Rptran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks)                      
  values (@appmstid,44,@appmstid,dateadd(minute,330,getdate()),@amt,@Bbalance,'Under progress')        
  set @PayTranId=0           
         
  insert into withdrawmst(appmstid,doe,amount,tds,handling,dispatch,remarks,[status],chequeno,wamount,bankname,dot,paymentmode,        
  ispaid,pan, paytranid,tranid,withdrawfrom,withby,withfor,paymentcause,acno,branch,ifsc,email,FranchiseId, BHolderName ,MobileNo, WType)        
  values(@appmstid,dateadd(minute,330,getdate()),@amt,@TDS,@HC,@dispatch,'Under progress',0,0,        
  @amt,@BankName,dateadd(minute,330,getdate()),'0',0,@PANnO,@paytranid,0,'0','0','0','0',@accno,@Branch,@ifsc, '0',0, @hOLDERNme, @AppMstMobile, 'ROI')        
      set @flag='1'                                                     
     end        
    else        
        
        
  begin        
       
   set @flag='Amount  must <=  '+convert(varchar(50),@Bbalance)        
   rollback transaction        
        
   return        
 end          
  if      
(@flag<>'1')        
  begin        
  set @flag='no data'        
 rollback transaction        
  return        
   end        
   else        
 commit transaction        
 end        
        
        
GO
/****** Object:  StoredProcedure [dbo].[ROISet]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ROISet]                                                                         
as                               
 begin     
 declare @TD varchar(20)                   
	SELECT  @TD = datename(dw,dbo.GetServerDate())
			if @TD = 'Sunday'
			BEGIN
			update Sharemst set   ReceiveStatus=0 where  ReceiveStatus=1                                    
			END      
End                 
                
GO
/****** Object:  StoredProcedure [dbo].[ROOTtryleg]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ROOTtryleg](@AppMstRegNo nvarchar(50))                          
as                          
begin             
   declare @count int        
  declare @amount float       
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@AppMstRegNo)         
     select @amount=isnull(sum(s.amount),0) from sharemst s,appmst a where s.appmstid=a.appmstid and a.appmstid in(Select AppMst.AppMstid from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId= apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@AppMstRegNo) )      
        
select appMstRegNo,AppMstFName,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,jamount,@count as cnt,@amount as investment,convert(varchar(20),appmstdoj,103) as doj from AppMst where appMstRegNo=@AppMstRegNo 
          
                      
end





GO
/****** Object:  StoredProcedure [dbo].[RunPayoutOrder]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[RunPayoutOrder] @a int        
as        
begin        
declare @d datetime       
 -- it run on end of the month        
 --finalpayout must be executed first         
 set @d=cast(floor(cast(DATEADD(minute,330,getutcdate()) as float)) as datetime)     
 execute finalpayout @d,'0'         
 execute ROI_calculateincome @d,'0'         
 execute finalpayoutROITB @d,'0'  
      
 if(DATEPART(MONTH,DATEADD(minute,330,getutcdate()))%3=0)        
  execute finalpayoutROI @d,'0'         

end





GO
/****** Object:  StoredProcedure [dbo].[s11]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  procedure  [dbo].[s11]  
as  
begin  
declare @min int,@max int  
declare @mobileno varchar(50),@fname  varchar(50),@dispachedamt float,@regno varchar(50)  
declare @msg varchar(50),@title varchar(50)  
select @mobileno=9811190082,@regno='10000',@fname='Arun' ,@title ='Mr',@dispachedamt=20000  
set @msg='Dear '+rtrim(ltrim(@title))+space(1) + ltrim(@fname) +' Payout for id '+ @regno + ' is Rs.: ' + CAST(@dispachedamt AS VARCHAR(200)) +''  
SELECT dbo.ValidateURL('http://sms.ayuveinfocom.com/sendurl.asp?user=20024067&pwd=45k4mm&senderid=REDMARS&mobileno='+@mobileno+'&msgtext='+@msg+'')  
end





GO
/****** Object:  StoredProcedure [dbo].[saveBankDetails]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[saveBankDetails](@regno varchar(200), @Branch1 varchar(200),@Branch2 varchar(200),@IFSCode1 varchar(50),@IFSCode2 varchar(50),@MICRCode1 varchar(50),@MICRCode2 varchar(50),@Acno1 varchar(50),@Acno2 varchar(50),@actype1 varchar(50),@actype2
  
 varchar(50))    
as    
begin    
declare @id int    
set xact_abort on    
set nocount on    
begin transaction    
select @id=appmstid from appmst where appmstregno=@regno    
update appbank set branch=@Branch2,ifscode=@IFSCode2,micrcode=@MICRCode2,acno=@Acno2,actype=@actype2 where appmstid=@id    
    
insert into recordappbank(appmstid,Branch1,Branch2,IFSCode1,IFSCode2,MICRCode1,MICRCode2,Acno1,Acno2,actype1,actype2)values(@id,@Branch1,@Branch2,@IFSCode1,@IFSCode2,@MICRCode1,@MICRCode2,@Acno1,@Acno2,@actype1,@actype2)    
    
commit transaction    
    
end





GO
/****** Object:  StoredProcedure [dbo].[saveDocs]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE procedure   [dbo].[saveDocs](@UserID varchar(50) ,@image varchar(100),@fType int)           
as          
 begin          
declare @srno int      
declare @count int      
         
select @srno=max(srno) from scanDocs          
if(@srno is null)           
begin          
set @srno=1          
end          
else          
begin          
set @srno=@srno+1          
end          
 select @count=count(*) from scanDocs where UserId=@UserID  and docType=@fType 
if(@count>0)    
 begin    
 update scanDocs set ImageName=@image where userId=@UserID    and docType=@fType 
 end    
else    
 begin    
 insert into scanDocs(srno,UserId,ImageName,docType)values(@srno,@UserID,@image,@fType)          
 end         
end

 
GO
/****** Object:  StoredProcedure [dbo].[SaveInvoiceLimit]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[SaveInvoiceLimit](@adminsrno int,@amount float,@remark varchar(200),@flag int output)  
as  
begin  
set xact_abort on  
set @flag=0  
 declare @doe datetime,@is int  
 begin transaction  
 set @is=0  
 select @is=isnull(count(*),0) from Admininvoicelimit where adminsrno=@adminsrno and cast(floor(cast(doe as float))as datetime)=cast(floor(cast(dateadd(minute,330,getutcdate()) as float))as datetime)  
 if(@is=0)  
 begin  
 if(@adminsrno is not null and @adminsrno>0 and (@amount between 10000 and 90000000))  
 begin  
  insert into Admininvoicelimit (AdminSrno,Amount,usedAmt,doe,remark) values(@adminsrno,@amount,0,dateadd(minute,330,getutcdate()),@remark)  
  set @flag=1  
    
 end  
 else  
 begin  
  set @flag=-1  
    
 end  
 end  
 else  
  set @flag=-2  
 if(@flag=1)  
  commit   
 else  
  rollback  
  
end





GO
/****** Object:  StoredProcedure [dbo].[saveProfileImage]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[saveProfileImage](@AppMstregno varchar(50) ,@image varchar(100))                 
as                
 begin                
declare @srno int            
declare @count int         
select @srno=max(srno) from ProfileImageMst                
if(@srno is null)                 
begin                
set @srno=1                
end                
else                
begin                
set @srno=@srno+1                
end                
 select @count=count(*) from ProfileImageMst where AppMstregno=@AppMstregno     
if(@count>0)          
 begin          
 update ProfileImageMst set ImageName=@image where AppMstregno=@AppMstregno     
 end          
else          
 begin          
 insert into ProfileImageMst(srno,AppMstregno,ImageName)values(@srno,@AppMstregno,@image)                
 end           
     
end





GO
/****** Object:  StoredProcedure [dbo].[selectGmailAccountInfo]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[selectGmailAccountInfo]                    
as                        
begin                        
select companyname, gmailAccount,gmailPassword from paymentmst
END





GO
/****** Object:  StoredProcedure [dbo].[selectpayoutdate]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[selectpayoutdate]                                          
as                                          
begin         
        
        
declare @payto int    
    
select @payto=max(payoutno) from  payoutdate    
    
select Convert( varchar(10),DATEADD(day, 1, PayToDate),103)  as Paydate,    
Convert( varchar(10),DATEADD(minute, 330, getutcdate()),103) AS Paytodate    
 from payoutdate  where payoutno=@payto    
      
                                
                                          
end





GO
/****** Object:  StoredProcedure [dbo].[SelectReward1]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SelectReward1] @regno varchar(50)                
as                
 select appmstregno,appmstDoj=convert(char(20),appmstdoj,100),appmstlefttotal,appmstrighttotal,appmstid,pairrank ,JoinFor             
 from appmst where AppMstRegNo=@regno





GO
/****** Object:  StoredProcedure [dbo].[selectSMSInformation]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[selectSMSInformation] 

as 

begin 

	select smsurl+'?userid='+profileid+'&password='+pwd+'&gsmid='+senderid as url,website as  companyname from paymentmst   where SMSCredit>0 

END


GO
/****** Object:  StoredProcedure [dbo].[selecttranb]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE proc  [dbo].[selecttranb]                          
  
as                        
  
declare @maxpayoutno int                      
  
select @maxpayoutno=max(payoutno)  from paymenttrandraft                      
  
if(@maxpayoutno>0)                      
  
begin                      
  
                      
  
select a.AppMstRegno as regno, b.AppMstMobile as MobileNo, a.binaryamt,a.directAmt, a.jumboclub1amt, a.jumboclub2amt   ,b.appmstFname,tds,handlingcharges,dispachedamt,  
  
TotalIncome=(a.binaryamt+a.directAmt) ,Totalearning=(a.binaryamt+a.jumboclub1amt),paymentfromdate=convert(char(10),a.paymentfromdate,103),paymenttodate=convert(char(10),a.paymenttodate,103  )                    
  
from paymenttrandraft a,appmst b where b.appmstregno=a.appmstregno and a.payoutno=@maxpayoutno                      
  
end  
  
  
  
  
  
  
  


GO
/****** Object:  StoredProcedure [dbo].[selecttranb1]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[selecttranb1]        
as        
      
select apptopayment=convert(char(10),paytodate,103),Appcurrent=convert(char(10),CurrentDate,103)     
,payoutno,(select case isnull(min(paymentDisplay),0) when 1 then 'Hide' when 0 then 'Show' else '' end from PaymentTranDraft  where   
payoutno=payoutdate.payoutno) as showHide from  payoutdate  order by PayoutNo





GO
/****** Object:  StoredProcedure [dbo].[selecttranb1ROITB]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[selecttranb1ROITB]                       
as                        
select appfrompayment=convert(char(10),payfromdate,103),apptopayment=convert(char(10),paytodate,103),Appcurrent=convert(char(10),CurrentDate,103), 
(select case isnull(min(paymentDisplay),0) when 1 then 'Hide' when 0 then 'Show' else '' end from paymenttrandraftROITB where payoutno=payoutdateroitb.payoutno) as showHide
,payoutno from  payoutdateroitb order by PayoutNo





GO
/****** Object:  StoredProcedure [dbo].[selecttranbRoi]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[selecttranbRoi]                                                          
as                                                        
declare @maxpayoutno int                                                      
select @maxpayoutno=max(payoutno)  from paymenttrandraftroi                                                      
if(@maxpayoutno>0)                                                      
begin                                                      
select a.Appmstid,a.income1,a.Dispachedamt,b.appmsttitle+space(1)+b.appmstFname as name,paymentfromdate=convert(char(10),a.paymentfromdate,103), paymenttodate=convert(char(10),a.paymenttodate,103)                
  from paymenttrandraftRoi a,appmst b where b.appmstregno=a.appmstid and a.payoutno=@maxpayoutno                                                      
end





GO
/****** Object:  StoredProcedure [dbo].[selecttranbroitb]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[selecttranbroitb]                        
as                      
declare @maxpayoutno int                    
select @maxpayoutno=max(payoutno)  from paymenttrandraftroitb                    
if(@maxpayoutno>0)                    
begin                    
                    
select a.Appmstid, a.jumboclub1amt, a.jumboclub2amt   ,b.appmstFname,tds,handlingcharges,dispachedamt,Totalearning=(a.jumboclub1amt+a.jumboclub2amt),paymentfromdate=convert(char(10),a.paymentfromdate,103),paymenttodate=convert(char(10),a.paymenttodate,103  )                  
from paymenttrandraftroitb a,appmst b where b.appmstregno=a.appmstid and a.payoutno=@maxpayoutno                    
end





GO
/****** Object:  StoredProcedure [dbo].[SendBulkSMS]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[SendBulkSMS](@Input varchar(50)=null,@type varchar(50),@mobiles varchar(8000),@text varchar(300),@flag int out)        
as        
begin        
declare @mob varchar(20),@name varchar(100),@Query varchar(8000),@TitleText varchar(400)         
if(@type='Mobile')        
 set @Query='select ''Friend'' as MemberName,items as AppMstMobile  from '+user_name()+'.split('''+@mobiles+''','','')'         
--single member                  
else if(@Type='s')     
 set @Query='select AppMstTitle+space(1)+AppMstFName as MemberName,isnull(AppMstMobile,''0'') as AppMstMobile from Appmst where AppMstRegNo='''+@Input+''''        
--all members                  
else if(@Type='a')                  
 set @Query='select AppMstTitle+space(1)+AppMstFName as MemberName,AppMstMobile from Appmst where len(AppMstMobile)>9'        
--downline members                  
else if(@Type='d')                  
 set @Query='select distinct AppMstTitle+space(1)+AppMstFName as MemberName,AppMstMobile from Appmst where  AppMstId in(select AppMstId from AppTran where ParentId=(select AppMstId from AppMst where AppMstRegNo='''+@Input+''') ) and len(AppMstMobile)>9'  
  
    
      
--payout members                  
else if(@Type='p')         
 set @Query='select distinct AppMstTitle+space(1)+AppMstFName as MemberName,AppMstMobile from Appmst where  AppMstId in(select AppMstId1 from paymenttrandraft where payoutno='''+@Input+''') and len(AppMstMobile)>9'        
--state members                  
else if(@Type='state')          
 set @Query='select distinct AppMstTitle+space(1)+AppMstFName as MemberName,AppMstMobile from Appmst where  AppMstState='''+@Input+''' and len(AppMstMobile)>9'         
        
--Set @Query='declare sms_cur cursor for '+ @Query        
exec (@Query)        
-- We don't have permission to run the HTTP_DB_ALERT proc     
/*    
open sms_cur         
fetch next from sms_cur into @name,@mob         
while @@FETCH_STATUS=0         
begin         
         
 set @TitleText='Dear, '+ @name + ', '+@text        
 if(select SMSCredit from PaymentMst)>0        
  execute [HTTP_DB_ALERT] @mob,@TitleText,'bulk',@flag out         
 else         
  set @flag=-1 --Sms credit reached to zero balance          
 fetch next from sms_cur into @name,@mob         
end         
close sms_cur         
deallocate sms_cur         
*/    
end





GO
/****** Object:  StoredProcedure [dbo].[SendPayoutToBank]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[SendPayoutToBank] @Payoutno int   
as   
begin   
set nocount on   
--,@dispatchamt float,   
declare @PayId int,@appmstid int,@appregno varchar(50),
@amount float,@Bbalance float,@BtranId int,@getdate datetime   
  
--------This will send 100% payout to cp     
set @getdate=dateadd(minute,330,getutcdate())             
if(exists(select PaymentTranDraftId from PaymentTranDraft where datediff(day,PaymentToDate,@getdate)<=1 and payoutno=@Payoutno))   
begin   
 select top 1 @Payoutno=payoutno from PaymentTranDraft where datediff(day,PaymentToDate,@getdate)<=1 and payoutno=@Payoutno   
end             
else             
return ;             
set xact_abort on                
begin transaction             
begin Try             
declare STB_cur cursor for select PaymentTranDraftId,appmstregno from PaymentTranDraft where payoutno=@Payoutno and isnull(paid_status,0)=0                
open STB_cur                
fetch from STB_cur into @payid,@appregno                  
while @@fetch_status=0                
begin                
 --set @dispatchamt=0             
 set @Bbalance=0             
 set @amount=0             
 set @BtranId=0             
         
 if(@appregno is not null and LEN(@appregno)>0)             
 begin      
  set @amount=0        
  set @BtranId=0         
  set @Bbalance=0             
  select @appmstid=appmstid from appmst where appmstregno=@appregno and appmstactivate=1                
  select @amount=dispachedAmt from PaymentTranDraft  where PaymentTranDraftId=@PayId and AppMstRegno=@appregno and payoutno=@Payoutno             
  
  ------------Start Send  to Cp Wallet ----------------        
   
     
  if(@amount>0)             
  begin   
  
   select @BtranId=isnull(max(BankTranId),0) from CPTran where AppMstId=@appmstid                                                                  
   select @Bbalance=isnull(BanktranBalance,0) from CPTran where appmstid=@appmstid and BankTranId=@BtranId                                                             
   set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@amount,0))         
    insert into CPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,         
    BankTranRemarks,payoutno,TranId)         
    values(@appmstid,3,@appmstid,@getdate,isnull(@amount,0),isnull(@Bbalance,0),'Payout',@Payoutno,@PayId)         
   update PaymentTranDraft set paid_status=1,tranBy='AUTOTRAN',TranId=0 where PaymentTranDraftId=@PayId and paid_status=0                  
  end           
  ------------End Send  to Cp Wallet----------------         
  
 end         
fetch from STB_cur into @payId,@appregno               
end --end while                
close STB_cur                
deallocate STB_cur          
 commit transaction         
end try         
begin catch         
 rollback transaction         
end catch         
end





GO
/****** Object:  StoredProcedure [dbo].[SendToBank]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[SendToBank] @a int    
as     
begin     
set nocount on         
declare @PayId int,@appmstid int,@appregno varchar(50),@dispatchamt float,          
@amount float,@Bbalance float,@BtranId int,@getdate datetime   
declare @Payoutno int       
--------This will send 50% of payout to IP wallet and 50% to CP Wallet ----  
set @getdate=dateadd(minute,330,getutcdate())       
if(exists(select PaymentTranDraftId from PaymentTranDraft where CAST(floor(cast(PaymentToDate as float)) as datetime)=CAST(floor(cast(@getdate as float)) as datetime)))       
begin       
 select top 1 @Payoutno=payoutno from PaymentTranDraft where CAST(floor(cast(PaymentToDate as float)) as datetime)=CAST(floor(cast(@getdate as float)) as datetime)      
end       
else       
return ;       
set xact_abort on          
begin transaction       
begin Try       
declare STB_cur cursor for select PaymentTranDraftId,appmstregno from PaymentTranDraft where payoutno=@Payoutno and isnull(paid_status,0)=0          
open STB_cur          
fetch from STB_cur into @payid,@appregno            
while @@fetch_status=0          
begin          
 set @dispatchamt=0       
 set @Bbalance=0       
 set @amount=0       
 set @BtranId=0       
   
 if(@appregno is not null and LEN(@appregno)>0)       
 begin      
  select @appmstid=appmstid from appmst where appmstregno=@appregno and appmstactivate=1          
  select @dispatchamt=dispachedAmt from PayoutMst where payid=@PayId and AppMstRegno=@appregno and payoutno=@Payoutno       
     ------------Start Send 50% to IP Wallet--------               
  set @amount=round(@dispatchamt/2.0,0) -- 50%   
  if(@amount>0)       
  begin          
   select @BtranId=max(BankTranId) from IPTran  where AppMstId=@appmstid                                                            
   select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@appmstid and BankTranId=@BtranId                                                       
   set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@amount,0))   
    insert into IpTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,   
    BankTranRemarks,BankTranStatus,payoutno,TranId)   
    values(@appmstid,3,@appmstid,@getdate,isnull(@amount,0),isnull(@Bbalance,0),'Payout',1,@Payoutno,@PayId)   
      
  end    
  ------------End Send 50% to IP Wallet--------      
  ------------Start Send 50% to Cp Wallet ----------------  
  set @amount=0  
  set @BtranId=0   
  set @Bbalance=0   
    
  set @amount=round(@dispatchamt/2.0,0) -- 50%   
  if(@amount>0)       
  begin          
   select @BtranId=max(BankTranId) from CPTran where AppMstId=@appmstid                                                            
   select @Bbalance=isnull(BanktranBalance,0) from CPTran where appmstid=@appmstid and BankTranId=@BtranId                                                       
   set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@amount,0))   
    insert into CPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,   
    BankTranRemarks,payoutno,TranId)   
    values(@appmstid,3,@appmstid,@getdate,isnull(@amount,0),isnull(@Bbalance,0),'Payout',@Payoutno,@PayId)   
      
  end     
  ------------End Send 50% to Cp Wallet----------------   
  update PaymentTranDraft set paid_status=1,tranBy='AUTOTRAN',TranId=0 where PaymentTranDraftId=@PayId and paid_status=0   
 end   
fetch from STB_cur into @payId,@appregno         
end --end while          
close STB_cur          
deallocate STB_cur    
 commit transaction   
end try   
begin catch   
 rollback transaction   
end catch   
end





GO
/****** Object:  StoredProcedure [dbo].[SendToBankROI]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[SendToBankROI](@Payoutno int)        
as        
begin        
declare @PmtTrnDrftId int,@appmstid int,@appregno varchar(50),@dispatchamt float,        
@amount float,@Bbalance float,@BtranId int,@flag int,@comment varchar(100)        
set xact_abort on        
if(not exists(select payoutno from banktran where payoutno=@Payoutno))        
begin        
declare STB_cur cursor for select srno,id from roi where payoutno=@Payoutno        
open STB_cur        
set @dispatchamt=0        
set @flag=0        
begin transaction        
fetch from STB_cur into @PmtTrnDrftId,@appregno        
while @@fetch_status=0        
begin        
 select @appmstid=appmstid from appmst where appmstregno=@appregno        
 select @dispatchamt=amount,@comment=comment from roi where srno=@PmtTrnDrftId and id=@appregno and payoutno=@Payoutno        
 set @Bbalance=0              
 set @amount=@dispatchamt        
 if(@amount>0)        
 begin        
 select @BtranId=max(BankTranId) from banktran where AppMstId=@appmstid                                                          
 select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@appmstid and BankTranId=@BtranId                                                     
 set @Bbalance = convert(float,@Bbalance) - convert(float,isnull(@amount,0))                                                    
 insert into banktran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                                    
 BankTranRemarks,BankTranStatus,payoutno,pinsrno)                                                     
 values(@appmstid,3,@appmstid,dateadd(minute,330,getutcdate()),isnull(@amount,0),isnull(@Bbalance,0),@comment,1,@Payoutno,0)                                                    
 set @amount=0              
 set @Bbalance=0        
 set @flag=1         
 end         
 fetch from STB_cur into @PmtTrnDrftId,@appregno        
end --end while        
close STB_cur        
deallocate STB_cur         
if(@flag=1)        
 commit transaction        
else        
 rollback        
end        
end





GO
/****** Object:  StoredProcedure [dbo].[SendToBankTemp]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[SendToBankTemp]         
as          
begin          
declare @PmtTrnDrftId int,@appmstid int,@appregno varchar(50),@dispatchamt float,          
@amount float,@Bbalance float,@BtranId int,@flag int,@award varchar(50)          
set xact_abort on          
declare STB_cur cursor for select appmstid,isnull(amount,0) from temp  
open STB_cur    
set @dispatchamt=0    
set @flag=0          
begin transaction          
fetch from STB_cur into @appmstid ,@dispatchamt  
while @@fetch_status=0  
begin          
 set @Bbalance=0                
 set @amount=@dispatchamt  
 if(@amount>0)  
 begin          
 select @BtranId=max(BankTranId) from banktran where AppMstId=@appmstid                                                            
 select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@appmstid and BankTranId=@BtranId                                                       
 set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@amount,0))                                                      
 insert into banktran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                                      
 BankTranRemarks,BankTranStatus,payoutno,pinsrno)                                                       
 values(@appmstid,100,@appmstid,dateadd(minute,330,getutcdate()),isnull(@amount,0),isnull(@Bbalance,0),'Handling Charge Refund',1,9,0)                                                      
 set @amount=0                
 set @Bbalance=0  
 set @flag=1           
 end           
 fetch from STB_cur into @appmstid ,@dispatchamt  
end --end while          
close STB_cur          
deallocate STB_cur           
if(@flag=1)          
 commit transaction          
else          
 rollback          
  
end





GO
/****** Object:  StoredProcedure [dbo].[SendToBanktheft]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create proc  [dbo].[SendToBanktheft](@Payoutno int)        
as        
begin        
declare @PmtTrnDrftId int,@appmstid int,@appregno varchar(50),@dispatchamt float,        
@amount float,@Bbalance float,@BtranId int,@flag int,@comment varchar(100),@paidAppMstid int,@Pregno varchar(50)        
set xact_abort on        
if(not exists(select payoutno from banktran where payoutno=@Payoutno))        
begin        
declare STB_cur cursor for select srno,id,Pregno from roi where payoutno=@Payoutno        
open STB_cur        
set @dispatchamt=0        
set @flag=0        
begin transaction        
fetch from STB_cur into @PmtTrnDrftId,@appregno,@Pregno        
while @@fetch_status=0        
begin        
 select @appmstid=appmstid from appmst where appmstregno=@appregno  
 select @paidAppMstid=appmstid from appmst where appmstregno=@Pregno       
 select @dispatchamt=amount,@comment=comment from roi where srno=@PmtTrnDrftId and id=@appregno and payoutno=@Payoutno        
 set @Bbalance=0              
 set @amount=@dispatchamt        
 if(@amount>0)        
 begin        
 select @BtranId=max(BankTranId) from banktran where AppMstId=@appmstid                                                          
 select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@appmstid and BankTranId=@BtranId                                                     
 set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@amount,0))                                                    
 insert into banktran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                                    
 BankTranRemarks,BankTranStatus,payoutno,pinsrno)                                                     
 values(@appmstid,3,@paidappmstid,dateadd(minute,330,getutcdate()),isnull(@amount,0),isnull(@Bbalance,0),@comment,1,@Payoutno,0)                                                    
    
 end
begin        
 select @BtranId=max(BankTranId) from banktran where AppMstId=@Paidappmstid                                                          
 select @Bbalance=isnull(BanktranBalance,0) from banktran where appmstid=@Paidappmstid and BankTranId=@BtranId                                                     
 set @Bbalance = convert(float,@Bbalance) - convert(float,isnull(@amount,0))                                                    
 insert into banktran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,                                                    
 BankTranRemarks,BankTranStatus,payoutno,pinsrno)                                                     
 values(@paidappmstid,3,@appmstid,dateadd(minute,330,getutcdate()),isnull(@amount,0),isnull(@Bbalance,0),@comment,1,@Payoutno,0)                                                    
 set @amount=0              
 set @Bbalance=0        
 set @flag=1         
 end             
 fetch from STB_cur into @PmtTrnDrftId,@appregno,@pregno       
end --end while        
close STB_cur        
deallocate STB_cur         
if(@flag=1)        
 commit transaction        
else        
 rollback        
end        
end





GO
/****** Object:  StoredProcedure [dbo].[SendTopUpToBank]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[SendTopUpToBank] @flag varchar(100) out     
as           
begin           
	set nocount on               
	declare @PayId int,@appmstid int,@appregno varchar(50),@dispatchamt float,@Ralamount as float ,               
	@amount float,@Bbalance float,@BtranId int,@getdate datetime  ,@Payoutno int        
	       
	--investment *1.5 will be given after 60 days      
	--------This will send 50% of payout to IP wallet and 50% to CP Wallet ----        
	set @getdate=dateadd(minute,330,getutcdate())             
				 
	set xact_abort on                
	begin transaction             
	begin Try             
	declare STB_cur cursor for select srno,appmstid from Sharemst where Amount>0 and DATEDIFF(day,doe,@getdate)>60     
	open STB_cur                
	fetch from STB_cur into @payid,@appmstid                  
	while @@fetch_status=0                
	begin                
		 set @dispatchamt=0             
		 set @Bbalance=0             
		 set @amount=0             
		 set @BtranId=0             
		 set @Ralamount=0		 
		 if(@appmstid is not null and LEN(@appmstid)>0)             
		 begin            
			  select @Ralamount=amount from Sharemst where srno=@PayId and Appmstid=@appmstid  
			  select @dispatchamt=amount*1.5 from Sharemst where srno=@PayId and Appmstid=@appmstid     
				 ------------Start Send 50% to IP Wallet--------                     
			  set @amount=round(@dispatchamt/2.0,0) -- 50%         
			  if(@amount>0)             
			  begin                
			   select @BtranId=max(BankTranId) from IPTran  where AppMstId=@appmstid                                                                  
			   select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@appmstid and BankTranId=@BtranId                                                             
			   set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@amount,0))         
				insert into IpTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,         
				BankTranRemarks,BankTranStatus,payoutno,TranId)         
				values(@appmstid,3,@appmstid,@getdate,isnull(@amount,0),isnull(@Bbalance,0),'MATURITY',1,@Payoutno,@PayId)         
					
		  end          
		  ------------End Send 50% to IP Wallet--------            
		  ------------Start Send 50% to Cp Wallet ----------------        
		  set @amount=0        
		  set @BtranId=0         
		  set @Bbalance=0         
				  
		  set @amount=round(@dispatchamt/2.0,0) -- 50%         
		  if(@amount>0)             
		  begin                
			   select @BtranId=max(BankTranId) from CPTran where AppMstId=@appmstid                                                                  
			   select @Bbalance=isnull(BanktranBalance,0) from CPTran where appmstid=@appmstid and BankTranId=@BtranId                                                             
			   set @Bbalance = convert(float,@Bbalance) + convert(float,isnull(@amount,0))         
				insert into CPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,         
				BankTranRemarks,payoutno,TranId)         
				values(@appmstid,3,@appmstid,@getdate,isnull(@amount,0),isnull(@Bbalance,0),'MATURITY',@Payoutno,@PayId)         
					
		  end           
		  ------------End Send 50% to Cp Wallet----------------      
		  insert into MaturityMst (SharemstID,appmstid,Amount,Doe,isGiven,MaturityDate)     
		 select srno,Appmstid,Amount,@getdate,0,DATEADD(day,60,doe) from Sharemst where srno=@PayId and Appmstid=@appmstid     
					 
		 --Update Appmst             
		 update AppMst set JAmount=JAmount-@Ralamount from  AppMst where AppMstID=@AppMstID     
				
				
		--Update Sharemst                      
		 update Sharemst set EndAmount=Amount,Amount=0 where Amount>0 and srno=@PayId     
			  
	 end         
	fetch from STB_cur into @payId,@appmstid               
	end --end while                
	close STB_cur                
	deallocate STB_cur      
	
	
				 
							 
	set @flag='1'         
	 commit transaction     
	end try         
	begin catch         
	 rollback transaction         
	end catch     
end





GO
/****** Object:  StoredProcedure [dbo].[Session_f_reg_exists]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[Session_f_reg_exists](@regno varchar(50))    
as    
select fname from franchisereg where userid=@regno





GO
/****** Object:  StoredProcedure [dbo].[SessionAdminExsist]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[SessionAdminExsist](@uname varchar(50))          
as          
begin          
      If Exists(SELECT username,password from controlMst where username=@uname and admintype<>'sa'  )    
SELECT username,password from controlMst where username=@uname     
end





GO
/****** Object:  StoredProcedure [dbo].[SessionSuperAdminExsist]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[SessionSuperAdminExsist](@uname varchar(50))        
        
as        
begin        
      If Exists(SELECT username,password from controlMst where username=@uname and admintype='sa')
	SELECT username,password from controlMst where username=@uname
end





GO
/****** Object:  StoredProcedure [dbo].[SessionuserExsist]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[SessionuserExsist](@regno varchar(50))      
      
as      
begin      
   If Exists(SELECT AppMstFname,AppMstRegNo from AppMst where AppMstRegNo=@regno  ) 
SELECT AppMstFname,AppMstRegNo from AppMst where AppMstRegNo=@regno  
end





GO
/****** Object:  StoredProcedure [dbo].[set_tranid_pinmst]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[set_tranid_pinmst](@date datetime)  
as  
begin  
create table #temp (srno int identity(1,1),pinsrno int,allotedto int)  
insert into #temp select pinsrno,allotedto from PINMst where  CAST(FLOOR(CAST(allotmentdate as float)) as datetime)=@date  and allotedto!=0
declare @count int,@i int,@pre int,@curr int,@pinsrno int  
select @count=COUNT(*) from #temp  
set @count=@count+1  
set @i=1  
while(@i<@count)  
begin  
set @pre=0  
set @curr=0  
set @pinsrno=0  
select @curr=isnull(allotedto,0),@pinsrno=pinsrno from #temp where srno=@i  
select @pre=isnull(allotedto,0) from #temp where srno=@i-1  
declare @tid int  
select @tid=ISNULL(MAX(tranid),1) from PINMst   
if(@curr!=@pre)  
begin  
set @tid=@tid+1  
update PINMst set tranid=@tid where pinsrno=@pinsrno  
end  
else  
begin  
update PINMst set tranid=@tid where pinsrno=@pinsrno  
end  
set @i=@i+1  
end  
end





GO
/****** Object:  StoredProcedure [dbo].[setdate]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc[dbo].[setdate](@adate datetime,@flag varchar(100) output)
as
begin
if exists(select activedate from admintable where cast(floor(cast(activedate as float)) as datetime)= cast(floor(cast(@adate as float)) as datetime))
begin
set @flag='Set date already exists,please set another date !'
return
end
insert into  admintable(activedate) values(cast(floor(cast(@adate as float)) as datetime))
set @flag=1
end




GO
/****** Object:  StoredProcedure [dbo].[SetOnceWithdrawAmt]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[SetOnceWithdrawAmt](@amt float,@flag int output)    
as    
begin    
set @flag=0  
 insert into WithdrawAmt (Totalwithdraw,Oncewithdraw,doe)     
 values(0,@amt,dateadd(minute,330,getutcdate()))    
set @flag=1  
end





GO
/****** Object:  StoredProcedure [dbo].[setSentSMSstatus]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[setSentSMSstatus] (@fromdate datetime,@Todate datetime,@appmstregno varchar(50))                  
as         
begin     
set nocount on  
set xact_abort on  
begin transaction   
update paymenttrandraft set sentSMS=1 where  appmstid=@appmstregno  and  CAST(FLOOR(CAST(paymentfromdate as float)) as datetime)=@fromdate and CAST(FLOOR(CAST(paymenttodate as float)) as datetime) =@Todate  
  
   
  
commit transaction   
end





GO
/****** Object:  StoredProcedure [dbo].[setTOPUPselection]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[setTOPUPselection](@selection int,@srno int)  
as  
begin  
  
update sharemst set selection=@selection where srno=@srno  
end





GO
/****** Object:  StoredProcedure [dbo].[SetTotalWithdrawAmt]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[SetTotalWithdrawAmt](@amt float,@flag int output)    
as    
begin    
set @flag=0  
 insert into WithdrawAmt (Totalwithdraw,Oncewithdraw,doe)     
 values(@amt,0,dateadd(minute,330,getutcdate()))    
set @flag=1  
end





GO
/****** Object:  StoredProcedure [dbo].[ShopingCommision]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Proc [dbo].[ShopingCommision] (@CartId int,@Regno varchar(50))

as

Begin

Declare @Qty int,@Price float, @Totalprice float, @PID varchar(50), @AppMstid int, @Retailertypeid int, @fieldCount int, @RowNumber int

Declare @Retailer1 int, @Retailer2 int, @Retailer3 int, @UserPrice int, @commision int, @causeid int, @SponSorId varchar(50)

		IF(Exists(select AppMstid from AppMst where AppMstRegno=@Regno  and Retailertypeid in (1,2,3) ))

		Begin

					Set @Retailer1=0

					Set @Retailer2=0

					Set @Retailer3=0

					Set @UserPrice=0

					select @AppMstid=AppMstid from AppMst where AppMstRegno=@Regno

					Set @causeid=@AppMstid

					select @fieldCount=Count(*) from CartProductMst where Cartid=@CartId

					IF(@fieldCount>0)  

					 BEGIN  

							SET @RowNumber=1  

							WHILE(@fieldCount>0)  

							BEGIN  

									 WITH CTE AS  

									(

									SELECT ROW_NUMBER() OVER (ORDER BY CartProductId) as NUM, * FROM CartProductMst where Cartid=@CartId

									 )  

									SELECT @Qty=Quantity,@PID=PID From CTE WHERE NUM=@RowNumber 

									select @Retailer1=@Retailer1+(Retailer1*@Qty), @Retailer2=@Retailer2+(Retailer2*@Qty), @Retailer3=@Retailer3+(Retailer3*@Qty),@UserPrice=@UserPrice+(price*@Qty)  

									from shopproductMst where pid=@PID

									SET @RowNumber=@RowNumber+1  

									SET @fieldCount=@fieldCount-1  

							 END 

					END  

			select @SponSorId=sponsorid from AppMst where AppMstid=@AppMstId   and Retailertypeid in (1,2,3)                

			select @AppMstId=AppMstId, @Retailertypeid=Retailertypeid from AppMst where AppMstRegno=@SponSorId    and Retailertypeid in (1,2)					

			while @AppMstId>0           

			begin      	

					  Set @commision=0

					  if(@Retailertypeid=1)          

							set @commision= @Retailer2-@Retailer1      

					  else if(@Retailertypeid=2)                 

							set @commision= @Retailer3-@Retailer2    

					  else           

							set @commision=0           

					  if(@commision!=0)           

							execute AddIncomeToLoad @AppMstId,@causeid,@CartId,@commision,'Shoping Commision',0,0           

					  select @SponSorId=sponsorid from AppMst where AppMstid=@AppMstId   and Retailertypeid in (1,2)       

						Set @AppMstId=0

					  select @AppMstId=AppMstId, @Retailertypeid=Retailertypeid  from AppMst where AppMstRegno=@SponSorId    and Retailertypeid in (1,2)

					 set @AppMstId=isnull(@AppMstId,0)

			End --End of While  

			--Start Give Commission to Admin          

			--if(@commision!=0)           

					  -- execute AddIncomeToLoad -111,@causeid,@CartId,@commision,'Shoping Commision',0,0           

		End

End


GO
/****** Object:  StoredProcedure [dbo].[ShowALLModifications]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[ShowALLModifications](@regno varchar(50))  
as  
begin  
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )           
begin  
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte from ModifyInvestment where appmstregno=@regno  
end  
end





GO
/****** Object:  StoredProcedure [dbo].[ShowALLModificationsD]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowALLModificationsD](@regno varchar(50),@minDate datetime,@maxDate datetime)    
as    
begin    
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )             
begin    
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1,admin from ModifyInvestment where  CAST(FLOOR(CAST(date as float)) as datetime) between @minDate and @maxDate and appmstregno=@regno 
end    
end





GO
/****** Object:  StoredProcedure [dbo].[ShowAmountModifications]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowAmountModifications](@regno varchar(50))    
as    
begin    
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )             
begin    
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=1 and appmstregno=@regno    
end    
end





GO
/****** Object:  StoredProcedure [dbo].[ShowAmountModificationsD]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowAmountModificationsD](@regno varchar(50),@minDate datetime,@maxDate datetime)      
as      
begin      
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )               
begin      
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=1 and CAST(FLOOR(CAST(date as float)) as datetime) between @minDate and @maxDate and appmstregno=@regno 
     
end      
end





GO
/****** Object:  StoredProcedure [dbo].[ShowDeletedRequest]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowDeletedRequest]                            
as                            
begin                            
   select (select upper(AppmstFname) from appmst where appmstregno=delRequestMst.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=delRequestMst.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,convert(varchar,approvaldate,103) as AppDate,convert(varchar,date,103) as delDate,requestno,receiptno,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,comment,admin from delRequestMst                            
                         
end





GO
/****** Object:  StoredProcedure [dbo].[ShowDelRequestByID]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowDelRequestByID](@ID varchar(50))                            
as                            
begin                            
   select (select upper(AppmstFname) from appmst where appmstregno=delRequestMst.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=delRequestMst.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,convert(varchar,approvaldate,103) as AppDate,convert(varchar,date,103) as delDate,requestno,receiptno,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,comment,admin from delRequestMst   where  appmstregno=@ID            
               
    
         
end





GO
/****** Object:  StoredProcedure [dbo].[ShowDelRequestByRNO]    Script Date: 10/28/2020 2:04:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowDelRequestByRNO](@RNO int)                            
as                            
begin                            
   select (select upper(AppmstFname) from appmst where appmstregno=delRequestMst.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=delRequestMst.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,convert(varchar,approvaldate,103) as AppDate,convert(varchar,date,103) as delDate,requestno,receiptno,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,comment,admin from delRequestMst   where  ReceiptNo=@RNO             
               
   
         
end





GO
/****** Object:  StoredProcedure [dbo].[ShowDOJModifications]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowDOJModifications](@regno varchar(50))    
as    
begin    
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )             
begin    
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=2 and appmstregno=@regno    
end    
end





GO
/****** Object:  StoredProcedure [dbo].[ShowDOJModificationsD]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowDOJModificationsD](@regno varchar(50),@minDate datetime,@maxDate datetime)      
as      
begin      
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )               
begin      
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=2 and CAST(FLOOR(CAST(date as float)) as datetime) between @minDate and @maxDate and appmstregno=@regno 
     
end      
end





GO
/****** Object:  StoredProcedure [dbo].[ShowPlanModifications]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowPlanModifications](@regno varchar(50))    
as    
begin    
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )             
begin    
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=3 and appmstregno=@regno    
end    
end





GO
/****** Object:  StoredProcedure [dbo].[ShowPlanModificationsD]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowPlanModificationsD](@regno varchar(50),@minDate datetime,@maxDate datetime)      
as      
begin      
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )               
begin      
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=3 and  CAST(FLOOR(CAST(date as float)) as datetime) between @minDate and @maxDate and appmstregno=@regno 
     
end      
end





GO
/****** Object:  StoredProcedure [dbo].[ShowReceiptNoModifications]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowReceiptNoModifications](@regno varchar(50))      
as      
begin      
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )               
begin      
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=1 and rno<>rno1 and appmstregno=@regno 
     
end      
end





GO
/****** Object:  StoredProcedure [dbo].[ShowReceiptNoModificationsD]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[ShowReceiptNoModificationsD](@regno varchar(50),@minDate datetime,@maxDate datetime)        
as        
begin        
If Exists(SELECT AppMstRegNo,appmstid from AppMst where AppMstRegNo=@regno  )                 
begin        
select srno,appmstregno,amount,amount1, convert(varchar(20),DOJ,103) as DOJ,convert(varchar(20),DOJ1,103) as DOJ1,PlanType,PlanType1,admin,convert(varchar(20),date,103) as dte,rno,rno1 from ModifyInvestment where modificationcode=1 and rno<>rno1 and   CAST(FLOOR(CAST(date as float)) as datetime) between @minDate and @maxDate and appmstregno=@regno 
       
end        
end





GO
/****** Object:  StoredProcedure [dbo].[ShowRequest]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowRequest]                          
as                          
begin                          
   select (select upper(AppmstFname) from appmst where appmstregno=RequestMst.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=RequestMst.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,Srno as RNo,receiptno,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,comment from RequestMst                          
                       
end





GO
/****** Object:  StoredProcedure [dbo].[ShowRequestApp]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowRequestApp]  
as        
begin        
 select (select AppmstFname from appmst where appmstregno=RequestMst.Appmstregno) as Fname,        
 Srno as RNo,appmstRegno as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,    
convert(varchar,ReceiptDate,103) as DOR,convert(varchar,ApprovalDate,103) as AppDate,    
comment,ReceiptNo,    
case when substring(ReceiptNo,1,4)='RCPT' then ReceiptNo else '' end as GReceipt,srno    
 from RequestMst  
 where Status=1
end





GO
/****** Object:  StoredProcedure [dbo].[ShowRequestByID]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowRequestByID](@ID varchar(50))                          
as                          
begin                          
   select (select upper(AppmstFname) from appmst where appmstregno=RequestMst.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=RequestMst.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,Srno as RNo,receiptno,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,comment from RequestMst   where  appmstregno=@ID                         
  
       
end





GO
/****** Object:  StoredProcedure [dbo].[ShowRequestByRNO]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowRequestByRNO](@RNO varchar(50))                            
as                            
begin                            
   select (select upper(AppmstFname) from appmst where appmstregno=RequestMst.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=RequestMst.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,Srno as RNo,receiptno,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,comment from RequestMst   where  ReceiptNo=@RNO                          
  
   
         
end





GO
/****** Object:  StoredProcedure [dbo].[ShowRequestrej]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowRequestrej]      
as      
begin      
 select (select AppmstFname from appmst where appmstregno=RequestMst.Appmstregno) as Fname,      
 Srno as RNo,appmstRegno as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,convert(varchar,ApprovalDate,103) as AppDate,comment,ReceiptNo from RequestMst      
 where Status=2     
end





GO
/****** Object:  StoredProcedure [dbo].[ShowRequestWait]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowRequestWait]                
as                
begin                
 select (select AppmstFname from appmst where appmstregno=RequestMst.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=RequestMst.Appmstregno) as pd,                
 appmstRegno as UserID,Amount,convert(varchar,RequestDate,103) as ReDate,convert(varchar,ReceiptDate,103) as DOR,Srno as RNo,receiptno from RequestMst                
 where Status=0                
end





GO
/****** Object:  StoredProcedure [dbo].[ShowTopUpRequestModifications]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowTopUpRequestModifications]                                
as                                
begin                                
   select (select upper(AppmstFname) from appmst where appmstregno=RequestMstModifications.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=RequestMstModifications.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,Amount1,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,status1=case status1 when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,Comment,Comment1,ReceiptNo,ReceiptNo1,admin,convert(varchar(20),date,103) as mDate,requestno from RequestMstModifications                                
                             
end





GO
/****** Object:  StoredProcedure [dbo].[ShowTopUpRequestModificationsByID]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[ShowTopUpRequestModificationsByID] (@ID varchar(50))                                 
as                              
begin                              
   select (select upper(AppmstFname) from appmst where appmstregno=RequestMstModifications.Appmstregno) as Fname,(select convert(varchar,appPaiddatetime,103) from appmst where appmstregno=RequestMstModifications.Appmstregno) as pd,upper(appmstRegno) as UserID,Amount,Amount1,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,status1=case status1 when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,Comment,Comment1,ReceiptNo,ReceiptNo1,admin,requestno,convert(varchar(20),date,103) as mDate from RequestMstModifications  where AppmstRegno= @ID                           
                           
end





GO
/****** Object:  StoredProcedure [dbo].[sp_accountROI]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_accountROI](@appmstid varchar(20))          
as          
 select totalearning,tds,handlingcharges,dispachedamt      
 from paymenttrandraftroi where appmstid=@appmstid and paymentdisplay=1





GO
/****** Object:  StoredProcedure [dbo].[sp_acountdate]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_acountdate](@appmstid varchar(20),@payoutno int)                
 as                    
           begin         
     select paymentfromdate=convert(char(10),paymentfromdate,103),paymenttodate=convert(char(10),paymenttodate,103) from paymenttrandraft where appmstid=@appmstid and payoutno=@payoutno  


end





GO
/****** Object:  StoredProcedure [dbo].[sp_adLogintree]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_adLogintree](@AppMstId varchar(20),@adminUname varchar(50)=null)                
as                
begin           
If Exists(select appmstregno,AppMstFName from AppMst where appmstregno=@AppMstId)               
select appmstregno,AppMstFName from AppMst where appmstregno=@AppMstId   
end





GO
/****** Object:  StoredProcedure [dbo].[sp_adminLogin1]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[sp_adminLogin1](@UserName varchar(50),@password varchar(50))    
as    
select username,password from controlmst where username=@username and password=@password





GO
/****** Object:  StoredProcedure [dbo].[sp_adtreeuname]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_adtreeuname](@AppMstFName varchar(20),@adminUname varchar(50)=null)          
as          
begin   
         
--returns list of downline non franchise member of franchise id        
declare @gt int,@lt int,@downIds varchar(5000),@adminid int,@admintype varchar(10),@FID int,@DownFID int       
--if(@adminUname is null or LEN(@adminUname)=0)       
set @admintype='sa'       
select @gt=a.useridGtEt,@lt=a.UserIdLtEt,@downIds=a.DownOfuserIds,@admintype=controlmst.admintype,@adminid=a.AdminId,      
@FID=franchiseID,@DownFID=DownLineFID from AdminViewMst a inner join ControlMst on controlmst.srno=a.AdminId where       
ControlMst.username=@adminUname    
    
If Exists(select AppMstRegno,AppMstFName from AppMst where  AppMstLogin=@AppMstFName)         
select AppMstRegno,AppMstFName from AppMst where  AppMstLogin=@AppMstFName and           
 (case       
when @admintype='sa' then 1           
when ((AppMstID between @lt and @gt)  OR(len(@downIds)>0 and AppMstID IN(select AppMstID from AppTran where ParentId IN(select items from dbo.split(@downIds,','))))) then 1     
else 0 end)=1         
end





GO
/****** Object:  StoredProcedure [dbo].[sp_changeincome1]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_changeincome1](@paymenttodate datetime)                          
as                            
                          
select a.PaymentTranDraftId,a.appmstid,b.appmstregno,b.appmsttitle+space(1)+b.appmstfname as name,b.appmstaddress1,b.appmstmobile,b.appmststate,b.appmstcity,b.email,b.distt,b.bankname,b.branch,b.acountno,b.panno,convert(varchar(20),b.appmstdoj,103) as appmstdoj,convert(varchar(20),b.appPaiddatetime,103) as appmstpaiddate,b.ifc,b.micr,a.totalearning,a.tds,a.handlingcharges,a.jumboclub1amt,a.jumboclub2amt,a.dispachedAmt,paymentdisplay =                          
case a.paymentdisplay                          
 when 0 then 'Hide'                          
when 1 then 'Show'                          
end                          
                          
from appmst b,paymenttrandraft a where a.appmstid=b.appmstregno and a.paymenttodate=@paymenttodate order by a.appmstid





GO
/****** Object:  StoredProcedure [dbo].[sp_countlrnode]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[sp_countlrnode](@sponsorid varchar(20),@lnode  int output,@rnode int output)      
as      
   
      
select @lnode= count(AppMstLeftRight) from AppMst where sponsorID=@sponsorid and AppMstLeftRight=0      
select @rnode= count(AppMstLeftRight) from AppMst where sponsorID=@sponsorid and AppMstLeftRight=1      
     return @lnode      
return @rnode





GO
/****** Object:  StoredProcedure [dbo].[sp_finalamount]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_finalamount]                
(                
@appmstid varchar(20),               
@remarks varchar(500),                
@paymenttrandraftno varchar(500),                
@payoutno int                
)                
as                
update paymenttrandraft set                
remarks=@remarks,paymenttrandraftno=@paymenttrandraftno where appmstid=@appmstid and PaymentTranDraftId=@payoutno





GO
/****** Object:  StoredProcedure [dbo].[sp_finalamountROI]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_finalamountROI]                          
(                          
@appmstid varchar(20),                         
@remarks varchar(500),                          
@paymenttrandraftno varchar(500),                          
@payoutno int                          
)                          
as                          
update paymenttrandraftROI set                          
remarks=@remarks,paymenttrandraftno=@paymenttrandraftno where appmstid=@appmstid and PaymentTranDraftId=@payoutno





GO
/****** Object:  StoredProcedure [dbo].[sp_images]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[sp_images](@UserId varchar(20))        
as        
begin        
select * from imagesmst where UserId=@UserId         
end





GO
/****** Object:  StoredProcedure [dbo].[sp_levelone]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[sp_levelone] '492281' 
CREATE procedure  [dbo].[sp_levelone](@regno nvarchar(50))                    
as                      
begin                     
 select AppMstRegNo,AppMstFName,AppMstLeftRight,SponsorID,ParentID,JoinFor,(AppMstLeftTotal+carryLeft+BFL) as AppMstLeftTotal,(AppMstRightTotal+carryRight+BFR) as AppMstRightTotal, carryleft,carryright, totalnewleft, totalnewright,joinfor,appmstpaid,

             convert(varchar(50),appmstdoj,103) as appmstdoj ,
			 
(select isnull(count(srno),0) from apptran where ParentId=A.AppMstID  and AppMstLeftRight=0) as LeftMember,                     
(select isnull(count(srno),0) from apptran where ParentId=A.AppMstID and AppMstLeftRight=1) as rightMember ,                  
                  
(select isnull(count(appmstid),0)  from appmst where appmstid in( select appmstid from apptran where parentid= A.AppMstID and appmstleftright=0) and Appmstpaid=1 and appmstactivate=1 )as leftactivate,     
(select isnull(count(appmstid),0)  from appmst where appmstid in( select appmstid from apptran where parentid= A.AppMstID and appmstleftright=1) and Appmstpaid=1 and appmstactivate=1 )     as rightactivate         
                  
			 
			 from AppMst as A where appmstregno=@regno order by appmstid 
 end
GO
/****** Object:  StoredProcedure [dbo].[sp_modyfypay]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_modyfypay](@draftid int,@appmstid varchar(20))                                               
as                          
select appmstid,round(binaryamt,0) as binaryamt,ROUND(directAmt,2) as directAmt,round(jumboclub1amt,0) as jumboclub1amt,round(jumboclub2amt,0) as jumboclub2amt,                   
round(totalearning,0) as totalearning,                          
round(dispachedamt,0) as dispachedamt,paymentdisplay,paymenttrandraftno,remarks,round(othercharges,0) as othercharges,round(handlingcharges,0) as handlingcharges,round(tds,0) as tds from paymenttrandraft                    
 where paymenttrandraftid=@draftid and appmstid= @appmstid





GO
/****** Object:  StoredProcedure [dbo].[sp_modyfypayroitb]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_modyfypayroitb](@draftid int,@appmstid varchar(20))                                                 
as                            
select appmstid,round(jumboclub1amt,0) as jumboclub1amt,round(jumboclub2amt,0) as jumboclub2amt,                     
round(totalearning,0) as totalearning,                            
round(dispachedamt,0) as dispachedamt,paymentdisplay,round(othercharges,0) as othercharges,round(handlingcharges,0) as handlingcharges,round(tds,0) as tds from paymenttrandraftROITB                      
 where paymenttrandraftid=@draftid and appmstid= @appmstid





GO
/****** Object:  StoredProcedure [dbo].[sp_News]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_News](@NewsMstValidUpTo varchar(50),@NewsMstTitle varchar(100),@NewsMstDiscription varchar(8000),@CurrentRecord int,@iName varchar(50),@ImageName varchar(50) output,@newstype varchar(50))                
as          
begin            
	insert into NewsMst (NewsMstValidUpTo,NewsMstTitle,NewsMstDiscription,CurrentRecord,newstype )values(@NewsMstValidUpTo,@NewsMstTitle,@NewsMstDiscription,@CurrentRecord,@newstype)      
	Update  Appmst set bstatus=bstatus+1
	if(@iName!='0')      
	begin      
		set @ImageName =cast(@@IDENTITY as varchar)+@iName      
		update NewsMst set photo=@ImageName where NewsMstId=@@IDENTITY      
	end      
end  




GO
/****** Object:  StoredProcedure [dbo].[SP_RETOPUP]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--*******************************Creared by AJAY      

 --*******************************Creared on 20-Nov-2014      

       

 CREATE proc[dbo].[SP_RETOPUP] (@SessionRegNo nvarchar(50),@RegNo nvarchar(50),@PlanTypeID int,@PTypes varchar(50)=null,@epassword varchar(50),@flag varchar(100) output,@bal decimal output)              

 as                                             

begin         --WITH ENCRYPTION                                    

  declare @getdate datetime ,@Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float ,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float,@RETopupAmt float,@pintype int,@netamt float      

  declare @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@startDate datetime,@EndDate datetime ,@counts int                               

  set @Bbalance=0                                                                                                                     

  set @bal=0                                                                                      

  set @flag=''           

 Set @counts=0        

  set @getdate= getutcdate()                                                                                                            

  select @Sappmstid=appmstid  from appmst where appmstregno=@SessionRegNo                              

  select @appmstid=appmstid,@appmstpaid=appmstpaid  from appmst where appmstregno=@RegNo
  if(@appmstpaid=0)              
  begin                         

	set @flag='The user is not allowed for retop-up.'                         
	return ;                             

  end 
  
  
  select @Amt=Amount,@Jf=JoinFor,@RETopupAmt=roi from PlanTypeMst where PlanTypeId =@PlanTypeID and Active=1 

  select @counts=count(appmstid) from sharemst where  appmstid=@Appmstid      

  if(@counts=0)      

  Begin      

  set @flag='Re-Topup not allowed'      

    return;                                          

  end             

        

  if(not exists(select appmstid from AppMst where AppMstRegNo=@SessionRegNo and ePassword=@epassword) or len(@epassword)<2)                                                   

  begin                                                    

    set @flag='Invalid Transaction-Password.!'--invalid e-password       

    return;                                          

  end                                                                        

  else                                                           

  begin                                                                           

     set nocount on                                                                            

  set xact_abort on                                                                                         

  begin transaction                          

  set @Amt=isnull(@Amt,0)                                                                                       

  if(exists(select appmstregno from appmst where appmstregno=@regno))                                        

  Begin               

      Begin try                

      if( @PTypes='CF')              

      Begin              

       select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@Sappmstid       

       select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@Sappmstid and BankTranId=@BtranId                        

       if(@Bbalance>=@Amt)                               

       begin                                                                                               

        set @Abalance=@Bbalance - @Amt                                                           

        set @Amount=@Amt                                                                                                          

        set @sharemstid=IDENT_CURRENT('sharemst')       

        insert into IPTran (AppMstId,bankTranmode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,bankTranStatus,tranid)                        

        values (@Sappmstid,24,@appmstid,@getdate,@Amt,@Abalance,'RETOP-UP-NEW',1,@sharemstid+1)      

        set @bal= @Abalance                   

       End           

       Else                                         

       Begin              

        set @flag='Insuficient Balance !' --Insufficient Balance                

        Rollback Transaction                

        Return        

       End              

      End              

    set @TranNo=ident_current('IPTran')                                                 

          

    --set @Amount= case when @PlanTypeID=1 then 100 when @PlanTypeID=2 then 500  when @PlanTypeID=3 then 5000 else 0 end      

    select @pintype=pintype,@netamt=isnull(netamt,0) from sharemst where  appmstid=@Appmstid and Amount >0          

    --Set @RETopupAmt=case when @pintype =1 then 250 when @pintype =2 then 1000  when @pintype =3 then 15000 else 0 end   

	    

    set @RETopupAmt=@netamt+@RETopupAmt      

    update sharemst set  EndAmount=Amount,Amount=0 where  appmstid=@Appmstid           

           

    insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint,netamt)      

    values(@appmstid,@jf,1,@getdate,@PlanTypeID,@regno,'0',@TranNo,0,@RETopupAmt)      

    select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno           

    update appmst set jamount=@jf,JoinFor=@jf where appmstregno=@regno  



    ---*************

    --Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf

    --Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)

    --Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                  

    --Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                  

    

    --execute BinaryIncome  @regno ,@jf                                                         

	

    set @flag='1'                                             

   end try                                 

      begin catch                                

    set @flag=ERROR_MESSAGE()                                 

   end catch                                 

                     

    end                                   

    else                                             

     set @flag='Invalid User ID !'                                                                                       

                            

  if(@flag='1')                                         

   commit transaction                                         

  else                                         

   rollback transaction                                                                                                                                                  

   end                                         

end 






GO
/****** Object:  StoredProcedure [dbo].[sp_selecttranb]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_selecttranb]              
as            
declare @maxpayoutno int          
select @maxpayoutno=max(payoutno)  from paymenttrandraft          
if(@maxpayoutno>0)          
begin          
          
select a.Appmstid, a.jumboclub1amt, a.jumboclub2amt 
,b.appmstFname,tds,handlingcharges,dispachedamt,Totalearning=(a.jumboclub1amt+a.jumboclub2amt)              
,paymentfromdate=convert(char(10),a.paymentfromdate,103),paymenttodate=convert(char(10),a.paymenttodate,103)        
from paymenttrandraft a,appmst b where b.appmstregno=a.appmstid and a.payoutno=@maxpayoutno          
end





GO
/****** Object:  StoredProcedure [dbo].[sp_selecttranb1]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_selecttranb1]      
as      
select appfrompayment=convert(char(10),appfrompayment,103),apptopayment=convert(char(10),apptopayment,103)    
,Appcurrent,payoutno from  paymenttranb with (nolock) where paymenttranbid>0





GO
/****** Object:  StoredProcedure [dbo].[sp_tree]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_tree](@AppMstRegNo nvarchar(50))              
as              
begin              
select AppMstRegNo,AppMstFName,AppMstLeftRight,SponsorID,ParentID,joinfor
,AppMstLeftTotal,AppMstRightTotal,     
joinfor ,appmstpaid  
        
from AppMst where ParentID=@AppMstRegNo order by appmstid             
end





GO
/****** Object:  StoredProcedure [dbo].[sp_tree1]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[sp_tree1](@AppMstRegNo nvarchar(50))                                          
as                                          
begin       
                                   
select  AppMstRegNo, AppMstFName,AppMstLeftRight,SponsorID,ParentID          
,AppMstLeftTotal,AppMstRightTotal, dbo.JoinForAmount(AppMstID) as joinfor            
,carryleft,carryright,appmstlefttotal,appmstrighttotal,totalnewleft,totalnewright,          
appmstpaid ,convert(varchar(50),appmstdoj,103) as appmstdoj ,  
     
(select isnull(count(srno),0) from apptran where ParentId=A.AppMstID  and AppMstLeftRight=0) as LeftMember,                       
(select isnull(count(srno),0) from apptran where ParentId=A.AppMstID and AppMstLeftRight=1) as rightMember ,                    
                    
(select isnull(count(appmstid),0)  from appmst where appmstid in( select appmstid from apptran where parentid= A.AppMstID and appmstleftright=0) and Appmstpaid=1 and appmstactivate=1 )as leftactivate,       
(select isnull(count(appmstid),0)  from appmst where appmstid in( select appmstid from apptran where parentid= A.AppMstID and appmstleftright=1) and Appmstpaid=1 and appmstactivate=1 )     as rightactivate           
                    
      
  from AppMst as A where ParentID=@AppMstRegNo order by appmstid                                         
end  
  
  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[sp_tree1App]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[sp_tree1App](@AppMstRegNo nvarchar(50), @Postion int)                                                
as                                                
begin             
                                         
select  AppMstRegNo, AppMstFName,AppMstLeftRight,SponsorID,ParentID                
,AppMstLeftTotal,AppMstRightTotal, dbo.JoinForAmount(AppMstID) as joinfor                  
,carryleft,carryright,appmstlefttotal,appmstrighttotal,totalnewleft,totalnewright,                
appmstpaid ,convert(varchar(50),appmstdoj,103) as appmstdoj ,        
           
(select isnull(count(srno),0) from apptran where ParentId=A.AppMstID  and AppMstLeftRight=0) as LeftMember,                             
(select isnull(count(srno),0) from apptran where ParentId=A.AppMstID and AppMstLeftRight=1) as rightMember ,                          
                          
(select isnull(count(appmstid),0)  from appmst where appmstid in( select appmstid from apptran where parentid= A.AppMstID and appmstleftright=0) and Appmstpaid=1 and appmstactivate=1 )as leftactivate,             
(select isnull(count(appmstid),0)  from appmst where appmstid in( select appmstid from apptran where parentid= A.AppMstID and appmstleftright=1) and Appmstpaid=1 and appmstactivate=1 )     as rightactivate ,                
      
 CASE  
  WHEN  appmstpaid =0 THEN '../tree/agent.png'  
 ELSE '../tree/loginblue.png'  
 END AS imagePath 
                  
            
  from AppMst as A where ParentID=@AppMstRegNo and a.AppMstLeftRight=@Postion order by appmstid                                               
end        
        
        
        
GO
/****** Object:  StoredProcedure [dbo].[sp_tree1FirstApp]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
CREATE procedure  [dbo].[sp_tree1FirstApp](@regno nvarchar(50))                                              
as                                              
begin           
   select AppMstRegNo,AppMstFName,AppMstLeftRight,SponsorID,ParentID, dbo.JoinForAmount(AppMstID) AS joinfor  , AppMstLeftTotal,AppMstRightTotal,carryleft,carryright,totalnewleft,totalnewright,appmstpaid, (select isnull(count(srno),0) from apptran where ParentId= AppMst.AppMstID  and AppMstLeftRight=0) as LeftMember,  (select isnull(count(srno),0) from apptran where ParentId= AppMst.AppMstID and AppMstLeftRight=1) as rightMember ,  convert(varchar(50),appmstdoj,103) as appmstdoj,    
   CASE  
 WHEN  appmstpaid =0 THEN '../tree/agent.png'  
 ELSE '../tree/loginblue.png'  
 END AS imagePath  
   from AppMst where  appmstregno=@regno order by appmstid                                       
end      
      
      
      
      
GO
/****** Object:  StoredProcedure [dbo].[sp_treestar]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--[sp_treestar] 'GL773950' ,0  
CREATE procedure  [dbo].[sp_treestar](@AppMstRegNo nvarchar(50)  ,@starid int)                                          
as                                          
begin       
                                   
select  AppMstRegNo, AppMstFName,AppMstLeftRight,SponsorID,ParentID,joinfor , isnull(starid,0) as starid           
--,ISNULL(CASE @starid when 2 then st.S2LTotal when 3 then st.S3LTotal when 4 then st.S4LTotal when 5 then st.S5LTotal when 6 then st.S6LTotal when 7 then st.S7LTotal  else AppMstLeftTotal end,0) AS AppMstLeftTotal  
--,ISNULL(CASE @starid when 2 then st.S2RTotal when 3 then st.S3RTotal when 4 then st.S4RTotal when 5 then st.S5RTotal when 6 then st.S6RTotal when 7 then st.S7RTotal  else AppMstLeftTotal end,0) AS AppMstRightTotal  
,AppMstLeftTotal  ,
 AppMstRightTotal ,
 joinfor            
,carryleft,carryright,  

totalnewleft,totalnewright,          
appmstpaid ,convert(varchar(50),appmstdoj,103) as appmstdoj ,  
     
(select isnull(count(srno),0) from apptran(nolock) where ParentId=A.AppMstID  and AppMstLeftRight=0) as LeftMember,                       
(select isnull(count(srno),0) from apptran(nolock) where ParentId=A.AppMstID and AppMstLeftRight=1) as rightMember ,                    
                    
(select isnull(count(appmstid),0)  from appmst(nolock) where appmstid in( select appmstid from apptran(nolock) where parentid= A.AppMstID and appmstleftright=0) and Appmstpaid=1 and appmstactivate=1 )as leftactivate,       
(select isnull(count(appmstid),0)  from appmst(nolock) where appmstid in( select appmstid from apptran(nolock) where parentid= A.AppMstID and appmstleftright=1) and Appmstpaid=1 and appmstactivate=1 )     as rightactivate           

, isnull(ST.S2LTotal, 0) as S2LTotal, isnull(ST.S2RTotal,0) as S2RTotal,
isnull(ST.S3LTotal,0)as S3LTotal, isnull(ST.S3RTotal,0)as S3RTotal,
isnull(ST.S4LTotal,0) as S4LTotal,isnull(ST.S4RTotal,0)as S4RTotal,
isnull(ST.S5LTotal,0)as S5LTotal, isnull(ST.S5RTotal,0)as S5RTotal,
isnull(ST.S6LTotal,0)as S6LTotal, isnull(ST.S6RTotal,0) as S6RTotal,
 isnull(ST.S7LTotal,0) as S7LTotal, isnull(ST.S7RTotal,0) as S7RTotal
  from AppMst as A(NOLOCK)  
  left join appmstStarTotal ST(NOLOCK) on a.AppMstID=st.appmstid   
  where ParentID=@AppMstRegNo order by A.appmstid                                         
end  
  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[sp_treeTop]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[sp_treeTop](@AppMstRegNo nvarchar(50))                                            
as                                            
begin         
  select AppMstRegNo,AppMstFName,AppMstLeftRight,SponsorID,ParentID, dbo.JoinForAmount(AppMstID) AS joinfor  , AppMstLeftTotal,AppMstRightTotal,carryleft,carryright,totalnewleft,totalnewright,appmstpaid, (select isnull(count(srno),0) from apptran where ParentId= AppMst.AppMstID  and AppMstLeftRight=0) as LeftMember,  (select isnull(count(srno),0) from apptran where ParentId= AppMst.AppMstID and AppMstLeftRight=1) as rightMember ,  convert(varchar(50),appmstdoj,103) as appmstdoj from AppMst where  appmstregno=@AppMstRegNo order by appmstid                                       
end    
    
    
    
    
GO
/****** Object:  StoredProcedure [dbo].[sp_tryleg]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_tryleg](@AppMstRegNo nvarchar(50))      
as      
begin      
select AppMstRegNo,AppMstFName,AppMstLeftRight,SponsorID,ParentID from AppMst where SponsorID=@AppMstRegNo order by appmstid    
end





GO
/****** Object:  StoredProcedure [dbo].[sp_updatepay]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[sp_updatepay](           
@appmstid varchar(20),                  
@draftid varchar(20),                    
                
@jumbo1amt float,@jumbo2amt float,  
@display varchar(20),                    
@dispatchedamt varchar(20),                    
@total varchar(20),                    
         
                    
                   
@tds varchar(20),                    
@handlingcharges varchar(20)                    
)                    
as                    
update  paymenttrandraft set paymentdisplay=@display,    
jumboclub1amt=@jumbo1amt,jumboclub2amt=@jumbo2amt,          
                
                 
totalearning=@total,                    
dispachedamt=@dispatchedamt,                    
Tds=@tds,handlingcharges=@handlingcharges                    
 where paymenttrandraftid=@draftid and appmstid=@appmstid





GO
/****** Object:  StoredProcedure [dbo].[sponsarlist]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
        
--[sponsarlist] 'AGF497549'        
CREATE procedure  [dbo].[sponsarlist](@regno varchar(50)  )                                                          
as                                                          
begin                                          
                
select a.AppMstMobile, a.appmstid,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,  dbo.JoinForAmount(a.appmstid) AS jamount     ,  FORMAT (a.appmstdoj, 'MMM dd yyyy')     as AppmstDOJ,a.SponsorID,          
 CASE a.AppMstLeftRight        
    WHEN 0 THEN 'Left'         
    ELSE 'Right'         
END as AppMstLeftRight ,        
        
CASE a.Appmstpaid        
    WHEN 1 THEN 'Active'         
    ELSE 'Inactive'         
END as Appmstpaid         
,        
(select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,              
(select    isnull(convert(varchar(50),max(convert(varchar(20),doe+61,103)),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from              
AppMst a  where  a.SponsorID=@regno  order by AppMstID              
                                                 
 end   
GO
/****** Object:  StoredProcedure [dbo].[sponsarlistAdmin]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[sponsarlistAdmin](@regno varchar(50)  )                                              
as                                              
begin                              
                                                    
          
          
	select a.AppMstMobile, a.appmstid,a.AppMstRegNo,UPPER(a.AppMstFName) as membername,a.jamount,a.appmstdoj as AppmstDOJ,a.SponsorID, 
                         (select UPPER(appmstfname) from AppMst where AppMstRegNo=a.SponsorID) as SponsorName,  
                            (select isnull(convert(varchar(50),max(doe),121),'No Top Up') as doe from Sharemst where Appmstid=a.appmstid) as topupdate from  
                        AppMst a  where  a.SponsorID=@regno  order by AppMstID  
                                     
        
             
   end
GO
/****** Object:  StoredProcedure [dbo].[SponsorList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[SponsorList] (@AppMstDOJmin varchar(20),@AppMstDOJmax varchar(20),@sponsortotal int,@operator varchar(50),@adminUname varchar(50)=null)                          
as              
                 
--returns list of downline non franchise member of franchise id              
declare @query varchar(max)          
--if(@adminUname is null or LEN(@adminUname)=0)             
set @query='select a.AppMstregno,a.AppMstTitle+space(1)+a.AppMstFName as name,a.AppMstLName,AppMstDOJ=CONVERT(CHAR(10),a.AppMstDOJ,103),a.AppMstSponsorTotal,          
a.AppMstCity,a.AppMstState,a.sponsorid,(select AppMstFName from appmst where AppMstRegNo=a.sponsorid)as sponsorname from AppMst a                    
where a.AppMstSponsorTotal '+@operator+ convert(varchar(20),@sponsortotal) +'and  CAST(FLOOR(CAST(a.AppMstDOJ as float)) as datetime) between '''+@AppMstDOJmin +''' and           
'''+@AppMstDOJmax +''''           
          
--select @query           
exec(@query)





GO
/****** Object:  StoredProcedure [dbo].[SponsorReport]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[SponsorReport](@regno varchar(50),@mindate datetime,@maxdate datetime,@type int)                
as                
begin                
 if EXISTS(select appmstid,appmstregno from appmst where appmstregno=@regno)                    
begin        
        
--all sponsor           
if(@type=1)      
begin       
select a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.JAmount,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe,a.SponsorID from         
(                   
select appmstid,UPPER(AppMstRegNo) as UserId,UPPER(AppMstTitle)+space(1)+UPPER(AppMstFName) as membername,UPPER(ParentID) as ParentID,
UPPER(SponsorID) as SponsorID,LeftRight=case AppMstLeftRight when 1 then 'RIGHT' when 0 then 'LEFT' end,
 JAmount  from AppMst where SponsorId=@regno and  CAST(FLOOR(CAST(appmstdoj as float)) as datetime) between CAST(FLOOR(CAST(@mindate as float)) as datetime) and CAST(FLOOR(CAST(@maxdate as float)) as datetime)          
) a left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.jamount,a.SponsorID        
end        
      
--left sponsor           
if(@type=2)      
begin      
select a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.JAmount,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe,a.SponsorID from         
(                   
select appmstid,UPPER(AppMstRegNo) as UserId,UPPER(AppMstTitle)+space(1)+UPPER(AppMstFName) as membername,UPPER(ParentID) as ParentID,
UPPER(SponsorID) as SponsorID,LeftRight=case AppMstLeftRight when 1 then 'RIGHT' when 0 then 'LEFT' end ,
 JAmount            
 from AppMst where SponsorId=@regno and AppMstLeftRight=0 and  CAST(FLOOR(CAST(appmstdoj as float)) as datetime) between CAST(FLOOR(CAST(@mindate as float)) as datetime) and CAST(FLOOR(CAST(@maxdate as float)) as datetime)          
) a left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.jamount ,a.SponsorID      
end      
      
--right sponsor           
if(@type=3)      
begin      
select a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.JAmount,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe,a.SponsorID from         
(                   
select appmstid,UPPER(AppMstRegNo) as UserId,UPPER(AppMstTitle)+space(1)+UPPER(AppMstFName) as membername,UPPER(ParentID) as ParentID,
UPPER(SponsorID) as SponsorID,LeftRight=case AppMstLeftRight when 1 then 'RIGHT' when 0 then 'LEFT' end ,
 JAmount            
 from AppMst where SponsorId=@regno and AppMstLeftRight=1 and  CAST(FLOOR(CAST(appmstdoj as float)) as datetime) between CAST(FLOOR(CAST(@mindate as float)) as datetime) and CAST(FLOOR(CAST(@maxdate as float)) as datetime)          
) a left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.jamount,a.SponsorID  
end      
      
end                
end





GO
/****** Object:  StoredProcedure [dbo].[spwise1]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[spwise1](@sponsortotal int)          
as          
select a.AppMstregno,a.AppMstTitle+space(1)+a.AppMstFName as name,a.AppMstLName,AppMstDOJ=CONVERT(CHAR(10),a.AppMstDOJ,103),a.AppMstSponsorTotal,a.AppMstCity,a.AppMstState,a.sponsorid,(select AppMstFName from appmst where AppMstRegNo=a.sponsorid)as sponsorname from AppMst a        
where a.AppMstSponsorTotal<@sponsortotal





GO
/****** Object:  StoredProcedure [dbo].[spwise2]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[spwise2](@sponsortotal int)          
as          
select a.AppMstregno,a.AppMstTitle+space(1)+a.AppMstFName as name,a.AppMstLName,AppMstDOJ=CONVERT(CHAR(10),a.AppMstDOJ,103),a.AppMstSponsorTotal,a.AppMstCity,a.AppMstState,a.sponsorid,(select AppMstFName from appmst where AppMstRegNo=a.sponsorid)as sponsorname from AppMst a        
where a.AppMstSponsorTotal=@sponsortotal





GO
/****** Object:  StoredProcedure [dbo].[spwise3]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[spwise3](@sponsortotal int)          
as          
select a.AppMstregno,a.AppMstTitle+space(1)+a.AppMstFName as name,a.AppMstLName,AppMstDOJ=CONVERT(CHAR(10),a.AppMstDOJ,103),a.AppMstSponsorTotal,a.AppMstCity,a.AppMstState,a.sponsorid,(select AppMstFName from appmst where AppMstRegNo=a.sponsorid)as sponsorname from AppMst a        
where a.AppMstSponsorTotal>@sponsortotal





GO
/****** Object:  StoredProcedure [dbo].[spwise4]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[spwise4](@sponsortotal int)          
as          
select a.AppMstregno,a.AppMstTitle+space(1)+a.AppMstFName as name,a.AppMstLName,AppMstDOJ=CONVERT(CHAR(10),a.AppMstDOJ,103),a.AppMstSponsorTotal,a.AppMstCity,a.AppMstState,a.sponsorid,(select AppMstFName from appmst where AppMstRegNo=a.sponsorid)as sponsorname from AppMst a        
where a.AppMstSponsorTotal>=@sponsortotal





GO
/****** Object:  StoredProcedure [dbo].[spwise5]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[spwise5](@sponsortotal int)          
as          
select a.AppMstregno,a.AppMstTitle+space(1)+a.AppMstFName as name,a.AppMstLName,AppMstDOJ=CONVERT(CHAR(10),a.AppMstDOJ,103),a.AppMstSponsorTotal,a.AppMstCity,a.AppMstState,a.sponsorid,(select AppMstFName from appmst where AppMstRegNo=a.sponsorid)as sponsorname from AppMst a        
where a.AppMstSponsorTotal<=@sponsortotal





GO
/****** Object:  StoredProcedure [dbo].[sss]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[sss]    
as    
truncate table causeid    
truncate table apptran     
truncate table apptransponsor    
delete from appmst where appmstid>1    
update appmst set appmstsponsortotal=0  
update nextid set appmstid=2,appmstregno=10002





GO
/****** Object:  StoredProcedure [dbo].[SubAdminInvoiceDetail]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[SubAdminInvoiceDetail](@adminid varchar(50))
as
begin
select appmstregno as uid,amount as amt,convert(varchar,approvaldate,103) as doe from requestmst where adminid=@adminid and status=1
end





GO
/****** Object:  StoredProcedure [dbo].[subAdminLogIn]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[subAdminLogIn](@uname varchar(50),@password varchar(50),@LogInDateTime varchar(50),@IPAddress varchar(50))                  
as                      
begin                      
    insert into admincontrol (UserName,password,LogInDateTime,admintype,IPAddress)values(@uname,@password,@LogInDateTime,'a',@IPAddress)        
END





GO
/****** Object:  StoredProcedure [dbo].[SuperAdminExist]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[SuperAdminExist](@uid varchar(50),@pwdd varchar(50))            
            
as            
begin            
	--Call procedures  to set toupup zero that reached 1 year 
	execute CheckMaturity
	
  select username,[password],regno from controlmst where username=@uid and admintype='sa' and password=@pwdd          
          
end





GO
/****** Object:  StoredProcedure [dbo].[superAdminLogIn]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[superAdminLogIn](@uname varchar(50),@password varchar(50),@LogInDateTime varchar(50),@IPAddress varchar(50))                
as                    
begin                    
    insert into admincontrol (UserName,password,LogInDateTime,admintype,IPAddress)values(@uname,@password,@LogInDateTime,'sa',@IPAddress)      
END





GO
/****** Object:  StoredProcedure [dbo].[TagLine]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[TagLine](@UserID varchar(50) ,@TagLine varchar(max))           
as          
 begin          
declare @srno int      
declare @count int      
         
select @srno=max(srno) from TagLineMst          
if(@srno is null)           
begin          
set @srno=1          
end          
else          
begin          
set @srno=@srno+1          
end          
 select @count=count(*) from TagLineMst where UserId=@UserID      
if(@count>0)    
 begin    
 update TagLineMst set TagLine=@TagLine where userId=@UserID    
 end    
else    
 begin    
 insert into TagLineMst(srno,UserId,TagLine)values(@srno,@UserID,@TagLine)          
 end         
end





GO
/****** Object:  StoredProcedure [dbo].[TopEarnersList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[TopEarnersList](@numbers int)             
as                  
declare @sql varchar(650)                 
set @sql='select a.appmstid,a.appmstregno,upper(a.appmsttitle+space(1)+a.appmstfname) as fname,a.appmstaddress1+space(1)+a.appmstcity+space(1)+a.appmststate+space(1)+a.appmstpincode as appmstaddress1,a.appmstmobile,a.panno,                  
a.bankname+space(1)+a.branch as bankname,a.acountno as acno,n.t as Total,stockindia.getbalance(a.appmstid) as balance  from appmst a inner join                    
(select top '+ convert(varchar,@numbers)+ ' appmstid1 as appmstid,floor(sum(dispachedamt)) as T from paymenttrandraft where dispachedamt>0 group by appmstid1 order by t desc) n                  
on a.appmstid=n.appmstid order by Total desc'                  
exec (@sql)





GO
/****** Object:  StoredProcedure [dbo].[TopEarnersList123]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc  [dbo].[TopEarnersList123](@numbers int)                     
as        
begin                        
declare @sql varchar(650)         
create table #temp (srno int identity(1,1),appmstid int,appmstregno varchar(50),fname varchar(50),appmstaddress1 varchar(100),appmstmobile varchar(50),panno varchar(50),bankname varchar(50),acno varchar(50),Total float,balance float)       
                   
set @sql='insert into #temp select a.appmstid,a.appmstregno,upper(a.appmsttitle+space(1)+a.appmstfname) as fname,a.appmstaddress1+space(1)+a.appmstcity+space(1)+a.appmststate+space(1)+a.appmstpincode as appmstaddress1,a.appmstmobile,a.panno,a.bankname+space(1)+a.branch as bankname,a.acountno as acno,n.t as Total,stockindia.getbalance(a.appmstid) as balance  from appmst a inner join                            
(select top '+ convert(varchar,@numbers)+ ' appmstid1 as appmstid,floor(sum(dispachedamt)) as T from paymenttrandraft where dispachedamt>0 group by appmstid1 order by t desc) n                          
on a.appmstid=n.appmstid order by Total desc'                          
 exec (@sql)       
select *  from #temp    
     
drop table #temp      
      
end





GO
/****** Object:  StoredProcedure [dbo].[TopInvestorsList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[TopInvestorsList](@numbers int)            
as         
declare @sql varchar(1000)  
set @sql='select a.appmstid,a.appmstregno,a.appmsttitle+space(1)+upper(a.appmstfname) as fname,upper(a.appmstaddress1) +space(1)+upper(a.appmstcity)+space(1)+upper(a.appmststate)+space(1)+a.appmstpincode as appmstaddress1,a.appmstmobile,a.panno, 
upper(a.bankname) as bankname,upper(a.branch) as branch,upper(a.acountno) as acno,n.t as Total,stockindia.getbalance(a.appmstid) as balance  from appmst a inner join 
(select top '+ convert(varchar,@numbers)+ ' appmstid,sum(amount) as t from         
(select appmstid,endamount as amount from sharemst where amount=0 and endamount>0 
union all           
select appmstid,amount from sharemst where amount>0 ) new group by appmstid order by t desc) n  
on a.appmstid=n.appmstid order by t desc' 
exec (@sql)





GO
/****** Object:  StoredProcedure [dbo].[TopInvestorsList123]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[TopInvestorsList123](@numbers int)                
as    
begin           
declare @sql varchar(1000)   
create table #temp (srno int identity(1,1),appmstid int,appmstregno varchar(50),fname varchar(50),appmstaddress1 varchar(100),appmstmobile varchar(50),panno varchar(50),bankname varchar(50),branch varchar(50),acno varchar(50),Total float,balance float)                  
               
set @sql='insert into #temp select a.appmstid,a.appmstregno,a.appmsttitle+space(1)+upper(a.appmstfname) as fname,upper(a.appmstaddress1) +space(1)+upper(a.appmstcity)+space(1)+upper(a.appmststate)+space(1)+a.appmstpincode as appmstaddress1,a.appmstmobile,a.panno,            
     
       
upper(a.bankname) as bankname,upper(a.branch) as branch,upper(a.acountno) as acno,n.t as Total,stockindia.getbalance(a.appmstid) as balance  from appmst a inner join                  
(select top '+ convert(varchar,@numbers)+ ' appmstid,sum(amount) as t from             
(select appmstid,endamount as amount from sharemst where amount=0 and endamount>0              
union all               
select appmstid,amount from sharemst where amount>0 ) new group by appmstid order by t desc) n                
on a.appmstid=n.appmstid order by t desc'            
exec (@sql)   
select srno,appmstregno,fname,appmstaddress1,appmstmobile,panno,bankname+space(1)+branch as bd ,total,balance from #temp  
drop table #temp  
end





GO
/****** Object:  StoredProcedure [dbo].[TopUpRequestList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[TopUpRequestList](@regno varchar(50),@mindate datetime,@maxdate datetime)    
as    
begin    
 if EXISTS(select * from appmst where appmstregno=@regno)        
begin      
select cast(amount/10000 as int)  as amount,convert(varchar(20),receiptdate,103) as receiptdate,convert(varchar(20),requestdate,103) as requestdate,receiptno,status=case status when 0 then 'WAITING' when 1 then 'APPROVED' when 2 then 'REJECTED' end,comment from requestMst where CAST(FLOOR(CAST(requestdate as float)) as datetime) between @mindate and @maxdate and appmstregno=@regno order by requestdate    
end    
end





GO
/****** Object:  StoredProcedure [dbo].[TotalEranedAmtRefer]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[TotalEranedAmtRefer](@id int,@mindate datetime,@maxdate datetime)                      
as                                      
begin                      
if EXISTS(select appmstregno from appmst where appmstid=@id)                        
begin                       
select a.appmstregno,a.appmsttitle+space(1)+a.appmstfname as name,convert(varchar(20),a.appmstdoj,103) as doj,round(c.amount,2) as amount,  
case c.paymentcause when 'R' then 'Referal' else '' end as paymentcause,  
convert(varchar(20),c.effectdate,103) as effectdate from causeid c inner join appmst a on c.causeid=a.AppMstID and  
causeid>0  and c.userid=@id and    
paymentcause  in ('R') and   CAST(FLOOR(CAST(effectdate as float)) as datetime) between @mindate and @maxdate          
end 
end





GO
/****** Object:  StoredProcedure [dbo].[TotalSponsor]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[TotalSponsor](@regno varchar(50),@mindate datetime,@maxdate datetime)        
as        
begin        
 if EXISTS(select appmstid,appmstregno from appmst where appmstregno=@regno)            
begin  
select a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.JAmount,isnull(convert(varchar(20),max(s.doe),103),'No Top Up') as doe from 
(           
select appmstid,UPPER(AppMstRegNo) as UserId,UPPER(AppMstTitle)+space(1)+UPPER(AppMstFName) as membername,UPPER(ParentID) as ParentID,LeftRight=case AppMstLeftRight when 1 then 'RIGHT' when 0 then 'LEFT' end , JAmount    
 from AppMst where SponsorId=@regno and  CAST(FLOOR(CAST(appmstdoj as float)) as datetime) between CAST(FLOOR(CAST(@mindate as float)) as datetime) and CAST(FLOOR(CAST(@maxdate as float)) as datetime)  
) a left outer join sharemst s on a.appmstid=s.appmstid    group by a.appmstid,a.UserId,a.membername,a.ParentID,a.LeftRight,a.jamount

end        
end





GO
/****** Object:  StoredProcedure [dbo].[TransferAndWithdraw]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
         







CREATE procedure   [dbo].[TransferAndWithdraw] (@RegNo varchar(50) ,  @flag varchar(200) output)                                                        







as             







 Begin Transaction          







Declare @getdate as datetime,@Amount float,@TranAmt float,@AppmstId int  ,@Amt float ,@Bbalance  float, @BtranId int      







set nocount on               







set xact_abort on        







Set @Amt=0    







Set @Bbalance=0      







Set @Amount=0







select @AppmstId=AppmstId from appmst where AppMstRegNo=@RegNo          







select @Amount=isnull(Sum(BankTranBalance),0) from VPTran where AppmstId=@AppMstID and IsActive=1         







if(exists (select appmstid from appmst where AppMstRegNo=@RegNo))          







Begin          







   if(@Amount>=5)          







   Begin        



   



     --select @BtranId=isnull(max(BankTranId),0) from IPTran where AppMstId=@AppmstId                                                                                 







    -- select @Bbalance=isnull(BanktranBalance,0) from IPTran where appmstid=@AppmstId and BankTranId=@BtranId       







	 select @Bbalance=dbo.getbalance(@AppmstId)







	







     Set @TranAmt=@Amount *0.70       







     Set @Amt=@TranAmt + isnull(@Bbalance,0)        







     if @TranAmt>0          







     insert into IPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId)                      







     values(@appmstid,22,@appmstid,getutcdate(),@TranAmt,@Amt,'Transfer from Smart Account',1,0)           







       







     Set @TranAmt=0          







     Set @TranAmt=@Amount *0.30        







     if (@TranAmt>0 )        







     insert into VPTran (AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId,DispDate)                       







     values(@appmstid,22,@appmstid,getutcdate(),isnull(@TranAmt,0),isnull(@TranAmt,0),'Re-Entry',1,0, DATEADD(MM,1, getutcdate()))           







     update VPTran set IsActive=2 where Banktranid in(select BankTranId from VPTran  where AppmstId=@AppMstID and IsActive=1 )          







     set @flag='Successful tranasfer amount :'+ CAST(@Amount AS varchar)      







  End         







 Else        







   set @flag='Transferable amount greater than and equal to =5 '          







End          







if(@@ERROR <>0)                                        







Begin             







   set @flag='Error'                                      







     RollBack Transaction                                        







     Return                                        







   End                                        







Commit Transaction 

GO
/****** Object:  StoredProcedure [dbo].[TransferPins]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[TransferPins](@pinsrnofrom int,@pinsrnoto int,@regno varchar(50),@cregno varchar(50),@flag int output)            
as            
begin            
 declare @pno int,@reg varchar(50)         
 declare @count int           
 set @reg=''            
 set @flag=0            
 set @pno=0            
 if(select count(*) from appmst where Appmstregno=@cregno)>0            
 begin            

	 if(@regno!=@cregno)            
	 begin            

		select @count=count(*) from pinmst where pinsrno>=@pinsrnofrom  and pinsrno<=@pinsrnoto     and allotedto=(select appmstid from AppMst where AppMstRegNo=@regno) and PaidAppMstId=0            

		 if(@count>0)            
		 begin            

              

   set xact_abort on            

   begin transaction            

   update pinmst set allotedto=(select appmstid from AppMst where AppMstRegNo=@cregno) where pinsrno>=@pinsrnofrom  and pinsrno<=@pinsrnoto  and allotedto=(select appmstid from AppMst where AppMstRegNo=@regno) and PaidAppMstId=0           

   insert into pintran (Appmstid,paidappmstid,pinsrno,dot) select @cregno,@regno,pinsrno,dateadd(minute,330,getutcdate()) from pinmst where pinsrno>=@pinsrnofrom  and pinsrno<=@pinsrnoto     and allotedto=(select appmstid from AppMst 

   where AppMstRegNo=@cregno)  and PaidAppMstId=0           

   commit transaction            

   set @flag=1            

  end            
 else            

  set @flag=-111 --- Invalid Pin Information            
 end            
 else            
  set @flag=-113  ---Can nt transfer urself            
 end            
 else            
  set @flag=-112 -- Invalid Allot to id            

end



GO
/****** Object:  StoredProcedure [dbo].[trasfrtappmst]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
 CREATE proc [dbo].[trasfrtappmst]    
 as    
 begin    
   
  
 Declare @sessionID varchar(50),    @sponserid nvarchar(50), @AppMstLogin nvarchar(50), @AppMstPassword nvarchar(50)  , @AppMstFName  nvarchar(50),            
@mobile varchar(50),   @emailid varchar(100), @City varchar(50),@State varchar(100),@AppMstLeftRight float,@IPAddress varchar(50), @PanCard varchar(50)  
   
   declare cur cursor for select SponsorID, SponsorID, AppMstRegNo, AppMstPassword, AppMstFName, Isnull(AppMstMobile, 'NA'), Isnull(email, 'NA'), Isnull(AppMstCity, 'NA'), Isnull(AppMstState, 'NA'), AppMstLeftRight, IPAddress, Isnull(panno, 'NA') from demo233.dbo.AppMst  where appmstid<>1 order by Appmstid     
    
  
    open cur   fetch next from cur into  @sessionID  ,@sponserid ,@AppMstLogin ,@AppMstPassword ,@AppMstFName  ,@mobile ,@emailid ,@City ,@State ,@AppMstLeftRight ,@IPAddress ,@PanCard   
    while @@Fetch_Status=0                                                                                                                        
    Begin                             
     
   
  exec InsertDataCursonr @sessionID  ,@sponserid ,@AppMstLogin ,@AppMstPassword ,@AppMstFName  ,@mobile ,@emailid ,@City ,@State ,@AppMstLeftRight ,@IPAddress ,@PanCard    
                                 
                              
    fetch next  from cur into @sessionID  ,@sponserid ,@AppMstLogin ,@AppMstPassword ,@AppMstFName  ,@mobile ,@emailid ,@City ,@State ,@AppMstLeftRight ,@IPAddress ,@PanCard   
    End ----------end while--                                            
   close cur                                                
   deallocate cur              
End      
      
GO
/****** Object:  StoredProcedure [dbo].[Tree_mst]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[Tree_mst](@userid varchar(50))  
as  
begin  
select userid+' , '+fname+' (REGIONAL)' as fname,userid as id,'r' as rid from franchisereg where sponsortype='MST' and sponsorid=@userid  
union  
select userid+' , '+fname+' (CITY)' as fname,userid as id,'c' as rid from franchisecity where sponsortype='MST' and sponsorid=@userid order by rid desc  
select userid+' , '+fname+' (CITY)' as fname,userid  as id,ltrim(rtrim(regionalfranchise)) as rid from franchisecity where sponsortype='REG'  
end





GO
/****** Object:  StoredProcedure [dbo].[Tree_reg]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[Tree_reg](@userid varchar(50))    
as    
begin    
 select userid+' , '+fname+' (CITY)' as fname,userid  as id,ltrim(rtrim(regionalfranchise)) as rid from franchisecity where sponsortype='REG' and RegionalFranchise=@userid    
end





GO
/****** Object:  StoredProcedure [dbo].[tryleg]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[tryleg](@AppMstRegNo nvarchar(50))                
as                
begin                
select AppMstRegNo,UPPER(AppMstFName) AS AppMstFName,AppMstLeftRight,SponsorID,ParentID,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,appmstpaid from AppMst where SponsorID=@AppMstRegNo order by appmstid  
            
end





GO
/****** Object:  StoredProcedure [dbo].[trylegTP]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[trylegTP](@AppMstRegNo nvarchar(50))                        
as                        
begin            
declare @count int        
declare @regno varchar(50)        
select @regno=AppMstRegNo from AppMst where SponsorID=@AppMstRegNo      
Select @count=count(*) from AppMst,apptransponsor, AppMst As AppMstSponsor WHere AppMst.SponsorId = AppMstSponsor.AppmstRegNo And AppMst.AppMstId = apptransponsor.AppMstId  And apptransponsor.ParentId =(SELECT appmstid FROM appmst WHERE appmstregno=@regno
  
)                     
select top 10 AppMstRegNo,UPPER(AppMstFName) AS AppMstFName,AppMstLeftRight,SponsorID,ParentID,producttype=case producttype when 1 then 'PLAN A' when 2 then 'PLAN B' when 3 then 'PLAN C' when 4 then 'PLAN D'when 5 then 'PLAN E' end,appmstpaid,jamount,convert(varchar(20),appmstdoj,103) as doj,@count as cnt from AppMst where SponsorID=@AppMstRegNo order by appmstid          
                    
end





GO
/****** Object:  StoredProcedure [dbo].[Turnover]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE  [dbo].[Turnover](@fromdate datetime,@todate datetime)      
as      
begin      
declare  @appmstid int,@Samount int,@srno int,@doe datetime,@ptype int,@planpercent float,@monthlyamount float,@ROIamount float,@NOofDays int,@TNo int,@plantype int      
declare   ROI_CUR  cursor for select srno,appmstid,amount,doe from sharemst where CAST(FLOOR(CAST(doe as float)) as datetime) <=@todate     order by srno      
set nocount on      
set xact_abort on      
begin transaction      
open ROI_cur      
fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe      
while (@@fetch_status=0)      
begin      
set @monthlyamount=0      
set @ROIamount=0      
set @NOofDays=0      
select @ptype=producttype from appmst where appmstid=@appmstid      
select @planpercent=(case when @ptype=1 then plan1 else plan2 end) from paymentmst       
set @TNo=(DATEDIFF(day, @fromdate, @todate))+1      
                           
if (@doe<@fromdate)      
begin       
set  @NOofDays=(DATEDIFF(day, @fromdate, @todate))+1      
end      
else       
 set  @NOofDays=(DATEDIFF(day, @doe, @todate))+1       
set @ROIamount=(@Samount*@NOofDays)/@Tno      
update sharemst set netamt=@ROIamount where srno=@srno 
select @plantype=producttype from appmst where appmstid=@appmstid
fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe      
end      
close ROI_CUR      
deallocate ROI_CUR      
commit transaction      
end





GO
/****** Object:  StoredProcedure [dbo].[Turnover1]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE  [dbo].[Turnover1](@fromdate datetime,@todate datetime)        
as        
begin        
declare  @appmstid int,@Samount int,@srno int,@doe datetime,@ptype int,@planpercent float,@monthlyamount float,@ROIamount float,@NOofDays int,@TNo int,@plantype int        
declare   ROI_CUR  cursor for select srno,appmstid,amount,doe from sharemst where CAST(FLOOR(CAST(doe as float)) as datetime) <=@todate     order by srno        
set nocount on        
set xact_abort on        
begin transaction        
open ROI_cur        
fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe        
while (@@fetch_status=0)        
begin        
set @monthlyamount=0        
set @ROIamount=0        
set @NOofDays=0        
select @ptype=producttype from appmst where appmstid=@appmstid        
select  @planpercent=
(
case @ptype 
  when 1 then plan1
  when 2 then plan2
  when 3 then plan3
end)
from paymentmst      
set @TNo=(DATEDIFF(day, @fromdate, @todate))+1        
                             
if (@doe<@fromdate)        
begin         
set  @NOofDays=(DATEDIFF(day, @fromdate, @todate))+1        
end        
else         
 set  @NOofDays=(DATEDIFF(day, @doe, @todate))+1         
set @ROIamount=(@Samount*@NOofDays)/@Tno        
update sharemst set netamt=@ROIamount where srno=@srno   
select @plantype=producttype from appmst where appmstid=@appmstid  
fetch next from ROI_cur into @srno,@appmstid,@Samount,@doe        
end        
close ROI_CUR        
deallocate ROI_CUR        
commit transaction        
end





GO
/****** Object:  StoredProcedure [dbo].[TurnOverDisplay]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[TurnOverDisplay](@regno varchar(50),@mindate datetime,@maxdate datetime)
as
begin
 if EXISTS(select * from appmst where appmstregno=@regno)    
begin  
select sum(amount) as amount from sharemst where appmstid in (select  appmstid from apptransponsor where parentid=(select appmstid from appmst where appmstregno=@regno) ) and CAST(FLOOR(CAST(doe as float)) as datetime) between @mindate and @maxdate
end
end





GO
/****** Object:  StoredProcedure [dbo].[turnovermaster]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[turnovermaster] @fromdate datetime , @todate datetime ,@regno varchar(50),  @consolidated float output, @planA float output,@planB float output
as  
begin  
declare @appmstid int
update sharemst set netamt=0  
execute Turnover @fromdate,@todate  
select @appmstid=appmstid from appmst where appmstregno=@regno  
select @Consolidated=sum(netamt) from sharemst where appmstid in (select  appmstid from apptransponsor    
where parentid=@appmstid)  
select @planA=sum(netamt) from sharemst where appmstid in (select  a.appmstid from apptransponsor a,appmst b    
where a.parentid=@appmstid and a.appmstid=b.appmstid  and producttype=1)  
select @planB=sum(netamt) from sharemst where appmstid in (select  a.appmstid from apptransponsor a,appmst b    
where a.parentid=@appmstid and a.appmstid=b.appmstid  and producttype=2)  
select @Consolidated as Consolidated_turnover,@planA as PlanA_Turnover,@planB as PlanB_Turnover  
end





GO
/****** Object:  StoredProcedure [dbo].[turnovermaster1]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[turnovermaster1] @fromdate datetime , @todate datetime ,@regno varchar(50),  @consolidated float output, @planA float output,@planB float output,@planc float output  
as    
begin    
declare @appmstid int  
update sharemst set netamt=0    
execute Turnover1 @fromdate,@todate    
select @appmstid=appmstid from appmst where appmstregno=@regno    
select @Consolidated=sum(netamt) from sharemst where appmstid in (select  appmstid from apptransponsor      
where parentid=@appmstid)    
select @planA=sum(netamt) from sharemst where appmstid in (select  a.appmstid from apptransponsor a,appmst b      
where a.parentid=@appmstid and a.appmstid=b.appmstid  and producttype=1)    
select @planB=sum(netamt) from sharemst where appmstid in (select  a.appmstid from apptransponsor a,appmst b      
where a.parentid=@appmstid and a.appmstid=b.appmstid  and producttype=2)
select @planC=sum(netamt) from sharemst where appmstid in (select  a.appmstid from apptransponsor a,appmst b      
where a.parentid=@appmstid and a.appmstid=b.appmstid  and producttype=3)    
select @Consolidated as Consolidated_turnover,@planA as PlanA_Turnover,@planB as PlanB_Turnover,@planC as PlanC_Turnover    
end





GO
/****** Object:  StoredProcedure [dbo].[unBlockID]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[unBlockID](@regno varchar(50),@pwd varchar(50) output,@mobile varchar(50) output)      
      
as      
begin      
set @pwd=0    
set @mobile=0    
begin transaction  
set xact_abort on  
set nocount on  
delete from blockedid where appmstid=(select appmstid from appmst where appmstregno=@regno)      
update appmst set appmstpassword=appmstlogin where appmstregno=@regno  
select @pwd=appmstpassword,@mobile=appmstmobile from appmst where appmstregno=@regno    
commit transaction  
end





GO
/****** Object:  StoredProcedure [dbo].[UnUsedPins]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[UnUsedPins](@regno varchar(50),@mindate datetime,@maxdate datetime,@search varchar(50))                
as                
begin                
 if EXISTS(select AppMstID from appmst where appmstregno=@regno)              
begin              
Select p.PinsrNo,p.Pinno,p.PinPassword,PaidAppMstId= case p.PaidAppMstId when 0 then 'UnUsed' when 1 then 'Used' end,p.joinfor,p.Amount,  
(select appmstid from appmst where appmstid=p.RegNo) as RegNo,convert(char(20),p.allotmentdate,103) as allotmentdate,  
(select appmstid from appmst where appmstid=p.allotedto) as allotedto,UPPER(p.remark) AS remark,UPPER(p.mode) AS mode,p.TransferId,  
UPPER(p.chequeno) AS chequeno,UPPER(p.bank) AS bank,UPPER(p.branch) AS branch,p.depositedamount from PinMst p     
where p.allotedto=(select appmstid from appmst where appmstregno=@regno) and p.PaidAppMstId=0 and RegNo=0 and   
(case when  LEN(@search)>2 and Pinno like @search then 1   
when len(@search)<=2 and CAST(FLOOR(CAST(p.allotmentdate  as float)) as datetime) between @mindate and @maxdate then 1 else 0 end)=1 order by p.pinsrno            
end              
end





GO
/****** Object:  StoredProcedure [dbo].[UpdateAddress]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc  [dbo].[UpdateAddress]  
(  
@regno varchar(50),    

@address varchar(50),    


@state varchar(100),                   
@City varchar(15),    
@zip varchar(50))                
as                
begin                
              
if exists (select appmstregno from appmst where appmstregno=@regno  )              
begin              
              
update AppMst set    
 
appmstaddress1=@address,     
  

AppMstState=@state,     
AppMstCity=@city,
AppMstPinCode=@zip

where AppMstRegNo=@regno                
end                
              
end  

 

GO
/****** Object:  StoredProcedure [dbo].[updateAdminLock]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[updateAdminLock](@adminID int,@Lock varchar(10) )                              
as                              
begin                              
update controlmst set lock=@Lock where srno=@adminID  
  
end





GO
/****** Object:  StoredProcedure [dbo].[UpdateApptranFranchise]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[UpdateApptranFranchise] (@Parentid  nvarchar(30),@AppMstId  Int)                            
AS                            
 Declare  @jf float, @CAppMstParentId  int, @CAppMstLevel int,@CAppMstLeftRight int,@paid int                          
 select @jf =joinfor,@paid=appmstpaid from appmst where appmstid=@appmstid                          
 select  @CAppMstParentId  = Appmstid from appmst where appmstregno=@Parentid                            
 Insert Into AppTranfranchise (sponsorid,ParentId,AppMstId,sponsorlevel,joinfor,appmstpaid) Values (@CAppMstParentId,@CAppMstParentId ,@AppMstId ,1,@jf,@paid)                            
 Insert Into AppTranfranchise (sponsorid,ParentId,AppMstId,sponsorlevel,joinfor,appmstpaid) SELECT @CAppMstParentId,ParentId,@AppMstId As AppMstId , sponsorLevel + 1,@jf As AppMstLevel, appmstpaid FROM AppTranfranchise Where Appmstid=  @CAppMstParentId





GO
/****** Object:  StoredProcedure [dbo].[UpdateApptranSponsor]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[UpdateApptranSponsor] (@Parentid  nvarchar(30),@AppMstId  Int)                              
AS                              
 Declare  @jf float, @CAppMstParentId  int, @CAppMstLevel int,@CAppMstLeftRight int,@paid int                            
 select @jf =joinfor,@paid=appmstpaid from appmst where appmstid=@appmstid                            
 select  @CAppMstParentId  = Appmstid from appmst where appmstregno=@Parentid                              
 Insert Into AppTransponsor (sponsorid,ParentId,AppMstId,sponsorlevel,joinfor,appmstpaid) Values (@CAppMstParentId,@CAppMstParentId ,@AppMstId ,1,@jf,@paid)                              
 Insert Into AppTransponsor (sponsorid,ParentId,AppMstId,sponsorlevel,joinfor,appmstpaid) SELECT @CAppMstParentId,ParentId,@AppMstId As AppMstId , sponsorLevel + 1,@jf As AppMstLevel, appmstpaid FROM AppTransponsor Where Appmstid=  @CAppMstParentId





GO
/****** Object:  StoredProcedure [dbo].[updateBankMst]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[updateBankMst](@appmstid varchar(50),    
@Bname varchar(100),    
@branch varchar(100),    
@acno varchar(50),    
@actype varchar(50),            
@holder varchar(100),    
@ifs varchar(50),    
@panno varchar(50),    
@flag varchar(100) output)            
as            
begin       
  
declare   @appmstidnewe  bigint  
  


  declare @BankNameold varchar(100) , @BranchNew varchar(100) ,
	@acnonew  varchar(50) ,
	@AcTypeNew varchar(50),
	@HolderNameNew varchar,
	@IFSNew varchar(50) ,
	@PannoNew varchar(50),
	@byupdateNew varchar(50),
	@appmstidNew bigint



set @appmstidnewe =(select appmstid from  appmst where appmstregno=@appmstid) 

	select @BankNameold=BankName ,@BranchNew=Branch, @acnonew=acno ,@AcTypeNew=AcType, @HolderNameNew=HolderName ,@IFSNew=IFS from  BankMst
	where appmstid=@appmstidnewe
	select @PannoNew=Panno
	from  appmst
	where appmstid=@appmstidnewe
	 

	 insert into HistoryBankMst(BankName,Branch,acno,AcType,HolderName,IFS, byupdate, Panno, doe, appmstid)
	 values(@BankNameold,@BranchNew, @acnonew,@AcTypeNew,@HolderNameNew,@IFSNew, 'Admin' ,@PannoNew, getdate(), @appmstidnewe )

    update bankmst set BankName=@Bname,Branch=@branch,acno=@acno,AcType=@actype,HolderName=@holder,IFS=@ifs , doe=getdate()
    where appmstid=@appmstidnewe    
	
	IF exists(select 1 from BankMst where appmstid=@appmstidnewe) 
	BEGIN
		UPDATE BankMst set 
		BankName=@Bname,
		Branch=@branch,
		acno=@acno,
		AcType=AcType,
		HolderName=@holder,
		IFS=@ifs		
		where appmstid=@appmstidnewe
	END
	ELSE 
	BEGIN
		INSERT INTO BankMst 
		(BankName,	Branch,	acno,	AcType,	HolderName,	IFS	,MICR,	doe,	appmstid)
		VALUES(@Bname,@branch,@acno,@actype,@holder,@ifs,'',getdate(),@appmstidnewe)
	END 
	update appmst set panno= @panno where  appmstid=@appmstidnewe    
   set @flag='1'          
     
end      
    
      
GO
/****** Object:  StoredProcedure [dbo].[updatechqdate]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure[dbo].[updatechqdate](@cdate   datetime,@frmdt  datetime,@todt  datetime)        
        
as         
begin     
update  paymenttrandraft set chequedate=@cdate where CAST(FLOOR(CAST(paymentfromdate as float)) as datetime)=@frmdt and CAST(FLOOR(CAST(paymenttodate as float)) as datetime)=@todt  
end





GO
/****** Object:  StoredProcedure [dbo].[updatechqdateroi]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[updatechqdateroi](@cdate   datetime,@frmdt  datetime,@todt  datetime)              
              
as               
begin           
update  paymenttrandraftroi set chequedate=@cdate where CAST(FLOOR(CAST(paymentfromdate as float)) as datetime)=@frmdt and CAST(FLOOR(CAST(paymenttodate as float)) as datetime)=@todt        
end





GO
/****** Object:  StoredProcedure [dbo].[updatechqdateroiTB]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[updatechqdateroiTB](@cdate   datetime,@frmdt  datetime,@todt  datetime)              
              
as               
begin           
update  paymenttrandraftroiTB set chequedate=@cdate where CAST(FLOOR(CAST(paymentfromdate as float)) as datetime)=@frmdt and CAST(FLOOR(CAST(paymenttodate as float)) as datetime)=@todt        
end





GO
/****** Object:  StoredProcedure [dbo].[UpdateCode]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--[getGiftCardorderDetial] 1
CREATE proc  [dbo].[UpdateCode](@id bigint, @txtcode varchar(max), @flag int output)              
as              
begin              
update  GiftOrderMst set Status=1 , GiftCode=@txtcode where orderID= @id    
set         @flag=1
end  
  
 
GO
/****** Object:  StoredProcedure [dbo].[UpdateImage]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[UpdateImage] @fieldname varchar(100),@pid int,@ImgString varchar(100)  







as  







if(exists(select * from shopproductmst where productid=@pid))  







begin  







  if(@fieldname='ImageName1')  







  begin  







  update ShopProductmst set ImageName=@ImgString where ProductId=@pid  







  end  







  if(@fieldname='ImageName2')  







  begin  







  update ShopProductmst set ImageName1=@ImgString where ProductId=@pid  







  end   







  if(@fieldname='ImageName3')  







  begin  







  update ShopProductmst set ImageName2=@ImgString where ProductId=@pid  







  end  







  if(@fieldname='ImageName4')  







  begin  







  update ShopProductmst set ImageName3=@ImgString where ProductId=@pid  







  end  







  if(@fieldname='ImageName5')  







  begin  







  update ShopProductmst set ImageName4=@ImgString where ProductId=@pid  







  end  







  if(@fieldname='ImageName6')  







  begin  







  update ShopProductmst set ImageName5=@ImgString where ProductId=@pid  







  end  







  if(@fieldname='ImageName7')  







  begin  







  update ShopProductmst set ImageName6=@ImgString where ProductId=@pid  







  end  







  if(@fieldname='ImageName8')  







  begin  







  update ShopProductmst set ImageName7=@ImgString where ProductId=@pid  







  end  







end 








GO
/****** Object:  StoredProcedure [dbo].[UpdateNews]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[UpdateNews](@NewsMstValidUpTo varchar(50),@NewsMstTitle varchar(100),@NewsMstDiscription varchar(8000),@newstype varchar(50),@id int,@ImageName varchar(50) )              
as              
    begin        
 update NewsMst set NewsMstTitle=@NewsMstTitle,newstype=@newstype,NewsMstDiscription=@NewsMstDiscription,NewsMstValidUpTo=@NewsMstValidUpTo,Photo=@ImageName  where NewsmstId=@id        
end  




GO
/****** Object:  StoredProcedure [dbo].[UpdatePagePermissions]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[UpdatePagePermissions](@userid varchar(50),@pagename varchar(200),@permission int)  
as  
begin  
if(exists(Select srno from pagepermissions where userid=@userid and pagename=@pagename))  
 update pagepermissions set permission=@permission where userid=@userid and pagename=@pagename  
else  
 insert into pagepermissions (userid,pagename,permission) values(@userid,@pagename,@permission)  
if(not exists(Select srno from pagepermissions where userid=@userid and pagename='welcome.aspx'))  
	insert into pagepermissions (userid,pagename,permission) values(@userid,'welcome.aspx',1)  
end





GO
/****** Object:  StoredProcedure [dbo].[UpdateParrentId]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[UpdateParrentId] @PID varchar(50),@LeftRight int,@appmstregno varchar(50)        
as        
BEGIN        
 declare @total int        
 set @total=1        
 while(@total>0)        
 begin         
  if(@LeftRight=0)        
  begin        
   select @total=count(*) from AppMst WITH (NOLOCK) where ParentId =@PID  and AppMstLeftRight=@LeftRight        
   select @PID=AppMstRegNo from AppMst WITH (NOLOCK) where ParentId =@PID  and AppMstLeftRight=@LeftRight        
  end        
  if(@LeftRight=1)        
  begin        
   select @PID=AppMstRegNo from AppMst WITH (NOLOCK)where ParentId =@PID  and AppMstLeftRight=@LeftRight        
   select @total=count(*) from AppMst WITH (NOLOCK) where ParentId =@PID  and AppMstLeftRight=@LeftRight        
  end        
 end        
 update AppMst set ParentID=@pid where AppMstRegNo =@appmstregno        
end  
  
  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[updatepay]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[updatepay](                   
@appmstid varchar(20),                          
@draftid varchar(20),                            
                        
@Binary float,@Direct float,         
@display varchar(20)                      
)          
              
as         
        
        
begin         
        
        
declare @b  float             
declare @d  float    
declare @f  float    
declare @r  float                 
declare @tds  float           
declare @oc  float          
declare @cutamt float        
declare @dispatchinc float        
declare @totalinc float        
declare @totalearning float        
update  paymenttrandraft set paymentdisplay=@display,binaryamt=@Binary,directAmt=@Direct where paymenttrandraftid=@draftid and appmstid=@appmstid          
select @b=binaryamt,@d=directAmt,@tds=Tds,@oc=handlingcharges from paymenttrandraft where paymenttrandraftid=@draftid and appmstid=@appmstid         
set  @totalinc=@b+@d
  declare @tax float,@OCPercent float             
select @tax=tax,@ocPercent=oc from paymentmst where srno=1         
          
set  @totalearning=@totalinc        
--set @tds=@totalearning * (@tax/100)  
set @tds=0                  
set @oc=@totalearning * (@ocPercent/100)       
set  @cutamt=@tds+@oc        
set  @dispatchinc=@totalinc-@cutamt        
if (@dispatchinc<0)        
begin        
set @dispatchinc=0        
end        
     
update  paymenttrandraft set totalearning=@totalinc,dispachedamt=@dispatchinc,chequeamount=@dispatchinc,Tds=@tds,handlingcharges=@oc where paymenttrandraftid=@draftid and appmstid=@appmstid         
        
end





GO
/****** Object:  StoredProcedure [dbo].[updatepayROI]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[updatepayROI](                                     
@appmstid varchar(20),                                            
@draftid varchar(20),                                              
                    
@roi float,              
                 
@display varchar(20)                                        
)                            
as                           
begin                           
                              
declare @r  float          
declare @r1  float                           
declare @tds  float                             
declare @oc  float                            
declare @cutamt float                          
declare @dispatchinc float                          
declare @totalinc float                          
declare @totalearning float                          
update  paymenttrandraftROI set paymentdisplay=@display,income1=@roi  where paymenttrandraftid=@draftid and appmstid=@appmstid                           
select @roi=income1,@tds=Tds,@oc=handlingcharges from paymenttrandraftroi where paymenttrandraftid=@draftid and appmstid=@appmstid                           
set  @totalinc=@roi           
declare @tax float,@OCPercent float                           
select @tax=tax,@ocPercent=oc from paymentmst where srno=1                            
set  @totalearning=@totalinc                          
set @tds=@totalearning * (@tax/100)                                  
set @oc=@totalearning * (@ocPercent/100)                                
set  @cutamt=@tds                         
set  @dispatchinc=@totalinc-@cutamt                          
if (@dispatchinc<0)                          
begin                          
set @dispatchinc=0                          
end                          
update  paymenttrandraftROI set totalearning=@totalinc,dispachedamt=@dispatchinc,chequeamount=@dispatchinc,Tds=@tds,handlingcharges=@oc where paymenttrandraftid=@draftid and appmstid=@appmstid                           
end





GO
/****** Object:  StoredProcedure [dbo].[updatepayroitb]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[updatepayroitb](                       
@appmstid varchar(20),                              
@draftid varchar(20),                                
                            
 @Franchise float,@Referral float,             
@display varchar(20)                          
)              
                  
as             
            
            
begin             
            
            
    
declare @f  float        
declare @r  float                     
declare @tds  float               
declare @oc  float              
declare @cutamt float            
declare @dispatchinc float            
declare @totalinc float            
declare @totalearning float            
update  paymenttrandraftROITB set paymentdisplay=@display,JumboClub1Amt=@Franchise,JumboClub2Amt=@Referral  where paymenttrandraftid=@draftid and appmstid=@appmstid              
select @f=JumboClub1Amt,@r=JumboClub2Amt,@tds=Tds,@oc=handlingcharges from paymenttrandraftROITB where paymenttrandraftid=@draftid and appmstid=@appmstid             
set  @totalinc=@f+@r      
  declare @tax float,@OCPercent float                 
select @tax=tax,@ocPercent=oc from paymentmst where srno=1             
              
set  @totalearning=@totalinc            
--set @tds=@totalearning * (@tax/100) 
set @tds=0                       
set @oc=@totalearning * (@ocPercent/100)           
set  @cutamt=@tds+@oc            
set  @dispatchinc=@totalinc-@cutamt            
if (@dispatchinc<0)            
begin            
set @dispatchinc=0            
end            
         
update  paymenttrandraftROITB set totalearning=@totalinc,dispachedamt=@dispatchinc,chequeamount=@dispatchinc,Tds=@tds,handlingcharges=@oc where paymenttrandraftid=@draftid and appmstid=@appmstid             
            
end





GO
/****** Object:  StoredProcedure [dbo].[updatePopUp]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[updatePopUp](@srno int,@msg varchar(500))    
as    
begin    
update popup set popupmsg=@msg where srno=@srno    
end





GO
/****** Object:  StoredProcedure [dbo].[UpdateProfile]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[UpdateProfile]          
(          
@regno varchar(50),            
@fname varchar(50),                          
@mobileno varchar(15),        
@email varchar(50),      
@distt varchar(50),             
@Btc varchar(200),     
@Key varchar(4),          
@zip varchar(50),@flag varchar(1) output    )                        
as                        
begin                        
   
 Declare  @CT int  
   
set @CT   =(select isnull(count(appmstid),0) from appmst where appmstregno=@regno and    ePassword =  @Key  )  
  
if @CT =1  
begin  
if exists (select appmstregno from appmst where appmstregno=@regno  )                      
begin                      
                      
update AppMst set            
 Type='1',                        
distt=@distt,           
AppmstMobile=@mobileno,                       
email=@email,             
isEdited=1,        
appmstfname=@fname   ,        
AppMstPinCode=@zip ,      
AcountNo=@Btc         
where AppMstRegNo=@regno     
 SET @flag='1'  
                     
end                        
      end  
     
   ELSE  
   BEGIN  
   SET @flag='0'  
   END                
end          
        
        
GO
/****** Object:  StoredProcedure [dbo].[UpdateProfile_New]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[UpdateProfile_New](@regno varchar(50),@title varchar(50),@lname varchar(100),@gtitle varchar(50),@address varchar(200),  
@distt varchar(100),@phone varchar(15),@dob datetime,@State varchar(100),@city varchar(100),@pincode varchar(10),  
@mobileno varchar(15),@bankName Varchar(100),@branch varchar(100),@AcNo varchar(30),@panNo varchar(20),  
@email varchar(50),@nomName varchar(100),@nom_rel varchar(100),@IFS varchar(30),@MICR varchar(50),@Actype varchar(50))  
as  
begin  
update AppMst set  Appmsttitle=@title , APPmstLname=@lname,gtitle=@gtitle,AppMstAddress1=@address,  
distt=@distt,AppMstPrimaryPhone=@phone,userdob=@dob,AppMstState=@State,AppMstCity=@city,  
AppMstPinCode=@pincode,AppmstMobile=@mobileno,BankName=@bankName,Branch=@branch,AcountNo=@AcNo,  
panno=@panNo,email=@email, nom_name=@nomName, nom_rela=@nom_rel,IFC=@IFS,MICR=@MICR,type= @Actype
where AppMstRegNo=@regno  
end





GO
/****** Object:  StoredProcedure [dbo].[UpdateProfileAPP]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[UpdateProfileAPP]            
(            
@regno varchar(50),    
@Country varchar(50),               
@mobileno varchar(15),          
@emailid varchar(50),        
@Btc varchar(200),       
   
@FName varchar(100), @flag varchar(100) output    )                          
as                          
begin                          
     
 Declare  @CT int    
     
   
     if exists (select appmstregno from appmst where appmstregno=@regno  )                        
     begin                        
     update AppMst set              
     distt=@Country ,            
     AppmstMobile=@mobileno,                         
     email=@emailid,               
     isEdited=1,          
     AppMstFName=@FName ,        
     AcountNo=@Btc           
     where AppMstRegNo=@regno       
     SET @flag='1'    
                       
     end                          
                  
end            
          
GO
/****** Object:  StoredProcedure [dbo].[updatepwd]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[updatepwd] (@regno varchar(50),@pwd varchar(50),@appmstfname varchar(50) output,@mobileno varchar(50) output)      
as         
begin      
if exists (select appmstregno from appmst where appmstregno=@regno  )    
begin    
update appmst set  AppMstPassword=@pwd where appmstregno=@regno      
select @appmstfname=appmstfname,@mobileno=appmstmobile from appmst where  appmstregno=@regno      
  end    
      
end





GO
/****** Object:  StoredProcedure [dbo].[updateQuote]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[updateQuote](@srno int,@quote varchar(8000))  
as  
begin  
update cmddesk set quote=@quote where srno=@srno  
end





GO
/****** Object:  StoredProcedure [dbo].[updateReceiveStatus]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc[dbo].[updateReceiveStatus](@payId int,@regno varchar(50),@status int,@comment varchar(500),@flag varchar(200) out) 
as 
begin 
	
	set nocount on 
	set @flag='' 
	if(not exists(select AppMstID from AppMst  where AppMstRegno=@regno and appmstactivate=1)) 
	begin
		set @flag='Invalid user id'
		return; 
	end
	if(not exists(select payid from PayoutMst where PayId=@payId and isnull(ReceiveStatus,0)=0 and AppMstRegno=@regno)) 
	begin
		set @flag='Invalid payout selected.'
		return; 
	end
	set xact_abort on 
	begin transaction 
		insert into PayoutReceiveMst (PayId,ReceiveStatus,Comment,doe) values(@payId,@status,@comment,DATEADD(minute,330,getutcdate())) 
		update PayoutMst set ReceiveStatus=@status where PayId=@payId and AppMstRegno=@regno and ISNULL(ReceiveStatus,0)=0  
		set @flag='1'
	commit transaction 
	
end





GO
/****** Object:  StoredProcedure [dbo].[updateUserEPwd]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[updateUserEPwd] (@regno varchar(50),@pwd varchar(50))        
        
as         
        
begin        
if exists (select appmstid from appmst where appmstregno=@regno  )      
begin      
update appmst set ePassword=@pwd where appmstregno=@regno        
  end      
        
end





GO
/****** Object:  StoredProcedure [dbo].[UpdateWithtrawPayent]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc[dbo].[UpdateWithtrawPayent] (@WithdrawId int ,@PayTranId int)   

as   

begin   
      
	 update vPTRan set BankTranRemarks='withdraw' where BankTranId=@PayTranId
	 update WithdrawMst set  Remarks='Payment Completed'  ,  ispaid=1  where WithdrawId=@WithdrawId
end   

  

   


GO
/****** Object:  StoredProcedure [dbo].[UPGRADEUSER]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  --exec [RechargeUser] 'GBT784997','GBT424273','1234',500,'',''                     
--select * from CasueID WHERE appmstid=1              
  --select * from APPMST WHERE APPMSTREGNO='GBT128215'              
CREATE  proc[dbo].[UPGRADEUSER](@SessionRegNo varchar(50), @OTP varchar(8)  , 
@Amountcv float,  
@Amountrate float,             
@AmountType float,                                
@flag varchar(100) output)                       
as                      
                        
begin                      
 declare  @RegNo varchar(20)   ,@getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                         
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float                       
set @Bbalance=0                  
set @rechargedAmt=0                      
set @estimateReAmt=0                       
set @getdate= dbo.GetServerDate()                      
set @Amount=@AmountType                      
set @jf=@Amount  
set @RegNo= @SessionRegNo                    
    
 if @Amountrate<1
begin
set  @Amountcv = @AmountType/@Amountrate
end
else  
begin
set  @Amountcv = @AmountType*@Amountrate
end 
	           
 if(@Amount is null or @Amount<=0)                        
 begin                        
 set @flag='Amount must be greater than zero.'                
 return ;                       
 end                   
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                      
  select @Sappmstid=appmstid from appmst where appmstregno=@SessionRegNo                       
      declare   @trID    bigint                       
  set @trID =   convert(numeric(10,0),rand() * 8999999999  ) + 1000000000         
        
BEGIN        
set nocount on                       
set xact_abort on                        
begin transaction                        
  Begin try                    
   if(exists(select appmstregno from appmst where appmstregno=@regno))                        
    Begin                      
      select @BtranId=isnull(max(BankTranId),0) from VPTran where AppMstId=@Sappmstid                                                                                                       
      select @Bbalance=isnull(BanktranBalance,0) from VPTran where appmstid=@Sappmstid and BankTranId=@BtranId                                       
       if(@Bbalance>=@Amountcv)                                             
        begin               
         set @Abalance=@Bbalance - @Amountcv                                                                         
         insert into VPTran (AppMstId,bankTranmode,  paidAppMstId,BankTranDate, outamount, BankTranAmount,BankTranBalance,BankTranRemarks,tranid, investment)                                      
         values (@Sappmstid,12,@appmstid,@getdate,@Amountrate ,@Amountcv,@Abalance,'Account Upgrade',@sharemstid+1, @trID)                                                           
                  
        End               
       Else                                                       
        Begin                            
         set @flag='Insuficient Balance !' --Insufficient Balance                     
         print @flag                       
         Rollback Transaction                              
    Return                            
        End                 
                 
       insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint, investment)                      
       values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0, @trID)                    
                
       set @sharemstid=IDENT_CURRENT('sharemst')                       
       select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                        
       update appmst set jamount=jamount+@AmountType,  Revoucher=@AmountType, JoinFor=JoinFor+@AmountType, ROIDate=getdate() where appmstregno=@regno                        
      ---*************                        
       Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                       
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                        
       Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                      
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                      
       select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                        
          
       
		--update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                        
       update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                       
       update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                        
       execute BinaryIncome  @regno ,@AmountType          
			                   
       set @flag='1'                    
    END            
   ELSE        
   BEGIN        
    set @flag='Invalid User ID !'         
   END            
  END TRY                      
  begin catch                        
    set @flag=ERROR_MESSAGE()                      
  end catch                      
                        
                      
               
                   
 if(@flag='1')                        
 commit transaction                        
 else                        
 rollback transaction         
 END        
                    
END  

 
GO
/****** Object:  StoredProcedure [dbo].[upgradeuser_old]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[upgradeuser_old](@Srno int,@regno varchar(50),@status int,@coment varchar(200),@Amount float,@DOR datetime,@pd datetime,@rno varchar(50),@flag int output)                          
as                          
begin                          
declare @appmstid int,@appmstpaid int                       
set @flag=0                          
set xact_abort on                          
if(exists(select appmstregno from appmst where appmstregno=@regno))                          
begin                          
 if(exists(select srno from RequestMst where srno=@Srno and status=0))                          
 begin                      
                         
             
            
begin transaction                          
             
            
if(@status=1)                          
 begin                          
  update requestMst set Status=@status,comment=@coment,ReceiptDate=@DOR,approvedamt=@Amount,approvalDate=dateadd(minute,330,getutcdate()) where status=0 and srno=@Srno and AppmstRegno=@regno                          
  select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                
  update appmst set jamount=jamount+@Amount where appmstregno=@regno                         
 --                  
 if @appmstpaid != 1                              
 begin                              
  update appmst set appmstpaid=1,appPaiddatetime=@pd  where appmstregno=@regno                                
  update causeid set iselegible=1,effectdate=dateadd(minute,330,getutcdate())  where userid=@appmstid                                
 end                   
 --                  
  insert into sharemst (Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno)                          
  values(@appmstid,@Amount,1,@pd,2,@regno,@rno)                          
  set @flag=1                        
 end                   
            
                   
 else if(@status=2)                          
 begin                          
  update requestmst set status=@status,comment=@coment,approvalDate=dateadd(minute,330,getutcdate()) where status=0 and srno=@Srno and AppmstRegno=@regno                          
  set @flag=1                        
 end               
            
                      
 if(@flag=1)                        
  commit transaction               
                    
 else                        
  rollback transaction              
            
            
            
            
                       
 end                          
end                          
end





GO
/****** Object:  StoredProcedure [dbo].[UPGRADEUSERAdmin]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  --exec [RechargeUser] 'GBT784997','GBT424273','1234',500,'',''                   
--select * from CasueID WHERE appmstid=1            
  --select * from APPMST WHERE APPMSTREGNO='GBT128215'            
CREATE  proc[dbo].[UPGRADEUSERAdmin](@RegNo nvarchar(50) ,                  
 @AmountType float,                    
@bal varchar(100) output,                    
@flag varchar(100) output)                     
as                    
                      
begin                    
 declare @getdate datetime , @RIODate date, @Jf float,@Sappmstid  int ,@appmstpaid int,@Amt float, @RevocherAmt float,@appmstid int ,@TranNo int,@Srno int,@rno varchar(50),@Amount float                       
 declare @JoinForAmt int,  @BtranId int,@Bbalance float,@Abalance float,@sponsorid varchar(50),@sharemstid int,@rechargedAmt float,@startDate datetime,@EndDate datetime,@estimateReAmt float   , @SessionRegNo varchar(50)                  
set @Bbalance=0                    
set @rechargedAmt=0                    
set @estimateReAmt=0                     
set @getdate= dbo.GetServerDate()                    
set @Amount=@AmountType                    
set @jf=@Amount                    
             
 if(@Amount is null or @Amount<=0)                      
 begin                      
 set @flag='Amount must be greater than zero.'              
 return ;                     
 end                 
  select @appmstid=appmstid ,@sponsorid=sponsorid from appmst where appmstregno=@RegNo                    
  select @Sappmstid=appmstid from appmst where appmstregno=@sponsorid                     
        
 Declare @CheckAmount bigint                   
 set  @CheckAmount= dbo.AcountCheck(@AmountType)                
 if @CheckAmount=0                
  begin                
   set @flag='Enter Correct Amount (Min $25 or Multiple of $50 ) !!'             
   return ;                 
 end       
      
       
      
   DECLARE @CheckType int      
   SET @CheckType =(SELECT Appmstpaid FROM AppMst  WHERE AppMstID=@appmstid)      
   IF @CheckType=0      
    BEGIN      
     set @flag='Account Not Active'         
     set @bal= @Abalance       
  return;                  
    END      
 ELSE      
    BEGIN      
      
set nocount on                     
set xact_abort on                      
begin transaction                      
  Begin try                  
   if(exists(select appmstregno from appmst where appmstregno=@regno))                      
    Begin                    
                   
               
       insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno,pinsrno,RewardPoint)                    
       values(@appmstid,@AmountType,1,@getdate,1,@regno,0,0,0)                  
              
       set @sharemstid=IDENT_CURRENT('sharemst')                     
       select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                      
       update appmst set jamount=jamount+@AmountType,  Revoucher=@AmountType, JoinFor=JoinFor+@AmountType, ROIDate=getdate() where appmstregno=@regno                      
      ---*************                      
       Update AppMst Set AppMstLeftTotal = AppMstLeftTotal + @jf,TotalnewLeft=TotalNewLeft+@jf                     
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 0)                      
       Update AppMst Set AppMstRightTotal = AppMstRightTotal + @jf,TotalNewRight=TotalNewRight+@jf                    
       Where AppMstId In (SELECT ParentId  FROM AppTran Where AppMstId = @AppMstId And AppMstLeftRight = 1)                    
       select @JoinForAmt=pintype from Sharemst  where Appmstid=@Sappmstid                      
        
     
		update appmst set newsponsortotal= newsponsortotal+ 1 where appmstregno= @sponsorid                      
       update appmst set appmstpaid=1,appPaiddatetime=@getdate  where appmstregno=@regno                     
       update causeid set iselegible=1,effectdate=@getdate  where userid=@appmstid and iselegible=0                      
       execute [DirectIncome] @AppMstId , @AmountType                    
       execute BinaryIncome  @regno ,@AmountType                     
       set @flag='1'                  
    END          
   ELSE      
   BEGIN      
    set @flag='Invalid User ID !'       
   END          
  END TRY                    
  begin catch                      
    set @flag=ERROR_MESSAGE()                    
  end catch                    
                      
                    
             
                 
 if(@flag='1')                      
 commit transaction                      
 else                      
 rollback transaction       
 END      
                  
END
GO
/****** Object:  StoredProcedure [dbo].[upgradeuserDirect]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[upgradeuserDirect](@regno varchar(50),@status int,@coment varchar(200),@Amount float,            
@DOR datetime,@adminid varchar(100),@Mode varchar(50),@TranNo varchar(100),            
@DOT datetime,@AcNo varchar(50),@BankName varchar(200),@Branch varchar(200),            
@tranbank varchar(200),@tranAcno varchar(50),@tranIFS varchar(50),            
@flag int output,@sno int output)                                        
as                                                                      
begin                                                                      
declare @appmstid int,@appmstpaid int,@rno varchar(50),@Srno int,@adminsrno int,@doe datetime,@invoiceSrno int                                                                   
set @flag=0                 
set @sno=0                                                                     
set xact_abort on                                     
begin transaction    
select @adminsrno=srno from  controlmst where username=@adminid  
select @doe=isnull(max(doe),'2010-01-01'),@invoiceSrno=isnull(max(srno),0) from admininvoicelimit where adminsrno=@adminsrno  
if(exists(select srno from admininvoicelimit where amount>=usedamt+@Amount and adminsrno=@adminsrno and srno=@invoiceSrno and cast(floor(cast(doe as float))as datetime)=cast(floor(cast(dateadd(minute,330,getutcdate()) as float))as datetime)))  
begin                      
if(not exists(select srno from requestmst where lower(tranid)=lower(@TranNo) and @TranNo!=''))                                                                     
begin                      
 if(exists(select appmstregno from appmst where appmstregno=@regno))                                    
 begin                                    
  if(exists(select srno from ControlMst where username=@adminid))                                    
  begin                                                                  
   if(@status=1)            
   begin                                
    select @Srno=isnull(max(srno),0) from requestmst                                        
    set @rno='R'+convert(varchar,@Srno+1)                                        
    select @adminid=username from controlmst where username=@adminid                                      
    insert into RequestMst(appmstregno,Amount,ReceiptDate,RequestDate,ApprovalDate,status,comment,ReceiptNo,                                        
    approvedAmt,adminID,TranId,tranmode,AcNo,BankName,branch,TranBank,TranAcNo,TranIFS)                                        
    values(@regno,@Amount,@DOR,@DOT,@DOT,1,@coment,@rno,@Amount,@adminid,@TranNo,@Mode,@AcNo,@BankName,            
    @Branch,@tranbank,@tranAcno,@tranIFS)                                         
    select @appmstpaid=appmstpaid ,@appmstid=appmstid  from appmst where appmstregno=@regno                                                                            
    update appmst set jamount=jamount+@Amount where appmstregno=@regno                                                                     
    --                                                              
    if @appmstpaid != 1                                                                          
    begin                                                                          
     update appmst set appmstpaid=1,appPaiddatetime=@DOT  where appmstregno=@regno                                                                            
     --update causeid set iselegible=1,effectdate=dateadd(minute,330,getutcdate())  where userid=@appmstid                                                                            
    end                                                               
    --                                                              
    insert into sharemst(Appmstid,Amount,iselegible,doe,pintype,appmstregno,receiptno)                                                                      
    values(@appmstid,@Amount,1,@DOT,2,@regno,@rno)                                        
    update admininvoicelimit set usedamt=usedamt+@Amount where srno=@invoiceSrno  
    set @sno=@@identity        
    set @flag=1                                                                    
   end                                                               
  end                                    
  else                                    
   set @flag=-102                                    
 end                                    
 else                       
  set @flag=-101                                    
end                      
else                 
 set @flag=-103 --No Duplicate Transaction ID                      
end                      
else                     
 set @flag=-104 --Amount alloted is Either finished or expired                      
if(@flag=1)                                                                    
 commit transaction  
else                  
 rollback transaction  
end





GO
/****** Object:  StoredProcedure [dbo].[UsedPins]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[UsedPins](@regno varchar(50))          
as          
begin          
 if EXISTS(select * from appmst where appmstregno=@regno)        
begin        
Select PinsrNo,Pinno,PinPassword,PaidAppMstId=case PaidAppMstId when 0 then 'UnUsed' when 1 then 'Used' end,joinfor,Amount,(select appmstregno from appmst where appmstid =RegNo) as RegNo,convert(char(20),allotmentdate,103) as allotmentdate,convert(char(20),Activedate,103) as Activedate,allotedto,UPPER(remark) AS remark,UPPER(mode) AS mode,TransferId,UPPER(chequeno) AS chequeno,UPPER(bank) AS bank,UPPER(branch) AS branch,depositedamount from PinMst where allotedto=(select appmstid from appmst where appmstregno=@regno) and PaidAppMstId=1 order by pinsrno      
end        
end





GO
/****** Object:  StoredProcedure [dbo].[UserBalance]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[UserBalance](@Regno varchar(50))
as  
begin
select isnull(appmsttitle,'')+space(1)+appmstfname as name , dbo.getbalance(appmstid) as balance from appmst where appmstregno=@Regno
end


GO
/****** Object:  StoredProcedure [dbo].[UserBalanceKP]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
create proc [dbo].[UserBalanceKP](@Regno varchar(50))  
as    
begin  
select isnull(appmsttitle,'')+space(1)+appmstfname as name , dbo.getKPbalance(appmstid) as balance from appmst where appmstregno=@Regno  
end  
  
  
GO
/****** Object:  StoredProcedure [dbo].[userInvestment]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[userInvestment](@regno varchar(50),@mindate datetime=null,@maxdate datetime=null,@srno int=null,@t varchar(10)=null)        
as        
begin   
     if(@t='l')  
select s.appmstid,a.appmstregno,a.appmsttitle+space(2)+a.appmstfname as uname,convert(varchar(20),a.appmstdoj,103) as appmstdoj,s.amount,convert(varchar(20),s.doe,103) as date,s.srno,s.receiptno from sharemst s,appmst a where s.appmstid=a.appmstid  and s.amount >0 and a.appmstregno=@regno and CAST(FLOOR(CAST(s.doe as float)) as datetime) between @mindate and @maxdate         
       
 if(@t='c')  
 select s.appmstid,a.appmstregno,a.appmsttitle+space(2)+a.appmstfname as uname,convert(varchar(20),a.appmstdoj,103) as appmstdoj,s.amount,convert(varchar(20),s.doe,103) as date,s.srno,s.receiptno from sharemst s,appmst a where s.appmstid=a.appmstid  and s.amount >0 and a.appmstregno=@regno  and s.srno=@srno        
  
end





GO
/****** Object:  StoredProcedure [dbo].[userinvoice]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[userinvoice](@id varchar(50))  
as   
begin  
select AppmstFname,appmstaddress1,appmstCity,appmstpincode,appmststate,appmstid,jamount,AppmstTitle from appmst where appmstid in (@id)  
end





GO
/****** Object:  StoredProcedure [dbo].[userModifyProfilePro]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  proc  [dbo].[userModifyProfilePro](                                                                   
  
@modifiedby varchar(50),                                    
@appmstregno varchar(50),                                    
@title1 varchar(50),                                    
@title2 varchar(50),                                    
@fname1 varchar(100),                                    
@fname2 varchar(100),                                    
@tdsdeduction1 int,      
@tdsdeduction2 int,                                   
@distt1  varchar(50),                                    
@distt2 varchar(50),                                    
@Mobile1 varchar(50),                                    
@Mobile2 varchar(50),                                    
@email1 varchar(50),                            
@email2 varchar(50)                                                                     
)                                                          
                                                              
as                        
begin                                                     
 Declare @status int                                                   
 Set @status=0                    
Begin Tran                                                       
insert into userModifyProfile                                            
(                                    
modifiedby,                                    
appmstregno,                                    
title1,                                    
title2,                                    
fname1,                                    
fname2,                                    
tdsdeduction1,      
tdsdeduction2,                          
distt1,  
distt2,                                    
Mobile1,                              
Mobile2,                                                    
email1,                    
email2                                                             
)                                            
values                                     
(                                    
                              
@modifiedby,                                    
@appmstregno,                                    
@title1,                                    
@title2,                                    
@fname1,                                    
@fname2,                                    
@tdsdeduction1,      
@tdsdeduction2,                                   
@distt1,                                    
@distt2,                                    
@Mobile1,                                    
@Mobile2,                                    
                  
@email1,                    
@email2                               
 )                     
              
Set @status=1                    
if(@status=1)                                           
Commit Tran                      
Else                    
Rollback                                       
end  




GO
/****** Object:  StoredProcedure [dbo].[userpinrequest]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[userpinrequest](@bankname varchar(50),@branch varchar(50),@chequeno varchar(50),@amount float,@depositbranch varchar(50),@depositacc varchar(50),@JPamount float,@JPins int,@totalJamt float,@TUamount float,@TPins int,@totaltopupamt float,@allotto float,@refid varchar(25) output)          
as           
begin           
declare @refno varchar(25)          
declare @qdate smalldatetime  
if(@TUamount='')
begin
set @TPins=0
end     

if(@JPamount='')
begin
set @JPins=0
end     
set @qdate=(dateadd(minute,(330),getutcdate()))          
insert into  requestpin (bankname,branch,chequeno,amount,depositbranch,depositacc,JPamount,joiningpin,totaljoiningamt,TUamount,topuppin,totaltopupamt,Allotto)values (@bankname ,@branch ,@chequeno,@amount,@depositbranch ,@depositacc,@JPamount,@JPins,@totalJamt,@TUamount,@TPins,@totaltopupamt,@allotto)    
    
select @refno=max(srno) from requestpin          
set @refid=@refno          
end





GO
/****** Object:  StoredProcedure [dbo].[UserPurchase]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[UserPurchase](@regno varchar(50))  
as  
begin  
 if EXISTS(select * from appmst where appmstregno=@regno)      
begin    
select cast(amount/10000 as int)  as amount,convert(varchar(20),doe,103) as doe from sharemst where amount>0 and  appmstid=(select appmstid from appmst where appmstregno=@regno)  
end  
end





GO
/****** Object:  StoredProcedure [dbo].[userwelcomeletter]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[userwelcomeletter](@regno varchar(50))  
as   
begin  
select appmsttitle,appmstfname,Appmstlname,AppMstAddress1,AppMstState,AppMstPinCode,AppMstPrimaryPhone,AppMstCity,AppMstPassword,distt,panno,email,sponsorid,appmstregno,CONVERT(VARCHAR(10), userdob, 103) as userdob ,CONVERT(VARCHAR(10), appmstdoj, 103) as appmstdoj  from appmst where AppMstRegNo in (@regno)  
end





GO
/****** Object:  StoredProcedure [dbo].[uspAddRpvDetail]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[uspAddRpvDetail](@appmstid INT,@perRPv NUMERIC(18,2),@memberTotalRpv BIGINT,@roidate date,@totalValue NUMERIC(18,2) OUT )
AS
BEGIN 
set @totalValue=0 
DECLARE @IndividualRpvLimit NUMERIC(18,2)=3000, @RpvPaidValue NUMERIC(18,2)  
DECLARE @DiffValue NUMERIC(18,2),@value numeric(18,2) 
DECLARE @RpvNo INT=1 
SELECT top 1 @RpvNo=ISNULL(MIN(RpvNo),1) FROM RpvDetail(NOLOCK) WHERE appmstid=@appmstId GROUP BY RpvNo HAVING SUM(Rpvvalue)<@IndividualRpvLimit order by RpvNo asc
WHILE @RpvNo<=@memberTotalRpv
BEGIN 
	
	SELECT @RpvPaidValue=ISNULL(SUM(RpvValue),0) FROM RpvDetail(NOLOCK) WHERE appmstid=@appmstId AND RpvNo=@RpvNo 
	IF(@RpvPaidValue<@IndividualRpvLimit)
	BEGIN
		SET @DiffValue=@IndividualRpvLimit-@RpvPaidValue 
		IF(@DiffValue<@perRPv)
			SET @value=@perRPv-@DiffValue 
		ELSE 
			SET @value=@perRPv 
		
		IF(@value>0)
		BEGIN 
			SET @totalValue=@totalValue+@value 
			INSERT INTO RpvDetail 
			(appmstid,TotalRpv,RpvNo,PerRpvValue,Rpvvalue,DOE,CreatedDate)
			VALUES(@appmstid,@memberTotalRpv,@RpvNo,@perRPv,@value,@roidate,GETDATE()) 
		END 
	END 
	SET @RpvNo=@RpvNo+1 
END --End Loop

END 
GO
/****** Object:  StoredProcedure [dbo].[uspAddRpvDetail_test]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[uspAddRpvDetail_test](@appmstid INT,@perRPv NUMERIC(18,2),@memberTotalRpv BIGINT,@roidate date,@totalValue NUMERIC(18,2) OUT )
AS
BEGIN 
set @totalValue=0 
DECLARE @IndividualRpvLimit NUMERIC(18,2)=3000, @RpvPaidValue NUMERIC(18,2)  
DECLARE @DiffValue NUMERIC(18,2),@value numeric(18,2) 
DECLARE @RpvNo INT=1 
SELECT top 1 @RpvNo=ISNULL(MIN(RpvNo),1) FROM RpvDetail(NOLOCK) WHERE appmstid=@appmstId GROUP BY RpvNo HAVING SUM(Rpvvalue)<@IndividualRpvLimit order by RpvNo asc
select @RpvNo
WHILE @RpvNo<=@memberTotalRpv
BEGIN 
	
	SELECT @RpvPaidValue=ISNULL(SUM(RpvValue),0) FROM RpvDetail(NOLOCK) WHERE appmstid=@appmstId AND RpvNo=@RpvNo 
	IF(@RpvPaidValue<@IndividualRpvLimit)
	BEGIN
		SET @DiffValue=@IndividualRpvLimit-@RpvPaidValue 
		IF(@DiffValue<@perRPv)
			SET @value=@perRPv-@DiffValue 
		ELSE 
			SET @value=@perRPv 
		
		IF(@value>0)
		BEGIN 
			SET @totalValue=@totalValue+@value 
			select @appmstid,@memberTotalRpv,@RpvNo,@perRPv,@value,@roidate,GETDATE()
		END 
	END 
	SET @RpvNo=@RpvNo+1 
END --End Loop

END 
GO
/****** Object:  StoredProcedure [dbo].[uspAddUpdateFranchise]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[uspAddUpdateFranchise](@FranchiseId BIGINT=0,@useId varchar(15),@Name varchar(100),@pwd varchar(20),@Email varchar(100),@pinCode varchar(6),@Addr varchar(100)=NULL,@flag VARCHAR(100) OUT) 
AS 
/*--unit test
DECLARE @a VARCHAR(100) 
EXEC uspAddUpdateFranchise 2,'abc1234','name','pwd@123','abc4@gmail.com','111112',NULL,@a out 
PRINT @a 
*/
BEGIN 
	SET NOCOUNT ON 
	DECLARE @IsMain BIT=0 
	IF @FranchiseId IS NULL 
		SET @FranchiseId=0 

	IF EXISTS(SELECT 1 FROM FranchiseMst(NOLOCK) WHERE FranchiseId!=@FranchiseId AND UserId=@useId)
	BEGIN
		SET @flag='Username already exists.'
		RETURN;
	END 
	IF EXISTS(SELECT 1 FROM FranchiseMst(NOLOCK) WHERE FranchiseId!=@FranchiseId AND Email=@Email)
	BEGIN
		SET @flag='Email already exists.'
		RETURN;
	END 
	IF EXISTS(SELECT 1 FROM FranchiseMst(NOLOCK) WHERE FranchiseId!=@FranchiseId AND pincode=@pinCode)
	BEGIN
		SET @flag='Pincode already exists.'
		RETURN;
	END 
	IF @FranchiseId=0 
	BEGIN 
		IF not exists(select 1 from FranchiseMst(nolock) where PinCode=@pinCode and Active=1)
		set @IsMain=1 

		INSERT INTO FranchiseMst (UserId,Name,Pwd,Email,PinCode,Addr,DOE,Active,IsSuperFranchise) VALUES(@useId,@Name,@pwd,@Email,@pinCode,@Addr,GETDATE(),1,@IsMain)
		SELECT 1
	END 
	ELSE 
	BEGIN
		UPDATE FranchiseMst 
		SET 
		NAME=@Name,
		Pwd=CASE WHEN @pwd IS NULL OR LEN( @pwd)=0 THEN PWD ELSE @pwd END,
		Email=@Email,
		PinCode=@pinCode,
		Addr=ISNULL(@Addr,Addr)		 
		WHERE FranchiseId=@FranchiseId 
		SELECT 1
	END 
END 

GO
/****** Object:  StoredProcedure [dbo].[uspAssignFranchiseProduct]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[uspAssignFranchiseProduct](@FUserId varchar(20),@productId int,@quantity INT,@remark varchar(100),@flag varchar(100) OUT)
AS
BEGIN
DECLARE @appmstid INT 
IF NOT EXISTS(SELECT 1 FROM FranchiseMst(NOLOCK) WHERE UserId=@FUserId AND Active=1)
BEGIN
	SET @flag='Franchise not exists'
	RETURN;
END
IF NOT EXISTS(SELECT 1 FROM productmst(NOLOCK) WHERE SrNo=@productId)
BEGIN
	SET @flag='Product not exists'
	RETURN;
END

SELECT @appmstid=FranchiseId FROM FranchiseMst(NOLOCK) WHERE UserId=@FUserId AND Active=1

if(@quantity>0)                         
begin    
	declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float
	select @BtranIdR=isnull(max(BankTranId),0) from FranchiseProductTran(NOLOCK) where [FranchiseId]=@appmstid AND ProductId=@productId      
	if @BtranIdR =0
	begin                                                                        
		set @BbalanceR=0
	end
	else
	begin
		select @BbalanceR=isnull(BanktranBalance,0) from FranchiseProductTran(NOLOCK) where [FranchiseId]=@appmstid and BankTranId=@BtranIdR 
	end
	--set @balanceAmount   = @BbalanceR+@VPAmount
	set @balanceAmount = @BbalanceR + @quantity 
	insert into FranchiseProductTran 
	(FranchiseId,ProductId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,TranBY)                     
	values(@appmstid,@productId,1,-1,GETDATE(),isnull(@quantity,0),isnull(@balanceAmount,0),@remark,'Admin')   
	SELECT '1'                        
end    
ELSE   
BEGIN
	SET @flag='Quantity must me greater than zero'
	RETURN;
END 
END
GO
/****** Object:  StoredProcedure [dbo].[uspAssignUserProduct]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[uspAssignUserProduct](@FUserId varchar(20),@regno varchar(20),@productId int,@quantity INT,@remark varchar(100),@flag varchar(100) OUT)
AS 
-------------------
--exec uspAssignUserProduct '222','global',1,2,'test',''
BEGIN 
DECLARE @appmstid INT 
DECLARE @PaidAppmstid INT 
IF NOT EXISTS(SELECT 1 FROM FranchiseMst(NOLOCK) WHERE UserId=@FUserId AND Active=1)
BEGIN
	SET @flag='Franchise not exists'
	RETURN;
END
IF NOT EXISTS(SELECT 1 FROM appmst(NOLOCK) WHERE AppMstRegNo=@regno)
BEGIN
	SET @flag='User not exists'
	RETURN;
END
IF NOT EXISTS(SELECT 1 FROM productmst(NOLOCK) WHERE SrNo=@productId)
BEGIN
	SET @flag='Product not exists'
	RETURN;
END
SELECT @appmstid=FranchiseId FROM FranchiseMst(NOLOCK) WHERE UserId=@FUserId AND Active=1
SELECT @PaidAppmstid=AppMstID FROM appmst(NOLOCK) WHERE AppMstRegNo=@regno 

if(@quantity>0)                         
begin    
	declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float
	select @BtranIdR=isnull(max(BankTranId),0) from FranchiseProductTran(NOLOCK) where [FranchiseId]=@appmstid AND ProductId=@productId      
	if @BtranIdR =0
	begin                                                                        
		set @BbalanceR=0
	end
	else
	begin
		select @BbalanceR=isnull(BanktranBalance,0) from FranchiseProductTran(NOLOCK) where [FranchiseId]=@appmstid and BankTranId=@BtranIdR 
	end
	--set @balanceAmount   = @BbalanceR+@VPAmount
	IF(@BbalanceR>=@quantity)
	BEGIN
		set @balanceAmount = @BbalanceR-@quantity 
		insert into FranchiseProductTran 
		(FranchiseId,ProductId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,TranBY)                     
		values(@appmstid,@productId,2,@PaidAppmstid,GETDATE(),isnull(@quantity,0),isnull(@balanceAmount,0),@remark,'User')        
		SELECT '1'                   
	END
	ELSE 
	BEGIN
		SET @flag='Franchise has less product balance'
		RETURN;
	END 
end  
ELSE   
BEGIN
	SET @flag='Quantity must me greater than zero'
	RETURN;
END 
END

GO
/****** Object:  StoredProcedure [dbo].[uspCalculateFranchiseIncome]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[uspCalculateFranchiseIncome](@appmstid int,@jf float)
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @FranchiseId INT=0 
	DECLARE @income NUMERIC(18,2)=0 
	declare @pincode varchar(6) 

	select @pincode=AppMstPinCode from appmst(nolock) where appmstid=@appmstid 

	SELECT TOP 1 @FranchiseId =franchiseId FROM FranchiseMst(nolock) WHERE Active=1 AND PinCode=@pincode AND IsSuperFranchise=1 AND LEN(@pincode)=6 ORDER BY FranchiseId 

	SET @income=(@jf*600)*1/100.0 --1 % of PV 
	if(@income>0 AND @FranchiseId>0)                         
	begin    
		declare @BtranIdR bigint , @BbalanceR float, @balanceAmount float
		select @BtranIdR=isnull(max(BankTranId),0) from FranchiseTran(NOLOCK) where AppMstId=@FranchiseId      
		if @BtranIdR =0
		begin                                                                        
			set @BbalanceR=0
		end
		else
		begin
			select @BbalanceR=isnull(BanktranBalance,0) from FranchiseTran(NOLOCK) where appmstid=@FranchiseId and BankTranId=@BtranIdR 
		end
		--set @balanceAmount   = @BbalanceR+@VPAmount
		set @balanceAmount = convert(float,@BbalanceR) + convert(float,isnull(@income,0))   
		insert into FranchiseTran
		(AppMstId,BankTranMode,paidAppMstId,BankTranDate,BankTranAmount,BankTranBalance,BankTranRemarks,payoutno,TranId)                     
		values(@FranchiseId,3,@appmstid,GETDATE(),isnull(@income,0),isnull(@balanceAmount,0),'Franchise Income',0,0)                           
	end 
END
GO
/****** Object:  StoredProcedure [dbo].[uspCalculateStar]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[uspCalculateStar]
AS
BEGIN
	DECLARE @tblStarBinary TABLE 
	(
		Id bigint identity(1,1),
		appmstid bigint,
		b1 float,
		b2 float,
		b3 float,
		b4 float,
		b5 float,
		b6 float,
		b7 float
	)

	insert into @tblStarBinary
	SELECT 
	Appmstid,
	ISNULL(SUM(jumboclub1amt),0),
	ISNULL(SUM(JumboClub2Amt),0),
	ISNULL(SUM(jumboclub3amt),0),
	ISNULL(SUM(JumboClub4Amt),0),
	ISNULL(SUM(JumboClub5Amt),0),
	ISNULL(SUM(JumboClub6Amt),0),
	ISNULL(SUM(JumboClub7Amt),0) 
	FROM paymenttrandraft(NOLOCK) 
	GROUP BY AppmstId HAVING SUM(jumboclub1amt)>0 


	--loop
	declare @id int=1
	declare @count int=0 
	declare @StarId int
	declare @appmstid bigint
	select @count=count(1) from @tblStarBinary 
	while @id<=@count
	begin 
		SET @StarId=0 
		set @appmstid=0 
		
		select @StarId=CASE 
			when b6>=50000.00 then 7 
			when b5>=25000.00 then 6 
			when b4>=12000.00 then 5 
			when b3>=6000.00 then 4 
			when b2>=3000.00 then 3 
			when b1>=1500.00 then 2 
			when b1>0 then 1 else 0 end 
			,@appmstid=appmstid 
			from @tblStarBinary where id=@id 
		--select @StarId
		IF @starId>0 and not exists(select 1 from AppmstStar(nolock) where AppmstId=@appmstid and starId=@starId)
		BEGIN
			INSERT INTO AppmstStar 
			(AppmstId,StarId,DOE) 	
			VALUES(@appmstid,@StarId,GETDATE())
			
			UPDATE APPMST SET StarId=@starId where appmstId=@appmstId 
		END 

		set @id=@id+1 
	end --end loop
End 


--proc finalPayout 
--uspCalculateStar 
GO
/****** Object:  StoredProcedure [dbo].[uspCalculateStarIncome]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[uspCalculateStarIncome]
AS
BEGIN  

declare @todateDate datetime =getdate() 

DECLARE @tblTemp TABLE 
(
	id int  primary key,
	appmstId BIGINT,
	LT BIGINT,
	RT BIGINT
)

insert into @tblTemp 
SELECT 
ROW_NUMBER() OVER (ORDER BY at.ParentID )
,at.ParentID 
,SUM(case when at.AppMstLeftRight=0 then c.JoinFor else 0 end) as LeftTotal
,SUM(case when at.AppMstLeftRight=1 then c.JoinFor else 0 end) as RightTotal
FROM apptran AT 
INNER JOIN APPMST P on at.ParentId=P.AppMstID and P.starId>=2 
INNER JOIN APPMST C on at.AppMstId=C.AppMstID and C.starId>=2 
GROUP BY at.ParentID--,AT.AppMstLeftRight

declare @id int=1 
declare @count int
declare @lt int,@rt int 
declare @appmstid bigint 
declare @nPair int 
declare @newPair int 
select @count=count(1) FROM @tblTemp 
while @id<=@count 
begin 
	set @lt=0
	set @rt=0 
	set @nPair=0 
	select @appmstid=appmstId,@lt=LT,@rt=RT from @tblTemp where id=@id 
	IF EXISTS(select 1 from AppmstStarTotal where AppmstId=@appmstid)
	BEGIN 
		set @nPair=case when @lt<@rt then @lt else @rt end 
		UPDATE appmstStarTotal set @newPair=S2TotalPair,S2LTotal=@lt,S2RTotal=@rt,S2TotalPair=@nPair,modifyDate=@todateDate where AppmstId=@appmstid 
		set @newPair=@nPair-@newPair 
		IF @newPair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@newPair*PerPairBinary,@todateDate,1,@newPair,starId from StarBinary(NOLOCK) where StarId=2 
		END 
	END 
	ELSE 
	BEGIN 
		INSERT INTO appmstStarTotal (appmstid,S2LTotal,S2RTotal,S2TotalPair,DOE) VALUES(@appmstid,@lt,@rt,@npair,@todateDate)
		IF @npair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@npair*PerPairBinary,@todateDate,1,@npair,starId from StarBinary(NOLOCK) where StarId=2 
		END 
	END 


	set @id=@id+1 
END --loop end 

------3star 

delete from @tblTemp 

insert into @tblTemp 
SELECT 
ROW_NUMBER() OVER (ORDER BY at.ParentID )
,at.ParentID 
,SUM(case when at.AppMstLeftRight=0 then c.JoinFor else 0 end) as LeftTotal
,SUM(case when at.AppMstLeftRight=1 then c.JoinFor else 0 end) as RightTotal
FROM apptran AT 
INNER JOIN APPMST P on at.ParentId=P.AppMstID and P.starId>=3 
INNER JOIN APPMST C on at.AppMstId=C.AppMstID and C.starId>=3 
GROUP BY at.ParentID--,AT.AppMstLeftRight

set @id=1 
set @count=0
select  @lt=0,@rt=0 
set @appmstid=0 
set @nPair=0
select @count=count(1) FROM @tblTemp 
while @id<=@count 
begin 
	set @lt=0
	set @rt=0 
	set @nPair=0 
	select @appmstid=appmstId,@lt=LT,@rt=RT from @tblTemp where id=@id 
	IF EXISTS(select 1 from AppmstStarTotal where AppmstId=@appmstid)
	BEGIN 
		set @nPair=case when @lt<@rt then @lt else @rt end 
		UPDATE appmstStarTotal set @newPair=S3TotalPair,S3LTotal=@lt,S3RTotal=@rt,S3TotalPair=@nPair,modifyDate=@todateDate where AppmstId=@appmstid 
		set @newPair=@nPair-@newPair 
		IF @newPair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@newPair*PerPairBinary,@todateDate,1,@newPair,starId from StarBinary(NOLOCK) where StarId=3
		END 
	END 
	ELSE 
	BEGIN
		INSERT INTO appmstStarTotal (appmstid,S3LTotal,S3RTotal,S3TotalPair,DOE) VALUES(@appmstid,@lt,@rt,@npair,@todateDate)
		IF @npair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@npair*PerPairBinary,@todateDate,1,@npair,starId from StarBinary(NOLOCK) where StarId=3 
		END 
	END 


	set @id=@id+1 
END --loop end 

---4start 
delete from @tblTemp 

insert into @tblTemp 
SELECT 
ROW_NUMBER() OVER (ORDER BY at.ParentID )
,at.ParentID 
,SUM(case when at.AppMstLeftRight=0 then c.JoinFor else 0 end) as LeftTotal
,SUM(case when at.AppMstLeftRight=1 then c.JoinFor else 0 end) as RightTotal
FROM apptran AT 
INNER JOIN APPMST P on at.ParentId=P.AppMstID and P.starId>=4 
INNER JOIN APPMST C on at.AppMstId=C.AppMstID and C.starId>=4 
GROUP BY at.ParentID--,AT.AppMstLeftRight

set @id=1 
set @count=0
select  @lt=0,@rt=0 
set @appmstid=0 
set @nPair=0
select @count=count(1) FROM @tblTemp 
while @id<=@count 
begin 
	set @lt=0
	set @rt=0 
	set @nPair=0 
	select @appmstid=appmstId,@lt=LT,@rt=RT from @tblTemp where id=@id 
	IF EXISTS(select 1 from AppmstStarTotal where AppmstId=@appmstid)
	BEGIN 
		set @nPair=case when @lt<@rt then @lt else @rt end 
		UPDATE appmstStarTotal set @newPair=S4TotalPair,S4LTotal=@lt,S4RTotal=@rt,S4TotalPair=@nPair,modifyDate=@todateDate where AppmstId=@appmstid 
		set @newPair=@nPair-@newPair 
		IF @newPair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@newPair*PerPairBinary,@todateDate,1,@newPair,starId from StarBinary(NOLOCK) where StarId=4
		END 
	END 
	ELSE 
	BEGIN
		INSERT INTO appmstStarTotal (appmstid,S4LTotal,S4RTotal,S4TotalPair,DOE) VALUES(@appmstid,@lt,@rt,@npair,@todateDate)
		IF @npair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@npair*PerPairBinary,@todateDate,1,@npair,starId from StarBinary(NOLOCK) where StarId=4 
		END 
	END 


	set @id=@id+1 
END --loop end 

---5start 
delete from @tblTemp 
insert into @tblTemp 
SELECT 
ROW_NUMBER() OVER (ORDER BY at.ParentID )
,at.Parentid
,SUM(case when at.AppMstLeftRight=0 then c.JoinFor else 0 end) as LeftTotal
,SUM(case when at.AppMstLeftRight=1 then c.JoinFor else 0 end) as RightTotal
FROM apptran AT 
INNER JOIN APPMST P on at.ParentId=P.AppMstID and P.starId>=5 
INNER JOIN APPMST C on at.AppMstId=C.AppMstID and C.starId>=5
GROUP BY at.ParentID--,AT.AppMstLeftRight

set @id=1 
set @count=0
select  @lt=0,@rt=0 
set @appmstid=0 
set @nPair=0
select @count=count(1) FROM @tblTemp 
while @id<=@count 
begin 
	set @lt=0
	set @rt=0 
	set @nPair=0 
	select @appmstid=appmstId,@lt=LT,@rt=RT from @tblTemp where id=@id 
	IF EXISTS(select 1 from AppmstStarTotal where AppmstId=@appmstid)
	BEGIN 
		set @nPair=case when @lt<@rt then @lt else @rt end 
		UPDATE appmstStarTotal set @newPair=S5TotalPair,S5LTotal=@lt,S5RTotal=@rt,S5TotalPair=@nPair,modifyDate=@todateDate where AppmstId=@appmstid 
		set @newPair=@nPair-@newPair 
		IF @newPair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@newPair*PerPairBinary,@todateDate,1,@newPair,starId from StarBinary(NOLOCK) where StarId=5 
		END 
	END 
	ELSE 
	BEGIN
		INSERT INTO appmstStarTotal (appmstid,S5LTotal,S5RTotal,S5TotalPair,DOE) VALUES(@appmstid,@lt,@rt,@npair,@todateDate)
		IF @npair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@npair*PerPairBinary,@todateDate,1,@npair,starId from StarBinary(NOLOCK) where StarId=5 
		END 
	END 


	set @id=@id+1 
END --loop end 

---6start 
delete from @tblTemp 

insert into @tblTemp 
SELECT 
ROW_NUMBER() OVER (ORDER BY at.ParentID )
,at.ParentID 
,SUM(case when at.AppMstLeftRight=0 then C.JoinFor else 0 end) as LeftTotal
,SUM(case when at.AppMstLeftRight=1 then C.JoinFor else 0 end) as RightTotal
FROM apptran AT 
INNER JOIN APPMST P on at.ParentId=P.AppMstID and P.starId>=6 
INNER JOIN APPMST C on at.AppMstId=C.AppMstID and C.starId>=6 
GROUP BY at.ParentID--,AT.AppMstLeftRight

set @id=1 
set @count=0
select  @lt=0,@rt=0 
set @appmstid=0 
set @nPair=0
select @count=count(1) FROM @tblTemp 
while @id<=@count 
begin 
	set @lt=0
	set @rt=0 
	set @nPair=0 
	select @appmstid=appmstId,@lt=LT,@rt=RT from @tblTemp where id=@id 
	IF EXISTS(select 1 from AppmstStarTotal where AppmstId=@appmstid)
	BEGIN 
		set @nPair=case when @lt<@rt then @lt else @rt end 
		UPDATE appmstStarTotal set @newPair=S6TotalPair,S6LTotal=@lt,S6RTotal=@rt,S6TotalPair=@nPair,modifyDate=@todateDate where AppmstId=@appmstid 
		set @newPair=@nPair-@newPair 
		IF @newPair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@newPair*PerPairBinary,@todateDate,1,@newPair,starId from StarBinary(NOLOCK) where StarId=6 
		END 
	END 
	ELSE 
	BEGIN
		INSERT INTO appmstStarTotal (appmstid,S6LTotal,S6RTotal,S6TotalPair,DOE) VALUES(@appmstid,@lt,@rt,@npair,@todateDate)
		IF @npair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@npair*PerPairBinary,@todateDate,1,@npair,starId from StarBinary(NOLOCK) where StarId=6
		END 
	END 


	set @id=@id+1 
END --loop end 

delete from @tblTemp 
---7start  
insert into @tblTemp 
SELECT 
ROW_NUMBER() OVER (ORDER BY at.ParentID )
,at.ParentID 
,SUM(case when at.AppMstLeftRight=0 then C.JoinFor else 0 end) as LeftTotal
,SUM(case when at.AppMstLeftRight=1 then C.JoinFor else 0 end) as RightTotal
FROM apptran AT 
INNER JOIN APPMST P on at.ParentId=P.AppMstID and P.starId>=7 
INNER JOIN APPMST C on at.AppMstId=C.AppMstID and C.starId>=7 
GROUP BY at.ParentID--,AT.AppMstLeftRight

set @id=1 
set @count=0
select  @lt=0,@rt=0 
set @appmstid=0 
set @nPair=0
select @count=count(1) FROM @tblTemp 
while @id<=@count 
begin 
	set @lt=0
	set @rt=0 
	set @nPair=0 
	select @appmstid=appmstId,@lt=LT,@rt=RT from @tblTemp where id=@id 
	IF EXISTS(select 1 from AppmstStarTotal(nolock) where AppmstId=@appmstid)
	BEGIN 
		set @nPair=case when @lt<@rt then @lt else @rt end 
		UPDATE appmstStarTotal set @newPair=S7TotalPair,S7LTotal=@lt,S7RTotal=@rt,S7TotalPair=@nPair,modifyDate=@todateDate where AppmstId=@appmstid 
		set @newPair=@nPair-@newPair 
		IF @newPair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@newPair*PerPairBinary,@todateDate,1,@newPair,starId from StarBinary(NOLOCK) where StarId=7 
		END 
	END 
	ELSE 
	BEGIN
		INSERT INTO appmstStarTotal (appmstid,S7LTotal,S7RTotal,S7TotalPair,DOE) VALUES(@appmstid,@lt,@rt,@npair,@todateDate)
		IF @npair>0
		BEGIN
			INSERT INTO CauseId (userid,causeid,paymentcause,amount,effectdate,iselegible,pairrank,StarId) 
			select @appmstid,@appmstid,'b'+cast(starId as varchar(2)),@npair*PerPairBinary,@todateDate,1,@npair,starId from StarBinary(NOLOCK) where StarId=7
		END 
	END 


	set @id=@id+1 
END --loop end 

END
GO
/****** Object:  StoredProcedure [dbo].[uspCheckFranchiseLogin]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[uspCheckFranchiseLogin](@userId varchar(15),@Pwd varchar(20))
AS 
--uspCheckFranchiseLogin '1234','' 
BEGIN 

	SELECT 
	1 
	from FranchiseMst(NOLOCK) 
	WHERE UserId=@userId 
	AND Pwd=@Pwd 
	AND LEN(@Pwd)>0 
	AND Active=1 
END 
GO
/****** Object:  StoredProcedure [dbo].[uspFranchiseWalletHistory]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc  [dbo].[uspFranchiseWalletHistory](@FuserId varchar(50) )  
AS
begin
	SET NOCOUNT ON 
	DECLARE @appmstid int 
	select @appmstid=franchiseId from FranchiseMst(nolock) where UserId=@FuserId 

 select 
  A.AppMstRegNo as UserId
  ,(A.AppMstTitle+SPACE(1)+A.AppMstFName)as UserName 
  ,FT.BankTranAmount AS FranchiseIncome
  ,FT.BankTranBalance AS Balance
  ,FT.BankTranRemarks AS Remark
  ,FORMAT(FT.BankTranDate,'dd-MMM-yyyy') AS DOE
  FROM 
  FranchiseTran FT(NOLOCK)
  INNER JOIN AppMst A(NOLOCK) ON FT.PaidAppmstID=A.AppMstID AND FT.Appmstid=@appmstid 
  order by ft.BankTranId desc



END

GO
/****** Object:  StoredProcedure [dbo].[uspGetFranchiseList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[uspGetFranchiseList](@From DATE,@To date,@search varchar(20))
AS 
--uspGetFranchiseList '1234'
BEGIN 

	SELECT 
	--FranchiseId
	--,
	UserId 
	,Name
	,Pwd
	,Email
	,PinCode AS [Pin Code]
	,DOE AS [Reg. Date]
	from FranchiseMst(NOLOCK) 
	WHERE 
	CAST(DOE AS DATE) BETWEEN @From AND @To 
	AND 
	(UserId LIKE '%'+@search+'%' 
	OR Name LIKE '%'+@search+'%' 
	OR Email LIKE '%'+@search+'%'
	OR PinCode LIKE '%'+@search+'%')

	ORDER BY FranchiseId DESC 

END 

GO
/****** Object:  StoredProcedure [dbo].[uspGetFranchiseProductList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[uspGetFranchiseProductList](@FuserId varchar(20),@From DATE,@To date,@search varchar(20))
AS 
--[uspGetFranchiseProductList_admin] '1234'
BEGIN 
	DECLARE @Fid int

	select @Fid=FranchiseId from FranchiseMst(nolock) where UserId=@FuserId 
	
	SELECT 
	--FranchiseId
	--,
	--F.UserId AS FranchiseId 
	--,
	P.ProductName 
	,FORMAT(FP.BankTranDate,'dd-MMM-yyyy') AS DOE 
	,A.AppMstRegNo AS [PaidTo]
	,FP.BankTranAmount AS Quantity
	,FP.BankTranBalance AS BalanceQuantity
	FROM FranchiseProductTran FP(NOLOCK) 
	INNER JOIN FranchiseMst F(NOLOCK) ON F.FranchiseId=FP.FranchiseId AND FP.FranchiseId=@Fid 
	INNER JOIN ProductMst P(NOLOCK) ON P.SrNo=FP.ProductId  
	LEFT JOIN AppMst A(NOLOCK) ON A.appmstid=FP.PaidAppmstID 
	WHERE 
	CAST(FP.BankTranDate AS DATE) BETWEEN @From AND @To 
	AND 
	(P.ProductName LIKE '%'+@search+'%' 
	)

	ORDER BY FP.ProductId,FP.BankTranDate 

END 


GO
/****** Object:  StoredProcedure [dbo].[uspGetFranchiseProductList_admin]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[uspGetFranchiseProductList_admin](@From DATE,@To date,@search varchar(20))
AS 
--[uspGetFranchiseProductList_admin] '1234'
BEGIN 

	SELECT 
	--FranchiseId
	--,
	F.UserId AS FranchiseId 
	,P.ProductName 
	,FP.BankTranAmount AS Quantity
	,FORMAT(FP.BankTranDate,'dd-MMM-yyyy') AS DOE 
	FROM FranchiseProductTran FP(NOLOCK) 
	INNER JOIN FranchiseMst F(NOLOCK) ON F.FranchiseId=FP.FranchiseId AND FP.PaidAppmstID=-1 
	INNER JOIN ProductMst P(NOLOCK) ON P.SrNo=FP.ProductId  
	WHERE 
	CAST(FP.BankTranDate AS DATE) BETWEEN @From AND @To 
	AND 
	(P.ProductName LIKE '%'+@search+'%' 
	)

	ORDER BY FranchiseId DESC 

END 


GO
/****** Object:  StoredProcedure [dbo].[uspGetFranchiseUserList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[uspGetFranchiseUserList](@userId varchar(15)) 
AS 
--uspGetFranchiseUserList 'abc1234' 
BEGIN 

	SELECT 
	F.FranchiseId
	,A.AppMstRegNo
	,A.AppMstFName
	,A.AppMstPinCode 
	,A.Appmstpaid
	,a.appPaiddatetime
	,A.JAmount
	,A.JoinFor
	
	FROM FranchiseMst F(NOLOCK)
	INNER JOIN AppMst A(NOLOCK) ON F.PinCode=A.AppMstPinCode 
	WHERE F.UserId=@userId 
END 

GO
/****** Object:  StoredProcedure [dbo].[uspGetLastROIDate]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[uspGetLastROIDate] 
AS
BEGIN 
declare @exeRoidate varchar(100),@roidate DATE
select top 1 @exeRoidate=FORMAT(ROIDATe,'dd-MMM-yyyy'),@roidate=DATEADD(DAY,1,ROIDATe) from RoiMst(nolock) order by id desc

--SELECT @roidate AS RoiDate 

Declare @InvestAmount float, @TotalMember bigint , @PaidAmount  float      
  
select @TotalMember=ISNULL(sum(joinfor),0.00) FROM Sharemst(nolock) where  amount>0 and Joinfor<11  and CAST(DOE  AS date)=CAST(@RoiDate  AS date)      
set @InvestAmount=@TotalMember*600  --total member= total PV(point value) , 1pv=600 configured.  
set @PaidAmount=@InvestAmount*20/100 --@TotalMember   // distributable amt   
  

DECLARE @limitRechedRpvCount BIGINT=0 
DECLARE @PerRpvLimit NUMERIC(18,2)=3000 

declare @tblCur table   
(  
 id int identity(1,1),  
 --srno int ,  
 appmstid int,  
 paircount int  
)  
  
DECLARE @tblSpon TABLE  
(  
 appmstid INT  
)  
insert into @tblSpon  
select distinct SP.AppMstID from Sharemst S(nolock)   
inner join appmst a(nolock) on s.Appmstid=a.AppMstID and CAST(S.DOE AS date)<=@RoiDate and DOE>='2019-02-16' --proj start date 
inner join AppMst SP(nolock) on sp.AppMstRegNo=a.SponsorID   
  
insert into @tblCur   
select a.appmstid,dbo.DirectSponsarPair(a.appmstid,@RoiDate) as MM   
from appmst(nolock) a   
inner join @tblSpon s on s.appmstid=a.AppMstID   
where Appmstpaid=1 and CAST(appPaiddatetime AS date)<=@RoiDate  
and dbo.DirectSponsarPair(a.appmstid,@RoiDate)>0 order by a.AppMstID   
  
  --select * from @tblCur 
 ---01-Apr-2019 
 SELECT @limitRechedRpvCount=COUNT(1) 
 FROM (
 select RD.AppmstId 
 FROM RpvDetail RD(NOLOCK) 
 INNER JOIN @tblCur T2 ON RD.AppmstId=T2.appmstid 
 GROUP BY RD.AppmstId,RD.RpvNo HAVING SUM(rpvValue)>=@PerRpvLimit 
) as n


declare @totalElegible int,@count int   
select @totalElegible=sum(paircount),@count=count(1) from @tblCur   
declare @perRPv numeric(18,2),@memberTotalRpv bigint    
--1 rpv= 1 pair of direct sponsor . rpv=reward point value 
--select @totalElegible,@limitRechedRpvCount 
SET @totalElegible=@totalElegible-@limitRechedRpvCount --minute the RPv that have reached to limit of 3000, as we do not pay after that limit.
SET @perRPv=@PaidAmount/@totalElegible   

SELECT ' '+@exeRoidate+ 
'. <br>Next ROI Date: '+FORMAT(@RoiDate,'dd-MMM-yyyy') +', CTO: '+CONVERT(varchar(15),ISNULL(@totalElegible,0))+', Distributable Amt: '+CONVERT(varchar(15),@PaidAmount)+
', 1 RPV: '+CONVERT(varchar(15),@perRPv) AS ROI


ENd 
GO
/****** Object:  StoredProcedure [dbo].[uspGetProductList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[uspGetProductList]
As
BEGIN
	SELECT SrNo,ProductName+'PV:'+cast(joinfor as varchar) AS ProductName from ProductMst(nolock) where isDeleted=0  
END 
 
GO
/****** Object:  StoredProcedure [dbo].[uspGetRoiList]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[uspGetRoiList]
as
begin
select top 30
totalElegibleId As CTO,
ISNULL(DistributableAmt,0.00) AS DistributableAmt,
ISNULL(PerRpv,0.00) AS PerRpv,
FORMAT(ROIDATe,'dd-MMM-yyyy') AS ROIDATE
 from RoiMst (nolock) order by 1 desc 
end 
GO
/****** Object:  StoredProcedure [dbo].[uspStarBinaryIncome]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[uspStarBinaryIncome](@appmstId BIGINT,@nPair INT,@causeId BIGINT,@Jf NUMERIC(18,2))     
AS    
BEGIN    
 DECLARE @startId INT    
 SELECT @startId=ISNULL(NULLIF(StarId,0),1) FROM APPMST WHERE @appmstId=@appmstId     
 INSERT INTO CauseId (userid,causeid,PaymentCause,Amount,joinfor,effectdate, isElegible,pairrank,EndAmount,StarId)          
 SELECT @appmstId,@causeId,'b',    
 CONVERT(NUMERIC(18,2),(CASE WHEN StarId=@startId THEN @nPair*PerPairBinary*BinaryPerc/100.0 ELSE @nPair*PerPairBinary END)),    
 @jf,GETDATE(),1,    
 @nPair,    
 @nPair*PerPairBinary ,    
 StarId    
 FROM StarBinary WHERE starId<=@startId     
    
	if(@startId=1)
	begin
	 UPDATE appmst set StarId=1 where AppMstID=@appmstId    
	end


 --Update StarLevel    
    
 DECLARE @StarTotalBinary NUMERIC(18,2)     
 DECLARE @PayCause varchar(10)     
 DECLARE @NewStarId int=0    
 --SELECT @PayCause='b'+CONVERT(varchar(10),StarId) FROM StarBinary WHERE starId=@startId      
 SELECT @StarTotalBinary=SUM(Amount) FROM Causeid(NOLOCK) where userid=@appmstid AND PaymentCause='b' and StarId=@startId    
 --SELECT @StarTotalBinary=SUM(Amount) FROM Causeid(NOLOCK) where userid=@appmstid     
 SELECT top 1 @NewStarId=StarId FROM StarBinary(NOLOCK) WHERE @StarTotalBinary>=ElegibleBinary4NextStart AND starId>@startId order by starId     
 IF(@NewStarId>0 and @NewStarId>@startId)    
  UPDATE appmst set StarId=@NewStarId where AppMstID=@appmstId     
    
END     
    
    
	 
GO
/****** Object:  StoredProcedure [dbo].[VerifyVCode]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc[dbo].[VerifyVCode]
(@Regno varchar(50),@VCode varchar(50),@Flag varchar(50) out)
as
Begin
Set @Flag='0'
	if(exists(select appmstid from appmst where appmstregno=@regno and VCode=@VCode))                                
	Begin       
		Set @Flag='1'
		update appmst set VCode='' where appmstRegno=@Regno
	End

End




GO
/****** Object:  StoredProcedure [dbo].[viewprofile]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[viewprofile](@userid varchar(50))      
as      
begin  
 if(exists (select AppMstRegNo from appmst where AppMstRegNo=@userid))   
begin
select  convert(varchar(10),userdob,103) As dobDate,* from AppMst where AppMstregno=@userid
end
end





GO
/****** Object:  StoredProcedure [dbo].[VPTranDisplayByDate]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create proc[dbo].[VPTranDisplayByDate](@regno varchar(50),@date datetime,@dateto datetime)                                                
as                                                
declare @appmstid int                                          
--declare @date1 datetime                                      
--set @date1 = convert(varchar(12),@date,102)                                            
select @appmstid=AppMstID from AppMst where AppMstRegNo=@regno;                                                
         
select a.AppmstRegNo as CRegNo,a.Appmsttitle+' '+a.appmstfname as uname,a.appmstid,                                                
 convert(varchar(12),b.BankTranDate,103) as dt,b.BankTranAmount as Amt,b.BankTranBalance as blnce, b.Reason,                                              
 case                                              
 when  b.BankTranMode=1 then 'Transfer Outgoing'                                              
 when  b.BankTranMode=2 then 'Transfer Incoming'                                              
when b.BankTranMode=31 then 'Transfer t'                                              
 else b.BankTranRemarks end  as Remarks,            
 case when b.BankTranMode in (2,3,100) then b.BankTranAmount else '' end as Incoming,              
 case when b.BankTranMode in (1,4,11) then b.BankTranAmount else '' end as Outgoing                                              
  from VPTran b left join Appmst a                                                
 on b.paidAppMstID=a.Appmstid  where b.AppMstID=@appmstid and  CAST(FLOOR(CAST(b.BankTranDate as float)) as datetime) between         
CAST(FLOOR(CAST(@date as float)) as datetime) and  CAST(FLOOR(CAST(@dateto as float)) as datetime)         
        
order by b.BankTranDate





GO
/****** Object:  StoredProcedure [dbo].[WalletLoadReq]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
CREATE proc [dbo].[WalletLoadReq](@requestId bigint=null,@PregNo varchar(50),@Amt float,@PaymentType varchar(50) ,  
@CompanyBank varchar(50),       @ImageName varchar(50),           @PaymentDate datetime,     
@TransactionNo varchar(50),@flag varchar(100) output, @iName varchar(100) output)                                                                      
as                                                                      
declare @PAppMstId int,@paid int       
select @PAppMstId=AppMstID,@paid=Appmstpaid from AppMst where AppMstRegNo=@PregNo       
                 
if (@Amt<10 or  @Amt>100000)       
begin                                                        
 set @flag='Amount must be between 10 and 100000.'              
 return       
 end                                                      
else                               
begin                                       
if(@Amt>0)                     
begin                      
 if(@requestId is null or @requestId=0)                    
 begin   
   
       
  declare @CT bigint  
    
 set @CT =(select count(*) from WalletRequestMst where TransactionNo=@TransactionNo          )  
        
   IF @CT=0  
   BEGIN                      
  insert into WalletRequestMst (DOT, AppMstRegNo,DOE,Amount,TDS,Handling,Dispatch, [status],PaymentType, CompanyBank ,TransactionNo, imagesName)                                                               
  values(@PaymentDate, @PregNo,getdate(),@Amt,0,0,0, 0,@PaymentType, @CompanyBank, @TransactionNo,@iName )                                                              
  --- insert withdrawmst end                                                              
  set @flag='1'    
   
    set @requestId= @@identity        
      
 set @iName=cast(@requestId as varchar(50))+@ImageName      
  update WalletRequestMst set imagesName=@iName where      WalletRequestId=@requestId          
    
  END  
    
  ELSE  
  BEGIN  
   set @flag='Allready this TransactionNo. apply'; --low amount   
  END                                                          
 end         
                  
          
else         
 set @flag='Invalid Amount.'; --low amount                                                                      
end   
end  
  
  
GO
/****** Object:  StoredProcedure [dbo].[WelcomeAdminProc]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
CREATE proc [dbo].[WelcomeAdminProc]
as
begin

declare @TotalMember bigint, @TotalPaid bigint,@TotalUnPaid bigint, @TotalAmount float, @Binary float, @Reward float , @ROIAmount float,
@Level float , @Diomond float
 set @TotalUnPaid =(select count(*) from appmst where appmstpaid=0)
set @TotalPaid =(select count(*) from appmst where appmstpaid=1)
set @TotalAmount =(select sum(amount) from sharemst)
set @ROIAmount =(select sum(BankTranAmount) from RPTran where banktranremarks='Royalty Distribution')
set @Reward =(select sum(BankTranAmount) from vptran where banktranremarks='Reward')
set @Binary =(select sum(BankTranAmount) from vptran where banktranremarks='Payout')
 set @Level =(select sum(BankTranAmount) from vptran where banktranremarks='Level')
set @Diomond =(select sum(BankTranAmount) from vptran where banktranremarks='Diamond Bonus')
set  @TotalMember=@TotalPaid+@TotalUnPaid

select @TotalMember  as TotalMember, @TotalUnPaid as TotalUnPaid, @TotalPaid as TotalPaid, @TotalAmount as TotalAmount,

 @ROIAmount as ROIAmount, @Reward as Reward, @Binary as BinaryIncome, @Level as Levelincome , @Diomond as Diomond
 end


GO
/****** Object:  StoredProcedure [dbo].[withdrawAgainBankDetailReport]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
--[withdrawAgainBankDetailReport] '--Select Bank--','6415189899','Mangold Puri khurd'-,'IDIB000M269','Under progress'      
CREATE proc[dbo].[withdrawAgainBankDetailReport] ( @acc varchar(200) ,

@remark varchar(30), 
@pan varchar(30), 
@ifsc varchar(30), 
@From date, @TO date)              
            
as               
            
begin               
             
            
select w.WithdrawId,a.appmstregno as userid,b.HolderName  as fname,  b.HolderName, w.pan as pan,               
            
w.amount as amt,w.tds, w.handling, w.dispatch, w.PayTranId,            
b.BankName,b.Branch,b.acno as AcountNo,a.panno,b.MICR,b.IFS as IFC  ,isnull(w.Remarks,'0') as Remarks,convert(varchar(20),w.DOE,103) as withdrawdate , w.DOT, W.Remarks,                    
            
case when w.WithBy is null or w.WithBy ='User' then 'Self' else w.WithBy end as WithBy ,             
            
case when w.ispaid=0 then 'Pending' else 'Paid' end as status,w.ispaid                                  
            
from withdrawmst w inner join appmst a on w.AppmstId=a.AppMstID left join BankMst b on b.appmstid=a.AppMstID       
      
      
 where w.Remarks= @remark  and  w.acno=@acc and w.pan=@pan   and w.IFSC=@ifsc        and      CAST(FLOOR(CAST(w.DOE as float)) as datetime) between @From and @TO              
                         
                     
      --select * from     withdrawmst  
end 
GO
/****** Object:  StoredProcedure [dbo].[WithdrawAotmeticAllID]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc [dbo].[WithdrawAotmeticAllID]  
 as  
 begin  
  
 declare  @appmstregno varchar(50), @AMT float  , @appmstid bigint
   declare curR cursor for select appmstid, appmstregno,  dbo.getVPbalance(appmstid)  from appmst with (NOLOCK)  where dbo.getVPbalance(appmstid) >499  
    open curR   fetch next from curR into @appmstid, @appmstregno   , @AMT    
    while @@Fetch_Status=0                                                                                                                      
    Begin      
   

   declare @CT bigint

   set @CT = isnull((Select count(*) from bankmst where appmstid=@appmstid),0)
   if @CT =1
   begin
  exec crowdfundtransfer @appmstregno,@AMT, '' 
  end 
                            
    fetch next  from curR into @appmstid, @appmstregno   , @AMT                                        
    End ----------end while--                                          
   close curR                                              
   deallocate curR            
End    
    
  
  
    
GO
/****** Object:  StoredProcedure [dbo].[withdrawReport]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc[dbo].[withdrawReport] (@fromdate varchar(50),@Todate varchar(50),@regno varchar(50)=null , @isPaid varchar(10) )              
            
as               
            
begin               
 --   select * from WithdrawMst        
 --select * from BankMst        
--and (w.WithBy is null or w.WithBy<>'Admin')               
            
select w.WithdrawId,a.appmstregno as userid,b.HolderName  as fname,  b.HolderName, w.pan as pan,               
            
w.amount as amt,w.tds, w.handling,cast( w.dispatch as numeric(18,0)) as dispatch, w.PayTranId,            
b.BankName,b.Branch, b.acno as AcountNo,a.panno,b.MICR,b.IFS as IFC  ,isnull(w.Remarks,'0') as Remarks,convert(varchar(20),w.DOE,103) as withdrawdate , w.DOT, W.Remarks,                    
            
case when w.WithBy is null or w.WithBy ='User' then 'Self' else w.WithBy end as WithBy ,             
            
case when w.ispaid=0 then 'Pending' else 'Paid' end as status,w.ispaid  , w.wtype                                
            
from withdrawmst w WITH (NOLOCK) inner join appmst a on w.AppmstId=a.AppMstID left join BankMst b on b.appmstid=a.AppMstID  where w.ispaid= @isPaid and                      
            
(case when @regno is not null and LEN(@regno)>0 and @regno=a.AppMstRegNo then 1                       
            
when  (@regno is  null or LEN(@regno)=0) and  cast(floor(cast(w.DOE as float)) as datetime) between cast(floor(cast(convert(datetime,@fromdate) as float)) as datetime) and                       
            
cast(floor(cast(convert(datetime,@Todate) as float)) as datetime) then 1 else 0 end)=1                      
            
 order by w.DOE desc                     
            
end 
GO
/****** Object:  StoredProcedure [dbo].[WithdrawROIAotmeticAllID]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc [dbo].[WithdrawROIAotmeticAllID]    
 as    
 begin    
    
 declare  @appmstregno varchar(50), @AMT float  , @appmstid bigint  , @CTT bigint
 set @CTT=0;
 
 select appmstid , dbo.GetAppmstRegNo(appmstid) as AppmstRegNo ,dbo.getRPbalance(appmstid)   as Amount into ##TempNew  from rptran   group by appmstid
   declare curR cursor for select appmstid, AppmstRegNo,Amount  from ##TempNew where Amount>499 
    open curR   fetch next from curR into @appmstid, @appmstregno   , @AMT      
    while @@Fetch_Status=0                                                                                                                        
    Begin        
     
  
   declare @CT bigint  
  
   set @CT = isnull((Select count(*) from bankmst where appmstid=@appmstid),0)  
   if @CT =1  
   begin  
  
  exec ROIfundtransfer @appmstregno,@AMT, ''   
  end   
                              
    fetch next  from curR into @appmstid, @appmstregno   , @AMT                                          
    End ----------end while--                                            
   close curR                                                
   deallocate curR    
   
      drop table ##TempNew    
End      
      
    
    
GO
/****** Object:  StoredProcedure [dbo].[Withdrwadate]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
    
CREATE proc  [dbo].[Withdrwadate]   
  
   
as  
  
begin  
 Declare @TD varchar(100)  
 Declare @FOA1 date   
 SELECT  @TD = datename(dw,dbo.GetServerDate())  
 if(@TD = 'saturday' )  
  begin  
  set @TD=2  
   select  @TD as Mes   
  end  
 else  
  begin  
   set @TD=1  
   select  @TD as Mes   
  end  
end  
   
  
GO
/****** Object:  StoredProcedure [dbo].[WTC]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE proc[dbo].[WTC](
@Regno varchar(50))
as 
begin
declare @Amount float
set @Amount=0
select @Amount=sum(joinfor) from plantypemst where planTypeid in (select pintype from sharemst where AppMstRegNo =@Regno)
set @Amount=isnull(@Amount,0)
select @Amount as amount
end




GO
/****** Object:  StoredProcedure [dbo].[xyzinsertpinmst]    Script Date: 10/28/2020 2:04:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure  [dbo].[xyzinsertpinmst]    
    
as    
begin    
declare @regno varchar(50)    
declare @plantype int    
declare @jamount float    
declare @pintype float    
declare @doe datetime    
declare @cnt int    
declare @start int    
set @start=1    
create table temp# (srno int identity(1,1),regno varchar(50),plantype int,jamount float,pintype int,doe datetime)    
insert into temp# select a.appmstregno,a.producttype as plantype ,a.jamount ,s.pintype,s.doe from appmst a,sharemst s where a.appmstid=s.appmstid and s.appmstid in (select appmstid from sharemst where appmstid not in (select appmstid from appmst where appmstregno in(select regno from pinmst)) )    
--select * from temp#    
select @cnt=count(*) from temp#    
set @cnt=@cnt+1    
declare @pinsrno int    
set @pinsrno=18224    
while(@start<@cnt)    
begin    
select @regno=regno,@plantype=plantype,@jamount=jamount,@pintype=pintype,@doe=doe from temp#  where srno= @start    
update pinmst set isactivate=1,paidappmstid=1,regno=@regno,activedate=@doe,pintype=@pintype,amount=@jamount,allotedto='10000',plantype=@plantype where pinsrno=@pinsrno    
set @start=@start+1    
set @pinsrno=@pinsrno+1    
end    
    
drop table temp#    
    
    
end





GO
